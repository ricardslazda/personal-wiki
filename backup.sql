-- phpMyAdmin SQL Dump
-- version 5.1.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1:3306
-- Generation Time: Mar 22, 2022 at 08:48 PM
-- Server version: 10.5.12-MariaDB-cll-lve
-- PHP Version: 7.2.34

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `u691235715_wiki`
--

-- --------------------------------------------------------

--
-- Table structure for table `activities`
--

CREATE TABLE `activities` (
  `id` int(10) UNSIGNED NOT NULL,
  `type` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `detail` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `user_id` int(11) NOT NULL,
  `ip` varchar(45) COLLATE utf8mb4_unicode_ci NOT NULL,
  `entity_id` int(11) DEFAULT NULL,
  `entity_type` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `activities`
--

INSERT INTO `activities` (`id`, `type`, `detail`, `user_id`, `ip`, `entity_id`, `entity_type`, `created_at`, `updated_at`) VALUES
(1, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 10:22:25', '2021-11-27 10:22:25'),
(2, 'bookshelf_create', '', 1, '127.0.0.1', 1, 'BookStack\\Bookshelf', '2021-11-27 12:20:13', '2021-11-27 12:20:13'),
(3, 'book_create', '', 1, '127.0.0.1', 1, 'BookStack\\Book', '2021-11-27 12:20:23', '2021-11-27 12:20:23'),
(4, 'bookshelf_update', '', 1, '127.0.0.1', 1, 'BookStack\\Bookshelf', '2021-11-27 12:20:23', '2021-11-27 12:20:23'),
(5, 'page_create', '', 1, '127.0.0.1', 1, 'BookStack\\Page', '2021-11-27 12:22:14', '2021-11-27 12:22:14'),
(6, 'page_update', '', 1, '127.0.0.1', 1, 'BookStack\\Page', '2021-11-27 12:25:48', '2021-11-27 12:25:48'),
(7, 'page_update', '', 1, '127.0.0.1', 1, 'BookStack\\Page', '2021-11-27 12:26:01', '2021-11-27 12:26:01'),
(8, 'page_create', '', 1, '127.0.0.1', 2, 'BookStack\\Page', '2021-11-27 12:27:57', '2021-11-27 12:27:57'),
(9, 'page_create', '', 1, '127.0.0.1', 3, 'BookStack\\Page', '2021-11-27 12:30:50', '2021-11-27 12:30:50'),
(10, 'page_update', '', 1, '127.0.0.1', 3, 'BookStack\\Page', '2021-11-27 12:38:27', '2021-11-27 12:38:27'),
(11, 'page_update', '', 1, '127.0.0.1', 3, 'BookStack\\Page', '2021-11-27 12:44:31', '2021-11-27 12:44:31'),
(12, 'page_update', '', 1, '127.0.0.1', 3, 'BookStack\\Page', '2021-11-27 12:50:32', '2021-11-27 12:50:32'),
(13, 'page_update', '', 1, '127.0.0.1', 3, 'BookStack\\Page', '2021-11-27 12:50:57', '2021-11-27 12:50:57'),
(14, 'page_update', '', 1, '127.0.0.1', 3, 'BookStack\\Page', '2021-11-27 12:51:18', '2021-11-27 12:51:18'),
(15, 'page_update', '', 1, '127.0.0.1', 1, 'BookStack\\Page', '2021-11-27 12:52:12', '2021-11-27 12:52:12'),
(16, 'page_update', '', 1, '127.0.0.1', 2, 'BookStack\\Page', '2021-11-27 12:52:44', '2021-11-27 12:52:44'),
(17, 'page_create', '', 1, '127.0.0.1', 4, 'BookStack\\Page', '2021-11-27 13:28:56', '2021-11-27 13:28:56'),
(18, 'page_update', '', 1, '127.0.0.1', 4, 'BookStack\\Page', '2021-11-27 13:29:14', '2021-11-27 13:29:14'),
(19, 'page_create', 'Clauses', 1, '127.0.0.1', NULL, NULL, '2021-11-27 13:38:46', '2021-12-27 15:28:15'),
(20, 'page_update', 'Clauses', 1, '127.0.0.1', NULL, NULL, '2021-11-27 13:39:24', '2021-12-27 15:28:15'),
(21, 'page_update', 'Clauses', 1, '127.0.0.1', NULL, NULL, '2021-11-27 13:39:59', '2021-12-27 15:28:15'),
(22, 'page_update', 'Clauses', 1, '127.0.0.1', NULL, NULL, '2021-11-27 13:41:00', '2021-12-27 15:28:15'),
(23, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 13:53:16', '2021-11-27 13:53:16'),
(24, 'permissions_update', '', 1, '127.0.0.1', 1, 'BookStack\\Book', '2021-11-27 13:53:42', '2021-11-27 13:53:42'),
(25, 'settings_update', 'features', 1, '127.0.0.1', NULL, NULL, '2021-11-27 13:55:03', '2021-11-27 13:55:03'),
(26, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 13:57:36', '2021-11-27 13:57:36'),
(27, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:10:39', '2021-11-27 14:10:39'),
(28, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:19:05', '2021-11-27 14:19:05'),
(29, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:22:54', '2021-11-27 14:22:54'),
(30, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:24:58', '2021-11-27 14:24:58'),
(31, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:25:58', '2021-11-27 14:25:58'),
(32, 'settings_update', 'customization', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:27:14', '2021-11-27 14:27:14'),
(33, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:27:31', '2021-11-27 14:27:31'),
(34, 'user_update', '(1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:28:50', '2021-11-27 14:28:50'),
(35, 'settings_update', 'features', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:32:09', '2021-11-27 14:32:09'),
(36, 'settings_update', 'customization', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:33:03', '2021-11-27 14:33:03'),
(37, 'settings_update', 'customization', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:34:11', '2021-11-27 14:34:11'),
(38, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:34:56', '2021-11-27 14:34:56'),
(39, 'settings_update', 'customization', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:36:08', '2021-11-27 14:36:08'),
(40, 'settings_update', 'customization', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:36:39', '2021-11-27 14:36:39'),
(41, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:37:41', '2021-11-27 14:37:41'),
(42, 'settings_update', 'customization', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:37:57', '2021-11-27 14:37:57'),
(43, 'settings_update', 'customization', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:38:06', '2021-11-27 14:38:06'),
(44, 'settings_update', 'customization', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:38:24', '2021-11-27 14:38:24'),
(45, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:48:19', '2021-11-27 14:48:19'),
(46, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:50:36', '2021-11-27 14:50:36'),
(47, 'settings_update', 'customization', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:54:44', '2021-11-27 14:54:44'),
(48, 'settings_update', 'customization', 1, '127.0.0.1', NULL, NULL, '2021-11-27 14:55:32', '2021-11-27 14:55:32'),
(49, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 15:11:39', '2021-11-27 15:11:39'),
(50, 'book_create', '', 1, '127.0.0.1', 2, 'BookStack\\Book', '2021-11-27 15:11:54', '2021-11-27 15:11:54'),
(51, 'page_delete', 'Clauses', 1, '127.0.0.1', NULL, NULL, '2021-11-27 15:12:23', '2021-12-27 15:28:15'),
(52, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 15:20:13', '2021-11-27 15:20:13'),
(53, 'page_update', '', 1, '127.0.0.1', 1, 'BookStack\\Page', '2021-11-27 15:22:30', '2021-11-27 15:22:30'),
(54, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 17:53:26', '2021-11-27 17:53:26'),
(55, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 18:06:00', '2021-11-27 18:06:00'),
(56, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-27 18:08:53', '2021-11-27 18:08:53'),
(57, 'page_create', '', 1, '127.0.0.1', 6, 'BookStack\\Page', '2021-11-27 18:19:19', '2021-11-27 18:19:19'),
(58, 'page_create', '', 1, '127.0.0.1', 7, 'BookStack\\Page', '2021-11-27 18:19:41', '2021-11-27 18:19:41'),
(59, 'page_update', '', 1, '127.0.0.1', 7, 'BookStack\\Page', '2021-11-27 18:22:31', '2021-11-27 18:22:31'),
(60, 'page_update', '', 1, '127.0.0.1', 6, 'BookStack\\Page', '2021-11-27 18:22:50', '2021-11-27 18:22:50'),
(61, 'page_update', '', 1, '127.0.0.1', 7, 'BookStack\\Page', '2021-11-27 18:24:32', '2021-11-27 18:24:32'),
(62, 'page_update', '', 1, '127.0.0.1', 7, 'BookStack\\Page', '2021-11-27 18:24:59', '2021-11-27 18:24:59'),
(63, 'page_update', '', 1, '127.0.0.1', 6, 'BookStack\\Page', '2021-11-27 18:26:00', '2021-11-27 18:26:00'),
(64, 'page_update', '', 1, '127.0.0.1', 7, 'BookStack\\Page', '2021-11-27 18:26:13', '2021-11-27 18:26:13'),
(65, 'page_create', '', 1, '127.0.0.1', 8, 'BookStack\\Page', '2021-11-27 18:28:40', '2021-11-27 18:28:40'),
(66, 'page_create', '', 1, '127.0.0.1', 9, 'BookStack\\Page', '2021-11-27 18:30:31', '2021-11-27 18:30:31'),
(67, 'page_update', '', 1, '127.0.0.1', 9, 'BookStack\\Page', '2021-11-27 18:30:53', '2021-11-27 18:30:53'),
(68, 'page_create', '', 1, '127.0.0.1', 10, 'BookStack\\Page', '2021-11-27 18:31:33', '2021-11-27 18:31:33'),
(69, 'page_create', '', 1, '127.0.0.1', 11, 'BookStack\\Page', '2021-11-27 18:31:44', '2021-11-27 18:31:44'),
(70, 'page_update', '', 1, '127.0.0.1', 11, 'BookStack\\Page', '2021-11-27 18:38:59', '2021-11-27 18:38:59'),
(71, 'page_update', '', 1, '127.0.0.1', 11, 'BookStack\\Page', '2021-11-27 18:41:30', '2021-11-27 18:41:30'),
(72, 'page_create', '', 1, '127.0.0.1', 12, 'BookStack\\Page', '2021-11-27 18:44:19', '2021-11-27 18:44:19'),
(73, 'page_update', '', 1, '127.0.0.1', 12, 'BookStack\\Page', '2021-11-27 18:45:42', '2021-11-27 18:45:42'),
(74, 'page_create', '', 1, '127.0.0.1', 13, 'BookStack\\Page', '2021-11-27 18:51:27', '2021-11-27 18:51:27'),
(75, 'page_update', '', 1, '127.0.0.1', 13, 'BookStack\\Page', '2021-11-27 18:51:56', '2021-11-27 18:51:56'),
(76, 'page_update', '', 1, '127.0.0.1', 13, 'BookStack\\Page', '2021-11-27 18:52:03', '2021-11-27 18:52:03'),
(77, 'auth_login', 'standard; (1) Admin', 1, '127.0.0.1', NULL, NULL, '2021-11-28 06:50:04', '2021-11-28 06:50:04'),
(78, 'settings_update', 'customization', 1, '127.0.0.1', NULL, NULL, '2021-11-28 06:50:36', '2021-11-28 06:50:36'),
(79, 'settings_update', 'customization', 1, '127.0.0.1', NULL, NULL, '2021-11-28 06:53:34', '2021-11-28 06:53:34'),
(80, 'settings_update', 'customization', 1, '127.0.0.1', NULL, NULL, '2021-11-28 06:55:00', '2021-11-28 06:55:00'),
(81, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-11-28 15:11:23', '2021-11-28 15:11:23'),
(82, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-11-28 15:12:13', '2021-11-28 15:12:13'),
(83, 'user_update', '(1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-11-28 15:13:16', '2021-11-28 15:13:16'),
(84, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-11-28 15:57:51', '2021-11-28 15:57:51'),
(85, 'settings_update', 'features', 1, '90.139.150.144', NULL, NULL, '2021-11-28 15:59:35', '2021-11-28 15:59:35'),
(86, 'settings_update', 'customization', 1, '90.139.150.144', NULL, NULL, '2021-11-28 15:59:56', '2021-11-28 15:59:56'),
(87, 'settings_update', 'customization', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:00:24', '2021-11-28 16:00:24'),
(88, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:01:03', '2021-11-28 16:01:03'),
(89, 'settings_update', 'customization', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:01:40', '2021-11-28 16:01:40'),
(90, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:02:03', '2021-11-28 16:02:03'),
(91, 'settings_update', 'customization', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:02:45', '2021-11-28 16:02:45'),
(92, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:04:27', '2021-11-28 16:04:27'),
(93, 'settings_update', 'customization', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:05:18', '2021-11-28 16:05:18'),
(94, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:07:29', '2021-11-28 16:07:29'),
(95, 'settings_update', 'customization', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:07:42', '2021-11-28 16:07:42'),
(96, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:10:49', '2021-11-28 16:10:49'),
(97, 'settings_update', 'customization', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:11:41', '2021-11-28 16:11:41'),
(98, 'settings_update', 'customization', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:11:47', '2021-11-28 16:11:47'),
(99, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:16:38', '2021-11-28 16:16:38'),
(100, 'settings_update', 'customization', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:16:50', '2021-11-28 16:16:50'),
(101, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:19:07', '2021-11-28 16:19:07'),
(102, 'settings_update', 'customization', 1, '90.139.150.144', NULL, NULL, '2021-11-28 16:19:15', '2021-11-28 16:19:15'),
(103, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2021-11-29 14:32:50', '2021-11-29 14:32:50'),
(104, 'book_create', '', 1, '194.19.232.194', 3, 'BookStack\\Book', '2021-11-29 14:32:58', '2021-11-29 14:32:58'),
(105, 'page_delete', 'New Page', 1, '194.19.232.194', NULL, NULL, '2021-11-29 14:33:27', '2022-01-03 14:27:51'),
(106, 'page_create', '', 1, '194.19.232.194', 15, 'BookStack\\Page', '2021-11-29 15:23:46', '2021-11-29 15:23:46'),
(107, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-11-30 08:16:17', '2021-11-30 08:16:17'),
(108, 'page_update', '', 1, '90.139.150.144', 15, 'BookStack\\Page', '2021-11-30 08:23:35', '2021-11-30 08:23:35'),
(109, 'page_update', '', 1, '90.139.150.144', 15, 'BookStack\\Page', '2021-11-30 08:59:07', '2021-11-30 08:59:07'),
(110, 'page_create', '', 1, '90.139.150.144', 16, 'BookStack\\Page', '2021-11-30 09:15:44', '2021-11-30 09:15:44'),
(111, 'page_create', 'Merge Conflicts', 1, '90.139.150.144', NULL, NULL, '2021-11-30 09:18:00', '2022-01-10 09:43:30'),
(112, 'page_update', '', 1, '90.139.150.144', 16, 'BookStack\\Page', '2021-11-30 09:18:55', '2021-11-30 09:18:55'),
(113, 'page_create', 'Git Fetch and Git Pull', 1, '90.139.150.144', NULL, NULL, '2021-11-30 09:39:21', '2022-01-03 14:27:51'),
(114, 'page_delete', 'Git Fetch and Git Pull', 1, '90.139.150.144', NULL, NULL, '2021-11-30 09:40:48', '2022-01-03 14:27:51'),
(115, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2021-12-01 13:29:30', '2021-12-01 13:29:30'),
(116, 'page_update', '', 1, '194.19.232.194', 15, 'BookStack\\Page', '2021-12-01 13:32:34', '2021-12-01 13:32:34'),
(117, 'page_update', '', 1, '194.19.232.194', 15, 'BookStack\\Page', '2021-12-01 13:34:41', '2021-12-01 13:34:41'),
(118, 'page_update', '', 1, '194.19.232.194', 15, 'BookStack\\Page', '2021-12-01 13:35:11', '2021-12-01 13:35:11'),
(119, 'page_update', '', 1, '194.19.232.194', 15, 'BookStack\\Page', '2021-12-01 13:35:28', '2021-12-01 13:35:28'),
(120, 'page_update', '', 1, '194.19.232.194', 15, 'BookStack\\Page', '2021-12-01 13:35:35', '2021-12-01 13:35:35'),
(121, 'page_update', '', 1, '194.19.232.194', 15, 'BookStack\\Page', '2021-12-01 13:47:39', '2021-12-01 13:47:39'),
(122, 'page_update', '', 1, '194.19.232.194', 15, 'BookStack\\Page', '2021-12-01 14:14:05', '2021-12-01 14:14:05'),
(123, 'page_update', '', 1, '194.19.232.194', 15, 'BookStack\\Page', '2021-12-01 14:14:30', '2021-12-01 14:14:30'),
(124, 'page_update', '', 1, '194.19.232.194', 15, 'BookStack\\Page', '2021-12-01 14:21:47', '2021-12-01 14:21:47'),
(125, 'page_update', '', 1, '194.19.232.194', 15, 'BookStack\\Page', '2021-12-01 14:22:10', '2021-12-01 14:22:10'),
(126, 'page_update', '', 1, '194.19.232.194', 15, 'BookStack\\Page', '2021-12-01 14:36:50', '2021-12-01 14:36:50'),
(127, 'page_update', '', 1, '194.19.232.194', 15, 'BookStack\\Page', '2021-12-01 14:37:50', '2021-12-01 14:37:50'),
(128, 'page_update', 'Merge Conflicts', 1, '194.19.232.194', NULL, NULL, '2021-12-01 14:56:40', '2022-01-10 09:43:30'),
(129, 'page_update', 'Merge Conflicts', 1, '194.19.232.194', NULL, NULL, '2021-12-01 14:59:28', '2022-01-10 09:43:30'),
(130, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-05 17:02:51', '2021-12-05 17:02:51'),
(131, 'settings_update', 'customization', 1, '90.139.150.144', NULL, NULL, '2021-12-05 17:03:08', '2021-12-05 17:03:08'),
(132, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-06 11:46:20', '2021-12-06 11:46:20'),
(133, 'settings_update', 'customization', 1, '90.139.150.144', NULL, NULL, '2021-12-06 11:47:47', '2021-12-06 11:47:47'),
(134, 'settings_update', 'customization', 1, '90.139.150.144', NULL, NULL, '2021-12-06 11:48:10', '2021-12-06 11:48:10'),
(135, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2021-12-08 10:42:10', '2021-12-08 10:42:10'),
(136, 'page_update', '', 1, '194.19.232.194', 13, 'BookStack\\Page', '2021-12-08 10:45:16', '2021-12-08 10:45:16'),
(137, 'page_update', '', 1, '194.19.232.194', 13, 'BookStack\\Page', '2021-12-08 10:46:55', '2021-12-08 10:46:55'),
(138, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2021-12-08 13:35:11', '2021-12-08 13:35:11'),
(139, 'page_delete', 'Merge Conflicts', 1, '194.19.232.194', NULL, NULL, '2021-12-08 13:35:24', '2022-01-10 09:43:30'),
(140, 'page_create', 'Stashes', 1, '194.19.232.194', NULL, NULL, '2021-12-08 13:35:33', '2022-01-10 09:43:30'),
(141, 'page_delete', 'Stashes', 1, '194.19.232.194', NULL, NULL, '2021-12-08 13:37:46', '2022-01-10 09:43:30'),
(142, 'page_create', '', 1, '194.19.232.194', 20, 'BookStack\\Page', '2021-12-08 13:50:14', '2021-12-08 13:50:14'),
(143, 'page_update', '', 1, '194.19.232.194', 20, 'BookStack\\Page', '2021-12-08 13:51:20', '2021-12-08 13:51:20'),
(144, 'page_update', '', 1, '194.19.232.194', 20, 'BookStack\\Page', '2021-12-08 13:56:09', '2021-12-08 13:56:09'),
(145, 'page_update', '', 1, '194.19.232.194', 20, 'BookStack\\Page', '2021-12-08 14:07:58', '2021-12-08 14:07:58'),
(146, 'page_update', '', 1, '194.19.232.194', 20, 'BookStack\\Page', '2021-12-08 14:54:37', '2021-12-08 14:54:37'),
(147, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-08 16:53:08', '2021-12-08 16:53:08'),
(148, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-08 16:54:21', '2021-12-08 16:54:21'),
(149, 'page_update', '', 1, '90.139.150.144', 20, 'BookStack\\Page', '2021-12-08 16:54:31', '2021-12-08 16:54:31'),
(150, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2021-12-09 09:29:48', '2021-12-09 09:29:48'),
(151, 'page_update', '', 1, '194.19.232.194', 13, 'BookStack\\Page', '2021-12-09 09:29:57', '2021-12-09 09:29:57'),
(152, 'page_update', '', 1, '194.19.232.194', 13, 'BookStack\\Page', '2021-12-09 09:34:56', '2021-12-09 09:34:56'),
(153, 'page_update', '', 1, '194.19.232.194', 20, 'BookStack\\Page', '2021-12-09 09:42:08', '2021-12-09 09:42:08'),
(154, 'page_update', '', 1, '194.19.232.194', 20, 'BookStack\\Page', '2021-12-09 09:45:31', '2021-12-09 09:45:31'),
(155, 'page_update', '', 1, '194.19.232.194', 20, 'BookStack\\Page', '2021-12-09 09:46:23', '2021-12-09 09:46:23'),
(156, 'page_update', '', 1, '194.19.232.194', 20, 'BookStack\\Page', '2021-12-09 09:46:53', '2021-12-09 09:46:53'),
(157, 'page_create', '', 1, '194.19.232.194', 21, 'BookStack\\Page', '2021-12-09 09:47:29', '2021-12-09 09:47:29'),
(158, 'book_sort', '', 1, '194.19.232.194', 3, 'BookStack\\Book', '2021-12-09 09:47:39', '2021-12-09 09:47:39'),
(159, 'page_update', '', 1, '194.19.232.194', 21, 'BookStack\\Page', '2021-12-09 09:54:20', '2021-12-09 09:54:20'),
(160, 'page_update', '', 1, '194.19.232.194', 21, 'BookStack\\Page', '2021-12-09 09:59:12', '2021-12-09 09:59:12'),
(161, 'page_create', 'Versioning', 1, '194.19.232.194', NULL, NULL, '2021-12-09 10:33:51', '2022-01-10 09:43:31'),
(162, 'page_delete', 'Versioning', 1, '194.19.232.194', NULL, NULL, '2021-12-09 10:48:52', '2022-01-10 09:43:31'),
(163, 'page_create', '', 1, '194.19.232.194', 23, 'BookStack\\Page', '2021-12-09 11:56:06', '2021-12-09 11:56:06'),
(164, 'page_update', '', 1, '194.19.232.194', 23, 'BookStack\\Page', '2021-12-09 11:59:10', '2021-12-09 11:59:10'),
(165, 'page_update', '', 1, '194.19.232.194', 23, 'BookStack\\Page', '2021-12-09 12:04:52', '2021-12-09 12:04:52'),
(166, 'book_sort', '', 1, '194.19.232.194', 3, 'BookStack\\Book', '2021-12-09 12:14:40', '2021-12-09 12:14:40'),
(167, 'page_update', '', 1, '194.19.232.194', 23, 'BookStack\\Page', '2021-12-09 12:15:24', '2021-12-09 12:15:24'),
(168, 'page_update', '', 1, '194.19.232.194', 23, 'BookStack\\Page', '2021-12-09 12:19:04', '2021-12-09 12:19:04'),
(169, 'page_update', '', 1, '194.19.232.194', 23, 'BookStack\\Page', '2021-12-09 12:19:59', '2021-12-09 12:19:59'),
(170, 'page_create', '', 1, '194.19.232.194', 24, 'BookStack\\Page', '2021-12-09 12:30:00', '2021-12-09 12:30:00'),
(171, 'page_update', '', 1, '194.19.232.194', 24, 'BookStack\\Page', '2021-12-09 12:30:19', '2021-12-09 12:30:19'),
(172, 'book_sort', '', 1, '194.19.232.194', 3, 'BookStack\\Book', '2021-12-09 12:30:32', '2021-12-09 12:30:32'),
(173, 'page_update', '', 1, '194.19.232.194', 20, 'BookStack\\Page', '2021-12-09 12:34:07', '2021-12-09 12:34:07'),
(174, 'page_update', '', 1, '194.19.232.194', 20, 'BookStack\\Page', '2021-12-09 12:38:01', '2021-12-09 12:38:01'),
(175, 'page_update', '', 1, '194.19.232.194', 21, 'BookStack\\Page', '2021-12-09 14:05:53', '2021-12-09 14:05:53'),
(176, 'page_update', '', 1, '194.19.232.194', 21, 'BookStack\\Page', '2021-12-09 14:18:32', '2021-12-09 14:18:32'),
(177, 'page_update', '', 1, '194.19.232.194', 20, 'BookStack\\Page', '2021-12-09 14:21:26', '2021-12-09 14:21:26'),
(178, 'page_update', '', 1, '194.19.232.194', 23, 'BookStack\\Page', '2021-12-09 14:25:26', '2021-12-09 14:25:26'),
(179, 'page_update', '', 1, '194.19.232.194', 23, 'BookStack\\Page', '2021-12-09 14:25:48', '2021-12-09 14:25:48'),
(180, 'page_update', '', 1, '194.19.232.194', 23, 'BookStack\\Page', '2021-12-09 14:26:10', '2021-12-09 14:26:10'),
(181, 'page_update', '', 1, '194.19.232.194', 21, 'BookStack\\Page', '2021-12-09 14:28:11', '2021-12-09 14:28:11'),
(182, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-09 16:48:43', '2021-12-09 16:48:43'),
(183, 'page_update', '', 1, '90.139.150.144', 13, 'BookStack\\Page', '2021-12-09 16:49:26', '2021-12-09 16:49:26'),
(184, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-09 21:39:04', '2021-12-09 21:39:04'),
(185, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-10 12:57:54', '2021-12-10 12:57:54'),
(186, 'book_create', 'Docker', 1, '90.139.150.144', NULL, NULL, '2021-12-10 12:57:58', '2022-03-22 20:03:07'),
(187, 'auth_login', 'standard; (1) Admin', 1, '77.219.4.203', NULL, NULL, '2021-12-11 13:04:58', '2021-12-11 13:04:58'),
(188, 'book_create', 'Networking', 1, '77.219.4.203', NULL, NULL, '2021-12-11 13:05:02', '2022-03-22 20:03:07'),
(189, 'page_create', 'Common Networking Commands', 1, '77.219.4.203', NULL, NULL, '2021-12-11 13:07:14', '2022-03-22 20:03:07'),
(190, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-11 19:48:28', '2021-12-11 19:48:28'),
(191, 'book_create', '', 1, '90.139.150.144', 6, 'BookStack\\Book', '2021-12-11 19:48:42', '2021-12-11 19:48:42'),
(192, 'page_create', '', 1, '90.139.150.144', 26, 'BookStack\\Page', '2021-12-11 20:01:19', '2021-12-11 20:01:19'),
(193, 'book_update', '', 1, '90.139.150.144', 6, 'BookStack\\Book', '2021-12-11 20:01:33', '2021-12-11 20:01:33'),
(194, 'page_update', '', 1, '90.139.150.144', 26, 'BookStack\\Page', '2021-12-11 20:29:55', '2021-12-11 20:29:55'),
(195, 'page_update', '', 1, '90.139.150.144', 26, 'BookStack\\Page', '2021-12-11 20:42:18', '2021-12-11 20:42:18'),
(196, 'page_update', '', 1, '90.139.150.144', 26, 'BookStack\\Page', '2021-12-11 20:42:54', '2021-12-11 20:42:54'),
(197, 'page_update', '', 1, '90.139.150.144', 26, 'BookStack\\Page', '2021-12-11 20:58:30', '2021-12-11 20:58:30'),
(198, 'page_update', '', 1, '90.139.150.144', 26, 'BookStack\\Page', '2021-12-11 21:06:18', '2021-12-11 21:06:18'),
(199, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-12 08:37:25', '2021-12-12 08:37:25'),
(200, 'page_update', '', 1, '90.139.150.144', 26, 'BookStack\\Page', '2021-12-12 08:37:39', '2021-12-12 08:37:39'),
(201, 'page_update', '', 1, '90.139.150.144', 26, 'BookStack\\Page', '2021-12-12 08:37:44', '2021-12-12 08:37:44'),
(202, 'book_delete', 'Networking', 1, '90.139.150.144', NULL, NULL, '2021-12-12 08:37:58', '2022-03-22 20:03:07'),
(203, 'book_delete', 'Docker', 1, '90.139.150.144', NULL, NULL, '2021-12-12 08:38:01', '2022-03-22 20:03:07'),
(204, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-13 19:05:26', '2021-12-13 19:05:26'),
(205, 'page_create', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-13 19:06:38', '2021-12-13 19:06:38'),
(206, 'page_update', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-13 19:07:46', '2021-12-13 19:07:46'),
(207, 'page_update', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-13 19:08:42', '2021-12-13 19:08:42'),
(208, 'page_update', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-13 19:08:46', '2021-12-13 19:08:46'),
(209, 'book_sort', '', 1, '90.139.150.144', 2, 'BookStack\\Book', '2021-12-13 19:08:52', '2021-12-13 19:08:52'),
(210, 'page_update', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-13 19:13:32', '2021-12-13 19:13:32'),
(211, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-14 08:06:29', '2021-12-14 08:06:29'),
(212, 'page_update', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-14 08:53:31', '2021-12-14 08:53:31'),
(213, 'page_update', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-14 08:55:54', '2021-12-14 08:55:54'),
(214, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-14 09:35:46', '2021-12-14 09:35:46'),
(215, 'page_update', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-14 09:36:21', '2021-12-14 09:36:21'),
(216, 'page_update', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-14 09:48:25', '2021-12-14 09:48:25'),
(217, 'page_update', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-14 09:49:44', '2021-12-14 09:49:44'),
(218, 'page_update', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-14 09:58:30', '2021-12-14 09:58:30'),
(219, 'page_update', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-14 09:58:54', '2021-12-14 09:58:54'),
(220, 'page_update', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-14 10:17:59', '2021-12-14 10:17:59'),
(221, 'page_update', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-14 12:18:26', '2021-12-14 12:18:26'),
(222, 'page_update', '', 1, '90.139.150.144', 27, 'BookStack\\Page', '2021-12-14 12:25:37', '2021-12-14 12:25:37'),
(223, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-14 17:57:53', '2021-12-14 17:57:53'),
(224, 'book_create', '', 1, '90.139.150.144', 7, 'BookStack\\Book', '2021-12-14 17:58:00', '2021-12-14 17:58:00'),
(225, 'page_create', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-14 18:16:15', '2021-12-14 18:16:15'),
(226, 'page_create', '', 1, '90.139.150.144', 30, 'BookStack\\Page', '2021-12-14 18:25:56', '2021-12-14 18:25:56'),
(227, 'page_create', '', 1, '90.139.150.144', 31, 'BookStack\\Page', '2021-12-14 18:31:40', '2021-12-14 18:31:40'),
(228, 'page_update', '', 1, '90.139.150.144', 31, 'BookStack\\Page', '2021-12-14 18:43:23', '2021-12-14 18:43:23'),
(229, 'page_update', '', 1, '90.139.150.144', 31, 'BookStack\\Page', '2021-12-14 18:48:06', '2021-12-14 18:48:06'),
(230, 'page_update', '', 1, '90.139.150.144', 31, 'BookStack\\Page', '2021-12-14 18:55:02', '2021-12-14 18:55:02'),
(231, 'page_update', '', 1, '90.139.150.144', 31, 'BookStack\\Page', '2021-12-14 18:55:17', '2021-12-14 18:55:17'),
(232, 'page_update', '', 1, '90.139.150.144', 31, 'BookStack\\Page', '2021-12-14 18:56:19', '2021-12-14 18:56:19'),
(233, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-14 18:58:44', '2021-12-14 18:58:44'),
(234, 'page_update', '', 1, '90.139.150.144', 31, 'BookStack\\Page', '2021-12-14 19:03:10', '2021-12-14 19:03:10'),
(235, 'page_update', '', 1, '90.139.150.144', 31, 'BookStack\\Page', '2021-12-14 19:03:29', '2021-12-14 19:03:29'),
(236, 'page_update', '', 1, '90.139.150.144', 31, 'BookStack\\Page', '2021-12-14 19:06:57', '2021-12-14 19:06:57'),
(237, 'page_update', '', 1, '90.139.150.144', 31, 'BookStack\\Page', '2021-12-14 19:07:06', '2021-12-14 19:07:06'),
(238, 'page_update', '', 1, '90.139.150.144', 31, 'BookStack\\Page', '2021-12-14 19:08:37', '2021-12-14 19:08:37'),
(239, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-14 19:13:46', '2021-12-14 19:13:46'),
(240, 'book_sort', '', 1, '90.139.150.144', 7, 'BookStack\\Book', '2021-12-14 19:13:53', '2021-12-14 19:13:53'),
(241, 'page_update', '', 1, '90.139.150.144', 31, 'BookStack\\Page', '2021-12-14 19:37:46', '2021-12-14 19:37:46'),
(242, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-14 19:43:37', '2021-12-14 19:43:37'),
(243, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-14 19:44:41', '2021-12-14 19:44:41'),
(244, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-14 19:45:02', '2021-12-14 19:45:02'),
(245, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2021-12-17 15:42:45', '2021-12-17 15:42:45'),
(246, 'page_create', 'Patterns', 1, '194.19.232.194', NULL, NULL, '2021-12-17 15:44:21', '2022-03-22 20:03:07'),
(247, 'auth_login', 'standard; (1) Admin', 1, '77.219.11.154', NULL, NULL, '2021-12-18 10:21:00', '2021-12-18 10:21:00'),
(248, 'page_update', '', 1, '77.219.11.154', 31, 'BookStack\\Page', '2021-12-18 10:50:18', '2021-12-18 10:50:18'),
(249, 'page_create', '', 1, '77.219.11.154', 33, 'BookStack\\Page', '2021-12-18 11:02:25', '2021-12-18 11:02:25'),
(250, 'book_sort', '', 1, '77.219.11.154', 7, 'BookStack\\Book', '2021-12-18 11:02:32', '2021-12-18 11:02:32'),
(251, 'page_create', '', 1, '77.219.11.154', 34, 'BookStack\\Page', '2021-12-18 12:28:53', '2021-12-18 12:28:53'),
(252, 'book_sort', '', 1, '77.219.11.154', 7, 'BookStack\\Book', '2021-12-18 12:29:01', '2021-12-18 12:29:01'),
(253, 'page_update', '', 1, '77.219.11.154', 29, 'BookStack\\Page', '2021-12-18 12:56:54', '2021-12-18 12:56:54'),
(254, 'auth_login', 'standard; (1) Admin', 1, '77.219.11.154', NULL, NULL, '2021-12-18 15:48:00', '2021-12-18 15:48:00'),
(255, 'page_update', '', 1, '77.219.11.154', 34, 'BookStack\\Page', '2021-12-18 15:58:47', '2021-12-18 15:58:47'),
(256, 'page_update', '', 1, '77.219.11.154', 34, 'BookStack\\Page', '2021-12-18 16:08:58', '2021-12-18 16:08:58'),
(257, 'page_update', '', 1, '77.219.11.154', 34, 'BookStack\\Page', '2021-12-18 16:09:23', '2021-12-18 16:09:23'),
(258, 'page_update', '', 1, '77.219.11.154', 34, 'BookStack\\Page', '2021-12-18 16:18:02', '2021-12-18 16:18:02'),
(259, 'page_update', '', 1, '77.219.11.154', 34, 'BookStack\\Page', '2021-12-18 16:19:56', '2021-12-18 16:19:56'),
(260, 'page_update', '', 1, '77.219.4.203', 20, 'BookStack\\Page', '2021-12-18 16:44:23', '2021-12-18 16:44:23'),
(261, 'page_delete', 'New Page', 1, '77.219.4.203', NULL, NULL, '2021-12-18 16:46:42', '2022-03-22 20:03:07'),
(262, 'page_update', '', 1, '77.219.4.203', 20, 'BookStack\\Page', '2021-12-18 16:48:50', '2021-12-18 16:48:50'),
(263, 'page_update', '', 1, '77.219.4.203', 20, 'BookStack\\Page', '2021-12-18 16:50:00', '2021-12-18 16:50:00'),
(264, 'page_update', '', 1, '77.219.4.203', 20, 'BookStack\\Page', '2021-12-18 16:50:34', '2021-12-18 16:50:34'),
(265, 'page_update', '', 1, '77.219.4.203', 29, 'BookStack\\Page', '2021-12-18 17:25:50', '2021-12-18 17:25:50'),
(266, 'page_update', '', 1, '77.219.4.203', 33, 'BookStack\\Page', '2021-12-18 17:27:42', '2021-12-18 17:27:42'),
(267, 'page_update', '', 1, '77.219.4.203', 33, 'BookStack\\Page', '2021-12-18 17:29:09', '2021-12-18 17:29:09'),
(268, 'page_update', '', 1, '77.219.4.203', 29, 'BookStack\\Page', '2021-12-18 17:30:14', '2021-12-18 17:30:14'),
(269, 'page_update', '', 1, '77.219.4.203', 33, 'BookStack\\Page', '2021-12-18 17:34:40', '2021-12-18 17:34:40'),
(270, 'auth_login', 'standard; (1) Admin', 1, '77.219.4.203', NULL, NULL, '2021-12-18 17:35:36', '2021-12-18 17:35:36'),
(271, 'page_delete', 'Patterns', 1, '77.219.4.203', NULL, NULL, '2021-12-18 17:35:41', '2022-03-22 20:03:07'),
(272, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-19 10:40:29', '2021-12-19 10:40:29'),
(273, 'page_create', 'Docker Swarm', 1, '90.139.150.144', NULL, NULL, '2021-12-19 10:40:40', '2022-03-22 20:03:07'),
(274, 'book_sort', '', 1, '90.139.150.144', 7, 'BookStack\\Book', '2021-12-19 10:40:45', '2021-12-19 10:40:45'),
(275, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-19 11:13:22', '2021-12-19 11:13:22'),
(276, 'page_update', '', 1, '90.139.150.144', 30, 'BookStack\\Page', '2021-12-19 11:39:02', '2021-12-19 11:39:02'),
(277, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-19 11:39:27', '2021-12-19 11:39:27'),
(278, 'page_update', '', 1, '90.139.150.144', 30, 'BookStack\\Page', '2021-12-19 11:41:19', '2021-12-19 11:41:19'),
(279, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-19 17:51:57', '2021-12-19 17:51:57'),
(280, 'page_update', '', 1, '90.139.150.144', 20, 'BookStack\\Page', '2021-12-19 17:59:06', '2021-12-19 17:59:06'),
(281, 'page_create', '', 1, '90.139.150.144', 37, 'BookStack\\Page', '2021-12-19 18:08:48', '2021-12-19 18:08:48'),
(282, 'book_sort', '', 1, '90.139.150.144', 3, 'BookStack\\Book', '2021-12-19 18:08:56', '2021-12-19 18:08:56'),
(283, 'page_update', '', 1, '90.139.150.144', 37, 'BookStack\\Page', '2021-12-19 18:13:29', '2021-12-19 18:13:29'),
(284, 'page_update', '', 1, '90.139.150.144', 21, 'BookStack\\Page', '2021-12-19 18:33:58', '2021-12-19 18:33:58'),
(285, 'page_update', '', 1, '90.139.150.144', 20, 'BookStack\\Page', '2021-12-19 18:52:54', '2021-12-19 18:52:54'),
(286, 'page_delete', 'New Page', 1, '90.139.150.144', NULL, NULL, '2021-12-19 19:03:39', '2022-03-22 20:03:07'),
(287, 'book_create', 'Webpack', 1, '90.139.150.144', NULL, NULL, '2021-12-19 19:16:48', '2022-03-22 20:03:07'),
(288, 'book_delete', 'Webpack', 1, '90.139.150.144', NULL, NULL, '2021-12-19 20:03:00', '2022-03-22 20:03:07'),
(289, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2021-12-20 08:45:02', '2021-12-20 08:45:02'),
(290, 'book_create', 'Shell Scripting', 1, '194.19.232.194', NULL, NULL, '2021-12-20 08:45:54', '2022-03-22 20:03:07'),
(291, 'permissions_update', '', 1, '194.19.232.194', 6, 'BookStack\\Book', '2021-12-20 08:53:09', '2021-12-20 08:53:09'),
(292, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2021-12-20 08:53:20', '2021-12-20 08:53:20'),
(293, 'page_create', 'Streams, Pipes and Redirects', 1, '194.19.232.194', NULL, NULL, '2021-12-20 08:59:36', '2022-03-22 20:03:07'),
(294, 'page_update', 'Streams, Pipes and Redirects', 1, '194.19.232.194', NULL, NULL, '2021-12-20 08:59:42', '2022-03-22 20:03:07'),
(295, 'page_delete', 'Streams, Pipes and Redirects', 1, '194.19.232.194', NULL, NULL, '2021-12-20 09:07:28', '2022-03-22 20:03:07'),
(296, 'page_create', 'Data Streams', 1, '194.19.232.194', NULL, NULL, '2021-12-20 09:12:45', '2022-03-22 20:03:07'),
(297, 'page_update', 'Data Streams', 1, '194.19.232.194', NULL, NULL, '2021-12-20 09:31:37', '2022-03-22 20:03:07'),
(298, 'page_update', 'Data Streams', 1, '194.19.232.194', NULL, NULL, '2021-12-20 10:58:41', '2022-03-22 20:03:07'),
(299, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2021-12-20 15:08:26', '2021-12-20 15:08:26'),
(300, 'user_update', '(1) Admin', 1, '194.19.232.194', NULL, NULL, '2021-12-20 15:08:52', '2021-12-20 15:08:52'),
(301, 'page_create', '', 1, '194.19.232.194', 40, 'BookStack\\Page', '2021-12-20 15:09:09', '2021-12-20 15:09:09'),
(302, 'book_delete', 'Shell Scripting', 1, '194.19.232.194', NULL, NULL, '2021-12-20 15:09:16', '2022-03-22 20:03:07'),
(303, 'page_update', '', 1, '194.19.232.194', 40, 'BookStack\\Page', '2021-12-20 15:14:09', '2021-12-20 15:14:09'),
(304, 'page_update', '', 1, '194.19.232.194', 40, 'BookStack\\Page', '2021-12-20 15:15:05', '2021-12-20 15:15:05'),
(305, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-21 07:40:58', '2021-12-21 07:40:58'),
(306, 'page_update', '', 1, '90.139.150.144', 40, 'BookStack\\Page', '2021-12-21 07:45:34', '2021-12-21 07:45:34'),
(307, 'page_update', '', 1, '90.139.150.144', 40, 'BookStack\\Page', '2021-12-21 07:48:10', '2021-12-21 07:48:10'),
(308, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-21 08:22:25', '2021-12-21 08:22:25'),
(309, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-21 08:34:58', '2021-12-21 08:34:58'),
(310, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-21 08:46:48', '2021-12-21 08:46:48'),
(311, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-21 08:47:04', '2021-12-21 08:47:04'),
(312, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-21 08:47:35', '2021-12-21 08:47:35'),
(313, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-21 08:47:50', '2021-12-21 08:47:50'),
(314, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-21 08:49:45', '2021-12-21 08:49:45'),
(315, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-21 08:53:30', '2021-12-21 08:53:30'),
(316, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-21 09:01:10', '2021-12-21 09:01:10'),
(317, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-21 09:05:07', '2021-12-21 09:05:07'),
(318, 'page_update', '', 1, '90.139.150.144', 29, 'BookStack\\Page', '2021-12-21 09:14:08', '2021-12-21 09:14:08'),
(319, 'page_delete', 'Docker Swarm', 1, '90.139.150.144', NULL, NULL, '2021-12-21 09:23:18', '2022-03-22 20:03:07'),
(320, 'page_update', '', 1, '90.139.150.144', 33, 'BookStack\\Page', '2021-12-21 11:22:39', '2021-12-21 11:22:39'),
(321, 'page_update', '', 1, '90.139.150.144', 40, 'BookStack\\Page', '2021-12-21 11:38:13', '2021-12-21 11:38:13'),
(322, 'book_create', '', 1, '90.139.150.144', 10, 'BookStack\\Book', '2021-12-21 11:38:19', '2021-12-21 11:38:19'),
(323, 'page_create', 'Modules', 1, '90.139.150.144', NULL, NULL, '2021-12-21 11:38:26', '2022-03-22 20:03:07'),
(324, 'page_update', 'Modules', 1, '90.139.150.144', NULL, NULL, '2021-12-21 11:38:34', '2022-03-22 20:03:07'),
(325, 'page_update', 'Modules', 1, '90.139.150.144', NULL, NULL, '2021-12-21 11:48:10', '2022-03-22 20:03:07'),
(326, 'page_update', 'Modules', 1, '90.139.150.144', NULL, NULL, '2021-12-21 11:48:19', '2022-03-22 20:03:07'),
(327, 'page_update', 'Modules', 1, '90.139.150.144', NULL, NULL, '2021-12-21 11:58:19', '2022-03-22 20:03:07'),
(328, 'page_update', 'Modules', 1, '90.139.150.144', NULL, NULL, '2021-12-21 12:49:38', '2022-03-22 20:03:07'),
(329, 'page_update', 'Modules', 1, '90.139.150.144', NULL, NULL, '2021-12-21 12:50:50', '2022-03-22 20:03:07'),
(330, 'page_update', 'Modules', 1, '90.139.150.144', NULL, NULL, '2021-12-21 12:52:35', '2022-03-22 20:03:07'),
(331, 'page_update', 'Modules', 1, '90.139.150.144', NULL, NULL, '2021-12-21 12:52:55', '2022-03-22 20:03:07'),
(332, 'page_update', 'Modules', 1, '90.139.150.144', NULL, NULL, '2021-12-21 12:54:10', '2022-03-22 20:03:07'),
(333, 'page_update', 'Modules', 1, '90.139.150.144', NULL, NULL, '2021-12-21 12:54:29', '2022-03-22 20:03:07'),
(334, 'page_update', 'Modules', 1, '90.139.150.144', NULL, NULL, '2021-12-21 12:59:54', '2022-03-22 20:03:07'),
(335, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-23 08:49:55', '2021-12-23 08:49:55'),
(336, 'book_create', '', 1, '90.139.150.144', 11, 'BookStack\\Book', '2021-12-23 08:50:33', '2021-12-23 08:50:33'),
(337, 'book_update', '', 1, '90.139.150.144', 11, 'BookStack\\Book', '2021-12-23 08:51:18', '2021-12-23 08:51:18'),
(338, 'page_delete', 'New Page', 1, '90.139.150.144', NULL, NULL, '2021-12-23 10:33:19', '2022-03-22 20:03:07'),
(339, 'page_create', '', 1, '90.139.150.144', 43, 'BookStack\\Page', '2021-12-23 10:33:25', '2021-12-23 10:33:25'),
(340, 'page_update', '', 1, '90.139.150.144', 43, 'BookStack\\Page', '2021-12-23 10:43:41', '2021-12-23 10:43:41'),
(341, 'page_update', '', 1, '90.139.150.144', 43, 'BookStack\\Page', '2021-12-23 10:44:00', '2021-12-23 10:44:00'),
(342, 'page_create', '', 1, '90.139.150.144', 44, 'BookStack\\Page', '2021-12-23 10:44:09', '2021-12-23 10:44:09'),
(343, 'page_update', '', 1, '90.139.150.144', 43, 'BookStack\\Page', '2021-12-23 10:44:20', '2021-12-23 10:44:20'),
(344, 'page_update', '', 1, '90.139.150.144', 44, 'BookStack\\Page', '2021-12-23 12:12:28', '2021-12-23 12:12:28'),
(345, 'page_update', '', 1, '90.139.150.144', 44, 'BookStack\\Page', '2021-12-23 12:16:30', '2021-12-23 12:16:30'),
(346, 'page_update', '', 1, '90.139.150.144', 44, 'BookStack\\Page', '2021-12-23 12:19:02', '2021-12-23 12:19:02'),
(347, 'page_update', '', 1, '90.139.150.144', 44, 'BookStack\\Page', '2021-12-23 12:22:11', '2021-12-23 12:22:11'),
(348, 'page_update', '', 1, '90.139.150.144', 44, 'BookStack\\Page', '2021-12-23 12:23:37', '2021-12-23 12:23:37'),
(349, 'page_update', '', 1, '90.139.150.144', 44, 'BookStack\\Page', '2021-12-23 12:25:27', '2021-12-23 12:25:27'),
(350, 'page_update', '', 1, '90.139.150.144', 44, 'BookStack\\Page', '2021-12-23 12:28:20', '2021-12-23 12:28:20'),
(351, 'page_update', '', 1, '90.139.150.144', 44, 'BookStack\\Page', '2021-12-23 12:29:12', '2021-12-23 12:29:12'),
(352, 'page_update', '', 1, '90.139.150.144', 44, 'BookStack\\Page', '2021-12-23 12:34:02', '2021-12-23 12:34:02'),
(353, 'page_update', '', 1, '90.139.150.144', 44, 'BookStack\\Page', '2021-12-23 12:35:04', '2021-12-23 12:35:04'),
(354, 'page_update', '', 1, '90.139.150.144', 44, 'BookStack\\Page', '2021-12-23 12:35:31', '2021-12-23 12:35:31'),
(355, 'page_update', '', 1, '90.139.150.144', 43, 'BookStack\\Page', '2021-12-23 12:51:48', '2021-12-23 12:51:48'),
(356, 'page_update', '', 1, '90.139.150.144', 43, 'BookStack\\Page', '2021-12-23 13:07:35', '2021-12-23 13:07:35'),
(357, 'page_update', '', 1, '90.139.150.144', 44, 'BookStack\\Page', '2021-12-23 13:09:26', '2021-12-23 13:09:26'),
(358, 'page_update', '', 1, '90.139.150.144', 43, 'BookStack\\Page', '2021-12-23 13:09:31', '2021-12-23 13:09:31'),
(359, 'page_update', '', 1, '90.139.150.144', 43, 'BookStack\\Page', '2021-12-23 13:10:56', '2021-12-23 13:10:56'),
(360, 'page_update', '', 1, '90.139.150.144', 44, 'BookStack\\Page', '2021-12-23 15:11:38', '2021-12-23 15:11:38'),
(361, 'page_create', 'Loaders', 1, '90.139.150.144', NULL, NULL, '2021-12-23 15:27:29', '2022-03-22 20:03:07'),
(362, 'auth_login', 'standard; (1) Admin', 1, '90.139.150.144', NULL, NULL, '2021-12-23 20:31:20', '2021-12-23 20:31:20'),
(363, 'page_update', 'Loaders', 1, '90.139.150.144', NULL, NULL, '2021-12-23 20:31:38', '2022-03-22 20:03:07'),
(364, 'page_update', 'Loaders', 1, '90.139.150.144', NULL, NULL, '2021-12-23 20:32:06', '2022-03-22 20:03:07'),
(365, 'page_update', 'Loaders', 1, '90.139.150.144', NULL, NULL, '2021-12-23 20:46:39', '2022-03-22 20:03:07'),
(366, 'page_update', 'Modules', 1, '90.139.150.144', NULL, NULL, '2021-12-23 20:49:07', '2022-03-22 20:03:07'),
(367, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2021-12-27 15:17:21', '2021-12-27 15:17:21'),
(368, 'page_update', '', 1, '194.19.232.194', 44, 'BookStack\\Page', '2021-12-27 15:28:01', '2021-12-27 15:28:01'),
(369, 'page_delete', 'Loaders', 1, '194.19.232.194', NULL, NULL, '2021-12-27 15:28:15', '2022-03-22 20:03:07'),
(370, 'page_update', '', 1, '194.19.232.194', 44, 'BookStack\\Page', '2021-12-27 15:28:20', '2021-12-27 15:28:20'),
(371, 'page_update', '', 1, '194.19.232.194', 44, 'BookStack\\Page', '2021-12-27 15:31:33', '2021-12-27 15:31:33'),
(372, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2021-12-28 08:56:37', '2021-12-28 08:56:37'),
(373, 'page_update', '', 1, '194.19.232.194', 33, 'BookStack\\Page', '2021-12-28 08:56:59', '2021-12-28 08:56:59'),
(374, 'page_update', '', 1, '194.19.232.194', 33, 'BookStack\\Page', '2021-12-28 08:57:28', '2021-12-28 08:57:28'),
(375, 'auth_login', 'standard; (1) Admin', 1, '90.133.205.237', NULL, NULL, '2021-12-29 09:43:25', '2021-12-29 09:43:25'),
(376, 'page_update', '', 1, '90.133.205.237', 44, 'BookStack\\Page', '2021-12-29 09:43:39', '2021-12-29 09:43:39'),
(377, 'page_update', '', 1, '90.133.205.237', 44, 'BookStack\\Page', '2021-12-29 09:45:47', '2021-12-29 09:45:47'),
(378, 'auth_login', 'standard; (1) Admin', 1, '77.219.0.92', NULL, NULL, '2021-12-30 10:09:00', '2021-12-30 10:09:00'),
(379, 'page_create', 'Callbacks vs Promises vs Async/Await', 1, '77.219.0.92', NULL, NULL, '2021-12-30 10:10:32', '2022-03-22 20:03:07'),
(380, 'page_update', 'Callbacks vs Promises vs Async/Await', 1, '77.219.0.92', NULL, NULL, '2021-12-30 10:21:51', '2022-03-22 20:03:07'),
(381, 'page_update', 'Callbacks vs Promises vs Async/Await', 1, '77.219.0.92', NULL, NULL, '2021-12-30 10:24:12', '2022-03-22 20:03:07'),
(382, 'page_update', 'Callbacks vs Promises vs Async/Await', 1, '77.219.0.92', NULL, NULL, '2021-12-30 10:27:50', '2022-03-22 20:03:07'),
(383, 'page_update', 'Callbacks vs Promises vs Async/Await', 1, '77.219.0.92', NULL, NULL, '2021-12-30 10:36:28', '2022-03-22 20:03:07'),
(384, 'page_update', 'Callbacks vs Promises vs Async/Await', 1, '77.219.0.92', NULL, NULL, '2021-12-30 10:37:32', '2022-03-22 20:03:07'),
(385, 'page_update', 'Callbacks vs Promises vs Async/Await', 1, '77.219.0.92', NULL, NULL, '2021-12-30 10:45:16', '2022-03-22 20:03:07'),
(386, 'page_update', 'Callbacks vs Promises vs Async/Await', 1, '77.219.0.92', NULL, NULL, '2021-12-30 10:58:22', '2022-03-22 20:03:07'),
(387, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2022-01-03 14:23:39', '2022-01-03 14:23:39'),
(388, 'chapter_create', '', 1, '194.19.232.194', 1, 'BookStack\\Chapter', '2022-01-03 14:25:21', '2022-01-03 14:25:21'),
(389, 'chapter_create', '', 1, '194.19.232.194', 2, 'BookStack\\Chapter', '2022-01-03 14:25:30', '2022-01-03 14:25:30'),
(390, 'page_create', '', 1, '194.19.232.194', 47, 'BookStack\\Page', '2022-01-03 14:26:14', '2022-01-03 14:26:14'),
(391, 'page_update', '', 1, '194.19.232.194', 47, 'BookStack\\Page', '2022-01-03 14:27:10', '2022-01-03 14:27:10'),
(392, 'page_create', 'Callbacks vs Async/Await', 1, '194.19.232.194', NULL, NULL, '2022-01-03 14:27:23', '2022-03-22 20:03:07'),
(393, 'page_update', 'Callbacks vs Async/Await', 1, '194.19.232.194', NULL, NULL, '2022-01-03 14:27:43', '2022-03-22 20:03:07'),
(394, 'page_delete', 'Modules', 1, '194.19.232.194', NULL, NULL, '2022-01-03 14:27:51', '2022-03-22 20:03:07'),
(395, 'page_delete', 'Callbacks vs Promises vs Async/Await', 1, '194.19.232.194', NULL, NULL, '2022-01-03 14:27:54', '2022-03-22 20:03:07'),
(396, 'page_create', '', 1, '194.19.232.194', 49, 'BookStack\\Page', '2022-01-03 14:36:06', '2022-01-03 14:36:06'),
(397, 'page_create', '', 1, '194.19.232.194', 50, 'BookStack\\Page', '2022-01-03 14:37:08', '2022-01-03 14:37:08'),
(398, 'page_update', '', 1, '194.19.232.194', 50, 'BookStack\\Page', '2022-01-03 14:37:16', '2022-01-03 14:37:16'),
(399, 'page_update', '', 1, '194.19.232.194', 49, 'BookStack\\Page', '2022-01-03 14:38:20', '2022-01-03 14:38:20'),
(400, 'book_create', '', 1, '194.19.232.194', 12, 'BookStack\\Book', '2022-01-03 15:38:58', '2022-01-03 15:38:58'),
(401, 'page_create', '', 1, '194.19.232.194', 51, 'BookStack\\Page', '2022-01-03 15:40:51', '2022-01-03 15:40:51'),
(402, 'page_update', '', 1, '194.19.232.194', 51, 'BookStack\\Page', '2022-01-03 15:54:30', '2022-01-03 15:54:30'),
(403, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2022-01-04 11:37:55', '2022-01-04 11:37:55'),
(404, 'page_create', '', 1, '194.19.232.194', 52, 'BookStack\\Page', '2022-01-04 11:38:02', '2022-01-04 11:38:02'),
(405, 'page_update', '', 1, '194.19.232.194', 52, 'BookStack\\Page', '2022-01-04 11:44:48', '2022-01-04 11:44:48'),
(406, 'page_create', '', 1, '194.19.232.194', 53, 'BookStack\\Page', '2022-01-04 11:46:17', '2022-01-04 11:46:17'),
(407, 'page_update', '', 1, '194.19.232.194', 53, 'BookStack\\Page', '2022-01-04 11:46:39', '2022-01-04 11:46:39'),
(408, 'page_update', '', 1, '194.19.232.194', 30, 'BookStack\\Page', '2022-01-04 12:06:33', '2022-01-04 12:06:33'),
(409, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2022-01-05 15:32:27', '2022-01-05 15:32:27'),
(410, 'page_update', 'Callbacks vs Async/Await', 1, '194.19.232.194', NULL, NULL, '2022-01-05 15:33:19', '2022-03-22 20:03:07'),
(411, 'page_update', 'Callbacks vs Async/Await', 1, '194.19.232.194', NULL, NULL, '2022-01-05 15:59:02', '2022-03-22 20:03:07'),
(412, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2022-01-06 13:21:47', '2022-01-06 13:21:47'),
(413, 'page_update', '', 1, '194.19.232.194', 13, 'BookStack\\Page', '2022-01-06 13:22:59', '2022-01-06 13:22:59'),
(414, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2022-01-10 09:42:18', '2022-01-10 09:42:18'),
(415, 'page_delete', 'Promises', 1, '194.19.232.194', NULL, NULL, '2022-01-10 09:43:30', '2022-03-22 20:03:07'),
(416, 'page_create', '', 1, '194.19.232.194', 55, 'BookStack\\Page', '2022-01-10 10:28:14', '2022-01-10 10:28:14'),
(417, 'page_update', '', 1, '194.19.232.194', 55, 'BookStack\\Page', '2022-01-10 11:05:45', '2022-01-10 11:05:45'),
(418, 'page_update', '', 1, '194.19.232.194', 55, 'BookStack\\Page', '2022-01-10 11:08:32', '2022-01-10 11:08:32'),
(419, 'page_update', '', 1, '194.19.232.194', 55, 'BookStack\\Page', '2022-01-10 11:09:19', '2022-01-10 11:09:19'),
(420, 'page_update', '', 1, '194.19.232.194', 55, 'BookStack\\Page', '2022-01-10 11:12:21', '2022-01-10 11:12:21'),
(421, 'page_update', '', 1, '194.19.232.194', 55, 'BookStack\\Page', '2022-01-10 11:17:37', '2022-01-10 11:17:37'),
(422, 'page_update', '', 1, '194.19.232.194', 55, 'BookStack\\Page', '2022-01-10 12:03:47', '2022-01-10 12:03:47'),
(423, 'page_update', '', 1, '194.19.232.194', 55, 'BookStack\\Page', '2022-01-10 12:04:34', '2022-01-10 12:04:34'),
(424, 'page_update', 'Callbacks vs Async/Await', 1, '194.19.232.194', NULL, NULL, '2022-01-10 12:09:52', '2022-03-22 20:03:07'),
(425, 'page_create', '', 1, '194.19.232.194', 56, 'BookStack\\Page', '2022-01-10 12:11:32', '2022-01-10 12:11:32'),
(426, 'page_update', '', 1, '194.19.232.194', 56, 'BookStack\\Page', '2022-01-10 12:11:43', '2022-01-10 12:11:43'),
(427, 'page_create', '', 1, '194.19.232.194', 57, 'BookStack\\Page', '2022-01-10 12:12:00', '2022-01-10 12:12:00'),
(428, 'page_update', '', 1, '194.19.232.194', 57, 'BookStack\\Page', '2022-01-10 12:12:16', '2022-01-10 12:12:16'),
(429, 'page_update', '', 1, '194.19.232.194', 57, 'BookStack\\Page', '2022-01-10 12:12:21', '2022-01-10 12:12:21'),
(430, 'page_update', 'Callbacks vs Async/Await', 1, '194.19.232.194', NULL, NULL, '2022-01-10 12:12:27', '2022-03-22 20:03:07'),
(431, 'page_delete', 'Callbacks vs Async/Await', 1, '194.19.232.194', NULL, NULL, '2022-01-10 12:12:30', '2022-03-22 20:03:07'),
(432, 'page_update', '', 1, '194.19.232.194', 57, 'BookStack\\Page', '2022-01-10 12:53:50', '2022-01-10 12:53:50'),
(433, 'page_update', '', 1, '194.19.232.194', 57, 'BookStack\\Page', '2022-01-10 12:58:07', '2022-01-10 12:58:07'),
(434, 'page_create', '', 1, '194.19.232.194', 58, 'BookStack\\Page', '2022-01-10 13:31:40', '2022-01-10 13:31:40');
INSERT INTO `activities` (`id`, `type`, `detail`, `user_id`, `ip`, `entity_id`, `entity_type`, `created_at`, `updated_at`) VALUES
(435, 'page_update', '', 1, '194.19.232.194', 58, 'BookStack\\Page', '2022-01-10 13:39:38', '2022-01-10 13:39:38'),
(436, 'page_update', '', 1, '194.19.232.194', 55, 'BookStack\\Page', '2022-01-10 15:54:58', '2022-01-10 15:54:58'),
(437, 'page_create', '', 1, '194.19.232.194', 59, 'BookStack\\Page', '2022-01-10 16:03:01', '2022-01-10 16:03:01'),
(438, 'auth_login', 'standard; (1) Admin', 1, '94.186.108.218', NULL, NULL, '2022-01-13 08:39:19', '2022-01-13 08:39:19'),
(439, 'auth_login', 'standard; (1) Admin', 1, '90.133.6.45', NULL, NULL, '2022-02-09 13:43:33', '2022-02-09 13:43:33'),
(440, 'auth_login', 'standard; (1) Admin', 1, '90.133.6.45', NULL, NULL, '2022-02-09 13:43:55', '2022-02-09 13:43:55'),
(441, 'permissions_update', '', 1, '90.133.6.45', 6, 'BookStack\\Book', '2022-02-09 13:44:10', '2022-02-09 13:44:10'),
(442, 'auth_login', 'standard; (1) Admin', 1, '90.133.6.45', NULL, NULL, '2022-02-10 10:24:05', '2022-02-10 10:24:05'),
(443, 'permissions_update', '', 1, '90.133.6.45', 6, 'BookStack\\Book', '2022-02-10 10:24:12', '2022-02-10 10:24:12'),
(444, 'auth_login', 'standard; (1) Admin', 1, '77.219.15.233', NULL, NULL, '2022-02-13 12:31:37', '2022-02-13 12:31:37'),
(445, 'page_update', '', 1, '77.219.15.233', 40, 'BookStack\\Page', '2022-02-13 12:32:37', '2022-02-13 12:32:37'),
(446, 'auth_login', 'standard; (1) Admin', 1, '90.133.6.45', NULL, NULL, '2022-02-17 07:43:39', '2022-02-17 07:43:39'),
(447, 'page_update', '', 1, '90.133.6.45', 40, 'BookStack\\Page', '2022-02-17 07:44:24', '2022-02-17 07:44:24'),
(448, 'auth_login', 'standard; (1) Admin', 1, '194.19.232.194', NULL, NULL, '2022-03-11 10:02:04', '2022-03-11 10:02:04'),
(449, 'page_update', '', 1, '194.19.232.194', 40, 'BookStack\\Page', '2022-03-11 10:02:39', '2022-03-11 10:02:39'),
(450, 'page_create', '', 1, '194.19.232.194', 60, 'BookStack\\Page', '2022-03-11 10:14:01', '2022-03-11 10:14:01'),
(451, 'auth_login', 'standard; (1) Admin', 1, '92.240.69.193', NULL, NULL, '2022-03-17 08:01:35', '2022-03-17 08:01:35'),
(452, 'page_create', '', 1, '92.240.69.193', 61, 'BookStack\\Page', '2022-03-17 08:01:50', '2022-03-17 08:01:50'),
(453, 'page_update', '', 1, '92.240.69.193', 61, 'BookStack\\Page', '2022-03-17 08:05:56', '2022-03-17 08:05:56'),
(454, 'page_update', '', 1, '92.240.69.193', 61, 'BookStack\\Page', '2022-03-17 08:06:54', '2022-03-17 08:06:54'),
(455, 'page_update', '', 1, '92.240.69.193', 13, 'BookStack\\Page', '2022-03-17 08:08:49', '2022-03-17 08:08:49'),
(456, 'page_update', '', 1, '92.240.69.193', 13, 'BookStack\\Page', '2022-03-17 08:09:05', '2022-03-17 08:09:05'),
(457, 'page_update', '', 1, '92.240.69.193', 13, 'BookStack\\Page', '2022-03-17 08:09:33', '2022-03-17 08:09:33'),
(458, 'page_update', '', 1, '92.240.69.193', 13, 'BookStack\\Page', '2022-03-17 08:13:39', '2022-03-17 08:13:39'),
(459, 'page_update', '', 1, '92.240.69.193', 13, 'BookStack\\Page', '2022-03-17 08:14:14', '2022-03-17 08:14:14'),
(460, 'auth_login', 'standard; (1) Admin', 1, '80.232.249.173', NULL, NULL, '2022-03-18 13:10:06', '2022-03-18 13:10:06'),
(461, 'page_update', '', 1, '80.232.249.173', 61, 'BookStack\\Page', '2022-03-18 13:10:42', '2022-03-18 13:10:42'),
(462, 'page_update', '', 1, '80.232.249.173', 61, 'BookStack\\Page', '2022-03-18 13:11:49', '2022-03-18 13:11:49'),
(463, 'page_update', '', 1, '80.232.249.173', 61, 'BookStack\\Page', '2022-03-18 13:21:51', '2022-03-18 13:21:51'),
(464, 'page_update', '', 1, '80.232.249.173', 61, 'BookStack\\Page', '2022-03-18 13:42:34', '2022-03-18 13:42:34'),
(465, 'page_update', '', 1, '80.232.249.173', 61, 'BookStack\\Page', '2022-03-18 13:45:34', '2022-03-18 13:45:34'),
(466, 'auth_login', 'standard; (1) Admin', 1, '80.232.249.173', NULL, NULL, '2022-03-22 14:07:36', '2022-03-22 14:07:36'),
(467, 'book_create', '', 1, '80.232.249.173', 13, 'BookStack\\Book', '2022-03-22 14:07:42', '2022-03-22 14:07:42'),
(468, 'page_create', '', 1, '80.232.249.173', 62, 'BookStack\\Page', '2022-03-22 14:07:49', '2022-03-22 14:07:49'),
(469, 'auth_login', 'standard; (1) Admin', 1, '77.219.2.132', NULL, NULL, '2022-03-22 16:05:37', '2022-03-22 16:05:37'),
(470, 'page_update', '', 1, '77.219.2.132', 62, 'BookStack\\Page', '2022-03-22 16:05:57', '2022-03-22 16:05:57'),
(471, 'page_update', '', 1, '77.219.2.132', 62, 'BookStack\\Page', '2022-03-22 16:22:19', '2022-03-22 16:22:19'),
(472, 'page_create', '', 1, '77.219.2.132', 63, 'BookStack\\Page', '2022-03-22 16:22:28', '2022-03-22 16:22:28'),
(473, 'page_update', '', 1, '77.219.2.132', 63, 'BookStack\\Page', '2022-03-22 16:29:10', '2022-03-22 16:29:10'),
(474, 'page_update', '', 1, '77.219.2.132', 63, 'BookStack\\Page', '2022-03-22 16:29:42', '2022-03-22 16:29:42'),
(475, 'page_update', '', 1, '77.219.2.132', 62, 'BookStack\\Page', '2022-03-22 16:34:58', '2022-03-22 16:34:58'),
(476, 'page_create', '', 1, '77.219.2.132', 64, 'BookStack\\Page', '2022-03-22 16:36:21', '2022-03-22 16:36:21'),
(477, 'page_update', '', 1, '77.219.2.132', 64, 'BookStack\\Page', '2022-03-22 16:37:29', '2022-03-22 16:37:29'),
(478, 'page_update', '', 1, '77.219.2.132', 64, 'BookStack\\Page', '2022-03-22 16:52:01', '2022-03-22 16:52:01'),
(479, 'page_create', '', 1, '77.219.2.132', 65, 'BookStack\\Page', '2022-03-22 16:52:42', '2022-03-22 16:52:42'),
(480, 'page_update', '', 1, '77.219.2.132', 65, 'BookStack\\Page', '2022-03-22 16:52:53', '2022-03-22 16:52:53'),
(481, 'page_update', '', 1, '77.219.2.132', 65, 'BookStack\\Page', '2022-03-22 16:53:27', '2022-03-22 16:53:27'),
(482, 'page_update', '', 1, '77.219.2.132', 65, 'BookStack\\Page', '2022-03-22 16:56:46', '2022-03-22 16:56:46'),
(483, 'page_update', '', 1, '77.219.2.132', 65, 'BookStack\\Page', '2022-03-22 17:02:00', '2022-03-22 17:02:00'),
(484, 'page_create', '', 1, '77.219.2.132', 66, 'BookStack\\Page', '2022-03-22 17:09:55', '2022-03-22 17:09:55'),
(485, 'page_update', '', 1, '77.219.2.132', 66, 'BookStack\\Page', '2022-03-22 17:11:12', '2022-03-22 17:11:12'),
(486, 'auth_login', 'standard; (1) Admin', 1, '77.219.2.132', NULL, NULL, '2022-03-22 19:44:03', '2022-03-22 19:44:03'),
(487, 'page_update', '', 1, '77.219.2.132', 40, 'BookStack\\Page', '2022-03-22 19:47:00', '2022-03-22 19:47:00'),
(488, 'page_create', '', 1, '77.219.2.132', 67, 'BookStack\\Page', '2022-03-22 20:02:32', '2022-03-22 20:02:32'),
(489, 'page_delete', '', 1, '77.219.2.132', 67, 'BookStack\\Page', '2022-03-22 20:03:07', '2022-03-22 20:03:07'),
(490, 'page_delete', '', 1, '77.219.2.132', 64, 'BookStack\\Page', '2022-03-22 20:03:10', '2022-03-22 20:03:10'),
(491, 'page_create', '', 1, '77.219.2.132', 68, 'BookStack\\Page', '2022-03-22 20:03:45', '2022-03-22 20:03:45'),
(492, 'page_update', '', 1, '77.219.2.132', 26, 'BookStack\\Page', '2022-03-22 20:46:34', '2022-03-22 20:46:34');

-- --------------------------------------------------------

--
-- Table structure for table `api_tokens`
--

CREATE TABLE `api_tokens` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `token_id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `secret` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `user_id` int(10) UNSIGNED NOT NULL,
  `expires_at` date NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `attachments`
--

CREATE TABLE `attachments` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `path` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `extension` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,
  `uploaded_to` int(11) NOT NULL,
  `external` tinyint(1) NOT NULL,
  `order` int(11) NOT NULL,
  `created_by` int(11) NOT NULL,
  `updated_by` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `books`
--

CREATE TABLE `books` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `slug` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `created_by` int(11) NOT NULL,
  `updated_by` int(11) NOT NULL,
  `restricted` tinyint(1) NOT NULL DEFAULT 0,
  `image_id` int(11) DEFAULT NULL,
  `deleted_at` timestamp NULL DEFAULT NULL,
  `owned_by` int(10) UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `books`
--

INSERT INTO `books` (`id`, `name`, `slug`, `description`, `created_at`, `updated_at`, `created_by`, `updated_by`, `restricted`, `image_id`, `deleted_at`, `owned_by`) VALUES
(1, 'MySQL', 'mysql', '', '2021-11-27 12:20:23', '2021-11-27 13:53:42', 1, 1, 0, NULL, NULL, 2),
(2, 'Linux', 'linux', '', '2021-11-27 15:11:54', '2021-11-27 15:11:54', 1, 1, 0, NULL, NULL, 1),
(3, 'Git', 'git', '', '2021-11-29 14:32:58', '2021-11-29 14:32:58', 1, 1, 0, NULL, NULL, 1),
(6, 'Misc.', 'misc', '', '2021-12-11 19:48:42', '2022-02-10 10:24:12', 1, 1, 1, NULL, NULL, 1),
(7, 'Docker', 'docker', '', '2021-12-14 17:58:00', '2021-12-14 17:58:00', 1, 1, 0, NULL, NULL, 1),
(10, 'Javascript', 'javascript', '', '2021-12-21 11:38:19', '2021-12-21 11:38:19', 1, 1, 0, NULL, NULL, 1),
(11, 'Webpack', 'webpack', '', '2021-12-23 08:50:33', '2021-12-23 08:50:33', 1, 1, 0, NULL, NULL, 1),
(12, 'PHP', 'php', '', '2022-01-03 15:38:58', '2022-01-03 15:38:58', 1, 1, 0, NULL, NULL, 1),
(13, 'Servers', 'servers', '', '2022-03-22 14:07:42', '2022-03-22 14:07:42', 1, 1, 0, NULL, NULL, 1);

-- --------------------------------------------------------

--
-- Table structure for table `bookshelves`
--

CREATE TABLE `bookshelves` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(180) COLLATE utf8mb4_unicode_ci NOT NULL,
  `slug` varchar(180) COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_by` int(11) DEFAULT NULL,
  `updated_by` int(11) DEFAULT NULL,
  `restricted` tinyint(1) NOT NULL DEFAULT 0,
  `image_id` int(11) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `deleted_at` timestamp NULL DEFAULT NULL,
  `owned_by` int(10) UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `bookshelves`
--

INSERT INTO `bookshelves` (`id`, `name`, `slug`, `description`, `created_by`, `updated_by`, `restricted`, `image_id`, `created_at`, `updated_at`, `deleted_at`, `owned_by`) VALUES
(1, 'Software Development', 'software-development', '', 1, 1, 0, NULL, '2021-11-27 12:20:13', '2021-11-27 12:20:13', NULL, 1);

-- --------------------------------------------------------

--
-- Table structure for table `bookshelves_books`
--

CREATE TABLE `bookshelves_books` (
  `bookshelf_id` int(10) UNSIGNED NOT NULL,
  `book_id` int(10) UNSIGNED NOT NULL,
  `order` int(10) UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `bookshelves_books`
--

INSERT INTO `bookshelves_books` (`bookshelf_id`, `book_id`, `order`) VALUES
(1, 1, 1);

-- --------------------------------------------------------

--
-- Table structure for table `cache`
--

CREATE TABLE `cache` (
  `key` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `value` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `expiration` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `chapters`
--

CREATE TABLE `chapters` (
  `id` int(10) UNSIGNED NOT NULL,
  `book_id` int(11) NOT NULL,
  `slug` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `name` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `priority` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `created_by` int(11) NOT NULL,
  `updated_by` int(11) NOT NULL,
  `restricted` tinyint(1) NOT NULL DEFAULT 0,
  `deleted_at` timestamp NULL DEFAULT NULL,
  `owned_by` int(10) UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `chapters`
--

INSERT INTO `chapters` (`id`, `book_id`, `slug`, `name`, `description`, `priority`, `created_at`, `updated_at`, `created_by`, `updated_by`, `restricted`, `deleted_at`, `owned_by`) VALUES
(1, 10, 'low-level', 'Low Level', '', 4, '2022-01-03 14:25:21', '2022-01-03 14:25:21', 1, 1, 0, NULL, 1),
(2, 10, 'high-level', 'High Level', '', 5, '2022-01-03 14:25:30', '2022-01-03 14:25:30', 1, 1, 0, NULL, 1);

-- --------------------------------------------------------

--
-- Table structure for table `comments`
--

CREATE TABLE `comments` (
  `id` int(10) UNSIGNED NOT NULL,
  `entity_id` int(10) UNSIGNED NOT NULL,
  `entity_type` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `text` longtext COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `html` longtext COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `parent_id` int(10) UNSIGNED DEFAULT NULL,
  `local_id` int(10) UNSIGNED DEFAULT NULL,
  `created_by` int(10) UNSIGNED NOT NULL,
  `updated_by` int(10) UNSIGNED DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `deletions`
--

CREATE TABLE `deletions` (
  `id` int(10) UNSIGNED NOT NULL,
  `deleted_by` int(11) NOT NULL,
  `deletable_type` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,
  `deletable_id` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `deletions`
--

INSERT INTO `deletions` (`id`, `deleted_by`, `deletable_type`, `deletable_id`, `created_at`, `updated_at`) VALUES
(22, 1, 'BookStack\\Page', 67, '2022-03-22 20:03:07', '2022-03-22 20:03:07'),
(23, 1, 'BookStack\\Page', 64, '2022-03-22 20:03:10', '2022-03-22 20:03:10');

-- --------------------------------------------------------

--
-- Table structure for table `email_confirmations`
--

CREATE TABLE `email_confirmations` (
  `id` int(10) UNSIGNED NOT NULL,
  `user_id` int(11) NOT NULL,
  `token` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `entity_permissions`
--

CREATE TABLE `entity_permissions` (
  `id` int(10) UNSIGNED NOT NULL,
  `restrictable_id` int(11) NOT NULL,
  `restrictable_type` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `role_id` int(11) NOT NULL,
  `action` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `entity_permissions`
--

INSERT INTO `entity_permissions` (`id`, `restrictable_id`, `restrictable_type`, `role_id`, `action`) VALUES
(11, 6, 'BookStack\\Book', 2, 'view'),
(12, 6, 'BookStack\\Book', 2, 'create'),
(13, 6, 'BookStack\\Book', 2, 'update'),
(14, 6, 'BookStack\\Book', 2, 'delete');

-- --------------------------------------------------------

--
-- Table structure for table `favourites`
--

CREATE TABLE `favourites` (
  `id` int(10) UNSIGNED NOT NULL,
  `user_id` int(11) NOT NULL,
  `favouritable_id` int(11) NOT NULL,
  `favouritable_type` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `images`
--

CREATE TABLE `images` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `url` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `created_by` int(11) NOT NULL,
  `updated_by` int(11) NOT NULL,
  `path` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL,
  `type` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `uploaded_to` int(11) NOT NULL DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `images`
--

INSERT INTO `images` (`id`, `name`, `url`, `created_at`, `updated_at`, `created_by`, `updated_by`, `path`, `type`, `uploaded_to`) VALUES
(1, 'image-1638022898562.png', 'http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638022898562.png', '2021-11-27 12:21:38', '2021-11-28 15:44:54', 1, 1, '/uploads/images/gallery/2021-11/image-1638022898562.png', 'gallery', 1),
(2, 'image-1638022906583.png', 'http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638022906583.png', '2021-11-27 12:21:46', '2021-11-28 15:44:54', 1, 1, '/uploads/images/gallery/2021-11/image-1638022906583.png', 'gallery', 1),
(3, 'image-1638023393336.png', 'http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638023393336.png', '2021-11-27 12:29:53', '2021-11-28 15:44:54', 1, 1, '/uploads/images/gallery/2021-11/image-1638023393336.png', 'gallery', 3),
(4, 'image-1638023394683.png', 'http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638023394683.png', '2021-11-27 12:29:54', '2021-11-28 15:44:54', 1, 1, '/uploads/images/gallery/2021-11/image-1638023394683.png', 'gallery', 3),
(5, 'image-1638023951865.png', 'http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638023951865.png', '2021-11-27 12:39:11', '2021-11-28 15:44:54', 1, 1, '/uploads/images/gallery/2021-11/image-1638023951865.png', 'gallery', 3),
(6, 'image-1638023974767.png', 'http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638023974767.png', '2021-11-27 12:39:34', '2021-11-28 15:44:54', 1, 1, '/uploads/images/gallery/2021-11/image-1638023974767.png', 'gallery', 3),
(7, 'es.jpeg', 'http://wiki.lazda.io/uploads/images/user/2021-11/es.jpeg', '2021-11-27 14:28:50', '2021-11-28 15:44:54', 1, 1, '/uploads/images/user/2021-11/es.jpeg', 'user', 1),
(8, 'image-1638033737437.png', 'http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638033737437.png', '2021-11-27 15:22:17', '2021-11-28 15:44:54', 1, 1, '/uploads/images/gallery/2021-11/image-1638033737437.png', 'gallery', 1),
(9, 'image-1638043801377.png', 'http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638043801377.png', '2021-11-27 18:10:01', '2021-11-28 15:44:54', 1, 1, '/uploads/images/gallery/2021-11/image-1638043801377.png', 'gallery', 6),
(10, 'image-1638045172622.png', 'http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638045172622.png', '2021-11-27 18:32:52', '2021-11-28 15:44:54', 1, 1, '/uploads/images/gallery/2021-11/image-1638045172622.png', 'gallery', 11),
(11, 'image-1638045192497.png', 'http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638045192497.png', '2021-11-27 18:33:12', '2021-11-28 15:44:54', 1, 1, '/uploads/images/gallery/2021-11/image-1638045192497.png', 'gallery', 11),
(12, 'image-1638045208973.png', 'http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638045208973.png', '2021-11-27 18:33:29', '2021-11-28 15:44:54', 1, 1, '/uploads/images/gallery/2021-11/image-1638045208973.png', 'gallery', 11),
(13, 'image-1638262197596.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638262197596.png', '2021-11-30 08:49:57', '2021-11-30 08:49:57', 1, 1, '/uploads/images/gallery/2021-11/image-1638262197596.png', 'gallery', 15),
(14, 'image-1638367106410.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1638367106410.png', '2021-12-01 13:58:26', '2021-12-01 13:58:26', 1, 1, '/uploads/images/gallery/2021-12/image-1638367106410.png', 'gallery', 15),
(15, 'image-1639043310637.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639043310637.png', '2021-12-09 09:48:30', '2021-12-09 09:48:30', 1, 1, '/uploads/images/gallery/2021-12/image-1639043310637.png', 'gallery', 21),
(16, 'image-1639043336362.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639043336362.png', '2021-12-09 09:48:56', '2021-12-09 09:48:56', 1, 1, '/uploads/images/gallery/2021-12/image-1639043336362.png', 'gallery', 21),
(17, 'image-1639043546179.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639043546179.png', '2021-12-09 09:52:26', '2021-12-09 09:52:26', 1, 1, '/uploads/images/gallery/2021-12/image-1639043546179.png', 'gallery', 21),
(18, 'image-1639043550959.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639043550959.png', '2021-12-09 09:52:30', '2021-12-09 09:52:30', 1, 1, '/uploads/images/gallery/2021-12/image-1639043550959.png', 'gallery', 21),
(19, 'image-1639043929091.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639043929091.png', '2021-12-09 09:58:49', '2021-12-09 09:58:49', 1, 1, '/uploads/images/gallery/2021-12/image-1639043929091.png', 'gallery', 21),
(20, 'image-1639051052100.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051052100.png', '2021-12-09 11:57:32', '2021-12-09 11:57:32', 1, 1, '/uploads/images/gallery/2021-12/image-1639051052100.png', 'gallery', 23),
(21, 'image-1639051143108.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051143108.png', '2021-12-09 11:59:03', '2021-12-09 11:59:03', 1, 1, '/uploads/images/gallery/2021-12/image-1639051143108.png', 'gallery', 23),
(22, 'image-1639052465113.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639052465113.png', '2021-12-09 12:21:05', '2021-12-09 12:21:05', 1, 1, '/uploads/images/gallery/2021-12/image-1639052465113.png', 'gallery', 24),
(23, 'image-1639052540832.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639052540832.png', '2021-12-09 12:22:20', '2021-12-09 12:22:20', 1, 1, '/uploads/images/gallery/2021-12/image-1639052540832.png', 'gallery', 24),
(24, 'image-1639058986917.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639058986917.png', '2021-12-09 14:09:47', '2021-12-09 14:09:47', 1, 1, '/uploads/images/gallery/2021-12/image-1639058986917.png', 'gallery', 21),
(25, 'image-1639059919753.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639059919753.png', '2021-12-09 14:25:20', '2021-12-09 14:25:20', 1, 1, '/uploads/images/gallery/2021-12/image-1639059919753.png', 'gallery', 23),
(26, 'image-1639474795035.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639474795035.png', '2021-12-14 09:39:55', '2021-12-14 09:39:55', 1, 1, '/uploads/images/gallery/2021-12/image-1639474795035.png', 'gallery', 27),
(27, 'image-1639506691980.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png', '2021-12-14 18:31:32', '2021-12-14 18:31:32', 1, 1, '/uploads/images/gallery/2021-12/image-1639506691980.png', 'gallery', 31),
(28, 'image-1639842641578.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639842641578.png', '2021-12-18 15:50:42', '2021-12-18 15:50:42', 1, 1, '/uploads/images/gallery/2021-12/image-1639842641578.png', 'gallery', 34),
(29, 'image-1639842891807.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639842891807.png', '2021-12-18 15:54:52', '2021-12-18 15:54:52', 1, 1, '/uploads/images/gallery/2021-12/image-1639842891807.png', 'gallery', 34),
(30, 'image-1639848497835.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639848497835.png', '2021-12-18 17:28:18', '2021-12-18 17:28:18', 1, 1, '/uploads/images/gallery/2021-12/image-1639848497835.png', 'gallery', 33),
(31, 'image-1639937341204.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639937341204.png', '2021-12-19 18:09:01', '2021-12-19 18:09:01', 1, 1, '/uploads/images/gallery/2021-12/image-1639937341204.png', 'gallery', 37),
(32, 'image-1639938713445.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639938713445.png', '2021-12-19 18:31:53', '2021-12-19 18:31:53', 1, 1, '/uploads/images/gallery/2021-12/image-1639938713445.png', 'gallery', 21),
(33, 'image-1639991922035.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639991922035.png', '2021-12-20 09:18:42', '2021-12-20 09:18:42', 1, 1, '/uploads/images/gallery/2021-12/image-1639991922035.png', 'gallery', 39),
(34, 'image-1640091532468.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1640091532468.png', '2021-12-21 12:58:52', '2021-12-21 12:58:52', 1, 1, '/uploads/images/gallery/2021-12/image-1640091532468.png', 'gallery', 41),
(35, 'image-1640255643311.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1640255643311.png', '2021-12-23 10:34:03', '2021-12-23 10:34:03', 1, 1, '/uploads/images/gallery/2021-12/image-1640255643311.png', 'gallery', 43),
(36, 'image-1640860448659.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1640860448659.png', '2021-12-30 10:34:09', '2021-12-30 10:34:09', 1, 1, '/uploads/images/gallery/2021-12/image-1640860448659.png', 'gallery', 46),
(37, 'image-1640860536588.png', 'https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1640860536588.png', '2021-12-30 10:35:37', '2021-12-30 10:35:37', 1, 1, '/uploads/images/gallery/2021-12/image-1640860536588.png', 'gallery', 46),
(38, 'image-1641220206144.png', 'https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641220206144.png', '2022-01-03 14:30:06', '2022-01-03 14:30:06', 1, 1, '/uploads/images/gallery/2022-01/image-1641220206144.png', 'gallery', 49),
(39, 'image-1641220607380.png', 'https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641220607380.png', '2022-01-03 14:36:48', '2022-01-03 14:36:48', 1, 1, '/uploads/images/gallery/2022-01/image-1641220607380.png', 'gallery', 50),
(40, 'image-1641224912453.png', 'https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641224912453.png', '2022-01-03 15:48:32', '2022-01-03 15:48:32', 1, 1, '/uploads/images/gallery/2022-01/image-1641224912453.png', 'gallery', 51),
(41, 'image-1641816100718.png', 'https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641816100718.png', '2022-01-10 12:01:40', '2022-01-10 12:01:40', 1, 1, '/uploads/images/gallery/2022-01/image-1641816100718.png', 'gallery', 55),
(42, 'image-1641816148186.png', 'https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641816148186.png', '2022-01-10 12:02:28', '2022-01-10 12:02:28', 1, 1, '/uploads/images/gallery/2022-01/image-1641816148186.png', 'gallery', 55),
(43, 'image-1641816187301.png', 'https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641816187301.png', '2022-01-10 12:03:07', '2022-01-10 12:03:07', 1, 1, '/uploads/images/gallery/2022-01/image-1641816187301.png', 'gallery', 55),
(44, 'image-1641830556878.png', 'https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641830556878.png', '2022-01-10 16:02:37', '2022-01-10 16:02:37', 1, 1, '/uploads/images/gallery/2022-01/image-1641830556878.png', 'gallery', 59),
(45, 'image-1647966528675.png', 'https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647966528675.png', '2022-03-22 16:28:49', '2022-03-22 16:28:49', 1, 1, '/uploads/images/gallery/2022-03/image-1647966528675.png', 'gallery', 63),
(46, 'image-1647966530055.png', 'https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647966530055.png', '2022-03-22 16:28:50', '2022-03-22 16:28:50', 1, 1, '/uploads/images/gallery/2022-03/image-1647966530055.png', 'gallery', 63),
(47, 'image-1647966575255.png', 'https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647966575255.png', '2022-03-22 16:29:35', '2022-03-22 16:29:35', 1, 1, '/uploads/images/gallery/2022-03/image-1647966575255.png', 'gallery', 63),
(48, 'image-1647967309563.png', 'https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647967309563.png', '2022-03-22 16:41:49', '2022-03-22 16:41:49', 1, 1, '/uploads/images/gallery/2022-03/image-1647967309563.png', 'gallery', 64),
(49, 'image-1647967953497.png', 'https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647967953497.png', '2022-03-22 16:52:33', '2022-03-22 16:52:33', 1, 1, '/uploads/images/gallery/2022-03/image-1647967953497.png', 'gallery', 65);

-- --------------------------------------------------------

--
-- Table structure for table `joint_permissions`
--

CREATE TABLE `joint_permissions` (
  `role_id` int(11) NOT NULL,
  `entity_type` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `entity_id` int(11) NOT NULL,
  `action` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `has_permission` tinyint(1) NOT NULL DEFAULT 0,
  `has_permission_own` tinyint(1) NOT NULL DEFAULT 0,
  `owned_by` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `joint_permissions`
--

INSERT INTO `joint_permissions` (`role_id`, `entity_type`, `entity_id`, `action`, `has_permission`, `has_permission_own`, `owned_by`) VALUES
(1, 'BookStack\\Book', 1, 'chapter-create', 1, 1, 2),
(1, 'BookStack\\Book', 1, 'delete', 1, 1, 2),
(1, 'BookStack\\Book', 1, 'page-create', 1, 1, 2),
(1, 'BookStack\\Book', 1, 'update', 1, 1, 2),
(1, 'BookStack\\Book', 1, 'view', 1, 1, 2),
(1, 'BookStack\\Book', 2, 'chapter-create', 1, 1, 1),
(1, 'BookStack\\Book', 2, 'delete', 1, 1, 1),
(1, 'BookStack\\Book', 2, 'page-create', 1, 1, 1),
(1, 'BookStack\\Book', 2, 'update', 1, 1, 1),
(1, 'BookStack\\Book', 2, 'view', 1, 1, 1),
(1, 'BookStack\\Book', 3, 'chapter-create', 1, 1, 1),
(1, 'BookStack\\Book', 3, 'delete', 1, 1, 1),
(1, 'BookStack\\Book', 3, 'page-create', 1, 1, 1),
(1, 'BookStack\\Book', 3, 'update', 1, 1, 1),
(1, 'BookStack\\Book', 3, 'view', 1, 1, 1),
(1, 'BookStack\\Book', 6, 'chapter-create', 1, 1, 1),
(1, 'BookStack\\Book', 6, 'delete', 1, 1, 1),
(1, 'BookStack\\Book', 6, 'page-create', 1, 1, 1),
(1, 'BookStack\\Book', 6, 'update', 1, 1, 1),
(1, 'BookStack\\Book', 6, 'view', 1, 1, 1),
(1, 'BookStack\\Book', 7, 'chapter-create', 1, 1, 1),
(1, 'BookStack\\Book', 7, 'delete', 1, 1, 1),
(1, 'BookStack\\Book', 7, 'page-create', 1, 1, 1),
(1, 'BookStack\\Book', 7, 'update', 1, 1, 1),
(1, 'BookStack\\Book', 7, 'view', 1, 1, 1),
(1, 'BookStack\\Book', 10, 'chapter-create', 1, 1, 1),
(1, 'BookStack\\Book', 10, 'delete', 1, 1, 1),
(1, 'BookStack\\Book', 10, 'page-create', 1, 1, 1),
(1, 'BookStack\\Book', 10, 'update', 1, 1, 1),
(1, 'BookStack\\Book', 10, 'view', 1, 1, 1),
(1, 'BookStack\\Book', 11, 'chapter-create', 1, 1, 1),
(1, 'BookStack\\Book', 11, 'delete', 1, 1, 1),
(1, 'BookStack\\Book', 11, 'page-create', 1, 1, 1),
(1, 'BookStack\\Book', 11, 'update', 1, 1, 1),
(1, 'BookStack\\Book', 11, 'view', 1, 1, 1),
(1, 'BookStack\\Book', 12, 'chapter-create', 1, 1, 1),
(1, 'BookStack\\Book', 12, 'delete', 1, 1, 1),
(1, 'BookStack\\Book', 12, 'page-create', 1, 1, 1),
(1, 'BookStack\\Book', 12, 'update', 1, 1, 1),
(1, 'BookStack\\Book', 12, 'view', 1, 1, 1),
(1, 'BookStack\\Book', 13, 'chapter-create', 1, 1, 1),
(1, 'BookStack\\Book', 13, 'delete', 1, 1, 1),
(1, 'BookStack\\Book', 13, 'page-create', 1, 1, 1),
(1, 'BookStack\\Book', 13, 'update', 1, 1, 1),
(1, 'BookStack\\Book', 13, 'view', 1, 1, 1),
(1, 'BookStack\\Bookshelf', 1, 'delete', 1, 1, 1),
(1, 'BookStack\\Bookshelf', 1, 'update', 1, 1, 1),
(1, 'BookStack\\Bookshelf', 1, 'view', 1, 1, 1),
(1, 'BookStack\\Chapter', 1, 'delete', 1, 1, 1),
(1, 'BookStack\\Chapter', 1, 'page-create', 1, 1, 1),
(1, 'BookStack\\Chapter', 1, 'update', 1, 1, 1),
(1, 'BookStack\\Chapter', 1, 'view', 1, 1, 1),
(1, 'BookStack\\Chapter', 2, 'delete', 1, 1, 1),
(1, 'BookStack\\Chapter', 2, 'page-create', 1, 1, 1),
(1, 'BookStack\\Chapter', 2, 'update', 1, 1, 1),
(1, 'BookStack\\Chapter', 2, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 1, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 1, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 1, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 2, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 2, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 2, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 3, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 3, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 3, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 4, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 4, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 4, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 6, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 6, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 6, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 7, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 7, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 7, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 8, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 8, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 8, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 9, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 9, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 9, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 10, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 10, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 10, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 11, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 11, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 11, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 12, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 12, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 12, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 13, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 13, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 13, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 15, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 15, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 15, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 16, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 16, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 16, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 20, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 20, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 20, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 21, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 21, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 21, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 23, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 23, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 23, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 24, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 24, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 24, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 26, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 26, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 26, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 27, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 27, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 27, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 29, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 29, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 29, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 30, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 30, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 30, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 31, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 31, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 31, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 33, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 33, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 33, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 34, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 34, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 34, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 37, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 37, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 37, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 40, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 40, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 40, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 43, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 43, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 43, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 44, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 44, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 44, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 47, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 47, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 47, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 49, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 49, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 49, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 50, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 50, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 50, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 51, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 51, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 51, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 52, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 52, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 52, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 53, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 53, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 53, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 55, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 55, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 55, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 56, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 56, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 56, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 57, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 57, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 57, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 58, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 58, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 58, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 59, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 59, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 59, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 60, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 60, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 60, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 61, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 61, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 61, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 62, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 62, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 62, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 63, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 63, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 63, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 64, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 64, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 64, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 65, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 65, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 65, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 66, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 66, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 66, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 67, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 67, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 67, 'view', 1, 1, 1),
(1, 'BookStack\\Page', 68, 'delete', 1, 1, 1),
(1, 'BookStack\\Page', 68, 'update', 1, 1, 1),
(1, 'BookStack\\Page', 68, 'view', 1, 1, 1),
(2, 'BookStack\\Book', 1, 'chapter-create', 1, 1, 2),
(2, 'BookStack\\Book', 1, 'delete', 1, 1, 2),
(2, 'BookStack\\Book', 1, 'page-create', 1, 1, 2),
(2, 'BookStack\\Book', 1, 'update', 1, 1, 2),
(2, 'BookStack\\Book', 1, 'view', 1, 1, 2),
(2, 'BookStack\\Book', 2, 'chapter-create', 1, 1, 1),
(2, 'BookStack\\Book', 2, 'delete', 1, 1, 1),
(2, 'BookStack\\Book', 2, 'page-create', 1, 1, 1),
(2, 'BookStack\\Book', 2, 'update', 1, 1, 1),
(2, 'BookStack\\Book', 2, 'view', 1, 1, 1),
(2, 'BookStack\\Book', 3, 'chapter-create', 1, 1, 1),
(2, 'BookStack\\Book', 3, 'delete', 1, 1, 1),
(2, 'BookStack\\Book', 3, 'page-create', 1, 1, 1),
(2, 'BookStack\\Book', 3, 'update', 1, 1, 1),
(2, 'BookStack\\Book', 3, 'view', 1, 1, 1),
(2, 'BookStack\\Book', 6, 'chapter-create', 1, 1, 1),
(2, 'BookStack\\Book', 6, 'delete', 1, 1, 1),
(2, 'BookStack\\Book', 6, 'page-create', 1, 1, 1),
(2, 'BookStack\\Book', 6, 'update', 1, 1, 1),
(2, 'BookStack\\Book', 6, 'view', 1, 1, 1),
(2, 'BookStack\\Book', 7, 'chapter-create', 1, 1, 1),
(2, 'BookStack\\Book', 7, 'delete', 1, 1, 1),
(2, 'BookStack\\Book', 7, 'page-create', 1, 1, 1),
(2, 'BookStack\\Book', 7, 'update', 1, 1, 1),
(2, 'BookStack\\Book', 7, 'view', 1, 1, 1),
(2, 'BookStack\\Book', 10, 'chapter-create', 1, 1, 1),
(2, 'BookStack\\Book', 10, 'delete', 1, 1, 1),
(2, 'BookStack\\Book', 10, 'page-create', 1, 1, 1),
(2, 'BookStack\\Book', 10, 'update', 1, 1, 1),
(2, 'BookStack\\Book', 10, 'view', 1, 1, 1),
(2, 'BookStack\\Book', 11, 'chapter-create', 1, 1, 1),
(2, 'BookStack\\Book', 11, 'delete', 1, 1, 1),
(2, 'BookStack\\Book', 11, 'page-create', 1, 1, 1),
(2, 'BookStack\\Book', 11, 'update', 1, 1, 1),
(2, 'BookStack\\Book', 11, 'view', 1, 1, 1),
(2, 'BookStack\\Book', 12, 'chapter-create', 1, 1, 1),
(2, 'BookStack\\Book', 12, 'delete', 1, 1, 1),
(2, 'BookStack\\Book', 12, 'page-create', 1, 1, 1),
(2, 'BookStack\\Book', 12, 'update', 1, 1, 1),
(2, 'BookStack\\Book', 12, 'view', 1, 1, 1),
(2, 'BookStack\\Book', 13, 'chapter-create', 1, 1, 1),
(2, 'BookStack\\Book', 13, 'delete', 1, 1, 1),
(2, 'BookStack\\Book', 13, 'page-create', 1, 1, 1),
(2, 'BookStack\\Book', 13, 'update', 1, 1, 1),
(2, 'BookStack\\Book', 13, 'view', 1, 1, 1),
(2, 'BookStack\\Bookshelf', 1, 'delete', 1, 1, 1),
(2, 'BookStack\\Bookshelf', 1, 'update', 1, 1, 1),
(2, 'BookStack\\Bookshelf', 1, 'view', 1, 1, 1),
(2, 'BookStack\\Chapter', 1, 'delete', 1, 1, 1),
(2, 'BookStack\\Chapter', 1, 'page-create', 1, 1, 1),
(2, 'BookStack\\Chapter', 1, 'update', 1, 1, 1),
(2, 'BookStack\\Chapter', 1, 'view', 1, 1, 1),
(2, 'BookStack\\Chapter', 2, 'delete', 1, 1, 1),
(2, 'BookStack\\Chapter', 2, 'page-create', 1, 1, 1),
(2, 'BookStack\\Chapter', 2, 'update', 1, 1, 1),
(2, 'BookStack\\Chapter', 2, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 1, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 1, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 1, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 2, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 2, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 2, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 3, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 3, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 3, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 4, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 4, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 4, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 6, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 6, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 6, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 7, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 7, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 7, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 8, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 8, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 8, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 9, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 9, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 9, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 10, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 10, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 10, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 11, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 11, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 11, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 12, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 12, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 12, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 13, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 13, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 13, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 15, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 15, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 15, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 16, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 16, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 16, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 20, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 20, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 20, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 21, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 21, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 21, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 23, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 23, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 23, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 24, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 24, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 24, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 26, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 26, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 26, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 27, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 27, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 27, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 29, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 29, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 29, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 30, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 30, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 30, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 31, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 31, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 31, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 33, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 33, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 33, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 34, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 34, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 34, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 37, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 37, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 37, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 40, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 40, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 40, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 43, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 43, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 43, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 44, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 44, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 44, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 47, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 47, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 47, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 49, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 49, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 49, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 50, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 50, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 50, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 51, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 51, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 51, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 52, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 52, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 52, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 53, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 53, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 53, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 55, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 55, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 55, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 56, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 56, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 56, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 57, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 57, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 57, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 58, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 58, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 58, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 59, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 59, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 59, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 60, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 60, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 60, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 61, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 61, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 61, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 62, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 62, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 62, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 63, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 63, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 63, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 64, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 64, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 64, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 65, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 65, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 65, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 66, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 66, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 66, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 67, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 67, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 67, 'view', 1, 1, 1),
(2, 'BookStack\\Page', 68, 'delete', 1, 1, 1),
(2, 'BookStack\\Page', 68, 'update', 1, 1, 1),
(2, 'BookStack\\Page', 68, 'view', 1, 1, 1),
(3, 'BookStack\\Book', 1, 'chapter-create', 0, 0, 2),
(3, 'BookStack\\Book', 1, 'delete', 0, 0, 2),
(3, 'BookStack\\Book', 1, 'page-create', 0, 0, 2),
(3, 'BookStack\\Book', 1, 'update', 0, 0, 2),
(3, 'BookStack\\Book', 1, 'view', 1, 1, 2),
(3, 'BookStack\\Book', 2, 'chapter-create', 0, 0, 1),
(3, 'BookStack\\Book', 2, 'delete', 0, 0, 1),
(3, 'BookStack\\Book', 2, 'page-create', 0, 0, 1),
(3, 'BookStack\\Book', 2, 'update', 0, 0, 1),
(3, 'BookStack\\Book', 2, 'view', 1, 1, 1),
(3, 'BookStack\\Book', 3, 'chapter-create', 0, 0, 1),
(3, 'BookStack\\Book', 3, 'delete', 0, 0, 1),
(3, 'BookStack\\Book', 3, 'page-create', 0, 0, 1),
(3, 'BookStack\\Book', 3, 'update', 0, 0, 1),
(3, 'BookStack\\Book', 3, 'view', 1, 1, 1),
(3, 'BookStack\\Book', 6, 'chapter-create', 0, 0, 1),
(3, 'BookStack\\Book', 6, 'delete', 0, 0, 1),
(3, 'BookStack\\Book', 6, 'page-create', 0, 0, 1),
(3, 'BookStack\\Book', 6, 'update', 0, 0, 1),
(3, 'BookStack\\Book', 6, 'view', 0, 0, 1),
(3, 'BookStack\\Book', 7, 'chapter-create', 0, 0, 1),
(3, 'BookStack\\Book', 7, 'delete', 0, 0, 1),
(3, 'BookStack\\Book', 7, 'page-create', 0, 0, 1),
(3, 'BookStack\\Book', 7, 'update', 0, 0, 1),
(3, 'BookStack\\Book', 7, 'view', 1, 1, 1),
(3, 'BookStack\\Book', 10, 'chapter-create', 0, 0, 1),
(3, 'BookStack\\Book', 10, 'delete', 0, 0, 1),
(3, 'BookStack\\Book', 10, 'page-create', 0, 0, 1),
(3, 'BookStack\\Book', 10, 'update', 0, 0, 1),
(3, 'BookStack\\Book', 10, 'view', 1, 1, 1),
(3, 'BookStack\\Book', 11, 'chapter-create', 0, 0, 1),
(3, 'BookStack\\Book', 11, 'delete', 0, 0, 1),
(3, 'BookStack\\Book', 11, 'page-create', 0, 0, 1),
(3, 'BookStack\\Book', 11, 'update', 0, 0, 1),
(3, 'BookStack\\Book', 11, 'view', 1, 1, 1),
(3, 'BookStack\\Book', 12, 'chapter-create', 0, 0, 1),
(3, 'BookStack\\Book', 12, 'delete', 0, 0, 1),
(3, 'BookStack\\Book', 12, 'page-create', 0, 0, 1),
(3, 'BookStack\\Book', 12, 'update', 0, 0, 1),
(3, 'BookStack\\Book', 12, 'view', 1, 1, 1),
(3, 'BookStack\\Book', 13, 'chapter-create', 0, 0, 1),
(3, 'BookStack\\Book', 13, 'delete', 0, 0, 1),
(3, 'BookStack\\Book', 13, 'page-create', 0, 0, 1),
(3, 'BookStack\\Book', 13, 'update', 0, 0, 1),
(3, 'BookStack\\Book', 13, 'view', 1, 1, 1),
(3, 'BookStack\\Bookshelf', 1, 'delete', 0, 0, 1),
(3, 'BookStack\\Bookshelf', 1, 'update', 0, 0, 1),
(3, 'BookStack\\Bookshelf', 1, 'view', 1, 1, 1),
(3, 'BookStack\\Chapter', 1, 'delete', 0, 0, 1),
(3, 'BookStack\\Chapter', 1, 'page-create', 0, 0, 1),
(3, 'BookStack\\Chapter', 1, 'update', 0, 0, 1),
(3, 'BookStack\\Chapter', 1, 'view', 1, 1, 1),
(3, 'BookStack\\Chapter', 2, 'delete', 0, 0, 1),
(3, 'BookStack\\Chapter', 2, 'page-create', 0, 0, 1),
(3, 'BookStack\\Chapter', 2, 'update', 0, 0, 1),
(3, 'BookStack\\Chapter', 2, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 1, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 1, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 1, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 2, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 2, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 2, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 3, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 3, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 3, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 4, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 4, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 4, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 6, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 6, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 6, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 7, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 7, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 7, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 8, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 8, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 8, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 9, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 9, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 9, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 10, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 10, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 10, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 11, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 11, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 11, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 12, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 12, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 12, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 13, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 13, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 13, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 15, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 15, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 15, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 16, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 16, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 16, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 20, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 20, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 20, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 21, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 21, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 21, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 23, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 23, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 23, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 24, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 24, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 24, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 26, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 26, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 26, 'view', 0, 0, 1),
(3, 'BookStack\\Page', 27, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 27, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 27, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 29, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 29, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 29, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 30, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 30, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 30, 'view', 0, 0, 1),
(3, 'BookStack\\Page', 31, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 31, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 31, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 33, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 33, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 33, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 34, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 34, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 34, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 37, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 37, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 37, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 40, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 40, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 40, 'view', 0, 0, 1),
(3, 'BookStack\\Page', 43, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 43, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 43, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 44, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 44, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 44, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 47, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 47, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 47, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 49, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 49, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 49, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 50, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 50, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 50, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 51, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 51, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 51, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 52, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 52, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 52, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 53, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 53, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 53, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 55, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 55, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 55, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 56, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 56, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 56, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 57, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 57, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 57, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 58, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 58, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 58, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 59, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 59, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 59, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 60, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 60, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 60, 'view', 0, 0, 1),
(3, 'BookStack\\Page', 61, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 61, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 61, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 62, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 62, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 62, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 63, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 63, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 63, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 64, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 64, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 64, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 65, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 65, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 65, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 66, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 66, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 66, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 67, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 67, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 67, 'view', 1, 1, 1),
(3, 'BookStack\\Page', 68, 'delete', 0, 0, 1),
(3, 'BookStack\\Page', 68, 'update', 0, 0, 1),
(3, 'BookStack\\Page', 68, 'view', 1, 1, 1),
(4, 'BookStack\\Book', 1, 'chapter-create', 0, 0, 2),
(4, 'BookStack\\Book', 1, 'delete', 0, 0, 2),
(4, 'BookStack\\Book', 1, 'page-create', 0, 0, 2),
(4, 'BookStack\\Book', 1, 'update', 0, 0, 2),
(4, 'BookStack\\Book', 1, 'view', 1, 1, 2),
(4, 'BookStack\\Book', 2, 'chapter-create', 0, 0, 1),
(4, 'BookStack\\Book', 2, 'delete', 0, 0, 1),
(4, 'BookStack\\Book', 2, 'page-create', 0, 0, 1),
(4, 'BookStack\\Book', 2, 'update', 0, 0, 1),
(4, 'BookStack\\Book', 2, 'view', 1, 1, 1),
(4, 'BookStack\\Book', 3, 'chapter-create', 0, 0, 1),
(4, 'BookStack\\Book', 3, 'delete', 0, 0, 1),
(4, 'BookStack\\Book', 3, 'page-create', 0, 0, 1),
(4, 'BookStack\\Book', 3, 'update', 0, 0, 1),
(4, 'BookStack\\Book', 3, 'view', 1, 1, 1),
(4, 'BookStack\\Book', 6, 'chapter-create', 0, 0, 1),
(4, 'BookStack\\Book', 6, 'delete', 0, 0, 1),
(4, 'BookStack\\Book', 6, 'page-create', 0, 0, 1),
(4, 'BookStack\\Book', 6, 'update', 0, 0, 1),
(4, 'BookStack\\Book', 6, 'view', 0, 0, 1),
(4, 'BookStack\\Book', 7, 'chapter-create', 0, 0, 1),
(4, 'BookStack\\Book', 7, 'delete', 0, 0, 1),
(4, 'BookStack\\Book', 7, 'page-create', 0, 0, 1),
(4, 'BookStack\\Book', 7, 'update', 0, 0, 1),
(4, 'BookStack\\Book', 7, 'view', 1, 1, 1),
(4, 'BookStack\\Book', 10, 'chapter-create', 0, 0, 1),
(4, 'BookStack\\Book', 10, 'delete', 0, 0, 1),
(4, 'BookStack\\Book', 10, 'page-create', 0, 0, 1),
(4, 'BookStack\\Book', 10, 'update', 0, 0, 1),
(4, 'BookStack\\Book', 10, 'view', 1, 1, 1),
(4, 'BookStack\\Book', 11, 'chapter-create', 0, 0, 1),
(4, 'BookStack\\Book', 11, 'delete', 0, 0, 1),
(4, 'BookStack\\Book', 11, 'page-create', 0, 0, 1),
(4, 'BookStack\\Book', 11, 'update', 0, 0, 1),
(4, 'BookStack\\Book', 11, 'view', 1, 1, 1),
(4, 'BookStack\\Book', 12, 'chapter-create', 0, 0, 1),
(4, 'BookStack\\Book', 12, 'delete', 0, 0, 1),
(4, 'BookStack\\Book', 12, 'page-create', 0, 0, 1),
(4, 'BookStack\\Book', 12, 'update', 0, 0, 1),
(4, 'BookStack\\Book', 12, 'view', 1, 1, 1),
(4, 'BookStack\\Book', 13, 'chapter-create', 0, 0, 1),
(4, 'BookStack\\Book', 13, 'delete', 0, 0, 1),
(4, 'BookStack\\Book', 13, 'page-create', 0, 0, 1),
(4, 'BookStack\\Book', 13, 'update', 0, 0, 1),
(4, 'BookStack\\Book', 13, 'view', 1, 1, 1),
(4, 'BookStack\\Bookshelf', 1, 'delete', 0, 0, 1),
(4, 'BookStack\\Bookshelf', 1, 'update', 0, 0, 1),
(4, 'BookStack\\Bookshelf', 1, 'view', 1, 1, 1),
(4, 'BookStack\\Chapter', 1, 'delete', 0, 0, 1),
(4, 'BookStack\\Chapter', 1, 'page-create', 0, 0, 1),
(4, 'BookStack\\Chapter', 1, 'update', 0, 0, 1),
(4, 'BookStack\\Chapter', 1, 'view', 1, 1, 1),
(4, 'BookStack\\Chapter', 2, 'delete', 0, 0, 1),
(4, 'BookStack\\Chapter', 2, 'page-create', 0, 0, 1),
(4, 'BookStack\\Chapter', 2, 'update', 0, 0, 1),
(4, 'BookStack\\Chapter', 2, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 1, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 1, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 1, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 2, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 2, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 2, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 3, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 3, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 3, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 4, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 4, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 4, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 6, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 6, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 6, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 7, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 7, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 7, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 8, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 8, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 8, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 9, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 9, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 9, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 10, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 10, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 10, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 11, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 11, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 11, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 12, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 12, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 12, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 13, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 13, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 13, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 15, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 15, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 15, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 16, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 16, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 16, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 20, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 20, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 20, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 21, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 21, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 21, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 23, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 23, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 23, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 24, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 24, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 24, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 26, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 26, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 26, 'view', 0, 0, 1),
(4, 'BookStack\\Page', 27, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 27, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 27, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 29, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 29, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 29, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 30, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 30, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 30, 'view', 0, 0, 1),
(4, 'BookStack\\Page', 31, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 31, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 31, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 33, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 33, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 33, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 34, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 34, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 34, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 37, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 37, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 37, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 40, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 40, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 40, 'view', 0, 0, 1),
(4, 'BookStack\\Page', 43, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 43, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 43, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 44, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 44, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 44, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 47, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 47, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 47, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 49, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 49, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 49, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 50, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 50, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 50, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 51, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 51, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 51, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 52, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 52, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 52, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 53, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 53, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 53, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 55, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 55, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 55, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 56, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 56, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 56, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 57, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 57, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 57, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 58, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 58, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 58, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 59, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 59, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 59, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 60, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 60, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 60, 'view', 0, 0, 1),
(4, 'BookStack\\Page', 61, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 61, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 61, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 62, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 62, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 62, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 63, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 63, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 63, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 64, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 64, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 64, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 65, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 65, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 65, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 66, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 66, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 66, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 67, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 67, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 67, 'view', 1, 1, 1),
(4, 'BookStack\\Page', 68, 'delete', 0, 0, 1),
(4, 'BookStack\\Page', 68, 'update', 0, 0, 1),
(4, 'BookStack\\Page', 68, 'view', 1, 1, 1);

-- --------------------------------------------------------

--
-- Table structure for table `mfa_values`
--

CREATE TABLE `mfa_values` (
  `id` int(10) UNSIGNED NOT NULL,
  `user_id` int(11) NOT NULL,
  `method` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,
  `value` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `migrations`
--

CREATE TABLE `migrations` (
  `id` int(10) UNSIGNED NOT NULL,
  `migration` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `batch` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `migrations`
--

INSERT INTO `migrations` (`id`, `migration`, `batch`) VALUES
(1, '2014_10_12_000000_create_users_table', 1),
(2, '2014_10_12_100000_create_password_resets_table', 1),
(3, '2015_07_12_114933_create_books_table', 1),
(4, '2015_07_12_190027_create_pages_table', 1),
(5, '2015_07_13_172121_create_images_table', 1),
(6, '2015_07_27_172342_create_chapters_table', 1),
(7, '2015_08_08_200447_add_users_to_entities', 1),
(8, '2015_08_09_093534_create_page_revisions_table', 1),
(9, '2015_08_16_142133_create_activities_table', 1),
(10, '2015_08_29_105422_add_roles_and_permissions', 1),
(11, '2015_08_30_125859_create_settings_table', 1),
(12, '2015_08_31_175240_add_search_indexes', 1),
(13, '2015_09_04_165821_create_social_accounts_table', 1),
(14, '2015_09_05_164707_add_email_confirmation_table', 1),
(15, '2015_11_21_145609_create_views_table', 1),
(16, '2015_11_26_221857_add_entity_indexes', 1),
(17, '2015_12_05_145049_fulltext_weighting', 1),
(18, '2015_12_07_195238_add_image_upload_types', 1),
(19, '2015_12_09_195748_add_user_avatars', 1),
(20, '2016_01_11_210908_add_external_auth_to_users', 1),
(21, '2016_02_25_184030_add_slug_to_revisions', 1),
(22, '2016_02_27_120329_update_permissions_and_roles', 1),
(23, '2016_02_28_084200_add_entity_access_controls', 1),
(24, '2016_03_09_203143_add_page_revision_types', 1),
(25, '2016_03_13_082138_add_page_drafts', 1),
(26, '2016_03_25_123157_add_markdown_support', 1),
(27, '2016_04_09_100730_add_view_permissions_to_roles', 1),
(28, '2016_04_20_192649_create_joint_permissions_table', 1),
(29, '2016_05_06_185215_create_tags_table', 1),
(30, '2016_07_07_181521_add_summary_to_page_revisions', 1),
(31, '2016_09_29_101449_remove_hidden_roles', 1),
(32, '2016_10_09_142037_create_attachments_table', 1),
(33, '2017_01_21_163556_create_cache_table', 1),
(34, '2017_01_21_163602_create_sessions_table', 1),
(35, '2017_03_19_091553_create_search_index_table', 1),
(36, '2017_04_20_185112_add_revision_counts', 1),
(37, '2017_07_02_152834_update_db_encoding_to_ut8mb4', 1),
(38, '2017_08_01_130541_create_comments_table', 1),
(39, '2017_08_29_102650_add_cover_image_display', 1),
(40, '2018_07_15_173514_add_role_external_auth_id', 1),
(41, '2018_08_04_115700_create_bookshelves_table', 1),
(42, '2019_07_07_112515_add_template_support', 1),
(43, '2019_08_17_140214_add_user_invites_table', 1),
(44, '2019_12_29_120917_add_api_auth', 1),
(45, '2020_08_04_111754_drop_joint_permissions_id', 1),
(46, '2020_08_04_131052_remove_role_name_field', 1),
(47, '2020_09_19_094251_add_activity_indexes', 1),
(48, '2020_09_27_210059_add_entity_soft_deletes', 1),
(49, '2020_09_27_210528_create_deletions_table', 1),
(50, '2020_11_07_232321_simplify_activities_table', 1),
(51, '2020_12_30_173528_add_owned_by_field_to_entities', 1),
(52, '2021_01_30_225441_add_settings_type_column', 1),
(53, '2021_03_08_215138_add_user_slug', 1),
(54, '2021_05_15_173110_create_favourites_table', 1),
(55, '2021_06_30_173111_create_mfa_values_table', 1),
(56, '2021_07_03_085038_add_mfa_enforced_to_roles_table', 1),
(57, '2021_08_28_161743_add_export_role_permission', 1),
(58, '2021_09_26_044614_add_activities_ip_column', 1);

-- --------------------------------------------------------

--
-- Table structure for table `pages`
--

CREATE TABLE `pages` (
  `id` int(10) UNSIGNED NOT NULL,
  `book_id` int(11) NOT NULL,
  `chapter_id` int(11) NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `slug` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `html` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `text` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `priority` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `created_by` int(11) NOT NULL,
  `updated_by` int(11) NOT NULL,
  `restricted` tinyint(1) NOT NULL DEFAULT 0,
  `draft` tinyint(1) NOT NULL DEFAULT 0,
  `markdown` longtext COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `revision_count` int(11) NOT NULL,
  `template` tinyint(1) NOT NULL DEFAULT 0,
  `deleted_at` timestamp NULL DEFAULT NULL,
  `owned_by` int(10) UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `pages`
--

INSERT INTO `pages` (`id`, `book_id`, `chapter_id`, `name`, `slug`, `html`, `text`, `priority`, `created_at`, `updated_at`, `created_by`, `updated_by`, `restricted`, `draft`, `markdown`, `revision_count`, `template`, `deleted_at`, `owned_by`) VALUES
(1, 1, 0, 'Joins', 'joins', '<h3 id=\"bkmrk-join-types\">JOIN types</h3>\r\n<ul id=\"bkmrk-inner-join%3A-returns-\">\r\n<li id=\"bkmrk-inner-join%3A-returns--0\"><strong>INNER JOIN</strong>: returns rows when there is a match in both tables.</li>\r\n<li id=\"bkmrk-left-join%3A-returns-a\"><strong>LEFT JOIN</strong>: returns all rows from the left table, even if there are no matches in the right table.</li>\r\n<li id=\"bkmrk-right-join%3A-returns-\"><strong>RIGHT JOIN</strong>: returns all rows from the right table, even if there are no matches in the left table.</li>\r\n<li id=\"bkmrk-full-outer-join%3A-com\"><strong>FULL OUTER JOIN</strong>: combines the results of both left and right outer joins.</li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638022906583.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://wiki.lazda.io/uploads/images/gallery/2021-11/scaled-1680-/image-1638022906583.png\" alt=\"image-1638022906583.png\"></a></p>\r\n<h4 id=\"bkmrk-examples\">Examples</h4>\r\n<p id=\"bkmrk-1.-to-retrieve-all-r\">1. To retrieve all records that don\'t have a relation, I would LEFT JOIN the tables and then filter out by NULL</p>\r\n<p id=\"bkmrk--0\"><a href=\"http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638033737437.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://wiki.lazda.io/uploads/images/gallery/2021-11/scaled-1680-/image-1638033737437.png\" alt=\"image-1638033737437.png\" width=\"207\" height=\"136\"></a></p>\r\n<h3 id=\"bkmrk-joining-tables-with-\">Joining tables with ON vs WHERE</h3>\r\n<p id=\"bkmrk-joining-using-on%3A\"><strong>Joining using ON:</strong></p>\r\n<pre id=\"bkmrk-select-%2A-from-facebo\"><code class=\"language-sql\">SELECT * FROM facebook\r\nJOIN linkedin\r\nON facebook.name = linkedin.name\r\nWHERE (facebook.name = Matt OR linkedin.city = \"SF\")\r\n</code></pre>\r\n<p id=\"bkmrk-joining-using-where%3A\"><strong>Joining using WHERE:</strong></p>\r\n<pre id=\"bkmrk-select-%2A-from-facebo-0\"><code class=\"language-SQL\">SELECT * FROM facebook, linkedin\r\nWHERE facebook.name = linkedin.name\r\nAND (facebook.name = Matt OR linkedin.city = \"SF\")\r\n</code></pre>', 'JOIN types\r\n\r\nINNER JOIN: returns rows when there is a match in both tables.\r\nLEFT JOIN: returns all rows from the left table, even if there are no matches in the right table.\r\nRIGHT JOIN: returns all rows from the right table, even if there are no matches in the left table.\r\nFULL OUTER JOIN: combines the results of both left and right outer joins.\r\n\r\n\r\nExamples\r\n1. To retrieve all records that don\'t have a relation, I would LEFT JOIN the tables and then filter out by NULL\r\n\r\nJoining tables with ON vs WHERE\r\nJoining using ON:\r\nSELECT * FROM facebook\r\nJOIN linkedin\r\nON facebook.name = linkedin.name\r\nWHERE (facebook.name = Matt OR linkedin.city = \"SF\")\r\n\r\nJoining using WHERE:\r\nSELECT * FROM facebook, linkedin\r\nWHERE facebook.name = linkedin.name\r\nAND (facebook.name = Matt OR linkedin.city = \"SF\")\r\n', 2, '2021-11-27 12:20:28', '2021-11-28 15:44:54', 1, 1, 0, 0, '', 5, 0, NULL, 1),
(2, 1, 0, 'Constraints', 'constraints', '<h3 id=\"bkmrk-what-are-constraints\">What are constraints?</h3>\r\n<p id=\"bkmrk-constraints-are-used\">Constraints are used to define rules to allow or restrict what values can be stored in columns.</p>\r\n<p id=\"bkmrk-mysql-constraints-ar\">MySQL Constraints are:</p>\r\n<ul id=\"bkmrk-not-null-unique-prim\">\r\n<li><strong>NOT NULL</strong></li>\r\n<li><strong>UNIQUE</strong></li>\r\n<li><strong>PRIMARY KEY</strong></li>\r\n<li><strong>FOREIGN KEY</strong></li>\r\n<li><strong>CHECK</strong></li>\r\n<li><strong>DEFAULT</strong></li>\r\n</ul>\r\n<h3 id=\"bkmrk-what-is-a-foreign-ke\">What is a FOREIGN KEY constraint?</h3>\r\n<p id=\"bkmrk-the%C2%A0foreign-key%C2%A0cons\">The <strong>FOREIGN KEY</strong> constraint is used to prevent actions that would destroy links between tables.</p>\r\n<ul id=\"bkmrk-typically%2C-the-forei\">\r\n<li>Typically, the foreign key columns of the child table often refer to the primary key columns of the parent table.</li>\r\n<li>The data type of the foreign key that is used in the child table must be the same as the data type of the primary key that is used in the parent table to refer to the foreign key.</li>\r\n</ul>\r\n<h4 id=\"bkmrk-referential-actions\">Referential actions</h4>\r\n<ul id=\"bkmrk-cascade%C2%A0%E2%80%93-changes-pl\">\r\n<li><strong>CASCADE</strong> – Changes placed upon the parent table column are automatically reflected on the child table columns.</li>\r\n<li><strong>SET NULL</strong> – Child table columns are set to NULL for both UPDATE or DELETE operations.</li>\r\n<li><strong>RESTRICT</strong> – Rejects the DELETE or UPDATE on any child table column. If no referential action clause is specified, this is the default action.</li>\r\n</ul>', 'What are constraints?\r\nConstraints are used to define rules to allow or restrict what values can be stored in columns.\r\nMySQL Constraints are:\r\n\r\nNOT NULL\r\nUNIQUE\r\nPRIMARY KEY\r\nFOREIGN KEY\r\nCHECK\r\nDEFAULT\r\n\r\nWhat is a FOREIGN KEY constraint?\r\nThe FOREIGN KEY constraint is used to prevent actions that would destroy links between tables.\r\n\r\nTypically, the foreign key columns of the child table often refer to the primary key columns of the parent table.\r\nThe data type of the foreign key that is used in the child table must be the same as the data type of the primary key that is used in the parent table to refer to the foreign key.\r\n\r\nReferential actions\r\n\r\nCASCADE – Changes placed upon the parent table column are automatically reflected on the child table columns.\r\nSET NULL – Child table columns are set to NULL for both UPDATE or DELETE operations.\r\nRESTRICT – Rejects the DELETE or UPDATE on any child table column. If no referential action clause is specified, this is the default action.\r\n', 3, '2021-11-27 12:26:16', '2021-11-27 12:52:44', 1, 1, 0, 0, '', 2, 0, NULL, 1),
(3, 1, 0, 'Indexes', 'indexes', '<h2 id=\"bkmrk-index-types\">Index Types</h2>\r\n<p id=\"bkmrk-the-primary-key-is-a\">The primary key is always automatically indexed and unique. Indexes by default are saved in a binary tree form (<strong>B-TREE</strong>).</p>\r\n<ul id=\"bkmrk-indexes-slow-down-in\">\r\n<li>\r\n<p>Indexes slow down inserts and updates, so you want to use them carefully on columns that are FREQUENTLY updated. This is because each time a record is added or updated, all the indexes need to be updated as well.</p>\r\n</li>\r\n<li>\r\n<p>Indexes speed up where clauses and order by. Remember to think about HOW your data is going to be used when building your tables. There are a few other things to remember. If your table is very small, i.e., only a few employees, it\'s worse to use an index than to leave it out and just let it do a table scan.</p>\r\n</li>\r\n<li>\r\n<p>Indexes only come in handy with tables that have a lot of rows.</p>\r\n</li>\r\n<li>\r\n<p>Another thing to remember is that if the column is a variable length, indexes (as well as most of MySQL) perform much less efficiently.</p>\r\n</li>\r\n<li>\r\n<p>It is highly recommended to create an index on the foreign key columns, to enhance the performance of the joins between the primary and foreign keys, and also reduce the cost of maintaining the relationship between the child and parent tables.</p>\r\n</li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638023951865.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://wiki.lazda.io/uploads/images/gallery/2021-11/scaled-1680-/image-1638023951865.png\" alt=\"image-1638023951865.png\" width=\"532\" height=\"443\"></a></p>\r\n<p id=\"bkmrk-full-text-%28fulltext%29\">Full-text (<strong>FULLTEXT</strong>) indexes are created on text-based columns ( CHAR, VARCHAR, or TEXT columns) to speed up queries and data manipulation operations on data contained within those columns.</p>\r\n<ul id=\"bkmrk-they-split-the-text-\">\r\n<li>They split the text into words and make an index over the words and not the whole text. This works a lot faster for text searches when looking for specific words.</li>\r\n</ul>\r\n<p id=\"bkmrk-descending-index-%28de\">Descending index (<strong>DESC</strong>) causes storage of key values in descending order. Previously, indexes could be scanned in reverse order but at a performance penalty. A descending index can be scanned in forward order, which is more efficient.</p>\r\n<ul id=\"bkmrk-it%E2%80%99s-helpful-when-yo\">\r\n<li>It’s helpful when you run queries for the most recently added data like you might show your five most recent posts or the ten most recent comments on all your posts.</li>\r\n</ul>\r\n<h2 id=\"bkmrk-composite-indexes\">Composite indexes</h2>\r\n<p id=\"bkmrk-composite-indexes-wo\"><strong>Composite indexes</strong> work just like regular indexes, except they have multi-values keys. If you define an index on the fields (a,b,c), the records are sorted first on a, then b, then c.</p>\r\n<pre id=\"bkmrk-%7C-a-%7C-b-%7C-c-%7C-------\"><code class=\"language-\">| A | B | C |\r\n-------------\r\n| 1 | 2 | 3 |\r\n| 1 | 4 | 2 |\r\n| 1 | 4 | 4 |\r\n| 2 | 3 | 5 |\r\n| 2 | 4 | 4 |\r\n| 2 | 4 | 5 |</code></pre>\r\n<ul id=\"bkmrk-if-certain-fields-te\">\r\n<li>If certain fields tend to appear together in queries, then it’s a good idea to create a <strong>composite index</strong> on them.</li>\r\n<li>If we’re going to create an index on <code>field1</code> but also create a composite index on <code>(field1, field2)</code>, then creating just the <strong>composite index</strong> on <code>(field1, field2)</code> is enough since it can be used for querying by <code>field1</code> alone.</li>\r\n</ul>\r\n<h2 id=\"bkmrk-examples\">Examples</h2>\r\n<p id=\"bkmrk-1.-it-is-possible-to\">1. It is possible to pass an integer argument to specify how many characters of the string it should index. Here we are specifying to create an index on the first three characters for the products SKU:</p>\r\n<pre id=\"bkmrk-create-index-idx_sku\"><code class=\"language-SQL\">CREATE INDEX idx_sku_three ON products (products_sku(3))</code></pre>\r\n<p id=\"bkmrk-2.-if-we-create-an-i\">2. If we create an index on <code>users.first_name</code> it would create a sorting of the <code>users</code> by their <code>first_name</code> with a pointer to their primary key, something like this would take only <code>O(log_2(n))</code> reads since the database can perform a binary search on this index since it is sorted by <code>first_name</code></p>\r\n<pre id=\"bkmrk-id-%7C-first_name-%7C-la\"><code class=\"language-\">ID | first_name | last_name    | class      | position |\r\n--------------------------------------------------------\r\n 1 | Teemo      | Shroomer     | Specialist | Top      |\r\n 2 | Cecil      | Heimerdinger | Specialist | Mid      |\r\n 3 | Annie      | Hastur       | Mage       | Mid      |\r\n 4 | Fiora      | Laurent      | Slayer     | Top      |\r\n 5 | Garen      | Crownguard   | Fighter    | Top      |\r\n 6 | Malcolm    | Graves       | Specialist | ADC      |\r\n 7 | Irelia     | Lito         | Figher     | Top      |\r\n 8 | Janna      | Windforce    | Controller | Support  |\r\n 9 | Jarvan     | Lightshield  | Figher     | Top      |\r\n10 | Katarina   | DuCouteau    | Assassin   | Mid      |\r\n11 | Kayle      | Hex          | Specialist | Top      |\r\n12 | Emilia     | LeBlanc      | Mage       | Mid      |\r\n13 | Lee        | Sin          | Fighter    | Jungle   |\r\n14 | Lux        | Crownguard   | Mage       | Mid      |\r\n15 | Sarah      | Fortune      | Marksman   | ADC      |\r\n16 | Morgana    | Hex          | Controller | Support  |\r\n17 | Orianna    | Reveck       | Mage       | Mid      |\r\n18 | Sona       | Buvelle      | Controller | Support  |\r\n19 | Jericho    | Swain        | Mage       | Mid      |\r\n20 | Shauna     | Vayne        | Marksman   | ADC      |\r\n21 | Xin        | Zhao         | Fighter    | Jungle   |\r\n22 | Yorick     | Mori         | Tank       | Top      |\r\n23 | Wu         | Kong         | Fighter    | Jungle   |</code></pre>\r\n<pre id=\"bkmrk-create-index-first_n\"><code class=\"language-SQL\">CREATE INDEX first_name_index ON users (first_name) USING BTREE;</code></pre>\r\n<pre id=\"bkmrk-annie--%3E-3-cecil--%3E-\"><code class=\"language-\">Annie    -&gt; 3\r\nCecil    -&gt; 2\r\nEmilia   -&gt; 12\r\nFiora    -&gt; 4\r\nGaren    -&gt; 5\r\nIrelia   -&gt; 7\r\nJanna    -&gt; 8\r\nJarvan   -&gt; 9\r\nJericho  -&gt; 19\r\nKatarina -&gt; 10\r\nKayle    -&gt; 11\r\nLee      -&gt; 13\r\nLux      -&gt; 14\r\nMalcolm  -&gt; 6\r\nMorgana  -&gt; 16\r\nOrianna  -&gt; 17\r\nSarah    -&gt; 15\r\nShauna   -&gt; 20\r\nSona     -&gt; 18\r\nTeemo    -&gt; 1\r\nWu       -&gt; 23\r\nXin      -&gt; 21\r\nYorick   -&gt; 22</code></pre>\r\n<p id=\"bkmrk-2%2Clike-a-single-inde\">3.Like a single index, a composite index is also a data structure of records sorted on something. But unlike a single index, that something is not a field, but a concatenation of multiple fields.</p>\r\n<p id=\"bkmrk-if-we-then-would-try\">If we then would try to search by <code>class</code> and <code>position</code>, our query will have improved retrieval time, because the <strong>composite index</strong> is sorted by <code>class position</code>. The database can find <code>SpecialistTop</code> in <code>O(log_2(n))</code> reads rather than a full table read.</p>\r\n<p id=\"bkmrk-note-that-even-a-que\">Note that even a query on just the <code>class</code> field will benefit from this composite index since the <code>class</code> is the first field. Searching the index that is sorted by <code>class</code> is more or less equivalent to searching a composite index sorted by <code>class-position</code>.</p>\r\n<p id=\"bkmrk-however%2C-searching-b\">However, searching by <code>position</code> will NOT benefit from this composite index because the <code>position</code> is the second field. A composite index sorted by <code>class-position</code> cannot be used to quickly find a record by <code>position</code>.</p>\r\n<pre id=\"bkmrk-create-index-class_p\"><code class=\"language-SQL\">CREATE INDEX class_pos_index ON users (class, position);</code></pre>\r\n<pre id=\"bkmrk-class-position-prima\"><code class=\"language-\">class-position       Primary Key\r\n--------------------------------\r\nAssassinMid       -&gt; 10\r\nControllerSupport -&gt; 16\r\nControllerSupport -&gt; 18\r\nControllerSupport -&gt; 8\r\nFigherTop         -&gt; 7\r\nFigherTop         -&gt; 9\r\nFighterJungle     -&gt; 13\r\nFighterJungle     -&gt; 21\r\nFighterJungle     -&gt; 23\r\nFighterTop        -&gt; 5\r\nMageMid           -&gt; 12\r\nMageMid           -&gt; 14\r\nMageMid           -&gt; 17\r\nMageMid           -&gt; 19\r\nMageMid           -&gt; 3\r\nMarksmanADC       -&gt; 15\r\nMarksmanADC       -&gt; 20\r\nSlayerTop         -&gt; 4\r\nSpecialistADC     -&gt; 6\r\nSpecialistMid     -&gt; 2\r\nSpecialistTop     -&gt; 1\r\nSpecialistTop     -&gt; 11\r\nTankTop           -&gt; 22</code></pre>', 'Index Types\r\nThe primary key is always automatically indexed and unique. Indexes by default are saved in a binary tree form (B-TREE).\r\n\r\n\r\nIndexes slow down inserts and updates, so you want to use them carefully on columns that are FREQUENTLY updated. This is because each time a record is added or updated, all the indexes need to be updated as well.\r\n\r\n\r\nIndexes speed up where clauses and order by. Remember to think about HOW your data is going to be used when building your tables. There are a few other things to remember. If your table is very small, i.e., only a few employees, it\'s worse to use an index than to leave it out and just let it do a table scan.\r\n\r\n\r\nIndexes only come in handy with tables that have a lot of rows.\r\n\r\n\r\nAnother thing to remember is that if the column is a variable length, indexes (as well as most of MySQL) perform much less efficiently.\r\n\r\n\r\nIt is highly recommended to create an index on the foreign key columns, to enhance the performance of the joins between the primary and foreign keys, and also reduce the cost of maintaining the relationship between the child and parent tables.\r\n\r\n\r\n\r\nFull-text (FULLTEXT) indexes are created on text-based columns ( CHAR, VARCHAR, or TEXT columns) to speed up queries and data manipulation operations on data contained within those columns.\r\n\r\nThey split the text into words and make an index over the words and not the whole text. This works a lot faster for text searches when looking for specific words.\r\n\r\nDescending index (DESC) causes storage of key values in descending order. Previously, indexes could be scanned in reverse order but at a performance penalty. A descending index can be scanned in forward order, which is more efficient.\r\n\r\nIt’s helpful when you run queries for the most recently added data like you might show your five most recent posts or the ten most recent comments on all your posts.\r\n\r\nComposite indexes\r\nComposite indexes work just like regular indexes, except they have multi-values keys. If you define an index on the fields (a,b,c), the records are sorted first on a, then b, then c.\r\n| A | B | C |\r\n-------------\r\n| 1 | 2 | 3 |\r\n| 1 | 4 | 2 |\r\n| 1 | 4 | 4 |\r\n| 2 | 3 | 5 |\r\n| 2 | 4 | 4 |\r\n| 2 | 4 | 5 |\r\n\r\nIf certain fields tend to appear together in queries, then it’s a good idea to create a composite index on them.\r\nIf we’re going to create an index on field1 but also create a composite index on (field1, field2), then creating just the composite index on (field1, field2) is enough since it can be used for querying by field1 alone.\r\n\r\nExamples\r\n1. It is possible to pass an integer argument to specify how many characters of the string it should index. Here we are specifying to create an index on the first three characters for the products SKU:\r\nCREATE INDEX idx_sku_three ON products (products_sku(3))\r\n2. If we create an index on users.first_name it would create a sorting of the users by their first_name with a pointer to their primary key, something like this would take only O(log_2(n)) reads since the database can perform a binary search on this index since it is sorted by first_name\r\nID | first_name | last_name    | class      | position |\r\n--------------------------------------------------------\r\n 1 | Teemo      | Shroomer     | Specialist | Top      |\r\n 2 | Cecil      | Heimerdinger | Specialist | Mid      |\r\n 3 | Annie      | Hastur       | Mage       | Mid      |\r\n 4 | Fiora      | Laurent      | Slayer     | Top      |\r\n 5 | Garen      | Crownguard   | Fighter    | Top      |\r\n 6 | Malcolm    | Graves       | Specialist | ADC      |\r\n 7 | Irelia     | Lito         | Figher     | Top      |\r\n 8 | Janna      | Windforce    | Controller | Support  |\r\n 9 | Jarvan     | Lightshield  | Figher     | Top      |\r\n10 | Katarina   | DuCouteau    | Assassin   | Mid      |\r\n11 | Kayle      | Hex          | Specialist | Top      |\r\n12 | Emilia     | LeBlanc      | Mage       | Mid      |\r\n13 | Lee        | Sin          | Fighter    | Jungle   |\r\n14 | Lux        | Crownguard   | Mage       | Mid      |\r\n15 | Sarah      | Fortune      | Marksman   | ADC      |\r\n16 | Morgana    | Hex          | Controller | Support  |\r\n17 | Orianna    | Reveck       | Mage       | Mid      |\r\n18 | Sona       | Buvelle      | Controller | Support  |\r\n19 | Jericho    | Swain        | Mage       | Mid      |\r\n20 | Shauna     | Vayne        | Marksman   | ADC      |\r\n21 | Xin        | Zhao         | Fighter    | Jungle   |\r\n22 | Yorick     | Mori         | Tank       | Top      |\r\n23 | Wu         | Kong         | Fighter    | Jungle   |\r\nCREATE INDEX first_name_index ON users (first_name) USING BTREE;\r\nAnnie    -> 3\r\nCecil    -> 2\r\nEmilia   -> 12\r\nFiora    -> 4\r\nGaren    -> 5\r\nIrelia   -> 7\r\nJanna    -> 8\r\nJarvan   -> 9\r\nJericho  -> 19\r\nKatarina -> 10\r\nKayle    -> 11\r\nLee      -> 13\r\nLux      -> 14\r\nMalcolm  -> 6\r\nMorgana  -> 16\r\nOrianna  -> 17\r\nSarah    -> 15\r\nShauna   -> 20\r\nSona     -> 18\r\nTeemo    -> 1\r\nWu       -> 23\r\nXin      -> 21\r\nYorick   -> 22\r\n3.Like a single index, a composite index is also a data structure of records sorted on something. But unlike a single index, that something is not a field, but a concatenation of multiple fields.\r\nIf we then would try to search by class and position, our query will have improved retrieval time, because the composite index is sorted by class position. The database can find SpecialistTop in O(log_2(n)) reads rather than a full table read.\r\nNote that even a query on just the class field will benefit from this composite index since the class is the first field. Searching the index that is sorted by class is more or less equivalent to searching a composite index sorted by class-position.\r\nHowever, searching by position will NOT benefit from this composite index because the position is the second field. A composite index sorted by class-position cannot be used to quickly find a record by position.\r\nCREATE INDEX class_pos_index ON users (class, position);\r\nclass-position       Primary Key\r\n--------------------------------\r\nAssassinMid       -> 10\r\nControllerSupport -> 16\r\nControllerSupport -> 18\r\nControllerSupport -> 8\r\nFigherTop         -> 7\r\nFigherTop         -> 9\r\nFighterJungle     -> 13\r\nFighterJungle     -> 21\r\nFighterJungle     -> 23\r\nFighterTop        -> 5\r\nMageMid           -> 12\r\nMageMid           -> 14\r\nMageMid           -> 17\r\nMageMid           -> 19\r\nMageMid           -> 3\r\nMarksmanADC       -> 15\r\nMarksmanADC       -> 20\r\nSlayerTop         -> 4\r\nSpecialistADC     -> 6\r\nSpecialistMid     -> 2\r\nSpecialistTop     -> 1\r\nSpecialistTop     -> 11\r\nTankTop           -> 22', 4, '2021-11-27 12:28:13', '2021-11-28 15:44:54', 1, 1, 0, 0, '', 6, 0, NULL, 1),
(4, 1, 0, 'Wildcards', 'wildcards', '<h3 id=\"bkmrk-what-are-wildcards%3F\">What are Wildcards?</h3>\r\n<p id=\"bkmrk-mysql-provides-two-w\">MySQL provides two wildcard characters for constructing patterns: percentage <code>%</code> and the underscore <code>_</code>.</p>\r\n<ul id=\"bkmrk-the-percentage-%28%C2%A0%25%C2%A0%29\">\r\n<li>The percentage ( <code>%</code> ) wildcard matches any string of zero or more characters.</li>\r\n<li>The underscore ( <code>_</code> ) wildcard matches any single character.</li>\r\n</ul>\r\n<p id=\"bkmrk-examples\"><strong>Examples</strong></p>\r\n<ol id=\"bkmrk-to-find-employees-wh\">\r\n<li>To find employees whose first names start with the letter <code>T</code> , end with the letter <code>m</code>, and contain any single character between e.g., <code>Tom</code>, <code>Tim</code>, you use the underscore (_) wildcard to construct the pattern as follows:</li>\r\n</ol>\r\n<pre id=\"bkmrk-select-employeenumbe\"><code class=\"language-sql\">SELECT \r\n    employeeNumber, \r\n    lastName, \r\n    firstName\r\nFROM\r\n    employees\r\nWHERE\r\n    firstname LIKE \'T_m\';</code></pre>\r\n<ol id=\"bkmrk-to-find-employees-wh-0\">\r\n<li>To find employees whose name can start with any letter and any length, but whose last names end with the literal string <code>on</code> e.g., <code>Patterson</code>, <code>Thompson</code>, you use the underscore (%) wildcard to construct the pattern as follows:</li>\r\n</ol>\r\n<pre id=\"bkmrk-select-employeenumbe-0\"><code class=\"language-sql\">SELECT \r\n    employeeNumber, \r\n    lastName, \r\n    firstName\r\nFROM\r\n    employees\r\nWHERE\r\n    lastName LIKE \'%on\';</code></pre>', 'What are Wildcards?\r\nMySQL provides two wildcard characters for constructing patterns: percentage % and the underscore _.\r\n\r\nThe percentage ( % ) wildcard matches any string of zero or more characters.\r\nThe underscore ( _ ) wildcard matches any single character.\r\n\r\nExamples\r\n\r\nTo find employees whose first names start with the letter T , end with the letter m, and contain any single character between e.g., Tom, Tim, you use the underscore (_) wildcard to construct the pattern as follows:\r\n\r\nSELECT \r\n    employeeNumber, \r\n    lastName, \r\n    firstName\r\nFROM\r\n    employees\r\nWHERE\r\n    firstname LIKE \'T_m\';\r\n\r\nTo find employees whose name can start with any letter and any length, but whose last names end with the literal string on e.g., Patterson, Thompson, you use the underscore (%) wildcard to construct the pattern as follows:\r\n\r\nSELECT \r\n    employeeNumber, \r\n    lastName, \r\n    firstName\r\nFROM\r\n    employees\r\nWHERE\r\n    lastName LIKE \'%on\';', 5, '2021-11-27 13:28:32', '2021-11-27 13:29:14', 1, 1, 0, 0, '', 2, 0, NULL, 1),
(6, 2, 0, 'File Permissions', 'file-permissions', '<h3 id=\"bkmrk-how-do-file-permissi\">How do File Permissions work?</h3>\r\n<p id=\"bkmrk-each-file-and-direct\">Each file and directory has three user based permission groups.</p>\r\n<ul id=\"bkmrk-owner%C2%A0%E2%80%93-the-owner-pe\">\r\n<li><strong>owner</strong> – The Owner permissions apply only the owner of the file or directory, they will not impact the actions of other users.</li>\r\n<li><strong>group</strong> – The Group permissions apply only to the group that has been assigned to the file or directory, they will not effect the actions of other users.</li>\r\n<li><strong>all users</strong> – The All Users permissions apply to all other users on the system, this is the permission group that you want to watch the most.</li>\r\n</ul>\r\n<p id=\"bkmrk-each-file-or-directo\">Each file or directory has three basic permission types.</p>\r\n<ul id=\"bkmrk-read%C2%A0%E2%80%93-the-read-perm\">\r\n<li><strong>read</strong> – The Read permission refers to a user’s capability to read the contents of the file.</li>\r\n<li><strong>write</strong> – The Write permissions refer to a user’s capability to write or modify a file or directory.</li>\r\n<li><strong>execute</strong> – The Execute permission affects a user’s capability to execute a file or view the contents of a directory.</li>\r\n</ul>\r\n<ul id=\"bkmrk-%C2%A0\">\r\n<li style=\"list-style-type: none;\"> </li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638043801377.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://wiki.lazda.io/uploads/images/gallery/2021-11/scaled-1680-/image-1638043801377.png\" alt=\"image-1638043801377.png\"></a></p>\r\n<h4 id=\"bkmrk-commands\">Commands</h4>\r\n<ul id=\"bkmrk-chmod---change-permi\">\r\n<li><strong>chmod</strong> - Change permissions of file.\r\n<ul>\r\n<li><strong>chmod +x <em>file</em></strong> - Execution permissions for all.</li>\r\n<li><strong>chmod 111 <em>file</em></strong> - Execution permissions for all.</li>\r\n<li><strong>chmod 744 <em>file</em></strong> - Read permissions for all, but only owner can execute.</li>\r\n<li><strong>chmod 777 <em>file</em></strong> - Read, write, execute permissions for all.</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<ul id=\"bkmrk-groups-owner---lists\">\r\n<li><strong>groups <em>owner</em></strong> - Lists all groups owner is part of.</li>\r\n<li><strong>members <em>group</em></strong> - Lists all members of a group.</li>\r\n<li><strong>chown <em>owner:group</em>, <em>file/directory</em></strong> - Change group or owner of file or directory.</li>\r\n</ul>', 'How do File Permissions work?\r\nEach file and directory has three user based permission groups.\r\n\r\nowner – The Owner permissions apply only the owner of the file or directory, they will not impact the actions of other users.\r\ngroup – The Group permissions apply only to the group that has been assigned to the file or directory, they will not effect the actions of other users.\r\nall users – The All Users permissions apply to all other users on the system, this is the permission group that you want to watch the most.\r\n\r\nEach file or directory has three basic permission types.\r\n\r\nread – The Read permission refers to a user’s capability to read the contents of the file.\r\nwrite – The Write permissions refer to a user’s capability to write or modify a file or directory.\r\nexecute – The Execute permission affects a user’s capability to execute a file or view the contents of a directory.\r\n\r\n\r\n \r\n\r\n\r\nCommands\r\n\r\nchmod - Change permissions of file.\r\n\r\nchmod +x file - Execution permissions for all.\r\nchmod 111 file - Execution permissions for all.\r\nchmod 744 file - Read permissions for all, but only owner can execute.\r\nchmod 777 file - Read, write, execute permissions for all.\r\n\r\n\r\n\r\n\r\ngroups owner - Lists all groups owner is part of.\r\nmembers group - Lists all members of a group.\r\nchown owner:group, file/directory - Change group or owner of file or directory.\r\n', 0, '2021-11-27 18:07:55', '2021-12-13 19:08:52', 1, 1, 0, 0, '', 3, 0, NULL, 1),
(7, 2, 0, 'Archiving and Compression', 'archiving-and-compression', '<h3 id=\"bkmrk-what-are-archives%3F\">What are Archives?</h3>\r\n<p id=\"bkmrk-archiving-is-the-pro\"><strong>Archiving</strong> is the process of collecting and storing a group of files and directories into one file. The <code>tar</code> utility performs this action and the files are with <code>tar</code> extension.</p>\r\n<p id=\"bkmrk-commands%3A\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-tar--cf-destination_\">\r\n<li><strong>tar -cf <em>destination_file.tar</em> <em>file_1.*</em> <em>file_2.*... </em></strong><em>- Archive files.</em></li>\r\n<li><strong>tar -xf <em>file.tar</em></strong> - Extract files.</li>\r\n</ul>\r\n<h3 id=\"bkmrk-what-is-compression%3F\">What is Compression?</h3>\r\n<p id=\"bkmrk-compression-%2A%2A%2A%2Ais-t\"><strong>Compression</strong> is the act of shrinking the size of a file, which is quite useful in sending large files over the internet. The <code>gzip</code> utility performs this action and the files are with <code>gz</code> extension.</p>\r\n<p id=\"bkmrk-commands%3A-0\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-du--h-%7B%24file_name%7D--\">\r\n<li><strong>du -h <em>file</em></strong> - List file disk usage.</li>\r\n<li><strong>gzip <em>file</em></strong> - Compresses file.</li>\r\n<li><strong>gunzip <em>file</em></strong> - Un-compresses file.</li>\r\n</ul>', 'What are Archives?\r\nArchiving is the process of collecting and storing a group of files and directories into one file. The tar utility performs this action and the files are with tar extension.\r\nCommands:\r\n\r\ntar -cf destination_file.tar file_1.* file_2.*... - Archive files.\r\ntar -xf file.tar - Extract files.\r\n\r\nWhat is Compression?\r\nCompression is the act of shrinking the size of a file, which is quite useful in sending large files over the internet. The gzip utility performs this action and the files are with gz extension.\r\nCommands:\r\n\r\ndu -h file - List file disk usage.\r\ngzip file - Compresses file.\r\ngunzip file - Un-compresses file.\r\n', 1, '2021-11-27 18:19:32', '2021-12-13 19:08:52', 1, 1, 0, 0, '', 5, 0, NULL, 1),
(8, 2, 0, 'Device Files', 'device-files', '<h3 id=\"bkmrk-what-are-device-file\">What are Device Files?</h3>\r\n<p id=\"bkmrk-in-linux-various-spe\">In Linux various special files can be found under the <strong><code>/dev</code></strong> directory. These files are called device files and behave unlike ordinary files. Two standard types of device files exist.</p>\r\n<ul id=\"bkmrk-character-devices-ar\">\r\n<li>\r\n<p><strong>Character devices</strong> are devices where that communicate by sending and receiving single characters or bytes.</p>\r\n<ul>\r\n<li><strong><code>/dev/null</code></strong>,<strong><code>/dev/urandom</code></strong>, <strong><code>/dev/zero</code></strong> etc. These are called <strong>pseudo devices.</strong></li>\r\n<li>Sound cards</li>\r\n<li>Serial ports</li>\r\n<li>Parallel ports</li>\r\n</ul>\r\n</li>\r\n<li>\r\n<p><strong>Block devices</strong> are devices where that communicate by sending entire blocks of data.</p>\r\n<ul>\r\n<li>Hard drives</li>\r\n<li>CD-ROM drives</li>\r\n<li>RAM disks</li>\r\n<li>USB cameras</li>\r\n</ul>\r\n<h3 id=\"bkmrk-how-are-device-disks-0\">How are Device Disks grouped?</h3>\r\n<p>Disk names in Linux are alphabetical. <strong><code>/dev/sda</code></strong> is the first hard drive, usually the primary one, <strong><code>/dev/sdb</code></strong> is the second etc. The numbers refer to partitions, so <strong><code>/dev/sda1</code></strong> is the first partition of the first drive. Storage devices are prefixed with <strong><code>sd</code></strong> because they are <strong>SCSI devices</strong>.</p>\r\n<p><strong>Commands:</strong></p>\r\n<ul>\r\n<li><strong>df -h</strong> - Lists all the mounted partitions.</li>\r\n<li><strong>lsblk</strong> - Lists all block devices.</li>\r\n<li><strong>lsusb</strong> - Lists all USB devices.</li>\r\n<li><strong>lspci</strong> - Lists all PCI Devices.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'What are Device Files?\r\nIn Linux various special files can be found under the /dev directory. These files are called device files and behave unlike ordinary files. Two standard types of device files exist.\r\n\r\n\r\nCharacter devices are devices where that communicate by sending and receiving single characters or bytes.\r\n\r\n/dev/null,/dev/urandom, /dev/zero etc. These are called pseudo devices.\r\nSound cards\r\nSerial ports\r\nParallel ports\r\n\r\n\r\n\r\nBlock devices are devices where that communicate by sending entire blocks of data.\r\n\r\nHard drives\r\nCD-ROM drives\r\nRAM disks\r\nUSB cameras\r\n\r\nHow are Device Disks grouped?\r\nDisk names in Linux are alphabetical. /dev/sda is the first hard drive, usually the primary one, /dev/sdb is the second etc. The numbers refer to partitions, so /dev/sda1 is the first partition of the first drive. Storage devices are prefixed with sd because they are SCSI devices.\r\nCommands:\r\n\r\ndf -h - Lists all the mounted partitions.\r\nlsblk - Lists all block devices.\r\nlsusb - Lists all USB devices.\r\nlspci - Lists all PCI Devices.\r\n\r\n\r\n', 2, '2021-11-27 18:26:49', '2021-12-13 19:08:52', 1, 1, 0, 0, '', 1, 0, NULL, 1),
(9, 2, 0, 'DD Utility', 'dd-utility', '<h3 id=\"bkmrk-how-to-use-the-dd-co\">What is DD command used for?</h3>\r\n<p id=\"bkmrk-dd-is-a-very-powerfu\">Dd is a very powerful and useful utility available on Unix and Unix-like operating systems. As stated in its manual, its purpose is to convert and copy files. On Unix and Unix-like operating systems like Linux, almost everything is treated as a file, even block devices: this makes dd useful, among the other things, to clone disks or wipe data.</p>\r\n<p id=\"bkmrk-commands%3A\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-dd---convert-and-cop\">\r\n<li><strong>dd</strong> - Convert and copy files.\r\n<ul>\r\n<li><strong>-bs</strong> - Block size, default is 512 KB, <strong>-count</strong> - Number of blocks to be copied, <strong>-if -of -</strong> Input/output file.</li>\r\n<li><strong>dd if=/dev/sda | gzip -c -9 &gt; sda.dd.gz</strong> - Make a copy of drive A and compress it.</li>\r\n<li><strong>dd if=/dev/zero of=~/howtogeek.img bs=1M count=250</strong> - Create an empty 250MB image file.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'What is DD command used for?\r\nDd is a very powerful and useful utility available on Unix and Unix-like operating systems. As stated in its manual, its purpose is to convert and copy files. On Unix and Unix-like operating systems like Linux, almost everything is treated as a file, even block devices: this makes dd useful, among the other things, to clone disks or wipe data.\r\nCommands:\r\n\r\ndd - Convert and copy files.\r\n\r\n-bs - Block size, default is 512 KB, -count - Number of blocks to be copied, -if -of - Input/output file.\r\ndd if=/dev/sda | gzip -c -9 > sda.dd.gz - Make a copy of drive A and compress it.\r\ndd if=/dev/zero of=~/howtogeek.img bs=1M count=250 - Create an empty 250MB image file.\r\n\r\n\r\n', 3, '2021-11-27 18:28:47', '2021-12-13 19:08:52', 1, 1, 0, 0, '', 2, 0, NULL, 1),
(10, 2, 0, 'Disk Partitioning', 'disk-partitioning', '<h3 id=\"bkmrk-what-is-disk-partiti\">What is Disk Partitioning?</h3>\r\n<p id=\"bkmrk-disk-partitioning-is\">Disk partitioning is splitting a drive into logical drives or volumes. Each volume on a partitioned disk has its own drive letter and folder structure and also can be formatted with different file systems without affecting other partitions. It is possible to set up hidden partition with no drive letter. When creating a partition, partition table has to be specified. Each drive can have only 1 partition table.</p>\r\n<h4 id=\"bkmrk-which-partition-tabl\">Which partition table should I use?</h4>\r\n<ul id=\"bkmrk-mbr-if-the-motherboa\">\r\n<li><strong>MBR</strong>\r\n<ul>\r\n<li>If the motherboard uses legacy BIOS</li>\r\n</ul>\r\n</li>\r\n<li><strong>GPT</strong>\r\n<ul>\r\n<li>If the drive capacity exceeds 2 TB</li>\r\n<li>If the motherboard supports UEFI</li>\r\n<li>If the drive will have more than 4 partitions</li>\r\n</ul>\r\n</li>\r\n</ul>', 'What is Disk Partitioning?\r\nDisk partitioning is splitting a drive into logical drives or volumes. Each volume on a partitioned disk has its own drive letter and folder structure and also can be formatted with different file systems without affecting other partitions. It is possible to set up hidden partition with no drive letter. When creating a partition, partition table has to be specified. Each drive can have only 1 partition table.\r\nWhich partition table should I use?\r\n\r\nMBR\r\n\r\nIf the motherboard uses legacy BIOS\r\n\r\n\r\nGPT\r\n\r\nIf the drive capacity exceeds 2 TB\r\nIf the motherboard supports UEFI\r\nIf the drive will have more than 4 partitions\r\n\r\n\r\n', 4, '2021-11-27 18:30:59', '2021-12-13 19:08:52', 1, 1, 0, 0, '', 1, 0, NULL, 1),
(11, 2, 0, 'File Systems', 'file-systems', '<h2 id=\"bkmrk-what-are-file-system\">What are File Systems?</h2>\r\n<p id=\"bkmrk-file-system-is-the-w\">File system is the way storage space on a drive is split. Without it we wouldn\'t have any way to know where file one file ends and other one starts. An <strong>inode</strong> is a data structure that describes a file and each file has one. Each file system has an <strong>inode table</strong> which stores <strong>inodes</strong>.</p>\r\n<p id=\"bkmrk-\"><a href=\"http://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638045208973.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://wiki.lazda.io/uploads/images/gallery/2021-11/scaled-1680-/image-1638045208973.png\" alt=\"image-1638045208973.png\" width=\"317\" height=\"222\"></a></p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<h4 id=\"bkmrk-what-data-do-inodes-\">What data do inodes contain?</h4>\r\n<ul id=\"bkmrk-unique-index-file-si\">\r\n<li>Unique index</li>\r\n<li>File size</li>\r\n<li>Permissions</li>\r\n<li>Location of the data</li>\r\n<li>Creation read, write timestamps</li>\r\n</ul>\r\n<h4 id=\"bkmrk-which-file-system-sh\">Which file system should I use for my system drive?</h4>\r\n<ul id=\"bkmrk-nfts-suitable-for-wi\">\r\n<li><strong>NFTS</strong>\r\n<ul>\r\n<li>Suitable for Windows</li>\r\n</ul>\r\n</li>\r\n<li><strong>ext4</strong>\r\n<ul>\r\n<li>Suitable for Linux</li>\r\n</ul>\r\n</li>\r\n<li><strong>HFS+/APFS</strong>\r\n<ul>\r\n<li>Suitable for MacOS</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<h4 id=\"bkmrk-which-file-system-sh-0\">Which file system should I use for my secondary drives?</h4>\r\n<ul id=\"bkmrk-nfts-suitable-for-wi-0\">\r\n<li><strong>NFTS</strong>\r\n<ul>\r\n<li>Suitable for Windows</li>\r\n</ul>\r\n</li>\r\n<li><strong>exFat</strong>\r\n<ul>\r\n<li>Suitable for Windows or MacOS</li>\r\n</ul>\r\n</li>\r\n<li><strong>FAT32</strong>\r\n<ul>\r\n<li>Will work across all Operating Systems</li>\r\n<li>Supports only 4 GB of memory</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<p id=\"bkmrk-commands%3A\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-wipefs--a-device%C2%A0--w\">\r\n<li><strong>wipefs -a <em>device</em></strong> - Wipe the file-system of a device, use <strong>--all</strong> will wipe all partitions.</li>\r\n<li><strong>mkfs.<em>file_system</em> <em>image</em></strong> - Create a file system on an device or image</li>\r\n</ul>\r\n<h3 id=\"bkmrk-how-can-i-mount-file\">How can I mount File Systems?</h3>\r\n<p id=\"bkmrk-one-of-the-key-diffe\">One of the key differences between Linux and other operating systems is that on Linux you need to mount a file system before you can use it. These usually are disk partitions, DVDs, USB drives etc. When mounting a file system that has been created on a disk partition or on a flash drive, it gets mounted into an existing file directory within the Linux file system. That way, when we switch into that directory, we are actually switching into that mounted file system. Usually file systems get mounted in <strong><code>/mnt</code></strong> directory.</p>\r\n<p id=\"bkmrk-commands%3A-0\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-mount---returns-all-\">\r\n<li><strong>mount</strong> - Returns all mounted file-systems</li>\r\n<li><strong>mount -t <em>file_system</em> <em>device_location destination_location</em></strong>\r\n<ul>\r\n<li><strong>mount -a</strong> - When using <strong>-a</strong>, the file-system doesn\'t need to be provided. It goes through all file-systems until one works.</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<h4 id=\"bkmrk-how-do-i-keep-a-file\">How do I keep a File System mounted after system reboot?</h4>\r\n<p id=\"bkmrk-to-keep-a-file-syste\">To keep a file-system mounted even after system reboot, it needs to be added in the <strong><code>/etc/fstab</code></strong> file.</p>\r\n<h4 id=\"bkmrk-what-are-image-files\">What are Image files?</h4>\r\n<p id=\"bkmrk-.img-files-are-exact\"><code>.img</code> is a computer file containing the contents and structure of a disk volume or of an entire data storage device. Since image files hold no additional data beyond the disk contents, these files can only be automatically handled by programs that can detect their file systems. </p>\r\n<p id=\"bkmrk-.iso-files-cannot-be\"><code>.iso</code> files cannot be compressed, while <code>.img</code> files can be either compressed or uncompressed. If an <code>.img</code> file is uncompressed, you could rename it to <code>.iso</code> and it would still function.</p>', 'What are File Systems?\r\nFile system is the way storage space on a drive is split. Without it we wouldn\'t have any way to know where file one file ends and other one starts. An inode is a data structure that describes a file and each file has one. Each file system has an inode table which stores inodes.\r\n\r\n \r\nWhat data do inodes contain?\r\n\r\nUnique index\r\nFile size\r\nPermissions\r\nLocation of the data\r\nCreation read, write timestamps\r\n\r\nWhich file system should I use for my system drive?\r\n\r\nNFTS\r\n\r\nSuitable for Windows\r\n\r\n\r\next4\r\n\r\nSuitable for Linux\r\n\r\n\r\nHFS+/APFS\r\n\r\nSuitable for MacOS\r\n\r\n\r\n\r\nWhich file system should I use for my secondary drives?\r\n\r\nNFTS\r\n\r\nSuitable for Windows\r\n\r\n\r\nexFat\r\n\r\nSuitable for Windows or MacOS\r\n\r\n\r\nFAT32\r\n\r\nWill work across all Operating Systems\r\nSupports only 4 GB of memory\r\n\r\n\r\n\r\nCommands:\r\n\r\nwipefs -a device - Wipe the file-system of a device, use --all will wipe all partitions.\r\nmkfs.file_system image - Create a file system on an device or image\r\n\r\nHow can I mount File Systems?\r\nOne of the key differences between Linux and other operating systems is that on Linux you need to mount a file system before you can use it. These usually are disk partitions, DVDs, USB drives etc. When mounting a file system that has been created on a disk partition or on a flash drive, it gets mounted into an existing file directory within the Linux file system. That way, when we switch into that directory, we are actually switching into that mounted file system. Usually file systems get mounted in /mnt directory.\r\nCommands:\r\n\r\nmount - Returns all mounted file-systems\r\nmount -t file_system device_location destination_location\r\n\r\nmount -a - When using -a, the file-system doesn\'t need to be provided. It goes through all file-systems until one works.\r\n\r\n\r\n\r\nHow do I keep a File System mounted after system reboot?\r\nTo keep a file-system mounted even after system reboot, it needs to be added in the /etc/fstab file.\r\nWhat are Image files?\r\n.img is a computer file containing the contents and structure of a disk volume or of an entire data storage device. Since image files hold no additional data beyond the disk contents, these files can only be automatically handled by programs that can detect their file systems. \r\n.iso files cannot be compressed, while .img files can be either compressed or uncompressed. If an .img file is uncompressed, you could rename it to .iso and it would still function.', 5, '2021-11-27 18:31:41', '2021-12-13 19:08:52', 1, 1, 0, 0, '', 3, 0, NULL, 1),
(12, 2, 0, 'SSH keys', 'ssh-keys', '<h3 id=\"bkmrk-how-to-use-ssh-keys%3F\">How to use SSH Keys?</h3>\r\n<p id=\"bkmrk-to-authenticate-usin\">To authenticate using SSH keys, a user must have an SSH key pair on their local computer. On the remote server, the public key must be copied to a file within the user’s home directory at <code>~/.ssh/authorized_keys</code>. This file contains a list of public keys, one-per-line, that are authorised to log into this account.</p>\r\n<p id=\"bkmrk-when-a-client-connec\">When a client connects to the host, wishing to use SSH key authentication, it will inform the server of this intent and will tell the server which public key to use. The server then checks its <code>authorized_keys</code> file for the public key, generates a random string, and encrypts it using the public key. This encrypted message can only be decrypted with the associated private key. The server will send this encrypted message to the client to test whether they actually have the associated private key.</p>\r\n<h4 id=\"bkmrk-how-to-generate-a-ss\">How to generate a SSH key?</h4>\r\n<p id=\"bkmrk-to-generate-an-rsa-k\">To generate an RSA key pair on your local computer, type: <code>ssh-keygen</code></p>\r\n<pre id=\"bkmrk-enter-passphrase-%28em\"><code class=\"language-\">Enter passphrase (empty for no passphrase):\r\nEnter same passphrase again:</code></pre>\r\n<p id=\"bkmrk-the-next-prompt-allo\">The next prompt allows you to enter a passphrase of an arbitrary length to secure your private key. By default, you will have to enter any passphrase you set here every time you use the private key, as an additional security measure. Feel free to press <code>ENTER</code> to leave this blank if you do not want a passphrase. Keep in mind though that this will allow anyone who gains control of your private key to login to your servers.</p>\r\n<p id=\"bkmrk-if-you-choose-to-ent\">If you choose to enter a passphrase, nothing will be displayed as you type. This is a security precaution.</p>\r\n<ul id=\"bkmrk-%7E%2F.ssh%2Fid_rsa%3A-the-p\">\r\n<li><code>~/.ssh/id_rsa</code>: The private key. DO NOT SHARE THIS FILE!</li>\r\n<li><code>~/.ssh/id_rsa.pub</code>: The associated public key. This can be shared freely without consequence.</li>\r\n</ul>', 'How to use SSH Keys?\r\nTo authenticate using SSH keys, a user must have an SSH key pair on their local computer. On the remote server, the public key must be copied to a file within the user’s home directory at ~/.ssh/authorized_keys. This file contains a list of public keys, one-per-line, that are authorised to log into this account.\r\nWhen a client connects to the host, wishing to use SSH key authentication, it will inform the server of this intent and will tell the server which public key to use. The server then checks its authorized_keys file for the public key, generates a random string, and encrypts it using the public key. This encrypted message can only be decrypted with the associated private key. The server will send this encrypted message to the client to test whether they actually have the associated private key.\r\nHow to generate a SSH key?\r\nTo generate an RSA key pair on your local computer, type: ssh-keygen\r\nEnter passphrase (empty for no passphrase):\r\nEnter same passphrase again:\r\nThe next prompt allows you to enter a passphrase of an arbitrary length to secure your private key. By default, you will have to enter any passphrase you set here every time you use the private key, as an additional security measure. Feel free to press ENTER to leave this blank if you do not want a passphrase. Keep in mind though that this will allow anyone who gains control of your private key to login to your servers.\r\nIf you choose to enter a passphrase, nothing will be displayed as you type. This is a security precaution.\r\n\r\n~/.ssh/id_rsa: The private key. DO NOT SHARE THIS FILE!\r\n~/.ssh/id_rsa.pub: The associated public key. This can be shared freely without consequence.\r\n', 6, '2021-11-27 18:41:50', '2021-12-13 19:08:52', 1, 1, 0, 0, '', 2, 0, NULL, 1);
INSERT INTO `pages` (`id`, `book_id`, `chapter_id`, `name`, `slug`, `html`, `text`, `priority`, `created_at`, `updated_at`, `created_by`, `updated_by`, `restricted`, `draft`, `markdown`, `revision_count`, `template`, `deleted_at`, `owned_by`) VALUES
(13, 2, 0, 'Common Linux Commands', 'common-linux-commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\"><li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>find <em>d</em><em>ir </em>-name <em>file </em></strong>- Find file</li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul><li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul></li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n</ul><h3 id=\"bkmrk-networking\">Networking</h3>\r\n<ul id=\"bkmrk-ifconfig---returns-i\"><li><strong>ifconfig</strong> - Returns IP address / network configuration</li>\r\n<li><strong>ping <em>ipAddress </em></strong>- Test connection with another device</li>\r\n<li><strong>arp -a </strong>- List all active devices on a local network</li>\r\n<li><strong>lsof </strong>- View any running processes on your Mac that have active network connections</li>\r\n</ul><h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\"><li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul><li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul></li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updated</strong></li>\r\n<li><strong>awk </strong>- Scripting language used for manipulating data\r\n<ul id=\"bkmrk-awk-%27%7Bprint-%241%2C%244%7D%27%C2%A0\"><li><strong>awk \'{print $1,$4}\' </strong>- Get first and 4th word</li>\r\n</ul></li>\r\n<li><strong>uniq </strong>- Filters or counts out the repeated lines in a file\r\n<ul id=\"bkmrk-uniq--c%C2%A0--counts-all\"><li><strong>uniq -c </strong>- Counts all unique values</li>\r\n</ul></li>\r\n<li><strong>sort </strong>- Sort a file, arranging the records in a particular order\r\n<ul id=\"bkmrk-sort--r%C2%A0--sorts-in-r\"><li><strong>sort -r </strong>- Sorts in reverse order</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\"><li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul><li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to a file</p>\r\n<p><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nfind dir -name file - Find file\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\nNetworking\r\nifconfig - Returns IP address / network configuration\r\nping ipAddress - Test connection with another device\r\narp -a - List all active devices on a local network\r\nlsof - View any running processes on your Mac that have active network connections\r\nFile\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\nzcat - Read a compressed file\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updated\r\nawk - Scripting language used for manipulating data\r\nawk \'{print $1,$4}\' - Get first and 4th word\r\n\r\nuniq - Filters or counts out the repeated lines in a file\r\nuniq -c - Counts all unique values\r\n\r\nsort - Sort a file, arranging the records in a particular order\r\nsort -r - Sorts in reverse order\r\n\r\nPiping\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\nls -al > file - Redirect output to a file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 8, '2021-11-27 18:45:51', '2022-03-17 08:14:14', 1, 1, 0, 0, '', 14, 0, NULL, 1),
(15, 3, 0, 'How does Git work under the hood?', 'how-does-git-work-under-the-hood', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination.</li>\r\n</ul><p id=\"bkmrk-a-checksum-is-a-numb\">A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation. If you hash the same object twice, you will get the same hash both times.</p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How are Git objects stored internally?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em>diff </em>of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Raw contents of a single file, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit</strong> - Snapshot of the entire project.</li>\r\n</ul><p id=\"bkmrk-when-you-commit-a-fi\">When a file is commited into the repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. </p>\r\n<p id=\"bkmrk-every-git-object-is-\">Every Git object is stored in <em>.git/objects</em>.</p>\r\n<div id=\"bkmrk-\">\r\n<div data-post-id=\"780148\"><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1638367106410.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1638367106410.png\" alt=\"image-1638367106410.png\" width=\"509\" height=\"370\"></a></p>\r\n<h4 id=\"bkmrk-contents-of-a-commit\">Commit</h4>\r\n<p id=\"bkmrk-a%C2%A0commit%C2%A0object-incl\"><code>commit</code> object includes a pointer to the main tree. The main tree hash is recalculated every commit because file or filename changes occur. This means, that almost always a new tree object is created when creating a new commit. </p>\r\n<p id=\"bkmrk-the-hash-of-the-comm\">The hash of the commit is calculated based on:</p>\r\n<ul id=\"bkmrk-the-commit-message-t\"><li>The commit message</li>\r\n<li>The file changes</li>\r\n<li>The commit author</li>\r\n<li>The date</li>\r\n<li>The parent commit hash</li>\r\n</ul><p id=\"bkmrk-contents-of-a-commit-0\"><strong>Contents of a Commit</strong></p>\r\n<ul id=\"bkmrk-tree--%C2%A0-main-tree-%28t\"><li><strong>tree</strong> -  main tree (the root directory, always only one)</li>\r\n<li><strong>parent </strong>- A commit object may have any number of parents. With exactly one parent, it is an ordinary commit. Having more than one parent makes the commit a merge. Initial (root) commits have no parents.</li>\r\n<li><strong>author </strong>- Commit author</li>\r\n</ul><pre id=\"bkmrk-%24-git-cat-file-commi\"><code class=\"language-\">$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nparent a3d5ad1...\r\nauthor Geddy Lee &lt;glee@rush.com&gt;\r\ncommiter Neil Peart &lt;npeart@rush.com&gt;</code></pre>\r\n<h4 id=\"bkmrk-tree\">Tree</h4>\r\n<p id=\"bkmrk-tree-is-an-object-%28a\"><code>tree</code> is an object (a file, really) which contains a list of pointers to blobs or other trees. It\'s hash is calculated based on all the files and their filenames in the project.</p>\r\n<p id=\"bkmrk-contents-of-a-tree%3A\"><strong>Contents of a Tree:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-07\"><code class=\"language-\">$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt</code></pre>\r\n<h4 id=\"bkmrk-blob\">Blob</h4>\r\n<p id=\"bkmrk-git-creates-a-blob-f\">Git creates a <code>blob</code> for the content of each file, unless that same content already exists (in which case it reuses the blob). Only stores the contents of the file rather than the name or any metadata.</p>\r\n<p id=\"bkmrk-contents-of-a-blob%3A\"><strong>Contents of a Blob:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-ca\"><code class=\"language-\">$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...</code></pre>\r\n<h3 id=\"bkmrk-does-every-commit-cr\" class=\"fs-headline1 ow-break-word mb8 flex--item fl1\">Does every commit creates a new tree object in git?</h3>\r\n<p id=\"bkmrk-every-time-you-add-a\">Every time you add a file to your repository, usually by adding it to the index and then committing, a snapshot of the whole file is added. A hash is calculated, and this hash is the identifier for this file.</p>\r\n<p id=\"bkmrk-however%2C-if-you-5-6-\">However, if you 5-6 commits down the line manage to restore a files contents back to what it was previously, its new hash will already exist in the repository and thus no additional file will be added. Instead, whatever is going to refer to this file will use the hash but thus refer to the \"old\" file.</p>\r\n<p id=\"bkmrk-so%2C-theoretically-no\">So, theoretically not always a new tree object will be created.</p>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination.\r\nA checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation. If you hash the same object twice, you will get the same hash both times.\r\nHow are Git objects stored internally?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:\r\nblob - Raw contents of a single file, named with the SHA-1 hash of its contents. \r\ntree - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. \r\ncommit - Snapshot of the entire project.\r\nWhen a file is commited into the repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. \r\nEvery Git object is stored in .git/objects.\r\n\r\n\r\n\r\n\r\nCommit\r\ncommit object includes a pointer to the main tree. The main tree hash is recalculated every commit because file or filename changes occur. This means, that almost always a new tree object is created when creating a new commit. \r\nThe hash of the commit is calculated based on:\r\nThe commit message\r\nThe file changes\r\nThe commit author\r\nThe date\r\nThe parent commit hash\r\nContents of a Commit\r\ntree -  main tree (the root directory, always only one)\r\nparent - A commit object may have any number of parents. With exactly one parent, it is an ordinary commit. Having more than one parent makes the commit a merge. Initial (root) commits have no parents.\r\nauthor - Commit author\r\n$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nparent a3d5ad1...\r\nauthor Geddy Lee <glee@rush.com>\r\ncommiter Neil Peart <npeart@rush.com>\r\nTree\r\ntree is an object (a file, really) which contains a list of pointers to blobs or other trees. It\'s hash is calculated based on all the files and their filenames in the project.\r\nContents of a Tree:\r\n$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt\r\nBlob\r\nGit creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Only stores the contents of the file rather than the name or any metadata.\r\nContents of a Blob:\r\n$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...\r\nDoes every commit creates a new tree object in git?\r\nEvery time you add a file to your repository, usually by adding it to the index and then committing, a snapshot of the whole file is added. A hash is calculated, and this hash is the identifier for this file.\r\nHowever, if you 5-6 commits down the line manage to restore a files contents back to what it was previously, its new hash will already exist in the repository and thus no additional file will be added. Instead, whatever is going to refer to this file will use the hash but thus refer to the \"old\" file.\r\nSo, theoretically not always a new tree object will be created.', 0, '2021-11-29 14:40:30', '2021-12-09 09:47:39', 1, 1, 0, 0, '', 15, 0, NULL, 1),
(16, 3, 0, 'Contributing to Open Source projects', 'contributing-to-open-source-projects', '<h3 id=\"bkmrk-how-can-i-contribute\">How can I contribute to an Open Source project?</h3>\r\n<p id=\"bkmrk-a-fork-is-simply-a-c\">A <strong>fork</strong> is simply a copy of the repo that lives on your own personal Github profile. You can make any changes you want to this fork and experiment all you want with its code, and that’s fine! Any changes you make to your fork have no effect on the original, upstream repository you forked from. The only way your changes make it into the upstream repo is through pull requests.</p>\r\n<p id=\"bkmrk-generally%2C-upstream-\">Generally, <strong>upstream</strong> is from where you clone the repository, and <strong>downstream</strong> is any project that integrates your work with other works.</p>\r\n<p id=\"bkmrk-if-you-make-a-pull-r\"><strong>Pull requests</strong> are a mechanism for a developer to notify team members that they have completed a feature. If you make a pull request, the maintainers can look at your new code, make sure it integrates with the rest of the project, and then merge it into the upstream. And if your code isn\'t 100% ready just yet, the maintainers can comment on your pull request to tell you what you need to fix.</p>\r\n<p id=\"bkmrk-in-summary%2C-if-you-w\"><strong>In summary, if you want to contribute to a project, the simplest way is to:</strong></p>\r\n<ol id=\"bkmrk-find-a-project-you-w\" class=\"X5LH0c\"><li class=\"TrT0Xe\">Find a project you want to contribute to.</li>\r\n<li class=\"TrT0Xe\">Fork it.</li>\r\n<li class=\"TrT0Xe\">Clone it to your local system.</li>\r\n<li class=\"TrT0Xe\">Make a new branch.</li>\r\n<li class=\"TrT0Xe\">Make your changes.</li>\r\n<li class=\"TrT0Xe\">Push it back to your repo.</li>\r\n<li class=\"TrT0Xe\">Click the Compare &amp; pull request button.</li>\r\n<li class=\"TrT0Xe\">Click Create pull request to open a new pull request.</li>\r\n</ol>', 'How can I contribute to an Open Source project?\r\nA fork is simply a copy of the repo that lives on your own personal Github profile. You can make any changes you want to this fork and experiment all you want with its code, and that’s fine! Any changes you make to your fork have no effect on the original, upstream repository you forked from. The only way your changes make it into the upstream repo is through pull requests.\r\nGenerally, upstream is from where you clone the repository, and downstream is any project that integrates your work with other works.\r\nPull requests are a mechanism for a developer to notify team members that they have completed a feature. If you make a pull request, the maintainers can look at your new code, make sure it integrates with the rest of the project, and then merge it into the upstream. And if your code isn\'t 100% ready just yet, the maintainers can comment on your pull request to tell you what you need to fix.\r\nIn summary, if you want to contribute to a project, the simplest way is to:\r\nFind a project you want to contribute to.\r\nFork it.\r\nClone it to your local system.\r\nMake a new branch.\r\nMake your changes.\r\nPush it back to your repo.\r\nClick the Compare & pull request button.\r\nClick Create pull request to open a new pull request.\r\n', 1, '2021-11-30 09:09:31', '2021-12-09 09:47:39', 1, 1, 0, 0, '', 2, 0, NULL, 1),
(20, 3, 0, 'Common Git Commands', 'common-git-commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git merge).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n<li><strong>git clone - </strong>Clones a repository into a newly created directory.<br><ul id=\"bkmrk-use%C2%A0--depth-to-creat\"><li>Use <strong>--depth <em>count</em> </strong>to create a shallow clone with a history truncated to the specified number of commits. This means that using <strong>--depth 1 </strong>to clone a repository will be a lot faster than cloning it normally.</li>\r\n<li>Use <strong>--single-branch </strong>to pull only the latest (master) branch from the repository.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-log\">Log</h3>\r\n<ul id=\"bkmrk-git-log---returns-a-\"><li><strong>git log</strong> - Returns a log of commits\r\n<ul><li><strong>git log --oneline </strong>- Returns commits condensed in one line. Useful for getting a high-level overview of your project.</li>\r\n<li><strong>git log --graph --oneline </strong>- Show log in a graph format</li>\r\n<li><strong>git log -p </strong>- See changes of each commit.</li>\r\n<li><strong>git log -3</strong> - Show 3 most recent commits.</li>\r\n<li><strong>git log --after=\"2014-7-1\" </strong>- Show commit after or before a certain date.</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-branches\">Branches</h3>\r\n<ul id=\"bkmrk-git-branch---show-cu\"><li><strong>git branch --show-current</strong> - Show current branch.</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with Changes</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -fd </strong>- Deletes all untracked files.</li>\r\n<li><strong>git cherry-pick <em>commit </em></strong>- Get changes from a specific commit.</li>\r\n<li><strong>git bisect</strong> - Use binary search to find the commit that introduced a bug.\r\n<ul id=\"bkmrk-git-bisect-start%C2%A0--s\"><li><strong>git bisect start </strong>- Start git bisect process.</li>\r\n<li><strong>git bisect reset </strong>- Stop git bisect process.</li>\r\n<li><strong>git bisect run <em>script </em></strong>- Let git bisect run script on each iteration</li>\r\n</ul></li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git merge).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit clone - Clones a repository into a newly created directory.Use --depth count to create a shallow clone with a history truncated to the specified number of commits. This means that using --depth 1 to clone a repository will be a lot faster than cloning it normally.\r\nUse --single-branch to pull only the latest (master) branch from the repository.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nLog\r\ngit log - Returns a log of commits\r\ngit log --oneline - Returns commits condensed in one line. Useful for getting a high-level overview of your project.\r\ngit log --graph --oneline - Show log in a graph format\r\ngit log -p - See changes of each commit.\r\ngit log -3 - Show 3 most recent commits.\r\ngit log --after=\"2014-7-1\" - Show commit after or before a certain date.\r\n\r\nBranches\r\ngit branch --show-current - Show current branch.\r\nWorking with Changes\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -fd - Deletes all untracked files.\r\ngit cherry-pick commit - Get changes from a specific commit.\r\ngit bisect - Use binary search to find the commit that introduced a bug.\r\ngit bisect start - Start git bisect process.\r\ngit bisect reset - Stop git bisect process.\r\ngit bisect run script - Let git bisect run script on each iteration\r\n\r\n', 6, '2021-12-08 13:37:48', '2021-12-19 18:52:54', 1, 1, 0, 0, '', 19, 0, NULL, 1),
(21, 3, 0, 'Merge vs Rebase', 'merge-vs-rebase', '<p id=\"bkmrk-there-are-two-option\">There are two options for integrating your feature into the main branch:</p>\r\n<ul id=\"bkmrk-merging-directly.-re\"><li>merging directly.</li>\r\n<li>rebasing and then merging.</li>\r\n</ul><h3 id=\"bkmrk-how-does-git-merge-w\">How does Git Merge work?</h3>\r\n<p id=\"bkmrk-git-merge%C2%A0will-combi\">Git merge will combine multiple sequences of commits into one unified history. </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639058986917.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639058986917.png\" alt=\"image-1639058986917.png\" width=\"406\" height=\"209\"></a></p>\r\n<p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-otherbranch-%7C-x-%3C--y\"><code class=\"language-\">                    otherbranch\r\n                        |\r\n              X &lt;- Y &lt;- Z\r\n             /\r\n  A &lt;- B &lt;- C &lt;- D &lt;- E &lt;- F &lt;- G\r\n                                |\r\n                              master\r\n                                |\r\n                              HEAD</code></pre>\r\n<p id=\"bkmrk-you-are-on%C2%A0master%C2%A0an\">You are on <code>master</code> and you said <code>git merge otherbranch</code>. Then:</p>\r\n<ol id=\"bkmrk-git-first-figures-ou\"><li>\r\n<p>Git first figures out that the merge base is commit <code>C</code>.</p>\r\n</li>\r\n<li>\r\n<p>Git then calculates the diff from <code>C</code> to <code>G</code> and the diff from <code>C</code> to <code>Z</code>.</p>\r\n</li>\r\n<li>\r\n<p>Git then applies both of those diffs to <code>C</code> simultaneously — and commits the result on <code>master</code>. That is the merge commit.</p>\r\n</li>\r\n</ol><h4 id=\"bkmrk-squash-merge\">Squash Merge</h4>\r\n<p id=\"bkmrk-a-squash-merge---squ\">A squash merge <code>--squash</code> is a merge option in Git that will produce a merge commit with only one parent. The files are merged exactly as they would be in a normal merge, but the commit metadata is changed to show only one of the parent commits.</p>\r\n<h3 id=\"bkmrk-how-does-git-rebase-\">How does Git Rebase work?</h3>\r\n<p id=\"bkmrk-rebasing-is-the-proc\">Rebasing is the process of moving or combining a sequence of commits to a new base commit. Rebase compresses all the changes into a single “patch.” Then it integrates the patch onto the target branch.</p>\r\n<p id=\"bkmrk-unlike-merging%2C-reba\">Unlike merging, rebasing flattens the history because it transfers the completed work from one branch to another. In the process, unwanted history is eliminated.</p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639043929091.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639043929091.png\" alt=\"image-1639043929091.png\" width=\"289\" height=\"150\"></a></p>\r\n<h4 id=\"bkmrk-interactive-rebase\">Interactive Rebase</h4>\r\n<p id=\"bkmrk-interactive-rebasing\">Interactive rebasing can be used for changing commits in many ways such as editing, deleting, and squashing.</p>\r\n<ul id=\"bkmrk-to-tell-git-where-to\"><li>To tell Git where to start the interactive rebase, use the SHA-1 or index of the commit that immediately precedes the commit you want to modify.</li>\r\n<li>Interactive rebasing will create new SHA-1’s therefore it is best to use interactive rebasing on commits you have not pushed to a remote branch.</li>\r\n</ul><pre id=\"bkmrk-git-rebase--i-528f82\"><code class=\"language-shell\">git rebase -i 528f82e # Specific commit\r\n# Or\r\ngit rebase -i HEAD~3 # 3 Commits ago from latest commit</code></pre>', 'There are two options for integrating your feature into the main branch:\r\nmerging directly.\r\nrebasing and then merging.\r\nHow does Git Merge work?\r\nGit merge will combine multiple sequences of commits into one unified history. \r\n\r\nExample:\r\n                    otherbranch\r\n                        |\r\n              X <- Y <- Z\r\n             /\r\n  A <- B <- C <- D <- E <- F <- G\r\n                                |\r\n                              master\r\n                                |\r\n                              HEAD\r\nYou are on master and you said git merge otherbranch. Then:\r\n\r\nGit first figures out that the merge base is commit C.\r\n\r\n\r\nGit then calculates the diff from C to G and the diff from C to Z.\r\n\r\n\r\nGit then applies both of those diffs to C simultaneously — and commits the result on master. That is the merge commit.\r\n\r\nSquash Merge\r\nA squash merge --squash is a merge option in Git that will produce a merge commit with only one parent. The files are merged exactly as they would be in a normal merge, but the commit metadata is changed to show only one of the parent commits.\r\nHow does Git Rebase work?\r\nRebasing is the process of moving or combining a sequence of commits to a new base commit. Rebase compresses all the changes into a single “patch.” Then it integrates the patch onto the target branch.\r\nUnlike merging, rebasing flattens the history because it transfers the completed work from one branch to another. In the process, unwanted history is eliminated.\r\n \r\n\r\nInteractive Rebase\r\nInteractive rebasing can be used for changing commits in many ways such as editing, deleting, and squashing.\r\nTo tell Git where to start the interactive rebase, use the SHA-1 or index of the commit that immediately precedes the commit you want to modify.\r\nInteractive rebasing will create new SHA-1’s therefore it is best to use interactive rebasing on commits you have not pushed to a remote branch.\r\ngit rebase -i 528f82e # Specific commit\r\n# Or\r\ngit rebase -i HEAD~3 # 3 Commits ago from latest commit', 2, '2021-12-09 09:47:24', '2021-12-19 18:33:58', 1, 1, 0, 0, '', 7, 0, NULL, 1),
(23, 3, 0, 'Reset vs Revert', 'reset-vs-revert', '<h3 id=\"bkmrk-git-checkout\">Git Checkout</h3>\r\n<p id=\"bkmrk-with%C2%A0git-checkout%2C-t\">With git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.</p>\r\n<pre id=\"bkmrk-git-checkout-d\"><code class=\"language-\">git checkout d</code></pre>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051052100.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051052100.png\" alt=\"image-1639051052100.png\" width=\"440\" height=\"175\"></a></p>\r\n<p id=\"bkmrk-to-move-back-to-the-\">To move back to the latest commit, just checkout to the branch</p>\r\n<pre id=\"bkmrk-git-checkout-main\"><code class=\"language-\">git checkout main</code></pre>\r\n<h3 id=\"bkmrk-git-reset\">Git Reset</h3>\r\n<p id=\"bkmrk-comparatively%2C%C2%A0git-r\">Comparatively, git reset, moves both the HEAD and branch refs to the specified commit. Reset doesn\'t make commits, it just updates a branch to point to a different commit. </p>\r\n<pre id=\"bkmrk-git-reset-d\"><code class=\"language-\">git reset d</code></pre>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051143108.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051143108.png\" alt=\"image-1639051143108.png\" width=\"354\" height=\"188\"></a></p>\r\n<p id=\"bkmrk-options%3A\"><strong>Options:</strong></p>\r\n<ul id=\"bkmrk---soft---uncommit-ch\"><li><strong><code>--soft</code> </strong>- <strong>uncommit</strong> changes, changes are left staged.</li>\r\n<li><strong><code>--mixed (default)</code> </strong>- <strong>uncommit + unstage</strong> changes, changes are left in working tree.</li>\r\n<li><strong><code>--hard</code> </strong>- <strong>uncommit + unstage + delete</strong> changes, nothing left.</li>\r\n</ul><h3 id=\"bkmrk-git-revert\">Git Revert</h3>\r\n<p id=\"bkmrk-git-revert-simply-cr\">Git revert simply creates a new commit that is the opposite of an existing commit. It leaves the files in the same state as if the commit that has been reverted never existed.</p>\r\n<pre id=\"bkmrk-git-revert-%3Ccommit%3E\"><code class=\"language-\">git revert &lt;commit&gt;</code></pre>\r\n<p id=\"bkmrk--1\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639059919753.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639059919753.png\" alt=\"image-1639059919753.png\" width=\"428\" height=\"128\"></a></p>', 'Git Checkout\r\nWith git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.\r\ngit checkout d\r\n\r\nTo move back to the latest commit, just checkout to the branch\r\ngit checkout main\r\nGit Reset\r\nComparatively, git reset, moves both the HEAD and branch refs to the specified commit. Reset doesn\'t make commits, it just updates a branch to point to a different commit. \r\ngit reset d\r\n\r\nOptions:\r\n--soft - uncommit changes, changes are left staged.\r\n--mixed (default) - uncommit + unstage changes, changes are left in working tree.\r\n--hard - uncommit + unstage + delete changes, nothing left.\r\nGit Revert\r\nGit revert simply creates a new commit that is the opposite of an existing commit. It leaves the files in the same state as if the commit that has been reverted never existed.\r\ngit revert <commit>\r\n', 3, '2021-12-09 11:55:56', '2021-12-09 14:26:10', 1, 1, 0, 0, '', 9, 0, NULL, 1),
(24, 3, 0, 'Workflow', 'workflow', '<h3 id=\"bkmrk-what-is-the-git-work\">What is the Git Workflow?</h3>\r\n<ul id=\"bkmrk-working-directory-%2F-\"><li>\r\n<p><strong>Working directory / Working tree / Workspace </strong>holds files in your computer\'s ordinary format, rather than in the special Git-only format that goes into each new commit you make.</p>\r\n</li>\r\n<li>\r\n<p>The <strong>index / staging-area / </strong><strong>cache</strong> holds the proposed next snapshot. If you change a file in your <strong>work-tree</strong>, you need to copy it back into the <strong>index</strong> so that the updated file is the one that goes into the next commit.</p>\r\n<ul><li>The index is not the git repository. Files in the git index are files that git would commit to the git repository if you used the git commit command.</li>\r\n</ul></li>\r\n</ul><p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639052540832.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639052540832.png\" alt=\"image-1639052540832.png\"></a></p>', 'What is the Git Workflow?\r\n\r\nWorking directory / Working tree / Workspace holds files in your computer\'s ordinary format, rather than in the special Git-only format that goes into each new commit you make.\r\n\r\n\r\nThe index / staging-area / cache holds the proposed next snapshot. If you change a file in your work-tree, you need to copy it back into the index so that the updated file is the one that goes into the next commit.\r\nThe index is not the git repository. Files in the git index are files that git would commit to the git repository if you used the git commit command.\r\n\r\n \r\n', 4, '2021-12-09 12:21:01', '2021-12-09 12:30:32', 1, 1, 0, 0, '', 2, 0, NULL, 1),
(26, 6, 0, 'Productivity Tools', 'productivity-tools', '<h4 id=\"bkmrk-what-tools-do-i-use-\">What tools do I use for productivity?</h4>\r\n<ul id=\"bkmrk-lightshot%C2%A0--tool-for\"><li><strong>Lightshot </strong>- Tool for taking and editing screenshots.</li>\r\n<li><strong>Spectacle </strong>- Window resizing tool for shortcut support.</li>\r\n<li><strong>Copyless </strong>- Tool for managing your clipboard history.</li>\r\n<li><strong>CleanMyMac </strong>- Tool for cleaning junk files and managing startup apps.</li>\r\n<li><strong>MySQL Workbench </strong>- Database IDE.</li>\r\n<li><strong>PHPStorm </strong>- Development IDE.</li>\r\n<li><strong>Brave </strong>- Internet Browser</li>\r\n</ul><h4 id=\"bkmrk-what-terminal-config\">What terminal configuration I use?</h4>\r\n<p id=\"bkmrk-i-use-iterm-terminal\">I use <strong>iTerm</strong> terminal together with <strong>Oh My Zsh. </strong>I like zsh because it is more customisable than bash and supports more plugins. Preferences -&gt; Profiles -&gt; Keys -&gt; Key Mapping -&gt; Natural Text Editing</p>\r\n<p id=\"bkmrk-what-plugins-do-i-us\"><strong>What zsh plugins do I use?</strong></p>\r\n<ul id=\"bkmrk-zsh-autosuggestions-\"><li>\r\n<p class=\" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal\">zsh-autosuggestions</p>\r\n</li>\r\n</ul>', 'What tools do I use for productivity?\r\nLightshot - Tool for taking and editing screenshots.\r\nSpectacle - Window resizing tool for shortcut support.\r\nCopyless - Tool for managing your clipboard history.\r\nCleanMyMac - Tool for cleaning junk files and managing startup apps.\r\nMySQL Workbench - Database IDE.\r\nPHPStorm - Development IDE.\r\nBrave - Internet Browser\r\nWhat terminal configuration I use?\r\nI use iTerm terminal together with Oh My Zsh. I like zsh because it is more customisable than bash and supports more plugins. Preferences -> Profiles -> Keys -> Key Mapping -> Natural Text Editing\r\nWhat zsh plugins do I use?\r\n\r\nzsh-autosuggestions\r\n\r\n', 2, '2021-12-11 19:48:44', '2022-03-22 20:46:34', 1, 1, 0, 0, '', 9, 0, NULL, 1);
INSERT INTO `pages` (`id`, `book_id`, `chapter_id`, `name`, `slug`, `html`, `text`, `priority`, `created_at`, `updated_at`, `created_by`, `updated_by`, `restricted`, `draft`, `markdown`, `revision_count`, `template`, `deleted_at`, `owned_by`) VALUES
(27, 2, 0, 'Shell Scripting', 'shell-scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-echo-%24%28seq-1-5%29-1-2-\"><code class=\"language-shell\">echo $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---arithmetic-\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n</ul><ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li><strong>test, [ ], [[ ]] </strong>- Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1. For example, the conditional test can be used to check if file[s] or directory[s] exist. <strong>[[ ]] </strong>is preferred over <strong>test </strong>and <strong>[ ]</strong>, because it is considered safer.</li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639474795035.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639474795035.png\" alt=\"image-1639474795035.png\" width=\"320\" height=\"734\"></a></p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<h4 id=\"bkmrk-functions\">Functions</h4>\r\n<pre id=\"bkmrk-sum%3D10-%23-global-vari\"><code class=\"language-shell\">sum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7</code></pre>\r\n<h4 id=\"bkmrk-conditional-statemen\">Conditional Statements</h4>\r\n<pre id=\"bkmrk-read-inputvalue-%23-ge\"><code class=\"language-shell\">read inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue &gt; 20)) &amp;&amp; ((inputValue &lt; 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\nexampleFile=\"./example_file\"\r\n\r\nif [[ -e $exampleFile ]]; then\r\n	echo \"$exampleFile exists\"\r\n    \r\n   if [[ -f $exampleFile ]]; then\r\n   		echo \"$exampleFile is a normal file\"\r\n   fi\r\n   \r\n   if [[ -r $exampleFile ]]; then\r\n   		echo \"$exampleFile is a readable\"\r\n   fi\r\n   \r\n   if [[ -w $exampleFile ]]; then\r\n   		echo \"$exampleFile is a writable\"\r\n   fi\r\nfi</code></pre>\r\n<h4 id=\"bkmrk-case\">Case</h4>\r\n<pre id=\"bkmrk-read-country-case-%24c\"><code class=\"language-shell\">read COUNTRY\r\n\r\ncase $COUNTRY in\r\n  Lithuania)\r\n    echo -n \"Lithuanian\"\r\n    ;;\r\n  Romania | Moldova)\r\n    echo -n \"Romanian\"\r\n    ;;\r\n  Italy | \"San Marino\" | Switzerland | \"Vatican City\")\r\n    echo -n \"Italian\"\r\n    ;;\r\n  *)\r\n    echo -n \"unknown\"\r\n    ;;\r\nesac</code></pre>\r\n<h4 id=\"bkmrk-string-operations\">String Operations</h4>\r\n<pre id=\"bkmrk-rand_str%3D%22a-random-s\"><code class=\"language-shell\">rand_str=\"A random string\"\r\n\r\necho \"String Length: ${#rand_str}\"\r\necho \"${rand_str:2}\" # get second word of string\r\necho \"${rand_str:1:2}\" # get words in range from 1st to 2nd\r\necho \"${rand_str#*A }\" # get words that follow \"A \" characters</code></pre>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\necho $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\ntest, [ ], [[ ]] - Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1. For example, the conditional test can be used to check if file[s] or directory[s] exist. [[ ]] is preferred over test and [ ], because it is considered safer.\r\n\r\n \r\nFunctions\r\nsum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7\r\nConditional Statements\r\nread inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue > 20)) && ((inputValue < 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\nexampleFile=\"./example_file\"\r\n\r\nif [[ -e $exampleFile ]]; then\r\n	echo \"$exampleFile exists\"\r\n    \r\n   if [[ -f $exampleFile ]]; then\r\n   		echo \"$exampleFile is a normal file\"\r\n   fi\r\n   \r\n   if [[ -r $exampleFile ]]; then\r\n   		echo \"$exampleFile is a readable\"\r\n   fi\r\n   \r\n   if [[ -w $exampleFile ]]; then\r\n   		echo \"$exampleFile is a writable\"\r\n   fi\r\nfi\r\nCase\r\nread COUNTRY\r\n\r\ncase $COUNTRY in\r\n  Lithuania)\r\n    echo -n \"Lithuanian\"\r\n    ;;\r\n  Romania | Moldova)\r\n    echo -n \"Romanian\"\r\n    ;;\r\n  Italy | \"San Marino\" | Switzerland | \"Vatican City\")\r\n    echo -n \"Italian\"\r\n    ;;\r\n  *)\r\n    echo -n \"unknown\"\r\n    ;;\r\nesac\r\nString Operations\r\nrand_str=\"A random string\"\r\n\r\necho \"String Length: ${#rand_str}\"\r\necho \"${rand_str:2}\" # get second word of string\r\necho \"${rand_str:1:2}\" # get words in range from 1st to 2nd\r\necho \"${rand_str#*A }\" # get words that follow \"A \" characters', 7, '2021-12-13 19:05:29', '2021-12-14 12:25:37', 1, 1, 0, 0, '', 15, 0, NULL, 1),
(29, 7, 0, 'Common Docker Commands', 'common-docker-commands', '<h4 id=\"bkmrk-container-actions\">Container</h4>\r\n<table id=\"bkmrk-docker-container-run\" style=\"border-collapse: collapse; width: 100%; height: 1448px;\" border=\"1\"><tbody><tr style=\"height: 46px;\"><td style=\"width: 50%; height: 46px;\"><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run</strong></span></td>\r\n<td style=\"width: 50%; height: 46px;\">Create and start a container from an image</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--detach (-d)</td>\r\n<td style=\"width: 50%; height: 29px;\">Run the container in the background</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--name</td>\r\n<td style=\"width: 50%; height: 29px;\">Specify a name for the container</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--publish (-p) <em>host_port:container_port</em></td>\r\n<td style=\"width: 50%; height: 29px;\">Make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">\r\n<p>-e </p>\r\n</td>\r\n<td style=\"width: 50%; height: 29px;\">Set environment variables</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">-it</td>\r\n<td style=\"width: 50%; height: 29px;\">\r\n<p>Start a new container interactively</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">--network</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Specify a network</p>\r\n</td>\r\n</tr><tr style=\"height: 102px;\"><td style=\"width: 50%; height: 102px;\">--net-alias</td>\r\n<td style=\"width: 50%; height: 102px;\">\r\n<p>Create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">--rm</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Delete the container when quitting</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">-v</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Specify a volume</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container exec</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Run a command in a running container</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">-it</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Run a command interactively</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><em><strong>docker container stop </strong></em></td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Stop a docker container</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container commit</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Create a new image from a container’s changes</td>\r\n</tr><tr style=\"height: 49px;\"><td style=\"width: 50%; height: 49px;\"><strong>docker container cp</strong></td>\r\n<td style=\"width: 50%; height: 49px;\">Copy files/folders between a container and the local filesystem</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container create</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Create a new container</td>\r\n</tr><tr style=\"height: 49px;\"><td style=\"width: 50%; height: 49px;\"><strong>docker container diff</strong></td>\r\n<td style=\"width: 50%; height: 49px;\">Inspect changes to files or directories on a container’s filesystem</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container export</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Export a container’s filesystem as a tar archive</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container inspect</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Display detailed information on one or more containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container kill</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Kill one or more running containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container logs</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Fetch the logs of a container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container ls</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">List containers</td>\r\n</tr><tr><td style=\"width: 50%;\">-a</td>\r\n<td style=\"width: 50%;\">List all containers (including stopped ones)</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container port</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">List port mappings or a specific mapping for the container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container prune</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Remove all stopped containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container rename</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Rename a container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container restart</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Restart one or more containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container rm</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Remove one or more containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container start</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Start one or more stopped containers</td>\r\n</tr><tr style=\"height: 49px;\"><td style=\"width: 50%; height: 49px;\"><strong>docker container stats</strong></td>\r\n<td style=\"width: 50%; height: 49px;\">Display a live stream of container(s) resource usage statistics</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container stop</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Stop one or more running containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container top</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Display the running processes of a container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container update</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Update configuration of one or more containers</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<table id=\"bkmrk-docker-image-build-b\"><tbody><tr><td><strong>docker image build</strong></td>\r\n<td>Build an image from a Dockerfile</td>\r\n</tr><tr><td><strong>docker image history</strong></td>\r\n<td>Show the history of an image</td>\r\n</tr><tr><td><strong>docker image inspect</strong></td>\r\n<td>Display detailed information on one or more images</td>\r\n</tr><tr><td><strong>docker image ls</strong></td>\r\n<td>List images</td>\r\n</tr><tr><td><strong>docker image prune</strong></td>\r\n<td>Remove unused images</td>\r\n</tr><tr><td><strong>docker image pull</strong></td>\r\n<td>Pull an image or a repository from a registry</td>\r\n</tr><tr><td><strong>docker image push</strong></td>\r\n<td>Push an image or a repository to a registry</td>\r\n</tr><tr><td><strong>docker image rm</strong></td>\r\n<td>Remove one or more images</td>\r\n</tr><tr><td><strong>docker image tag</strong></td>\r\n<td>Create a tag</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<table id=\"bkmrk-docker-network-conne\" style=\"border-style: solid; height: 203px;\"><tbody><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network connect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Connect a container to a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network create</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Create a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network disconnect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Disconnect a container from a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network inspect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Display detailed information on one or more networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network ls</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">List networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network prune</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove all unused networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network rm</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove one or more networks</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<table id=\"bkmrk-docker-volume-create\"><tbody><tr><td><strong>docker volume create</strong></td>\r\n<td>Create a volume</td>\r\n</tr><tr><td><strong>docker volume inspect</strong></td>\r\n<td>Display detailed information on one or more volumes</td>\r\n</tr><tr><td><strong>docker volume ls</strong></td>\r\n<td>List volumes</td>\r\n</tr><tr><td><strong>docker volume prune</strong></td>\r\n<td>Remove all unused local volumes</td>\r\n</tr><tr><td><strong>docker volume rm</strong></td>\r\n<td>Remove one or more volumes</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<table id=\"bkmrk-docker-compose-up-st\" style=\"border-collapse: collapse; width: 100%; height: 174px;\" border=\"1\"><tbody><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose up</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">Start services</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose down</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">Stop services</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose ps</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">List containers</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose tops</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">Display the running processes</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker compose ls</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">List running compose projects</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose logs</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">View output from containers</td>\r\n</tr></tbody></table><h2 id=\"bkmrk-swarm\">Swarm</h2>\r\n<h4 id=\"bkmrk-nodes\">Nodes</h4>\r\n<table id=\"bkmrk-docker-node-demote-d\"><tbody><tr><td><strong>docker node demote</strong></td>\r\n<td>Demote one or more nodes from manager in the swarm</td>\r\n</tr><tr><td><strong>docker node inspect</strong></td>\r\n<td>Display detailed information on one or more nodes</td>\r\n</tr><tr><td><strong>docker node ls</strong></td>\r\n<td>List nodes in the swarm</td>\r\n</tr><tr><td><strong>docker node promote</strong></td>\r\n<td>Promote one or more nodes to manager in the swarm</td>\r\n</tr><tr><td><strong>docker node ps</strong></td>\r\n<td>List tasks running on one or more nodes, defaults to current node</td>\r\n</tr><tr><td><strong>docker node rm</strong></td>\r\n<td>Remove one or more nodes from the swarm</td>\r\n</tr><tr><td><strong>docker node update</strong></td>\r\n<td>Update a node</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-services\">Services</h4>\r\n<table style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Oxygen, Ubuntu, Roboto, Cantarell, \'Fira Sans\', \'Droid Sans\', \'Helvetica Neue\', sans-serif; font-size: 14px;\" id=\"bkmrk-docker-service-creat\"><tbody><tr><td><strong>docker service create</strong></td>\r\n<td>Create a new service</td>\r\n</tr><tr><td><strong>docker service inspect</strong></td>\r\n<td>Display detailed information on one or more services</td>\r\n</tr><tr><td><strong>docker service logs</strong></td>\r\n<td>Fetch the logs of a service or task</td>\r\n</tr><tr><td><strong>docker service ls</strong></td>\r\n<td>List services</td>\r\n</tr><tr><td><strong>docker service ps</strong></td>\r\n<td>List the tasks of one or more services</td>\r\n</tr><tr><td><strong>docker service rm</strong></td>\r\n<td>Remove one or more services</td>\r\n</tr><tr><td><strong>docker service rollback</strong></td>\r\n<td>Revert changes to a service’s configuration</td>\r\n</tr><tr><td><strong>docker service scale</strong></td>\r\n<td>Scale one or multiple replicated services</td>\r\n</tr><tr><td><strong>docker service update</strong></td>\r\n<td>Update a service</td>\r\n</tr></tbody></table>', 'Container\r\ndocker container run\r\nCreate and start a container from an image\r\n--detach (-d)\r\nRun the container in the background\r\n--name\r\nSpecify a name for the container\r\n--publish (-p) host_port:container_port\r\nMake a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world\r\n\r\n-e \r\n\r\nSet environment variables\r\n-it\r\n\r\nStart a new container interactively\r\n\r\n--network\r\n\r\nSpecify a network\r\n\r\n--net-alias\r\n\r\nCreate a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work\r\n\r\n--rm\r\n\r\nDelete the container when quitting\r\n\r\n-v\r\n\r\nSpecify a volume\r\n\r\ndocker container exec\r\n\r\nRun a command in a running container\r\n\r\n-it\r\n\r\nRun a command interactively\r\n\r\ndocker container stop \r\n\r\nStop a docker container\r\n\r\ndocker container commit\r\nCreate a new image from a container’s changes\r\ndocker container cp\r\nCopy files/folders between a container and the local filesystem\r\ndocker container create\r\nCreate a new container\r\ndocker container diff\r\nInspect changes to files or directories on a container’s filesystem\r\ndocker container export\r\nExport a container’s filesystem as a tar archive\r\ndocker container inspect\r\nDisplay detailed information on one or more containers\r\ndocker container kill\r\nKill one or more running containers\r\ndocker container logs\r\nFetch the logs of a container\r\ndocker container ls\r\nList containers\r\n-a\r\nList all containers (including stopped ones)\r\ndocker container port\r\nList port mappings or a specific mapping for the container\r\ndocker container prune\r\nRemove all stopped containers\r\ndocker container rename\r\nRename a container\r\ndocker container restart\r\nRestart one or more containers\r\ndocker container rm\r\nRemove one or more containers\r\ndocker container start\r\nStart one or more stopped containers\r\ndocker container stats\r\nDisplay a live stream of container(s) resource usage statistics\r\ndocker container stop\r\nStop one or more running containers\r\ndocker container top\r\nDisplay the running processes of a container\r\ndocker container update\r\nUpdate configuration of one or more containers\r\nImages\r\ndocker image build\r\nBuild an image from a Dockerfile\r\ndocker image history\r\nShow the history of an image\r\ndocker image inspect\r\nDisplay detailed information on one or more images\r\ndocker image ls\r\nList images\r\ndocker image prune\r\nRemove unused images\r\ndocker image pull\r\nPull an image or a repository from a registry\r\ndocker image push\r\nPush an image or a repository to a registry\r\ndocker image rm\r\nRemove one or more images\r\ndocker image tag\r\nCreate a tag\r\nNetworks\r\ndocker network connect\r\nConnect a container to a network\r\ndocker network create\r\nCreate a network\r\ndocker network disconnect\r\nDisconnect a container from a network\r\ndocker network inspect\r\nDisplay detailed information on one or more networks\r\ndocker network ls\r\nList networks\r\ndocker network prune\r\nRemove all unused networks\r\ndocker network rm\r\nRemove one or more networks\r\nVolumes\r\ndocker volume create\r\nCreate a volume\r\ndocker volume inspect\r\nDisplay detailed information on one or more volumes\r\ndocker volume ls\r\nList volumes\r\ndocker volume prune\r\nRemove all unused local volumes\r\ndocker volume rm\r\nRemove one or more volumes\r\nDocker Compose\r\ndocker-compose up\r\nStart services\r\ndocker-compose down\r\nStop services\r\ndocker-compose ps\r\nList containers\r\ndocker-compose tops\r\nDisplay the running processes\r\ndocker compose ls\r\nList running compose projects\r\ndocker-compose logs\r\nView output from containers\r\nSwarm\r\nNodes\r\ndocker node demote\r\nDemote one or more nodes from manager in the swarm\r\ndocker node inspect\r\nDisplay detailed information on one or more nodes\r\ndocker node ls\r\nList nodes in the swarm\r\ndocker node promote\r\nPromote one or more nodes to manager in the swarm\r\ndocker node ps\r\nList tasks running on one or more nodes, defaults to current node\r\ndocker node rm\r\nRemove one or more nodes from the swarm\r\ndocker node update\r\nUpdate a node\r\nServices\r\ndocker service create\r\nCreate a new service\r\ndocker service inspect\r\nDisplay detailed information on one or more services\r\ndocker service logs\r\nFetch the logs of a service or task\r\ndocker service ls\r\nList services\r\ndocker service ps\r\nList the tasks of one or more services\r\ndocker service rm\r\nRemove one or more services\r\ndocker service rollback\r\nRevert changes to a service’s configuration\r\ndocker service scale\r\nScale one or multiple replicated services\r\ndocker service update\r\nUpdate a service\r\n', 4, '2021-12-14 17:58:01', '2021-12-21 09:14:08', 1, 1, 0, 0, '', 22, 0, NULL, 1),
(30, 6, 0, 'Terminology', 'terminology', '<ul id=\"bkmrk-data-persistence---t\"><li><strong>Data Persistence</strong> - The data survives after the process with which it was created has ended.</li>\r\n<li><strong>Redundancy</strong> - The duplication of critical components or functions of a system with the intention of increasing reliability of the system. Also, something that is redundant is no longer needed because its job is being done by something else or because its job is no longer necessary or useful.</li>\r\n<li><strong>Explicit</strong> - Describes something that is very clear and without vagueness or ambiguity.</li>\r\n<li><strong>Implicit </strong>- Not described clearly or directly, and often using implication or assumption.</li>\r\n</ul>', 'Data Persistence - The data survives after the process with which it was created has ended.\r\nRedundancy - The duplication of critical components or functions of a system with the intention of increasing reliability of the system. Also, something that is redundant is no longer needed because its job is being done by something else or because its job is no longer necessary or useful.\r\nExplicit - Describes something that is very clear and without vagueness or ambiguity.\r\nImplicit - Not described clearly or directly, and often using implication or assumption.\r\n', 3, '2021-12-14 18:24:39', '2022-01-04 12:06:33', 1, 1, 0, 0, '', 4, 0, NULL, 1),
(31, 7, 0, 'Volumes', 'volumes', '<p id=\"bkmrk-docker-has-two-optio\">Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:</p>\r\n<ol id=\"bkmrk-volumes---are-stored\" class=\"points\"><li><strong>Volumes</strong> - are stored in a part of the host filesystem, which is managed by Docker.</li>\r\n<li><strong>Bind mounts </strong>- may be stored <em>anywhere</em> on the host system.</li>\r\n</ol><p id=\"bkmrk-%C2%A0-0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639506691980.png\" alt=\"image-1639506691980.png\"></a></p>\r\n<h3 id=\"bkmrk-what-are-volumes%3F\">What are Volumes?</h3>\r\n<p id=\"bkmrk-docker-volumes-are-f\">Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).</p>\r\n<p id=\"bkmrk-there-are-3-ways-to-\">There are 3 ways to create a volume:</p>\r\n<ul id=\"bkmrk-docker-container-run\"><li>docker container run <strong>-v <em>container_directory </em></strong>- Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (<strong>Anonymous Volume</strong>).</li>\r\n<li>docker container run <strong>-v <em>host_directory:</em><em>container_directory </em></strong>- Mount a file system in container directory and specify the directory on the host where it should save the persisted data. </li>\r\n<li>docker container run <strong>-v volume_name<em>:</em><em>container_directory </em></strong>- Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (<strong>Named Volume</strong>).</li>\r\n</ul><p id=\"bkmrk-when-creating-a-volu\">When creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.</p>\r\n<ul id=\"bkmrk-for%C2%A0mongodb%C2%A0its-%2Fdat\"><li>For MongoDB its <strong>/data/db</strong></li>\r\n<li>For MySQLits /<strong>var/lib/mysql</strong></li>\r\n<li>For PostgreSQL its <strong>/var/lib/postresql/data</strong></li>\r\n</ul><h3 id=\"bkmrk-what-are-bind-mounts\">What are Bind Mounts?</h3>\r\n<p id=\"bkmrk-bind-mounts-are-crea\">Bind mounts are created by binding an existing folder in the host system to a path in the container, similarly to volumes. </p>\r\n<p id=\"bkmrk-to-use-bind-mounts%2C-\">To use bind mounts, the file or directory does not need to exist on your Docker host already. If it doesn’t exist, it will be created on demand. Bind mounts rely on the host machine’s filesystem having a specific directory structure available. You must explicitly create a path to the file or folder to place the storage.</p>\r\n<h3 id=\"bkmrk-volumes-vs-bind-moun\">Volumes vs Bind Mounts</h3>\r\n<p id=\"bkmrk-volumes%C2%A0are-the-pref\"><strong>Volumes </strong>are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.</p>', 'Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:\r\nVolumes - are stored in a part of the host filesystem, which is managed by Docker.\r\nBind mounts - may be stored anywhere on the host system.\r\n \r\n\r\nWhat are Volumes?\r\nDocker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).\r\nThere are 3 ways to create a volume:\r\ndocker container run -v container_directory - Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (Anonymous Volume).\r\ndocker container run -v host_directory:container_directory - Mount a file system in container directory and specify the directory on the host where it should save the persisted data. \r\ndocker container run -v volume_name:container_directory - Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (Named Volume).\r\nWhen creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.\r\nFor MongoDB its /data/db\r\nFor MySQLits /var/lib/mysql\r\nFor PostgreSQL its /var/lib/postresql/data\r\nWhat are Bind Mounts?\r\nBind mounts are created by binding an existing folder in the host system to a path in the container, similarly to volumes. \r\nTo use bind mounts, the file or directory does not need to exist on your Docker host already. If it doesn’t exist, it will be created on demand. Bind mounts rely on the host machine’s filesystem having a specific directory structure available. You must explicitly create a path to the file or folder to place the storage.\r\nVolumes vs Bind Mounts\r\nVolumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.', 0, '2021-12-14 18:28:26', '2021-12-18 10:50:18', 1, 1, 0, 0, '', 13, 0, NULL, 1),
(33, 7, 0, 'Building Docker Projects', 'building-docker-projects', '<h3 id=\"bkmrk-dockerfile\">Dockerfile</h3>\r\n<p id=\"bkmrk-a-dockerfile-is-a-si\">A Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. Users can create an automated build that executes several command-line instructions in succession. Every container is based on an OS image, e.g. Alpine, CentOS or Ubuntu. They just share the host kernel, but run every user-space process in a separate name space specific for that container.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639848497835.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639848497835.png\" alt=\"image-1639848497835.png\" width=\"242\" height=\"92\"></a></p>\r\n<h5 id=\"bkmrk-examples%3A\"><strong>Examples:</strong></h5>\r\n<p id=\"bkmrk-backend\"><strong>Backend</strong></p>\r\n<pre id=\"bkmrk-from-php%3A7.3-run-apt\"><code class=\"language-shell\">FROM php:7.3\r\n\r\nRUN apt-get update -y &amp;&amp; apt-get install -y openssl zip unzip git\r\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\r\nRUN docker-php-ext-install pdo mbstring pdo_mysql\r\n\r\nWORKDIR /app/backend\r\nCOPY . .\r\nRUN composer install\r\n\r\nEXPOSE 8000\r\nCMD php artisan serve --host=0.0.0.0</code></pre>\r\n<p id=\"bkmrk-frontend\"><strong>Frontend</strong></p>\r\n<pre id=\"bkmrk-from-node%3Aalpine-wor\"><code class=\"language-shell\">FROM node:alpine\r\nWORKDIR /app/frontend\r\n\r\nCOPY . .\r\nRUN npm install\r\n\r\nEXPOSE 3000\r\nCMD npm start</code></pre>\r\n<h3 id=\"bkmrk-docker-compose\">Docker Compose</h3>\r\n<p id=\"bkmrk-docker-compose%C2%A0is-a-\">Docker Compose is a tool that was developed to help define and share multi-container applications. With Compose, we can create a YAML file to define the services and with a single command, can spin everything up or tear it all down.</p>\r\n<p id=\"bkmrk-example%3A-0\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-version%3A-%223.9%22-servi\"><code class=\"language-shell\">version: \"3.9\"\r\nservices:\r\n	backend:\r\n    	image: app-backend # build docker image named \"app-backend\" from Dockerfile instead of pulling it from Docker Hub\r\n    	build:\r\n        	context: ./backend/development\r\n            dockerfile: Dockerfile\r\n		environment:\r\n        	DB_HOST: db # since it is on the same network, it can resolve localhost as db\r\n            DB_DATABASE: auth\r\n            DB_USERNAME: root\r\n            DB_PASSWORD: root\r\n		ports:\r\n        	- 8000:8000\r\n		depends_on: # service will start only when db is started successfully\r\n       		- db\r\n		volumes:\r\n        	- ./backend/development:/app/backend\r\n    	networks:\r\n        	- app\r\n	frontend:\r\n    	build:\r\n        	context: ./frontend/resources\r\n            dockerfile: Dockerfile\r\n		tty: true # keep connection live while frontend is running\r\n		ports:\r\n        	- 3000:3000\r\n		volumes:\r\n        	- ./frontend/resources:/app/frontend\r\n			- mysql-data:/var/lib/mysql\r\n		depends_on: \r\n       		- db\r\n    	networks:\r\n        	- app\r\n	db:\r\n    	image: mysql:5.7\r\n        environment: \r\n        	MYSQL_DATABASE: \'auth\'\r\n            MYSQL_USER: \'root\'\r\n			MYSQL_PASSWORD: \'root\'\r\n            MYSQL_ROOT_PASSWORD: \'root\'\r\n		networks:\r\n        	- app\r\n\r\nnetworks:\r\n	app:\r\n		driver: bridge\r\n        \r\nvolumes:\r\n	mysql-data:</code></pre>', 'Dockerfile\r\nA Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. Users can create an automated build that executes several command-line instructions in succession. Every container is based on an OS image, e.g. Alpine, CentOS or Ubuntu. They just share the host kernel, but run every user-space process in a separate name space specific for that container.\r\n\r\nExamples:\r\nBackend\r\nFROM php:7.3\r\n\r\nRUN apt-get update -y && apt-get install -y openssl zip unzip git\r\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\r\nRUN docker-php-ext-install pdo mbstring pdo_mysql\r\n\r\nWORKDIR /app/backend\r\nCOPY . .\r\nRUN composer install\r\n\r\nEXPOSE 8000\r\nCMD php artisan serve --host=0.0.0.0\r\nFrontend\r\nFROM node:alpine\r\nWORKDIR /app/frontend\r\n\r\nCOPY . .\r\nRUN npm install\r\n\r\nEXPOSE 3000\r\nCMD npm start\r\nDocker Compose\r\nDocker Compose is a tool that was developed to help define and share multi-container applications. With Compose, we can create a YAML file to define the services and with a single command, can spin everything up or tear it all down.\r\nExample:\r\nversion: \"3.9\"\r\nservices:\r\n	backend:\r\n    	image: app-backend # build docker image named \"app-backend\" from Dockerfile instead of pulling it from Docker Hub\r\n    	build:\r\n        	context: ./backend/development\r\n            dockerfile: Dockerfile\r\n		environment:\r\n        	DB_HOST: db # since it is on the same network, it can resolve localhost as db\r\n            DB_DATABASE: auth\r\n            DB_USERNAME: root\r\n            DB_PASSWORD: root\r\n		ports:\r\n        	- 8000:8000\r\n		depends_on: # service will start only when db is started successfully\r\n       		- db\r\n		volumes:\r\n        	- ./backend/development:/app/backend\r\n    	networks:\r\n        	- app\r\n	frontend:\r\n    	build:\r\n        	context: ./frontend/resources\r\n            dockerfile: Dockerfile\r\n		tty: true # keep connection live while frontend is running\r\n		ports:\r\n        	- 3000:3000\r\n		volumes:\r\n        	- ./frontend/resources:/app/frontend\r\n			- mysql-data:/var/lib/mysql\r\n		depends_on: \r\n       		- db\r\n    	networks:\r\n        	- app\r\n	db:\r\n    	image: mysql:5.7\r\n        environment: \r\n        	MYSQL_DATABASE: \'auth\'\r\n            MYSQL_USER: \'root\'\r\n			MYSQL_PASSWORD: \'root\'\r\n            MYSQL_ROOT_PASSWORD: \'root\'\r\n		networks:\r\n        	- app\r\n\r\nnetworks:\r\n	app:\r\n		driver: bridge\r\n        \r\nvolumes:\r\n	mysql-data:', 2, '2021-12-18 11:02:21', '2021-12-28 08:57:28', 1, 1, 0, 0, '', 7, 0, NULL, 1),
(34, 7, 0, 'Networks', 'networks', '<p id=\"bkmrk-docker-networks-take\">Docker Networks takes care of the networking aspects so that the containers can communicate with other containers and also with the Docker Host. Already running containers can also be attached to a network.</p>\r\n<p id=\"bkmrk-docker-by%C2%A0default-su\">Docker by default supports 3 networks:</p>\r\n<ul id=\"bkmrk-bridge-host-none\"><li>Bridge</li>\r\n<li>Host</li>\r\n<li>None</li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639842891807.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639842891807.png\" alt=\"image-1639842891807.png\" width=\"362\" height=\"225\"></a></p>\r\n<h4 id=\"bkmrk-none\">None</h4>\r\n<p id=\"bkmrk-this-mode-will-not-c\">This mode will not configure any IP for the container and doesn’t have any access to the external network as well as for other containers. This option is used when a user wants to disable the networking access to a container.</p>\r\n<h4 id=\"bkmrk-bridge\">Bridge</h4>\r\n<p id=\"bkmrk-it-is-the-docker-def\">Bridge network uses a software bridge which allows containers connected to the same bridge network to communicate, while providing isolation from containers which are not connected to that bridge network. </p>\r\n<p id=\"bkmrk-when-you-start-docke\">When you start Docker, a default bridge network is created automatically, and newly-started containers connect to it unless otherwise specified. You can also create user-defined custom bridge networks. User-defined bridge networks are superior to the default bridge network.</p>\r\n<ul id=\"bkmrk-the-container-can%27t-\"><li>The container can\'t directly use host\'s networking, there is a need for “port mapping“.</li>\r\n<li>User-defined bridges provide automatic DNS resolution between containers. Containers on the default bridge network can only access each other by IP addresses. On a user-defined bridge network, containers can resolve each other by name or alias.</li>\r\n</ul><h4 id=\"bkmrk-host\">Host</h4>\r\n<p id=\"bkmrk-in-this-mode%C2%A0contain\">In this mode container will share the host’s network stack and all interfaces from the host will be available to the container. The container’s host name will match the host name on the host system. </p>\r\n<ul id=\"bkmrk-the-a-container-can-\"><li>The a container can directly use the host’s networking, for example, the docker container can directly use the “eth0” for sending and receiving packets. There is no need for \"port mapping\".</li>\r\n</ul>', 'Docker Networks takes care of the networking aspects so that the containers can communicate with other containers and also with the Docker Host. Already running containers can also be attached to a network.\r\nDocker by default supports 3 networks:\r\nBridge\r\nHost\r\nNone\r\n\r\nNone\r\nThis mode will not configure any IP for the container and doesn’t have any access to the external network as well as for other containers. This option is used when a user wants to disable the networking access to a container.\r\nBridge\r\nBridge network uses a software bridge which allows containers connected to the same bridge network to communicate, while providing isolation from containers which are not connected to that bridge network. \r\nWhen you start Docker, a default bridge network is created automatically, and newly-started containers connect to it unless otherwise specified. You can also create user-defined custom bridge networks. User-defined bridge networks are superior to the default bridge network.\r\nThe container can\'t directly use host\'s networking, there is a need for “port mapping“.\r\nUser-defined bridges provide automatic DNS resolution between containers. Containers on the default bridge network can only access each other by IP addresses. On a user-defined bridge network, containers can resolve each other by name or alias.\r\nHost\r\nIn this mode container will share the host’s network stack and all interfaces from the host will be available to the container. The container’s host name will match the host name on the host system. \r\nThe a container can directly use the host’s networking, for example, the docker container can directly use the “eth0” for sending and receiving packets. There is no need for \"port mapping\".\r\n', 1, '2021-12-18 12:28:49', '2021-12-18 16:19:56', 1, 1, 0, 0, '', 6, 0, NULL, 1),
(37, 3, 0, 'References', 'references', '<p id=\"bkmrk-to-save-you-from-hav\">To save you from having to memorise these hashes, Git has references, or refs. A reference is simply a file stored somewhere in <em>.git/refs</em>, containing the hash of a commit object.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639937341204.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639937341204.png\" alt=\"image-1639937341204.png\" width=\"380\" height=\"201\"></a></p>\r\n<p id=\"bkmrk-when-you-create-a-ne\">When you create a new branch, all that happens is that a new reference is created pointing to a commit</p>', 'To save you from having to memorise these hashes, Git has references, or refs. A reference is simply a file stored somewhere in .git/refs, containing the hash of a commit object.\r\n\r\nWhen you create a new branch, all that happens is that a new reference is created pointing to a commit', 5, '2021-12-19 18:08:45', '2021-12-19 18:13:29', 1, 1, 0, 0, '', 2, 0, NULL, 1),
(40, 6, 0, 'Learning Roadmap', 'learning-roadmap', '<h4 id=\"bkmrk-current-roadmap\">Current Roadmap</h4>\r\n<ol id=\"bkmrk-docker-webpack-php-m\"><li>Docker</li>\r\n<li>Webpack and JS modules</li>\r\n<li>PHP MVC</li>\r\n<li>Vanilla JS</li>\r\n<li>Design Patterns</li>\r\n<li>Read SQL docs -&gt; <a href=\"https://dev.mysql.com/doc/refman/8.0/en/\">https://dev.mysql.com/doc/refman/8.0/en/</a></li>\r\n<li>PHP-FPM, PostgreSQL, Nginx, Apache</li>\r\n<li>SOLID</li>\r\n<li>DB Sharding</li>\r\n<li>SSL/TLS</li>\r\n<li> </li>\r\n</ol><h4 id=\"bkmrk-future-certificates%C2%A0\">Future Certificates </h4>\r\n<ol id=\"bkmrk-network%2B-linux%2B-secu\"><li>Network+</li>\r\n<li>Linux+</li>\r\n<li>\r\n<p>Security+</p>\r\n</li>\r\n<li>\r\n<p class=\"udlite-heading-xl clp-lead__title clp-lead__title--small\" data-purpose=\"lead-title\">AWS Certified Cloud Practitioner</p>\r\n</li>\r\n</ol><h4 id=\"bkmrk-things-i-still-need-\">Things I still need to polish</h4>\r\n<ol id=\"bkmrk-docker-php-server-co\"><li>Docker</li>\r\n<li>PHP Server Configuration</li>\r\n<li>Complicated SQL queries</li>\r\n</ol>', 'Current Roadmap\r\nDocker\r\nWebpack and JS modules\r\nPHP MVC\r\nVanilla JS\r\nDesign Patterns\r\nRead SQL docs -> https://dev.mysql.com/doc/refman/8.0/en/\r\nPHP-FPM, PostgreSQL, Nginx, Apache\r\nSOLID\r\nDB Sharding\r\nSSL/TLS\r\n \r\nFuture Certificates \r\nNetwork+\r\nLinux+\r\n\r\nSecurity+\r\n\r\n\r\nAWS Certified Cloud Practitioner\r\n\r\nThings I still need to polish\r\nDocker\r\nPHP Server Configuration\r\nComplicated SQL queries\r\n', 4, '2021-12-20 15:09:00', '2022-03-22 19:47:00', 1, 1, 0, 0, '', 10, 0, NULL, 1);
INSERT INTO `pages` (`id`, `book_id`, `chapter_id`, `name`, `slug`, `html`, `text`, `priority`, `created_at`, `updated_at`, `created_by`, `updated_by`, `restricted`, `draft`, `markdown`, `revision_count`, `template`, `deleted_at`, `owned_by`) VALUES
(43, 11, 0, 'Configuration', 'configuration', '<p id=\"bkmrk-%C2%A0\">Webpack is a static module bundler for JavaScript applications/ it takes all the code from your application and makes it usable in a web browser. </p>\r\n<p id=\"bkmrk-the-entry-object-is-\">The entry object is where webpack looks to start building the bundle.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1640255643311.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1640255643311.png\" alt=\"image-1640255643311.png\" width=\"445\" height=\"275\"></a></p>\r\n<h3 id=\"bkmrk-%C2%A0-0\"> </h3>\r\n<h3 id=\"bkmrk-cache-busting\">Cache busting</h3>\r\n<p id=\"bkmrk-cache-busting-means%C2%A0\">Cache busting means making sure the users browser loads the newest version of our app, if it has been updated, instead of using a cached version. Using a fixed filename for the bundle is problematic because the browser will cache the file and use the cached version even when the file has changed. What we want to do is to add a suffix to our filename and change it every time the code changes.</p>\r\n<pre id=\"bkmrk-const-path-%3D-require\"><code class=\"language-JavaScript\">const path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    output: {\r\n        filename: \'main.[contenthash].js\', /* We assign a unique hash to the filename, to prevent the browser from caching it */\r\n        path: path.resolve(__dirname, \"build\")\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}</code></pre>\r\n<p id=\"bkmrk-%C2%A0-1\"> </p>\r\n<p id=\"bkmrk-%C2%A0-2\"> </p>\r\n<p id=\"bkmrk-%C2%A0-3\"> </p>', 'Webpack is a static module bundler for JavaScript applications/ it takes all the code from your application and makes it usable in a web browser. \r\nThe entry object is where webpack looks to start building the bundle.\r\n\r\n \r\nCache busting\r\nCache busting means making sure the users browser loads the newest version of our app, if it has been updated, instead of using a cached version. Using a fixed filename for the bundle is problematic because the browser will cache the file and use the cached version even when the file has changed. What we want to do is to add a suffix to our filename and change it every time the code changes.\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    output: {\r\n        filename: \'main.[contenthash].js\', /* We assign a unique hash to the filename, to prevent the browser from caching it */\r\n        path: path.resolve(__dirname, \"build\")\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}\r\n \r\n \r\n ', 2, '2021-12-23 10:33:13', '2021-12-23 13:10:56', 1, 1, 0, 0, '', 8, 0, NULL, 1),
(44, 11, 0, 'Loaders', 'loaders', '<p id=\"bkmrk-the-loader-is-respon\">The loader is responsible for parsing/processing the resource, which might do any of the following:</p>\r\n<ul id=\"bkmrk-transpile-it-into-an\"><li>Transpile it into another language (e.g. babel-loader)</li>\r\n<li>Copy the resource to a specified location and provide the new location as the imported value (e.g. file-loader)</li>\r\n<li>Ignore the resource entirely (e.g. ignore-loader)</li>\r\n</ul><p id=\"bkmrk-one-thing-that-makes\">One thing that makes Webpack so powerful is that these loaders can find more dependent resources inside the resource they\'re processing, and hand off to other loaders. So it\'s plausible to import an HTML file within your javascript, and that HTML file could reference another javascript file, which could then be loaded too.</p>\r\n<p id=\"bkmrk-module-loaders-can-b\">Module loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result to the next one, and so forth. Finally, Webpack expects JavaScript to be returned by the last loader in the chain.</p>\r\n<p id=\"bkmrk-webpack-loaders-esse\">Webpack loaders essentially create a processing pipeline for your code which gets evaluated in the reverse order that it is listed. For example, if our loader is listed after <code class=\"ir is it iu iv b\">babel-loader</code>, our loader will pass its results on to <code class=\"ir is it iu iv b\">babel-loader</code>. You can look at loaders as a function that gets some input data, usually a file or the output of another loader, and returns something.</p>\r\n<h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code>require()</code> it and add it to the <code>plugins</code> array.</p>\r\n<h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-const-htmlwebpackplu\"><code class=\"language-JavaScript\">const HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nconst path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code><span class=\"notion-enable-hover\" spellcheck=\"false\" data-token-index=\"1\" data-reactroot=\"\">dist/index.html</span></code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n<h3 id=\"bkmrk-mode\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code>mode</code> parameter to either <code>development</code>, <code>production</code> or <code>none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code>production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\">The goals of <em>development</em> and <em>production</em> builds differ greatly. In <em>development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em>production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\">In order to merge these configurations together, we’ll use a utility called <code>webpack-merge</code>.</p>\r\n<pre id=\"bkmrk-%2F%2A-webpack.dev.js-%2A%2F\"><code class=\"language-JavaScript\">/* webpack.dev.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"development\",\r\n    output: {\r\n        filename: \'main.js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\r\nconst { CleanWebpackPlugin } = require(\"clean-webpack-plugin\")\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            },\r\n            {\r\n                test: /\\.html$/,\r\n                use: [\"html-loader\"]\r\n            },\r\n            {\r\n                test: /\\.(svg|png|jpg|gif)$/,\r\n                use: {\r\n                    loader: \"file-loader\",\r\n                    options: {\r\n                        name: \"[name].[hash].[ext]\",\r\n                        outputPath: \"images\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    ), new CleanWebpackPlugin()],\r\n}</code></pre>\r\n<p id=\"bkmrk-now-let%E2%80%99s-repoint-ou\">Now let’s repoint our <code class=\"ll lm ln lo kr b\">scripts</code> to the new configurations. We\'ll use the <em class=\"iz\">development</em> one for our <code class=\"ll lm ln lo kr b\">webpack-dev-server</code>, <code class=\"ll lm ln lo kr b\">npm start</code>, script and the <em class=\"iz\">production</em> one for our <code class=\"ll lm ln lo kr b\">npm run build</code> script:</p>\r\n<pre id=\"bkmrk-%7B-...-%22scripts%22%3A-%7B-%22\"><code class=\"language-JavaScript\">{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}</code></pre>', 'The loader is responsible for parsing/processing the resource, which might do any of the following:\r\nTranspile it into another language (e.g. babel-loader)\r\nCopy the resource to a specified location and provide the new location as the imported value (e.g. file-loader)\r\nIgnore the resource entirely (e.g. ignore-loader)\r\nOne thing that makes Webpack so powerful is that these loaders can find more dependent resources inside the resource they\'re processing, and hand off to other loaders. So it\'s plausible to import an HTML file within your javascript, and that HTML file could reference another javascript file, which could then be loaded too.\r\nModule loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result to the next one, and so forth. Finally, Webpack expects JavaScript to be returned by the last loader in the chain.\r\nWebpack loaders essentially create a processing pipeline for your code which gets evaluated in the reverse order that it is listed. For example, if our loader is listed after babel-loader, our loader will pass its results on to babel-loader. You can look at loaders as a function that gets some input data, usually a file or the output of another loader, and returns something.\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nconst path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\n/* webpack.dev.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"development\",\r\n    output: {\r\n        filename: \'main.js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\r\nconst { CleanWebpackPlugin } = require(\"clean-webpack-plugin\")\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            },\r\n            {\r\n                test: /\\.html$/,\r\n                use: [\"html-loader\"]\r\n            },\r\n            {\r\n                test: /\\.(svg|png|jpg|gif)$/,\r\n                use: {\r\n                    loader: \"file-loader\",\r\n                    options: {\r\n                        name: \"[name].[hash].[ext]\",\r\n                        outputPath: \"images\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    ), new CleanWebpackPlugin()],\r\n}\r\nNow let’s repoint our scripts to the new configurations. We\'ll use the development one for our webpack-dev-server, npm start, script and the production one for our npm run build script:\r\n{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}', 3, '2021-12-23 10:44:06', '2021-12-29 09:45:47', 1, 1, 0, 0, '', 19, 0, NULL, 1),
(47, 10, 2, 'Modules', 'modules-rWj', '<p id=\"bkmrk-without-module-syste\">Without module systems, dependancies had to be loaded in &lt;script&gt; tags in the header of an HTML file, OR all code had to be lumped together which is incredibly slow and inefficient for file loading. Not to mention, your app would completely crash if there was a bug in any part of the code!</p>\r\n<p id=\"bkmrk-javascript-was-desig\">JavaScript was designed to only run in the browser, with no access to the file system of the client’s computer (for security reasons). So for the longest time, organising JavaScript code in multiple files required you to load each file with variables shared globally.</p>\r\n<h4 id=\"bkmrk-self-executing-anony\">Self-executing Anonymous Functions</h4>\r\n<p id=\"bkmrk-the-first-step-on-th\">The first step on the journey to beautiful, modular JavaScript is to learn the art of the self-executing anonymous function. One of the major benefits of this pattern is that you can limit access to variables and functions within your closure, essentially making them private and only choosing to expose an API of your choice to the global scope.</p>\r\n<pre id=\"bkmrk-%28function%28%29%7B-var-foo\"><code class=\"language-JavaScript\">(function(){\r\n  var foo = \'Hello\';\r\n  var bar = \'World!\'\r\n  \r\n  function baz(){\r\n      return foo + \' \' + bar;\r\n  }\r\n\r\n  window.baz = baz; //Assign \'baz\' to the global variable \'baz\'...\r\n})();\r\n\r\nconsole.log(baz()); //...and now this works.\r\n\r\n//It\'s important to note that these still won\'t work: \r\nconsole.log(foo);\r\nconsole.log(bar);</code></pre>\r\n<h4 id=\"bkmrk-commonjs-modules\">CommonJS Modules</h4>\r\n<p id=\"bkmrk-the-commonjs-module-\" class=\"post-description\">The CommonJS module specification is the standard used in node.js for working with modules. CommonJS allows for code encapsulation, as modules with no global variables won’t conflict with each other when your application is run. To use CommonJS, the code must be packaged with a transpiler since browsers don\'t support CommonJS.</p>\r\n<pre id=\"bkmrk-%2F%2F-namemodule.js-con\"><code class=\"language-JavaScript\">// nameModule.js\r\nconst getFullName = (name, surname) =&gt; {\r\n	return name + \" \" + surname;\r\n};\r\n\r\nconst getSurname = (name, surname) =&gt; {\r\n	return surname;\r\n};\r\n\r\nmodule.exports = {\r\n  getFullName,\r\n  getSurname\r\n};\r\n\r\n// nameScript.js\r\nconst {getSurname, getFullName} = require(\"./nameModule\");\r\nconst surname = nameModule.getSurname(\"Howard\");</code></pre>\r\n<p id=\"bkmrk-again%2C-this-is-how-m\" class=\"hq hr dg hs b ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij ik il im in cz bq\" data-selectable-paragraph=\"\">Again, this is how module loading works in node.js, which works great since node.js is a server side language with access to the computer’s file system. Node.js also knows the location of each npm module path, so instead of having to write <code class=\"kh ki kj kk kl b\">require(\'./node_modules/moment/min/moment.min.js)</code>, you can simply write <code class=\"kh ki kj kk kl b\">require(\'moment\')</code>.</p>\r\n<h4 id=\"bkmrk-es6-modules\">ES6 modules</h4>\r\n<p id=\"bkmrk-es6-modules-are-not-\">ES6 modules are not supported in all browsers. For production applications, transpilers like Webpack and Babel are used to convert our code from ES6 to ES5 to ensure cross-browser compatibility</p>\r\n<ul id=\"bkmrk-everything-inside-an\" class=\"\"><li id=\"bkmrk-everything-inside-an-0\" class=\"hw hx dn hy b hz jv ib ic id jw if ig ih jx ij ik il jy in io ip jz ir is hv ka kb kc ek\" data-selectable-paragraph=\"\">Everything inside an ES6 module is private by default, and runs in strict mode (there’s no need for <code class=\"lb lc ld le kw b\">\'use strict\'</code>).</li>\r\n<li id=\"bkmrk-public-variables%2C-fu\" class=\"hw hx dn hy b hz kd ib ic id ke if ig ih kf ij ik il kg in io ip kh ir is hv ka kb kc ek\" data-selectable-paragraph=\"\">Public variables, functions and classes are exposed using <code class=\"lb lc ld le kw b\">export</code>.</li>\r\n<li id=\"bkmrk-exposed-modules-are-\" class=\"hw hx dn hy b hz kd ib ic id ke if ig ih kf ij ik il kg in io ip kh ir is hv ka kb kc ek\" data-selectable-paragraph=\"\">Exposed modules are called into other modules using <code class=\"lb lc ld le kw b\">import</code></li>\r\n<li id=\"bkmrk-modules-must-be-incl\" class=\"hw hx dn hy b hz kd ib ic id ke if ig ih kf ij ik il kg in io ip kh ir is hv ka kb kc ek\" data-selectable-paragraph=\"\">Modules must be included in your HTML with <code class=\"lb lc ld le kw b\">type=\"module\"</code>, which can be an inline or external script tag.</li>\r\n<li id=\"bkmrk-modules-are-deferred\" class=\"hw hx dn hy b hz iu ib ic id iv if ig ih iw ij ik il ix in io ip iy ir is hv ka kb kc ek\" data-selectable-paragraph=\"\">Modules are deferred, and only run after a document is loaded</li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1640091532468.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1640091532468.png\" alt=\"image-1640091532468.png\" width=\"512\" height=\"143\"></a></p>\r\n<pre id=\"bkmrk-%2F%2F-math.js-let-sumal\"><code class=\"language-JavaScript\">// math.js\r\nlet sumAll = (a, b) =&gt; {return a + b;}\r\nlet subtractAll = (a, b) =&gt; {return a - b;}\r\nlet divideAll = (a, b) =&gt; {return a / b;}\r\nlet multiplyAll = (a, b) =&gt; {return a * b;}\r\nlet findModulus = (a, b) =&gt; {return a % b;}\r\nexport {sumAll, subtractAll, divideAll, multiplyAll, findModulus};\r\n\r\n//scripts.js\r\nimport {sumAll, subtractAll, divideAll} from \'./math.js\';))</code></pre>\r\n<p id=\"bkmrk-if-you-are-looking-a\">If you are looking at starting a new module or project, ES6 modules is the right way to go and CommonJS/Node remains the choice for the server.</p>', 'Without module systems, dependancies had to be loaded in <script> tags in the header of an HTML file, OR all code had to be lumped together which is incredibly slow and inefficient for file loading. Not to mention, your app would completely crash if there was a bug in any part of the code!\r\nJavaScript was designed to only run in the browser, with no access to the file system of the client’s computer (for security reasons). So for the longest time, organising JavaScript code in multiple files required you to load each file with variables shared globally.\r\nSelf-executing Anonymous Functions\r\nThe first step on the journey to beautiful, modular JavaScript is to learn the art of the self-executing anonymous function. One of the major benefits of this pattern is that you can limit access to variables and functions within your closure, essentially making them private and only choosing to expose an API of your choice to the global scope.\r\n(function(){\r\n  var foo = \'Hello\';\r\n  var bar = \'World!\'\r\n  \r\n  function baz(){\r\n      return foo + \' \' + bar;\r\n  }\r\n\r\n  window.baz = baz; //Assign \'baz\' to the global variable \'baz\'...\r\n})();\r\n\r\nconsole.log(baz()); //...and now this works.\r\n\r\n//It\'s important to note that these still won\'t work: \r\nconsole.log(foo);\r\nconsole.log(bar);\r\nCommonJS Modules\r\nThe CommonJS module specification is the standard used in node.js for working with modules. CommonJS allows for code encapsulation, as modules with no global variables won’t conflict with each other when your application is run. To use CommonJS, the code must be packaged with a transpiler since browsers don\'t support CommonJS.\r\n// nameModule.js\r\nconst getFullName = (name, surname) => {\r\n	return name + \" \" + surname;\r\n};\r\n\r\nconst getSurname = (name, surname) => {\r\n	return surname;\r\n};\r\n\r\nmodule.exports = {\r\n  getFullName,\r\n  getSurname\r\n};\r\n\r\n// nameScript.js\r\nconst {getSurname, getFullName} = require(\"./nameModule\");\r\nconst surname = nameModule.getSurname(\"Howard\");\r\nAgain, this is how module loading works in node.js, which works great since node.js is a server side language with access to the computer’s file system. Node.js also knows the location of each npm module path, so instead of having to write require(\'./node_modules/moment/min/moment.min.js), you can simply write require(\'moment\').\r\nES6 modules\r\nES6 modules are not supported in all browsers. For production applications, transpilers like Webpack and Babel are used to convert our code from ES6 to ES5 to ensure cross-browser compatibility\r\nEverything inside an ES6 module is private by default, and runs in strict mode (there’s no need for \'use strict\').\r\nPublic variables, functions and classes are exposed using export.\r\nExposed modules are called into other modules using import\r\nModules must be included in your HTML with type=\"module\", which can be an inline or external script tag.\r\nModules are deferred, and only run after a document is loaded\r\n\r\n// math.js\r\nlet sumAll = (a, b) => {return a + b;}\r\nlet subtractAll = (a, b) => {return a - b;}\r\nlet divideAll = (a, b) => {return a / b;}\r\nlet multiplyAll = (a, b) => {return a * b;}\r\nlet findModulus = (a, b) => {return a % b;}\r\nexport {sumAll, subtractAll, divideAll, multiplyAll, findModulus};\r\n\r\n//scripts.js\r\nimport {sumAll, subtractAll, divideAll} from \'./math.js\';))\r\nIf you are looking at starting a new module or project, ES6 modules is the right way to go and CommonJS/Node remains the choice for the server.', 1, '2022-01-03 14:26:12', '2022-01-03 14:27:10', 1, 1, 0, 0, '', 2, 0, NULL, 1),
(49, 10, 1, 'Memory Heap and Stack', 'memory-heap-and-stack', '<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641220206144.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641220206144.png\" alt=\"image-1641220206144.png\" width=\"514\" height=\"272\"></a></p>\r\n<p id=\"bkmrk-javascript-stores-al\">Javascript stores all variables in two places. Which of these places will be used depends on what you are currently working with. Javascript is a single threaded language because it has one stack and one heap.</p>\r\n<h4 id=\"bkmrk-stack\">Stack</h4>\r\n<ul id=\"bkmrk-a-stack-is-a-data-st\"><li>A stack is a data structure that JavaScript uses to store <em>static</em> data. Static data is data where the engine knows the size at compile time. This includes (<em>strings</em>, <em>numbers</em>, <em>booleans</em>, <em>undefined</em>, and <em>null)</em> and references, which point to objects and functions.</li>\r\n<li>Since the engine knows that the size won\'t change, it will allocate a fixed amount of memory for each value. The process of allocating memory right before execution is known as static memory allocation.</li>\r\n<li>Because the engine allocates a fixed amount of memory for these values, there is a limit to how large primitive values can be.</li>\r\n</ul><h4 id=\"bkmrk-memory-heap%C2%A0\">Memory Heap </h4>\r\n<ul id=\"bkmrk-the-heap-is-a-differ\"><li>The heap is a different space for storing data where JavaScript stores objects and functions.</li>\r\n<li>Unlike the stack, the engine doesn\'t allocate a fixed amount of memory for these objects. Instead, more space will be allocated as needed.</li>\r\n<li>Allocating memory this way is also called dynamic memory allocation.</li>\r\n<li>The memory of the heap is not ordered in any particular way, which is why we need to keep a reference to it in the stack. You can think of references as addresses and the objects in the heap as houses that these addresses belong to.</li>\r\n<li style=\"list-style-type: none;\"> </li>\r\n</ul>', '\r\nJavascript stores all variables in two places. Which of these places will be used depends on what you are currently working with. Javascript is a single threaded language because it has one stack and one heap.\r\nStack\r\nA stack is a data structure that JavaScript uses to store static data. Static data is data where the engine knows the size at compile time. This includes (strings, numbers, booleans, undefined, and null) and references, which point to objects and functions.\r\nSince the engine knows that the size won\'t change, it will allocate a fixed amount of memory for each value. The process of allocating memory right before execution is known as static memory allocation.\r\nBecause the engine allocates a fixed amount of memory for these values, there is a limit to how large primitive values can be.\r\nMemory Heap \r\nThe heap is a different space for storing data where JavaScript stores objects and functions.\r\nUnlike the stack, the engine doesn\'t allocate a fixed amount of memory for these objects. Instead, more space will be allocated as needed.\r\nAllocating memory this way is also called dynamic memory allocation.\r\nThe memory of the heap is not ordered in any particular way, which is why we need to keep a reference to it in the stack. You can think of references as addresses and the objects in the heap as houses that these addresses belong to.\r\n \r\n', 1, '2022-01-03 14:29:51', '2022-01-03 14:38:20', 1, 1, 0, 0, '', 2, 0, NULL, 1),
(50, 10, 1, 'Javascript Engine', 'javascript-engine', '<p id=\"bkmrk-a-javascript-engine-\">A JavaScript engine is a computer program that executes JavaScript code. It usually is written in C or C++.</p>\r\n<h5 id=\"bkmrk-v8-engine\">V8 Engine</h5>\r\n<p id=\"bkmrk-most-popular-javascr\">Most popular Javascript engine is V8 engine. It both interprets and compiles Javascript code. This is called JIT or <strong>Just-in-time</strong> compilation. Initially the code gets set to the interpreter. Then the profiler checks if the code is ran multiple times and if it is, then it gets compiled by the compiler. This means, that the more times the code gets ran, the faster it gets.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641220607380.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641220607380.png\" alt=\"image-1641220607380.png\" width=\"467\" height=\"174\"></a></p>', 'A JavaScript engine is a computer program that executes JavaScript code. It usually is written in C or C++.\r\nV8 Engine\r\nMost popular Javascript engine is V8 engine. It both interprets and compiles Javascript code. This is called JIT or Just-in-time compilation. Initially the code gets set to the interpreter. Then the profiler checks if the code is ran multiple times and if it is, then it gets compiled by the compiler. This means, that the more times the code gets ran, the faster it gets.\r\n', 2, '2022-01-03 14:36:12', '2022-01-03 14:37:16', 1, 1, 0, 0, '', 2, 0, NULL, 1),
(51, 12, 0, 'References', 'references', '<p id=\"bkmrk-php-reference-are-th\">PHP reference are the symbol table aliases by means of which content of one variable can be access by different names. The explicitly defined referenced variable needs to be preceded by ampersand (&amp;) symbol. The functionality of PHP references can be explained using the analogy of Window’s shortcut.</p>\r\n<p id=\"bkmrk-objects-are-passed-b\">Objects are passed by reference. Everything else is passed by value unless you explicitly use pass-by-reference with the &amp; operator.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641224912453.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641224912453.png\" alt=\"image-1641224912453.png\" width=\"379\" height=\"206\"></a></p>\r\n<p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-%3C%3Fphp-%2F%2A-imagine-thi\"><code class=\"language-PHP\">&lt;?php\r\n/* Imagine this is memory map\r\n______________________________\r\n|pointer | value | variable              |\r\n-----------------------------------\r\n|   1     |  NULL  |         ---           |\r\n|   2     |  NULL  |         ---           |\r\n|   3     |  NULL  |         ---           |\r\n|   4     |  NULL  |         ---           |\r\n|   5     |  NULL  |         ---           |\r\n------------------------------------\r\nCreate some variables   */\r\n$a=10;\r\n$b=20;\r\n$c=array (\'one\'=&gt;array (1, 2, 3));\r\n/* Look at memory\r\n_______________________________\r\n|pointer | value |       variable\'s       |\r\n-----------------------------------\r\n|   1     |  10     |       $a               |\r\n|   2     |  20     |       $b               |\r\n|   3     |  1       |      $c[\'one\'][0]   |\r\n|   4     |  2       |      $c[\'one\'][1]   |\r\n|   5     |  3       |      $c[\'one\'][2]   |\r\n------------------------------------\r\ndo  */\r\n$a=&amp;$c[\'one\'][2];\r\n/* Look at memory\r\n_______________________________\r\n|pointer | value |       variable\'s       |\r\n-----------------------------------\r\n|   1     |  NULL  |       ---              |  //value of  $a is destroyed and pointer is free\r\n|   2     |  20     |       $b               |\r\n|   3     |  1       |      $c[\'one\'][0]   |\r\n|   4     |  2       |      $c[\'one\'][1]   |\r\n|   5     |  3       |  $c[\'one\'][2]  ,$a | // $a is now here\r\n------------------------------------\r\ndo  */\r\n$b=&amp;$a;  // or  $b=&amp;$c[\'one\'][2]; result is same as both \"$c[\'one\'][2]\" and \"$a\" is at same pointer.\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  |  //value of  $b is destroyed and pointer is free\r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |$c[\'one\'][2]  ,$a , $b |  // $b is now here\r\n---------------------------------------\r\nnext do */\r\nunset($c[\'one\'][2]);\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $a , $b              | // $c[\'one\'][2]  is  destroyed not in memory, not in array\r\n---------------------------------------\r\nnext do   */\r\n$c[\'one\'][2]=500;    //now it is in array\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  500    |      $c[\'one\'][2]       |  //created it lands on any(next) free pointer in memory\r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $a , $b              | //this pointer is in use\r\n---------------------------------------\r\nlets tray to return $c[\'one\'][2] at old pointer an remove reference $a,$b.  */\r\n$c[\'one\'][2]=&amp;$a;\r\nunset($a);\r\nunset($b);  \r\n/* look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $c[\'one\'][2]       | //$c[\'one\'][2] is returned, $a,$b is destroyed\r\n--------------------------------------- ?&gt;</code></pre>', 'PHP reference are the symbol table aliases by means of which content of one variable can be access by different names. The explicitly defined referenced variable needs to be preceded by ampersand (&) symbol. The functionality of PHP references can be explained using the analogy of Window’s shortcut.\r\nObjects are passed by reference. Everything else is passed by value unless you explicitly use pass-by-reference with the & operator.\r\n\r\nExample:\r\n<?php\r\n/* Imagine this is memory map\r\n______________________________\r\n|pointer | value | variable              |\r\n-----------------------------------\r\n|   1     |  NULL  |         ---           |\r\n|   2     |  NULL  |         ---           |\r\n|   3     |  NULL  |         ---           |\r\n|   4     |  NULL  |         ---           |\r\n|   5     |  NULL  |         ---           |\r\n------------------------------------\r\nCreate some variables   */\r\n$a=10;\r\n$b=20;\r\n$c=array (\'one\'=>array (1, 2, 3));\r\n/* Look at memory\r\n_______________________________\r\n|pointer | value |       variable\'s       |\r\n-----------------------------------\r\n|   1     |  10     |       $a               |\r\n|   2     |  20     |       $b               |\r\n|   3     |  1       |      $c[\'one\'][0]   |\r\n|   4     |  2       |      $c[\'one\'][1]   |\r\n|   5     |  3       |      $c[\'one\'][2]   |\r\n------------------------------------\r\ndo  */\r\n$a=&$c[\'one\'][2];\r\n/* Look at memory\r\n_______________________________\r\n|pointer | value |       variable\'s       |\r\n-----------------------------------\r\n|   1     |  NULL  |       ---              |  //value of  $a is destroyed and pointer is free\r\n|   2     |  20     |       $b               |\r\n|   3     |  1       |      $c[\'one\'][0]   |\r\n|   4     |  2       |      $c[\'one\'][1]   |\r\n|   5     |  3       |  $c[\'one\'][2]  ,$a | // $a is now here\r\n------------------------------------\r\ndo  */\r\n$b=&$a;  // or  $b=&$c[\'one\'][2]; result is same as both \"$c[\'one\'][2]\" and \"$a\" is at same pointer.\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  |  //value of  $b is destroyed and pointer is free\r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |$c[\'one\'][2]  ,$a , $b |  // $b is now here\r\n---------------------------------------\r\nnext do */\r\nunset($c[\'one\'][2]);\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $a , $b              | // $c[\'one\'][2]  is  destroyed not in memory, not in array\r\n---------------------------------------\r\nnext do   */\r\n$c[\'one\'][2]=500;    //now it is in array\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  500    |      $c[\'one\'][2]       |  //created it lands on any(next) free pointer in memory\r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $a , $b              | //this pointer is in use\r\n---------------------------------------\r\nlets tray to return $c[\'one\'][2] at old pointer an remove reference $a,$b.  */\r\n$c[\'one\'][2]=&$a;\r\nunset($a);\r\nunset($b);  \r\n/* look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $c[\'one\'][2]       | //$c[\'one\'][2] is returned, $a,$b is destroyed\r\n--------------------------------------- ?>', 2, '2022-01-03 15:39:02', '2022-01-03 15:54:30', 1, 1, 0, 0, '', 2, 0, NULL, 1),
(52, 12, 0, 'Closures', 'closures', '<p id=\"bkmrk-%C2%A0a-closure-in-php-is\"> A closure in PHP is a function that can be created without a specified name, an anonymous function. Their most important use is for callback functions.</p>\r\n<p id=\"bkmrk-a-closure-encapsulat\">A closure encapsulates its scope, meaning that it has no access to the scope in which it is defined or executed. It is, however, possible to inherit variables from the parent scope (where the closure is defined) into the closure with the <code>use</code> keyword.</p>\r\n<p id=\"bkmrk-this-inherits-the-va\">This inherits the variables by value, that is, a copy is made available inside the closure using its original name.</p>\r\n<p id=\"bkmrk-important-notice%3A-th\"><strong>Important notice:</strong> The parent scope of a closure is the function in which the closure was declared (not necessarily the function it was called from).</p>\r\n<pre id=\"bkmrk-%3C%3Fphp-class-test-%7B-p\"><code class=\"language-PHP\">&lt;?php\r\n\r\nclass Test\r\n{\r\n    public function testing()\r\n    {\r\n        return function() {\r\n            var_dump($this);\r\n        };\r\n    }\r\n}\r\n\r\n$object = new Test;\r\n$function = $object-&gt;testing();\r\n$function();\r\n?&gt;\r\n\r\n// Output\r\nobject(Test)#1 (0) {\r\n}</code></pre>', ' A closure in PHP is a function that can be created without a specified name, an anonymous function. Their most important use is for callback functions.\r\nA closure encapsulates its scope, meaning that it has no access to the scope in which it is defined or executed. It is, however, possible to inherit variables from the parent scope (where the closure is defined) into the closure with the use keyword.\r\nThis inherits the variables by value, that is, a copy is made available inside the closure using its original name.\r\nImportant notice: The parent scope of a closure is the function in which the closure was declared (not necessarily the function it was called from).\r\n<?php\r\n\r\nclass Test\r\n{\r\n    public function testing()\r\n    {\r\n        return function() {\r\n            var_dump($this);\r\n        };\r\n    }\r\n}\r\n\r\n$object = new Test;\r\n$function = $object->testing();\r\n$function();\r\n?>\r\n\r\n// Output\r\nobject(Test)#1 (0) {\r\n}', 3, '2022-01-04 11:37:59', '2022-01-04 11:44:48', 1, 1, 0, 0, '', 2, 0, NULL, 1),
(53, 12, 0, 'Reflection', 'reflection', '<p id=\"bkmrk-reflection-is-an-api\">Reflection is an API which is used to examine or modify the behaviour of methods, classes, interfaces at runtime.</p>\r\n<p id=\"bkmrk-php-comes-with-a-com\">PHP comes with a complete reflection API that adds the ability to introspect classes, interfaces, functions, methods and extensions. Additionally, the reflection API offers ways to retrieve doc comments for functions, classes and methods.</p>', 'Reflection is an API which is used to examine or modify the behaviour of methods, classes, interfaces at runtime.\r\nPHP comes with a complete reflection API that adds the ability to introspect classes, interfaces, functions, methods and extensions. Additionally, the reflection API offers ways to retrieve doc comments for functions, classes and methods.', 4, '2022-01-04 11:45:51', '2022-01-04 11:46:39', 1, 1, 0, 0, '', 2, 0, NULL, 1);
INSERT INTO `pages` (`id`, `book_id`, `chapter_id`, `name`, `slug`, `html`, `text`, `priority`, `created_at`, `updated_at`, `created_by`, `updated_by`, `restricted`, `draft`, `markdown`, `revision_count`, `template`, `deleted_at`, `owned_by`) VALUES
(55, 10, 2, 'Promises', 'promises', '<p id=\"bkmrk-promises-are-javascr\">Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.</p>\r\n<ul id=\"bkmrk-the-output-returned-\"><li>The output returned from the promise is available only inside the resolved function. This means we always have to use either <code>.then()</code> or wrap the promise inside an <code>async</code> function and then prefix it with <code>await</code> to get the result.</li>\r\n</ul><pre id=\"bkmrk-function-resolveafte\"><code class=\"language-JavaScript\">function resolveAfter2Seconds(x) { \r\n    return new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x = 10;\r\nlet promise = new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n	// result is whatever we passed in the resolve(...) function above.\r\n    console.log(result) // 10\r\n});</code></pre>\r\n<ul id=\"bkmrk-%C2%A0\"><li> </li>\r\n</ul><p id=\"bkmrk-a-key-difference-bet\">A key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.</p>\r\n<p id=\"bkmrk-callbacks%3A\">Callbacks:</p>\r\n<pre id=\"bkmrk-function-getmoneybac\"><code class=\"language-JavaScript\">function getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)</code></pre>\r\n<p id=\"bkmrk-promises%3A\">Promises:</p>\r\n<pre id=\"bkmrk-function-getmoneybac-0\"><code class=\"language-JavaScript\">function getMoneyBack(money) {\r\n  return new Promise((resolve, reject) =&gt; {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) =&gt; {\r\n  console.log(money)\r\n})</code></pre>\r\n<h4 id=\"bkmrk-promise-chaining\">Promise Chaining</h4>\r\n<p id=\"bkmrk-promise-chaining-bec\">Promise chaining becomes absolutely useful when we need to execute a chain of asynchronous tasks. Each task that’s being chained can only start as soon as the previous task has completed, controlled by the <code class=\"pd pe pf pg ph b\">.then</code> of the chain.</p>\r\n<pre id=\"bkmrk-const-add-%3D-%28num1%2C-n\"><code class=\"language-JavaScript\">const add = (num1, num2) =&gt; new Promise((resolve) =&gt; resolve(num1 + num2))\r\n\r\nadd(2, 4)\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 6\r\n    return result + 10\r\n  })\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 16\r\n    return result\r\n  })\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 16\r\n  })</code></pre>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641816148186.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641816148186.png\" alt=\"image-1641816148186.png\" width=\"210\" height=\"268\"></a></p>\r\n<p id=\"bkmrk-technically-we-can-a\">Technically we can also add many <code>.then</code> to a single promise. This is not chaining.</p>\r\n<pre id=\"bkmrk-let-promise-%3D-new-pr\"><code class=\"language-JavaScript\">let promise = new Promise(function(resolve, reject) {\r\n  setTimeout(() =&gt; resolve(1), 1000);\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});</code></pre>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641816187301.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641816187301.png\" alt=\"image-1641816187301.png\" width=\"398\" height=\"148\"></a></p>\r\n<h4 id=\"bkmrk-promise-api\">Promise API</h4>\r\n<p id=\"bkmrk-apart-from-the-handl\">Apart from the handler methods (.then, .catch, and .finally), there are six static methods available in the Promise API. The first four methods accept an array of promises and run them in parallel.</p>\r\n<ol id=\"bkmrk-promise.all-promise.\"><li>Promise.all</li>\r\n<li>Promise.any</li>\r\n<li>Promise.allSettled</li>\r\n<li>Promise.race</li>\r\n<li>Promise.resolve</li>\r\n<li>Promise.reject</li>\r\n</ol>', 'Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.\r\nThe output returned from the promise is available only inside the resolved function. This means we always have to use either .then() or wrap the promise inside an async function and then prefix it with await to get the result.\r\nfunction resolveAfter2Seconds(x) { \r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x = 10;\r\nlet promise = new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n	// result is whatever we passed in the resolve(...) function above.\r\n    console.log(result) // 10\r\n});\r\n \r\nA key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.\r\nCallbacks:\r\nfunction getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)\r\nPromises:\r\nfunction getMoneyBack(money) {\r\n  return new Promise((resolve, reject) => {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) => {\r\n  console.log(money)\r\n})\r\nPromise Chaining\r\nPromise chaining becomes absolutely useful when we need to execute a chain of asynchronous tasks. Each task that’s being chained can only start as soon as the previous task has completed, controlled by the .then of the chain.\r\nconst add = (num1, num2) => new Promise((resolve) => resolve(num1 + num2))\r\n\r\nadd(2, 4)\r\n  .then((result) => {\r\n    console.log(result) // result: 6\r\n    return result + 10\r\n  })\r\n  .then((result) => {\r\n    console.log(result) // result: 16\r\n    return result\r\n  })\r\n  .then((result) => {\r\n    console.log(result) // result: 16\r\n  })\r\n\r\nTechnically we can also add many .then to a single promise. This is not chaining.\r\nlet promise = new Promise(function(resolve, reject) {\r\n  setTimeout(() => resolve(1), 1000);\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\nPromise API\r\nApart from the handler methods (.then, .catch, and .finally), there are six static methods available in the Promise API. The first four methods accept an array of promises and run them in parallel.\r\nPromise.all\r\nPromise.any\r\nPromise.allSettled\r\nPromise.race\r\nPromise.resolve\r\nPromise.reject\r\n', 3, '2022-01-10 09:59:24', '2022-01-10 15:54:58', 1, 1, 0, 0, '', 9, 0, NULL, 1),
(56, 10, 2, 'Callbacks', 'callbacks', '<p id=\"bkmrk-in-javascript%2C-funct\">In JavaScript, functions are objects. So we can pass objects to functions as parameters. Callbacks that you call yourself are regular function calls, which are always synchronous.</p>\r\n<p id=\"bkmrk-we-can-also-pass-fun\">We can also pass functions as parameters to other functions and call them inside the outer functions. So callback is a function that is passed to another function. When the first function is done, it will run the second function.</p>\r\n<p id=\"bkmrk-synchronous-callback\"><strong>Synchronous callback</strong></p>\r\n<pre id=\"bkmrk-function-callbacktea\"><code class=\"language-JavaScript\">function CallBackTeaser(callback, param){\r\n 	console.log(\"Calling the callback function\");\r\n	callback(param);\r\n   	console.log(\"Callback called\");\r\n}\r\nfunction consoleMyDetails(person){\r\n	if(person){\r\n	console.log(`Hi, my name is ${person.name}, i am ${person.job} &amp; super exited about ${person.hobby}`);\r\n	}\r\n}\r\nCallBackTeaser(consoleMyDetails, {\'name\': \'Praveen\',\r\n\'job\':\'Developer\',\r\n\'hobby\':\'learning new technologies.\'\r\n});\r\n\r\n/*\r\nOutput:\r\n	Calling the callback function\r\n    Hi, my name is Praveen, i am Developer &amp; super exited about learning new technologies.\r\n    Callback called\r\n*/</code></pre>\r\n<p id=\"bkmrk-asynchronous-callbac\"><strong>Asynchronous callback</strong></p>\r\n<pre id=\"bkmrk-function-download%28ur\"><code class=\"language-JavaScript\">function download(url, callback) {\r\n    setTimeout(() =&gt; {\r\n        console.log(`Downloading ${url} ...`);\r\n        \r\n        callback(url);\r\n    }, 3000);\r\n}\r\n\r\nfunction process(picture) {\r\n    console.log(`Processing ${picture}`);\r\n}\r\n\r\nlet url = \'https://wwww.javascripttutorial.net/pic.jpg\';\r\ndownload(url, process);\r\n\r\n/*\r\nOutput:\r\n	Downloading https://www.javascripttutorial.net/pic.jpg ...\r\n	Processing https://www.javascripttutorial.net/pic.jpg\r\n*/</code></pre>\r\n<p id=\"bkmrk-the-problem-with-cal\">The problem with callbacks is it creates something called “Callback Hell.” Basically, you start nesting functions within functions within functions, and it starts to get really hard to read the code. So in this situation Promises came to handle the nested callback in a better way.</p>\r\n<pre id=\"bkmrk-fs.readdir%28source%2C-f\"><code class=\"language-JavaScript\">fs.readdir(source, function (err, files) {\r\n  if (err) {\r\n    console.log(\'Error finding files: \' + err)\r\n  } else {\r\n    files.forEach(function (filename, fileIndex) {\r\n      console.log(filename)\r\n      gm(source + filename).size(function (err, values) {\r\n        if (err) {\r\n          console.log(\'Error identifying file size: \' + err)\r\n        } else {\r\n          console.log(filename + \' : \' + values)\r\n          aspect = (values.width / values.height)\r\n          widths.forEach(function (width, widthIndex) {\r\n            height = Math.round(width / aspect)\r\n            console.log(\'resizing \' + filename + \'to \' + height + \'x\' + height)\r\n            this.resize(width, height).write(dest + \'w\' + width + \'_\' + filename, function(err) {\r\n              if (err) console.log(\'Error writing file: \' + err)\r\n            })\r\n          }.bind(this))\r\n        }\r\n      })\r\n    })\r\n  }\r\n})</code></pre>', 'In JavaScript, functions are objects. So we can pass objects to functions as parameters. Callbacks that you call yourself are regular function calls, which are always synchronous.\r\nWe can also pass functions as parameters to other functions and call them inside the outer functions. So callback is a function that is passed to another function. When the first function is done, it will run the second function.\r\nSynchronous callback\r\nfunction CallBackTeaser(callback, param){\r\n 	console.log(\"Calling the callback function\");\r\n	callback(param);\r\n   	console.log(\"Callback called\");\r\n}\r\nfunction consoleMyDetails(person){\r\n	if(person){\r\n	console.log(`Hi, my name is ${person.name}, i am ${person.job} & super exited about ${person.hobby}`);\r\n	}\r\n}\r\nCallBackTeaser(consoleMyDetails, {\'name\': \'Praveen\',\r\n\'job\':\'Developer\',\r\n\'hobby\':\'learning new technologies.\'\r\n});\r\n\r\n/*\r\nOutput:\r\n	Calling the callback function\r\n    Hi, my name is Praveen, i am Developer & super exited about learning new technologies.\r\n    Callback called\r\n*/\r\nAsynchronous callback\r\nfunction download(url, callback) {\r\n    setTimeout(() => {\r\n        console.log(`Downloading ${url} ...`);\r\n        \r\n        callback(url);\r\n    }, 3000);\r\n}\r\n\r\nfunction process(picture) {\r\n    console.log(`Processing ${picture}`);\r\n}\r\n\r\nlet url = \'https://wwww.javascripttutorial.net/pic.jpg\';\r\ndownload(url, process);\r\n\r\n/*\r\nOutput:\r\n	Downloading https://www.javascripttutorial.net/pic.jpg ...\r\n	Processing https://www.javascripttutorial.net/pic.jpg\r\n*/\r\nThe problem with callbacks is it creates something called “Callback Hell.” Basically, you start nesting functions within functions within functions, and it starts to get really hard to read the code. So in this situation Promises came to handle the nested callback in a better way.\r\nfs.readdir(source, function (err, files) {\r\n  if (err) {\r\n    console.log(\'Error finding files: \' + err)\r\n  } else {\r\n    files.forEach(function (filename, fileIndex) {\r\n      console.log(filename)\r\n      gm(source + filename).size(function (err, values) {\r\n        if (err) {\r\n          console.log(\'Error identifying file size: \' + err)\r\n        } else {\r\n          console.log(filename + \' : \' + values)\r\n          aspect = (values.width / values.height)\r\n          widths.forEach(function (width, widthIndex) {\r\n            height = Math.round(width / aspect)\r\n            console.log(\'resizing \' + filename + \'to \' + height + \'x\' + height)\r\n            this.resize(width, height).write(dest + \'w\' + width + \'_\' + filename, function(err) {\r\n              if (err) console.log(\'Error writing file: \' + err)\r\n            })\r\n          }.bind(this))\r\n        }\r\n      })\r\n    })\r\n  }\r\n})', 4, '2022-01-10 12:11:29', '2022-01-10 12:11:43', 1, 1, 0, 0, '', 2, 0, NULL, 1),
(57, 10, 2, 'Aysnc/Await', 'aysncawait', '<div id=\"bkmrk-\">\r\n<div data-post-id=\"48909047\"><button class=\"js-vote-down-btn flex--item s-btn s-btn__unset c-pointer \" data-controller=\"s-tooltip\" data-s-tooltip-placement=\"right\" aria-pressed=\"false\" aria-label=\"Down vote\" data-selected-classes=\"fc-theme-primary\" data-unselected-classes=\"\" aria-describedby=\"--stacks-s-tooltip-9dpogxma\"><svg aria-hidden=\"true\" class=\"svg-icon iconArrowDownLg\" width=\"36\" height=\"36\" viewbox=\"0 0 36 36\"></svg></button><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk-declaring-a-function\">Declaring a function <code>async</code> means that it will return the <code>Promise</code>. To turn the <code>Promise</code> into a value, you have two options.</p>\r\n<ul id=\"bkmrk-the-%22normal%22-option-\"><li>The \"normal\" option is to use <code>then()</code> on it:</li>\r\n</ul><pre id=\"bkmrk-getdogsfromapi%28%29.the\"><code class=\"language-JavaScript\">getDogsFromApi().then(value =&gt; console.log(value));</code></pre>\r\n<ul id=\"bkmrk-you-can-also-use%C2%A0awa\"><li>You can also use <code>await</code> on the function:</li>\r\n</ul><pre id=\"bkmrk-const-value-%3D-await-\"><code class=\"language-JavaScript\">const value = await getDogsFromApi();</code></pre>\r\n<p id=\"bkmrk-the-await-keyword-is\">The await keyword is used in an async function to ensure that all promises returned in the async function are synchronised, ie. they wait for each other. Await eliminates the use of callbacks in .then() and .catch(). In using async and await, async is prepended when returning a promise, await is prepended when calling a promise. try and catch are also used to get the rejection value of an async function.</p>\r\n<p id=\"bkmrk-try-and-catch-are-us\">Try and catch are used to get the rejection value of an async function.</p>\r\n<pre id=\"bkmrk-const-hellopromise-%3D\"><code class=\"language-JavaScript\">const helloPromise = function() {\r\n  return new Promise(function(resolve, reject) {\r\n    const message = \"Hi, How are you!\";\r\n\r\n    resolve(message)\r\n  });\r\n}\r\n\r\n\r\nasync function demoPromise() {\r\n  try {\r\n    let message  = await helloPromise();\r\n    console.log(message);\r\n\r\n  }\r\n  catch(error){ \r\n      console.log(\"Error:\" + error.message);\r\n  }\r\n}\r\n\r\ndemoPromise();</code></pre>', '\r\n\r\n\r\nDeclaring a function async means that it will return the Promise. To turn the Promise into a value, you have two options.\r\nThe \"normal\" option is to use then() on it:\r\ngetDogsFromApi().then(value => console.log(value));\r\nYou can also use await on the function:\r\nconst value = await getDogsFromApi();\r\nThe await keyword is used in an async function to ensure that all promises returned in the async function are synchronised, ie. they wait for each other. Await eliminates the use of callbacks in .then() and .catch(). In using async and await, async is prepended when returning a promise, await is prepended when calling a promise. try and catch are also used to get the rejection value of an async function.\r\nTry and catch are used to get the rejection value of an async function.\r\nconst helloPromise = function() {\r\n  return new Promise(function(resolve, reject) {\r\n    const message = \"Hi, How are you!\";\r\n\r\n    resolve(message)\r\n  });\r\n}\r\n\r\n\r\nasync function demoPromise() {\r\n  try {\r\n    let message  = await helloPromise();\r\n    console.log(message);\r\n\r\n  }\r\n  catch(error){ \r\n      console.log(\"Error:\" + error.message);\r\n  }\r\n}\r\n\r\ndemoPromise();', 5, '2022-01-10 12:11:56', '2022-01-10 12:58:07', 1, 1, 0, 0, '', 5, 0, NULL, 1),
(58, 10, 2, 'Proxy', 'proxy', '<p id=\"bkmrk-the-proxy-object-ena\">The Proxy object enables you to create a proxy for another object, which can intercept and redefine fundamental operations for that object.</p>\r\n<p id=\"bkmrk-a%C2%A0proxy%C2%A0is-created-w\">A <code>Proxy</code> is created with two parameters:</p>\r\n<ul id=\"bkmrk-target%3A-the-original\"><li><code>target</code>: the original object which you want to proxy</li>\r\n<li><code>handler</code>: an object that defines which operations will be intercepted and how to redefine intercepted operations.</li>\r\n</ul><p id=\"bkmrk-with-the-help-of-the\">With the help of the Reflect class we can give some accessors the original behavior and redefine others:</p>\r\n<pre id=\"bkmrk-const-target-%3D-%7B-mes\"><code class=\"language-JavaScript\">const target = {\r\n  message1: \"hello\",\r\n  message2: \"everyone\"\r\n};\r\n\r\nconst handler3 = {\r\n  get: function (target, prop, receiver) {\r\n    if (prop === \"message2\") {\r\n      return \"world\";\r\n    }\r\n    return Reflect.get(...arguments);\r\n  },\r\n};\r\n\r\nconst proxy3 = new Proxy(target, handler3);\r\n\r\nconsole.log(proxy3.message1); // hello\r\nconsole.log(proxy3.message2); // world</code></pre>\r\n<p id=\"bkmrk-with-a-proxy%2C%C2%A0you-ca\">With a Proxy, you can easily validate the passed value for an object. This example uses the <code>set()</code> handler.</p>\r\n<pre id=\"bkmrk-let-validator-%3D-%7B-se\"><code class=\"language-JavaScript\">let validator = {\r\n  set: function(obj, prop, value) {\r\n    if (prop === \'age\') {\r\n      if (!Number.isInteger(value)) {\r\n        throw new TypeError(\'The age is not an integer\');\r\n      }\r\n      if (value &gt; 200) {\r\n        throw new RangeError(\'The age seems invalid\');\r\n      }\r\n    }\r\n\r\n    // The default behavior to store the value\r\n    obj[prop] = value;\r\n\r\n    // Indicate success\r\n    return true;\r\n  }\r\n};\r\n\r\nconst person = new Proxy({}, validator);\r\n\r\nperson.age = 100;\r\nconsole.log(person.age); // 100\r\nperson.age = \'young\';    // Throws an exception\r\nperson.age = 300;        // Throws an exception</code></pre>\r\n<p id=\"bkmrk-%C2%A0\"> </p>', 'The Proxy object enables you to create a proxy for another object, which can intercept and redefine fundamental operations for that object.\r\nA Proxy is created with two parameters:\r\ntarget: the original object which you want to proxy\r\nhandler: an object that defines which operations will be intercepted and how to redefine intercepted operations.\r\nWith the help of the Reflect class we can give some accessors the original behavior and redefine others:\r\nconst target = {\r\n  message1: \"hello\",\r\n  message2: \"everyone\"\r\n};\r\n\r\nconst handler3 = {\r\n  get: function (target, prop, receiver) {\r\n    if (prop === \"message2\") {\r\n      return \"world\";\r\n    }\r\n    return Reflect.get(...arguments);\r\n  },\r\n};\r\n\r\nconst proxy3 = new Proxy(target, handler3);\r\n\r\nconsole.log(proxy3.message1); // hello\r\nconsole.log(proxy3.message2); // world\r\nWith a Proxy, you can easily validate the passed value for an object. This example uses the set() handler.\r\nlet validator = {\r\n  set: function(obj, prop, value) {\r\n    if (prop === \'age\') {\r\n      if (!Number.isInteger(value)) {\r\n        throw new TypeError(\'The age is not an integer\');\r\n      }\r\n      if (value > 200) {\r\n        throw new RangeError(\'The age seems invalid\');\r\n      }\r\n    }\r\n\r\n    // The default behavior to store the value\r\n    obj[prop] = value;\r\n\r\n    // Indicate success\r\n    return true;\r\n  }\r\n};\r\n\r\nconst person = new Proxy({}, validator);\r\n\r\nperson.age = 100;\r\nconsole.log(person.age); // 100\r\nperson.age = \'young\';    // Throws an exception\r\nperson.age = 300;        // Throws an exception\r\n ', 6, '2022-01-10 13:31:35', '2022-01-10 13:39:38', 1, 1, 0, 0, '', 2, 0, NULL, 1),
(59, 10, 2, 'Generators', 'generators', '<p id=\"bkmrk-iterators-and-genera\">Iterators and Generators bring the concept of iteration directly into the core language and provide a mechanism for customising the behavior of loops.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641830556878.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641830556878.png\" alt=\"image-1641830556878.png\" width=\"459\" height=\"338\"></a></p>\r\n<pre id=\"bkmrk-function-%2A-generator\"><code class=\"language-JavaScript\">function * generatorFunction() { // Line 1\r\n  console.log(\'This will be executed first.\');\r\n  yield \'Hello, \';   // Line 2\r\n  console.log(\'I will be printed after the pause\');  \r\n  yield \'World!\';\r\n}\r\nconst generatorObject = generatorFunction(); // Line 3\r\nconsole.log(generatorObject.next().value); // Line 4\r\nconsole.log(generatorObject.next().value); // Line 5\r\nconsole.log(generatorObject.next().value); // Line 6\r\n// This will be executed first.\r\n// Hello, \r\n// I will be printed after the pause\r\n// World!\r\n// undefined</code></pre>', 'Iterators and Generators bring the concept of iteration directly into the core language and provide a mechanism for customising the behavior of loops.\r\n\r\nfunction * generatorFunction() { // Line 1\r\n  console.log(\'This will be executed first.\');\r\n  yield \'Hello, \';   // Line 2\r\n  console.log(\'I will be printed after the pause\');  \r\n  yield \'World!\';\r\n}\r\nconst generatorObject = generatorFunction(); // Line 3\r\nconsole.log(generatorObject.next().value); // Line 4\r\nconsole.log(generatorObject.next().value); // Line 5\r\nconsole.log(generatorObject.next().value); // Line 6\r\n// This will be executed first.\r\n// Hello, \r\n// I will be printed after the pause\r\n// World!\r\n// undefined', 7, '2022-01-10 15:58:23', '2022-01-10 16:03:01', 1, 1, 0, 0, '', 1, 0, NULL, 1),
(60, 6, 0, 'Advice', 'advice', '<ul id=\"bkmrk-a-common-mistake-i-s\"><li>A common mistake I see junior engineers make is that they dive head-first into coding. They stick with only the tools they know, and try to fit it for every situation. Using the right tool is the difference between laboring for weeks, and finishing a task in 10 minutes. That’s where the 10x difference accrues.</li>\r\n</ul>', 'A common mistake I see junior engineers make is that they dive head-first into coding. They stick with only the tools they know, and try to fit it for every situation. Using the right tool is the difference between laboring for weeks, and finishing a task in 10 minutes. That’s where the 10x difference accrues.\r\n', 5, '2022-03-11 10:03:46', '2022-03-11 10:14:01', 1, 1, 0, 0, '', 1, 0, NULL, 1),
(61, 1, 0, 'Console Commands', 'console-commands', '<ul id=\"bkmrk-desc-table---list-al\"><li><strong>DESC <em>table </em></strong>- List all columns of an table</li>\r\n<li style=\"list-style-type: none;\">\r\n<ul><li><strong>DESC mysql.user </strong>- Access all users of mysql</li>\r\n</ul></li>\r\n<li><strong>SELECT user() / database()</strong> - Get current mysql user / database\r\n<ul id=\"bkmrk-select-%2A-from-mysql.\"><li><strong>SELECT * FROM mysql.user</strong></li>\r\n</ul></li>\r\n<li><strong>USE <em>database </em></strong>- Switch to database</li>\r\n<li><strong>status</strong> - Database and user status</li>\r\n<li><strong>CREATE</strong> <strong>USER</strong> \'username\'<strong> IDENTIFIED BY</strong> \'password\' - Create new DB server user</li>\r\n<li><strong>DROP USER \'</strong>username\' - Delete DB server user</li>\r\n<li><strong>GRANT</strong> SELECT, CREATE, INSERT <strong>ON</strong> database.* <strong>TO</strong> \'username\'@\'%\' - Grant database privileges to user</li>\r\n<li><strong>FLUSH PRIVILEGES</strong> - Clear priviliges cache</li>\r\n<li><strong>.my.cnf </strong>- MySQL default connection configuration</li>\r\n</ul>', 'DESC table - List all columns of an table\r\n\r\nDESC mysql.user - Access all users of mysql\r\n\r\nSELECT user() / database() - Get current mysql user / database\r\nSELECT * FROM mysql.user\r\n\r\nUSE database - Switch to database\r\nstatus - Database and user status\r\nCREATE USER \'username\' IDENTIFIED BY \'password\' - Create new DB server user\r\nDROP USER \'username\' - Delete DB server user\r\nGRANT SELECT, CREATE, INSERT ON database.* TO \'username\'@\'%\' - Grant database privileges to user\r\nFLUSH PRIVILEGES - Clear priviliges cache\r\n.my.cnf - MySQL default connection configuration\r\n', 6, '2022-03-17 08:01:44', '2022-03-18 13:45:34', 1, 1, 0, 0, '', 8, 0, NULL, 1),
(62, 13, 0, 'HTTP Request Life Cycle', 'http-request-life-cycle', '<ol id=\"bkmrk-first%2C-the-browser-n\"><li>First, the browser needs to translate <a href=\"http://www.google.com/\" rel=\"noreferrer\">www.google.com</a> to an IP address. To do so it contacts a DNS server to resolve the name.</li>\r\n<li>Then browser will open a TCP connection to the IP address of <a href=\"http://www.google.com/\" rel=\"noreferrer\">www.google.com</a> and send a HTTP GET request over. In this example it will be<br><code>GET / HTTP/1.1   Host: www.google.com</code></li>\r\n<li>The server software will get this HTTP request. It will somehow generate a HTTP response and send that back trough the TCP connection. How the server does this is server software dependent. You can for example plug in application code in Apache, or just make Apache return a file from the filesystem. PHP is an application called by some software, which then generates the response sent to the browser. When the response is sent, in HTTP version 1.0 the connection is closed. HTTP 1.1 can have persistent connections though.</li>\r\n<li>When the browser gets the response, it typically renders it on screen. The HTTP request is now done. A click on \"search\" will send a new request to the server.</li>\r\n</ol>', 'First, the browser needs to translate www.google.com to an IP address. To do so it contacts a DNS server to resolve the name.\r\nThen browser will open a TCP connection to the IP address of www.google.com and send a HTTP GET request over. In this example it will beGET / HTTP/1.1   Host: www.google.com\r\nThe server software will get this HTTP request. It will somehow generate a HTTP response and send that back trough the TCP connection. How the server does this is server software dependent. You can for example plug in application code in Apache, or just make Apache return a file from the filesystem. PHP is an application called by some software, which then generates the response sent to the browser. When the response is sent, in HTTP version 1.0 the connection is closed. HTTP 1.1 can have persistent connections though.\r\nWhen the browser gets the response, it typically renders it on screen. The HTTP request is now done. A click on \"search\" will send a new request to the server.\r\n', 2, '2022-03-22 14:07:43', '2022-03-22 16:34:58', 1, 1, 0, 0, '', 4, 0, NULL, 1),
(63, 13, 0, 'TCP Connection', 'tcp-connection', '<ol id=\"bkmrk-open-a-tcp-connectio\"><li>Open a TCP connection: The TCP connection is used to send a request or several, and receive an answer. The client may open a new connection, reuse an existing connection, or open several TCP connections to the servers.</li>\r\n<li>Send an HTTP message: HTTP messages (before HTTP/2) are human-readable. With HTTP/2, these simple messages are encapsulated in frames, making them impossible to read directly, but the principle remains the same. For example:\r\n<div>\r\n<pre class=\"brush: http notranslate\"><code><span class=\"token request-line\"><span class=\"token method property\">GET</span> <span class=\"token request-target url\">/</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">developer.mozilla.org</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">fr</span></span>\r\n</code></pre>\r\n<button class=\"icon copy-icon\" type=\"button\"><span class=\"visually-hidden\">Copy to Clipboard</span></button></div>\r\n</li>\r\n<li>Read the response sent by the server, such as:\r\n<div>\r\n<pre class=\"brush: http notranslate\"><code><span class=\"token response-status\"><span class=\"token http-version property\">HTTP/1.1</span> <span class=\"token status-code number\">200</span> <span class=\"token reason-phrase string\">OK</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Date</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Sat, 09 Oct 2010 14:28:02 GMT</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Server</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Apache</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Last-Modified</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Tue, 01 Dec 2009 20:18:22 GMT</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">ETag</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">\"51142bc1-7449-479b075b2891b\"</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Ranges</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">bytes</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">29769</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html</span></span>\r\n<span class=\"token text-html\">\r\n&lt;!DOCTYPE html... (here come the 29769 bytes of the requested web page)\r\n</span></code></pre>\r\n<button class=\"icon copy-icon\" type=\"button\"><span class=\"visually-hidden\">Copy to Clipboard</span></button></div>\r\n</li>\r\n<li>Close or reuse the connection for further requests.</li>\r\n</ol><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647966530055.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647966530055.png\" alt=\"image-1647966530055.png\" width=\"501\" height=\"243\"></a></p>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647966575255.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647966575255.png\" alt=\"image-1647966575255.png\" width=\"577\" height=\"376\"></a></p>', 'Open a TCP connection: The TCP connection is used to send a request or several, and receive an answer. The client may open a new connection, reuse an existing connection, or open several TCP connections to the servers.\r\nSend an HTTP message: HTTP messages (before HTTP/2) are human-readable. With HTTP/2, these simple messages are encapsulated in frames, making them impossible to read directly, but the principle remains the same. For example:\r\n\r\nGET / HTTP/1.1\r\nHost: developer.mozilla.org\r\nAccept-Language: fr\r\n\r\nCopy to Clipboard\r\n\r\nRead the response sent by the server, such as:\r\n\r\nHTTP/1.1 200 OK\r\nDate: Sat, 09 Oct 2010 14:28:02 GMT\r\nServer: Apache\r\nLast-Modified: Tue, 01 Dec 2009 20:18:22 GMT\r\nETag: \"51142bc1-7449-479b075b2891b\"\r\nAccept-Ranges: bytes\r\nContent-Length: 29769\r\nContent-Type: text/html\r\n\r\n<!DOCTYPE html... (here come the 29769 bytes of the requested web page)\r\n\r\nCopy to Clipboard\r\n\r\nClose or reuse the connection for further requests.\r\n\r\n', 3, '2022-03-22 16:22:21', '2022-03-22 16:29:42', 1, 1, 0, 0, '', 3, 0, NULL, 1),
(64, 13, 0, 'PHP Web Server', 'php-web-server', '<p id=\"bkmrk-php-is-a-server-side\">PHP is a server-side language that outputs (usually) HTML results. When a URL is called that requests a .php file, Apache asks PHP (the runtime, responsible for running that code you wrote) to process it and expects whatever output comes of it, then sends it back (through HTTP) to the user/browser/client software that requested it.</p>\r\n<p id=\"bkmrk-apache---is-a-web-se\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\"><strong class=\"_12FoOEddL7j_RgMQN0SNeU\">Apache/Nginx</strong> - is a web server program that is responsible for talking to web browsers and connecting them with the information they request.</p>\r\n<p id=\"bkmrk-php%C2%A0is-a-scripting-p\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\"><strong class=\"_12FoOEddL7j_RgMQN0SNeU\">PHP</strong> is a scripting programming language that interfaces with Apache to provide content that is dynamically generated, often from information that is stored in a database.</p>\r\n<h4 class=\"_1qeIAgB0cPwnLhDF9XSiJM\" id=\"bkmrk-apache-vs-nginx\">Apache vs Nginx</h4>\r\n<p id=\"bkmrk-%E2%80%9Capache-is-like-micr\">“Apache is like Microsoft Word. It has a million options but you only need six. NGINX does those six things, and it does five of them 50 times faster than Apache.\"</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647967309563.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647967309563.png\" alt=\"image-1647967309563.png\" width=\"541\" height=\"672\"></a></p>', 'PHP is a server-side language that outputs (usually) HTML results. When a URL is called that requests a .php file, Apache asks PHP (the runtime, responsible for running that code you wrote) to process it and expects whatever output comes of it, then sends it back (through HTTP) to the user/browser/client software that requested it.\r\nApache/Nginx - is a web server program that is responsible for talking to web browsers and connecting them with the information they request.\r\nPHP is a scripting programming language that interfaces with Apache to provide content that is dynamically generated, often from information that is stored in a database.\r\nApache vs Nginx\r\n“Apache is like Microsoft Word. It has a million options but you only need six. NGINX does those six things, and it does five of them 50 times faster than Apache.\"\r\n', 4, '2022-03-22 16:36:14', '2022-03-22 20:03:10', 1, 1, 0, 0, '', 3, 0, '2022-03-22 20:03:10', 1),
(65, 12, 0, 'PHP Server', 'php-server', '<p id=\"bkmrk-php-is-a-server-side\">PHP is a server-side language that outputs (usually) HTML results. When a URL is called that requests a .php file, Apache asks PHP (the runtime, responsible for running that code you wrote) to process it and expects whatever output comes of it, then sends it back (through HTTP) to the user/browser/client software that requested it.</p>\r\n<p id=\"bkmrk-apache---is-a-web-se\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\"><strong class=\"_12FoOEddL7j_RgMQN0SNeU\">Apache/Nginx</strong> - is a web server program that is responsible for talking to web browsers and connecting them with the information they request.</p>\r\n<p id=\"bkmrk-php%C2%A0is-a-scripting-p\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\"><strong class=\"_12FoOEddL7j_RgMQN0SNeU\">PHP</strong> is a scripting programming language that interfaces with Apache to provide content that is dynamically generated, often from information that is stored in a database.</p>\r\n<h4 id=\"bkmrk-apache-vs-nginx\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\">Apache vs Nginx</h4>\r\n<p id=\"bkmrk-%E2%80%9Capache-is-like-micr\">“Apache is like Microsoft Word. It has a million options but you only need six. NGINX does those six things, and it does five of them 50 times faster than Apache.\"</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647967309563.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647967309563.png\" alt=\"image-1647967309563.png\" width=\"541\" height=\"672\"></a></p>\r\n<h4 id=\"bkmrk-nginx-configuration\">Nginx Configuration</h4>\r\n<p id=\"bkmrk-to-verify-that-there\">To verify that there are no issues with your Nginx configuration you can run:</p>\r\n<pre id=\"bkmrk-sudo-nginx--t\"><code class=\"language-shell\">sudo nginx -t</code></pre>\r\n<p id=\"bkmrk-remember-to-reload-n\">Remember to reload Nginx when making any changes to your Nginx config files:</p>\r\n<pre id=\"bkmrk-sudo-service-nginx-r\"><code class=\"language-shell\">sudo service nginx reload</code></pre>\r\n<h4 id=\"bkmrk-what-is-php-fmp%3F\">What is PHP-FMP?</h4>\r\n<p id=\"bkmrk-the-%E2%80%9Cfpm%E2%80%9D-part-in-ph\">The “FPM” part in PHP stands for “Fast Process Manager”, which is just a fancy way of saying that the PHP running on a server isn’t a single process, but rather some PHP processes that are spawned, controller, and killed off by this FPM process manager. It is this process manager that the web server passes the requests to.</p>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647967953497.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647967953497.png\" alt=\"image-1647967953497.png\"></a></p>\r\n<p id=\"bkmrk-the-configuration-fi\">The configuration file location for <code>php-fpm</code> may differ on the server, so you’ll need to do some research for locating it.</p>\r\n<p id=\"bkmrk-a-few-things-should-\">A few things should be immediately obvious: the line <code>pid = /run/php/php7.2-fpm.pid</code> tells us which file contains the process id of the <code>php-fpm</code> process.</p>\r\n<p id=\"bkmrk-we-also-see-that%C2%A0%2Fva\">We also see that <code>/var/log/php7.2-fpm.log</code> is where <code>php-fpm</code> is going to store its logs.</p>\r\n<h4 id=\"bkmrk-what-is-pid-file%3F\">What is PID file?</h4>\r\n<p id=\"bkmrk-the-pid-files-contai\">The pid files contains the process id (a number) of a given program. For example, Apache HTTPD may write its main process number to a pid file - which is a regular text file, nothing more than that - and later use the information there contained to stop itself. You can also use that information to kill the process yourself, using <code>cat filename.pid | xargs kill</code></p>', 'PHP is a server-side language that outputs (usually) HTML results. When a URL is called that requests a .php file, Apache asks PHP (the runtime, responsible for running that code you wrote) to process it and expects whatever output comes of it, then sends it back (through HTTP) to the user/browser/client software that requested it.\r\nApache/Nginx - is a web server program that is responsible for talking to web browsers and connecting them with the information they request.\r\nPHP is a scripting programming language that interfaces with Apache to provide content that is dynamically generated, often from information that is stored in a database.\r\nApache vs Nginx\r\n“Apache is like Microsoft Word. It has a million options but you only need six. NGINX does those six things, and it does five of them 50 times faster than Apache.\"\r\n\r\nNginx Configuration\r\nTo verify that there are no issues with your Nginx configuration you can run:\r\nsudo nginx -t\r\nRemember to reload Nginx when making any changes to your Nginx config files:\r\nsudo service nginx reload\r\nWhat is PHP-FMP?\r\nThe “FPM” part in PHP stands for “Fast Process Manager”, which is just a fancy way of saying that the PHP running on a server isn’t a single process, but rather some PHP processes that are spawned, controller, and killed off by this FPM process manager. It is this process manager that the web server passes the requests to.\r\n\r\nThe configuration file location for php-fpm may differ on the server, so you’ll need to do some research for locating it.\r\nA few things should be immediately obvious: the line pid = /run/php/php7.2-fpm.pid tells us which file contains the process id of the php-fpm process.\r\nWe also see that /var/log/php7.2-fpm.log is where php-fpm is going to store its logs.\r\nWhat is PID file?\r\nThe pid files contains the process id (a number) of a given program. For example, Apache HTTPD may write its main process number to a pid file - which is a regular text file, nothing more than that - and later use the information there contained to stop itself. You can also use that information to kill the process yourself, using cat filename.pid | xargs kill', 5, '2022-03-22 16:52:07', '2022-03-22 17:02:00', 1, 1, 0, 0, '', 5, 0, NULL, 1),
(66, 2, 0, 'Socket Files', 'socket-files', '<p id=\"bkmrk-a-socket-is-a-specia\">A socket is a special file used for inter-process communication, which enables the communication between two processes. In addition to sending data, processes can send file descriptors across a Unix domain socket connection using the <code>sendmsg()</code> and <code>recvmsg()</code> system calls.</p>', 'A socket is a special file used for inter-process communication, which enables the communication between two processes. In addition to sending data, processes can send file descriptors across a Unix domain socket connection using the sendmsg() and recvmsg() system calls.', 9, '2022-03-22 17:09:48', '2022-03-22 17:11:12', 1, 1, 0, 0, '', 2, 0, NULL, 1),
(67, 13, 0, 'Nginx', 'nginx', '', '', 5, '2022-03-22 20:02:28', '2022-03-22 20:03:07', 1, 1, 0, 0, '', 1, 0, '2022-03-22 20:03:07', 1),
(68, 13, 0, 'Nginx', 'nginx', '', '', 4, '2022-03-22 20:03:42', '2022-03-22 20:03:45', 1, 1, 0, 0, '', 1, 0, NULL, 1);

-- --------------------------------------------------------

--
-- Table structure for table `page_revisions`
--

CREATE TABLE `page_revisions` (
  `id` int(10) UNSIGNED NOT NULL,
  `page_id` int(11) NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `html` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `text` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_by` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `slug` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `book_slug` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `type` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'version',
  `markdown` longtext COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `summary` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `revision_number` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `page_revisions`
--

INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(1, 1, 'Joins', '<h2 id=\"bkmrk-join-types\">JOIN types</h2>\r\n<p id=\"bkmrk-inner-join%3A-returns-\"><strong>INNER JOIN</strong>: returns rows when there is a match in both tables.</p>\r\n<p id=\"bkmrk-left-join%3A-returns-a\"><strong>LEFT JOIN</strong>: returns all rows from the left table, even if there are no matches in the right table.</p>\r\n<p id=\"bkmrk-right-join%3A-returns-\"><strong>RIGHT JOIN</strong>: returns all rows from the right table, even if there are no matches in the left table.</p>\r\n<p id=\"bkmrk-full-outer-join%3A-com\"><strong>FULL OUTER JOIN</strong>: combines the results of both left and right outer joins.</p>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638022906583.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638022906583.png\" alt=\"image-1638022906583.png\"></a></p>', 'JOIN types\r\nINNER JOIN: returns rows when there is a match in both tables.\r\nLEFT JOIN: returns all rows from the left table, even if there are no matches in the right table.\r\nRIGHT JOIN: returns all rows from the right table, even if there are no matches in the left table.\r\nFULL OUTER JOIN: combines the results of both left and right outer joins.\r\n', 1, '2021-11-27 12:22:14', '2021-11-27 12:22:14', 'joins', 'mysql', 'version', '', 'Initial publish', 1),
(3, 1, 'Joins', '<h3 id=\"bkmrk-join-types\">JOIN types</h3>\r\n<ul id=\"bkmrk-inner-join%3A-returns-\">\r\n<li id=\"bkmrk-inner-join%3A-returns--0\"><strong>INNER JOIN</strong>: returns rows when there is a match in both tables.</li>\r\n<li id=\"bkmrk-left-join%3A-returns-a\"><strong>LEFT JOIN</strong>: returns all rows from the left table, even if there are no matches in the right table.</li>\r\n<li id=\"bkmrk-right-join%3A-returns-\"><strong>RIGHT JOIN</strong>: returns all rows from the right table, even if there are no matches in the left table.</li>\r\n<li id=\"bkmrk-full-outer-join%3A-com\"><strong>FULL OUTER JOIN</strong>: combines the results of both left and right outer joins.</li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638022906583.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638022906583.png\" alt=\"image-1638022906583.png\"></a></p>\r\n<h3 id=\"bkmrk-joining-tables-with-\">Joining tables with ON vs WHERE</h3>\r\n<p id=\"bkmrk-joining-using-on%3A\"><strong>Joining using ON:</strong></p>\r\n<pre id=\"bkmrk-select-%2A-from-facebo\"><code class=\"language-sql\">SELECT * FROM facebook\r\nJOIN linkedin\r\nON facebook.name = linkedin.name\r\nWHERE (facebook.name = Matt OR linkedin.city = \"SF\")\r\n</code></pre>\r\n<p id=\"bkmrk-joining-using-where%3A\"><strong>Joining using WHERE:</strong></p>\r\n<pre id=\"bkmrk-select-%2A-from-facebo-0\"><code class=\"language-\">SELECT * FROM facebook, linkedin\r\nWHERE facebook.name = linkedin.name\r\nAND (facebook.name = Matt OR linkedin.city = \"SF\")\r\n</code></pre>', 'JOIN types\r\n\r\nINNER JOIN: returns rows when there is a match in both tables.\r\nLEFT JOIN: returns all rows from the left table, even if there are no matches in the right table.\r\nRIGHT JOIN: returns all rows from the right table, even if there are no matches in the left table.\r\nFULL OUTER JOIN: combines the results of both left and right outer joins.\r\n\r\n\r\nJoining tables with ON vs WHERE\r\nJoining using ON:\r\nSELECT * FROM facebook\r\nJOIN linkedin\r\nON facebook.name = linkedin.name\r\nWHERE (facebook.name = Matt OR linkedin.city = \"SF\")\r\n\r\nJoining using WHERE:\r\nSELECT * FROM facebook, linkedin\r\nWHERE facebook.name = linkedin.name\r\nAND (facebook.name = Matt OR linkedin.city = \"SF\")\r\n', 1, '2021-11-27 12:25:48', '2021-11-27 12:25:48', 'joins', 'mysql', 'version', '', '', 2),
(4, 1, 'Joins', '<h3 id=\"bkmrk-join-types\">JOIN types</h3>\r\n<ul id=\"bkmrk-inner-join%3A-returns-\">\r\n<li id=\"bkmrk-inner-join%3A-returns--0\"><strong>INNER JOIN</strong>: returns rows when there is a match in both tables.</li>\r\n<li id=\"bkmrk-left-join%3A-returns-a\"><strong>LEFT JOIN</strong>: returns all rows from the left table, even if there are no matches in the right table.</li>\r\n<li id=\"bkmrk-right-join%3A-returns-\"><strong>RIGHT JOIN</strong>: returns all rows from the right table, even if there are no matches in the left table.</li>\r\n<li id=\"bkmrk-full-outer-join%3A-com\"><strong>FULL OUTER JOIN</strong>: combines the results of both left and right outer joins.</li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638022906583.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638022906583.png\" alt=\"image-1638022906583.png\"></a></p>\r\n<h3 id=\"bkmrk-joining-tables-with-\">Joining tables with ON vs WHERE</h3>\r\n<p id=\"bkmrk-joining-using-on%3A\"><strong>Joining using ON:</strong></p>\r\n<pre id=\"bkmrk-select-%2A-from-facebo\"><code class=\"language-sql\">SELECT * FROM facebook\r\nJOIN linkedin\r\nON facebook.name = linkedin.name\r\nWHERE (facebook.name = Matt OR linkedin.city = \"SF\")\r\n</code></pre>\r\n<p id=\"bkmrk-joining-using-where%3A\"><strong>Joining using WHERE:</strong></p>\r\n<pre id=\"bkmrk-select-%2A-from-facebo-0\"><code class=\"language-SQL\">SELECT * FROM facebook, linkedin\r\nWHERE facebook.name = linkedin.name\r\nAND (facebook.name = Matt OR linkedin.city = \"SF\")\r\n</code></pre>', 'JOIN types\r\n\r\nINNER JOIN: returns rows when there is a match in both tables.\r\nLEFT JOIN: returns all rows from the left table, even if there are no matches in the right table.\r\nRIGHT JOIN: returns all rows from the right table, even if there are no matches in the left table.\r\nFULL OUTER JOIN: combines the results of both left and right outer joins.\r\n\r\n\r\nJoining tables with ON vs WHERE\r\nJoining using ON:\r\nSELECT * FROM facebook\r\nJOIN linkedin\r\nON facebook.name = linkedin.name\r\nWHERE (facebook.name = Matt OR linkedin.city = \"SF\")\r\n\r\nJoining using WHERE:\r\nSELECT * FROM facebook, linkedin\r\nWHERE facebook.name = linkedin.name\r\nAND (facebook.name = Matt OR linkedin.city = \"SF\")\r\n', 1, '2021-11-27 12:26:01', '2021-11-27 12:26:01', 'joins', 'mysql', 'version', '', '', 3),
(5, 2, 'Constraints', '<h3 id=\"bkmrk-what-are-constraints\">What are constraints?</h3>\r\n<p id=\"bkmrk-constraints-are-used\">Constraints are used to define rules to allow or restrict what values can be stored in columns.</p>\r\n<p id=\"bkmrk-mysql-constraints-ar\"><strong>MySQL Constraints are:</strong></p>\r\n<ul id=\"bkmrk-not-null-unique-prim\">\r\n<li>NOT NULL</li>\r\n<li>UNIQUE</li>\r\n<li>PRIMARY KEY</li>\r\n<li>FOREIGN KEY</li>\r\n<li>CHECK</li>\r\n<li>DEFAULT</li>\r\n</ul>\r\n<h3 id=\"bkmrk-what-is-a-foreign-ke\">What is a FOREIGN KEY constraint?</h3>\r\n<p id=\"bkmrk-the%C2%A0foreign-key%C2%A0cons\">The <strong>FOREIGN KEY</strong> constraint is used to prevent actions that would destroy links between tables.</p>\r\n<ul id=\"bkmrk-typically%2C-the-forei\">\r\n<li>Typically, the foreign key columns of the child table often refer to the primary key columns of the parent table.</li>\r\n<li>The data type of the foreign key that is used in the child table must be the same as the data type of the primary key that is used in the parent table to refer to the foreign key.</li>\r\n</ul>\r\n<h4 id=\"bkmrk-referential-actions\">Referential actions</h4>\r\n<ul id=\"bkmrk-cascade%C2%A0%E2%80%93-changes-pl\">\r\n<li>CASCADE – Changes placed upon the parent table column are automatically reflected on the child table columns.</li>\r\n<li>SET NULL – Child table columns are set to NULL for both UPDATE or DELETE operations.</li>\r\n<li>RESTRICT – Rejects the DELETE or UPDATE on any child table column. If no referential action clause is specified, this is the default action.</li>\r\n</ul>', 'What are constraints?\r\nConstraints are used to define rules to allow or restrict what values can be stored in columns.\r\nMySQL Constraints are:\r\n\r\nNOT NULL\r\nUNIQUE\r\nPRIMARY KEY\r\nFOREIGN KEY\r\nCHECK\r\nDEFAULT\r\n\r\nWhat is a FOREIGN KEY constraint?\r\nThe FOREIGN KEY constraint is used to prevent actions that would destroy links between tables.\r\n\r\nTypically, the foreign key columns of the child table often refer to the primary key columns of the parent table.\r\nThe data type of the foreign key that is used in the child table must be the same as the data type of the primary key that is used in the parent table to refer to the foreign key.\r\n\r\nReferential actions\r\n\r\nCASCADE – Changes placed upon the parent table column are automatically reflected on the child table columns.\r\nSET NULL – Child table columns are set to NULL for both UPDATE or DELETE operations.\r\nRESTRICT – Rejects the DELETE or UPDATE on any child table column. If no referential action clause is specified, this is the default action.\r\n', 1, '2021-11-27 12:27:57', '2021-11-27 12:27:57', 'constraints', 'mysql', 'version', '', 'Initial publish', 1),
(6, 3, 'Indexes', '<h2 id=\"bkmrk-index-types\">Index Types</h2>\r\n<p id=\"bkmrk-the-primary-key-is-a\">The primary key is always automatically indexed and unique. Indexes by default are saved in a binary tree form (<strong>B-TREE</strong>).</p>\r\n<ul id=\"bkmrk-indexes-slow-down-in\">\r\n<li>\r\n<p>Indexes slow down inserts and updates, so you want to use them carefully on columns that are FREQUENTLY updated. This is because each time a record is added or updated, all the indexes need to be updated as well.</p>\r\n</li>\r\n<li>\r\n<p>Indexes speed up where clauses and order by. Remember to think about HOW your data is going to be used when building your tables. There are a few other things to remember. If your table is very small, i.e., only a few employees, it\'s worse to use an index than to leave it out and just let it do a table scan.</p>\r\n</li>\r\n<li>\r\n<p>Indexes only come in handy with tables that have a lot of rows.</p>\r\n</li>\r\n<li>\r\n<p>Another thing to remember is that if the column is a variable length, indexes (as well as most of MySQL) perform much less efficiently.</p>\r\n</li>\r\n<li>\r\n<p>It is highly recommended to create an index on the foreign key columns, to enhance the performance of the joins between the primary and foreign keys, and also reduce the cost of maintaining the relationship between the child and parent tables.</p>\r\n</li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638023394683.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638023394683.png\" alt=\"image-1638023394683.png\" width=\"549\" height=\"458\"></a></p>\r\n<p id=\"bkmrk-full-text-%28fulltext%29\">Full-text (<strong>FULLTEXT</strong>) indexes are created on text-based columns ( CHAR, VARCHAR, or TEXT columns) to speed up queries and data manipulation operations on data contained within those columns.</p>\r\n<ul id=\"bkmrk-they-split-the-text-\">\r\n<li>They split the text into words and make an index over the words and not the whole text. This works a lot faster for text searches when looking for specific words.</li>\r\n</ul>\r\n<p id=\"bkmrk-descending-index-%28de\">Descending index (<strong>DESC</strong>) causes storage of key values in descending order. Previously, indexes could be scanned in reverse order but at a performance penalty. A descending index can be scanned in forward order, which is more efficient.</p>\r\n<ul id=\"bkmrk-it%E2%80%99s-helpful-when-yo\">\r\n<li>It’s helpful when you run queries for the most recently added data like you might show your five most recent posts or the ten most recent comments on all your posts.</li>\r\n</ul>\r\n<h2 id=\"bkmrk-composite-indexes\">Composite indexes</h2>\r\n<p id=\"bkmrk-composite-indexes-wo\">Composite indexes work just like regular indexes, except they have multi-values keys.</p>\r\n<p id=\"bkmrk-if-you-define-an-ind\">If you define an index on the fields (a,b,c), the records are sorted first on a, then b, then c.</p>\r\n<ul id=\"bkmrk-if-certain-fields-te\">\r\n<li>If certain fields tend to appear together in queries, then it’s a good idea to create a composite index ****on them.</li>\r\n<li>If we’re going to create an index on <code>field1</code> but also create a composite index on <code>(field1, field2)</code>. Then creating just the <em>composite index</em> on <code>(field1, field2)</code> is enough since it can be used for querying by <code>field1</code> alone.</li>\r\n</ul>\r\n<h2 id=\"bkmrk-examples\">Examples</h2>\r\n<ol id=\"bkmrk-it-is-possible-to-pa\">\r\n<li>It is possible to pass an integer argument to specify how many characters of the string it should index. Here we are specifying to create an index on the first three characters for the products SKU:</li>\r\n</ol>\r\n<p id=\"bkmrk--0\"><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/52f9be62-fd13-40a5-b707-0a498f2efb24/Untitled.png\" alt=\"Untitled\"></p>\r\n<ol id=\"bkmrk-if-we-create-an%C2%A0inde\">\r\n<li>\r\n<p>If we create an index on <code>users.first_name</code> it would create a sorting of the <code>users</code> by their <code>first_name</code> with a pointer to their primary key, something like this would take only <code>O(log_2(n))</code> reads since the database can perform a binary search on this index since it is sorted by <code>first_name</code></p>\r\n<p><strong>Table:</strong></p>\r\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/49c50702-416b-48fe-ab8d-3fa4c3fdc0a1/Untitled.png\" alt=\"Untitled\"></p>\r\n<p><strong>Indexes:</strong></p>\r\n</li>\r\n</ol>\r\n<p id=\"bkmrk--1\"><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6e6a277f-e91f-426e-a01e-4d0c507663c3/Untitled.png\" alt=\"Untitled\"></p>\r\n<ol id=\"bkmrk-like-a%C2%A0single-index%2C\">\r\n<li>\r\n<p>Like a single index, a composite index is also a data structure of records sorted on something. But unlike a single index, that something is not a field, but a concatenation of multiple fields.</p>\r\n<p>If we then would try to search by <code>class</code> and <code>position</code>, our query will have improved retrieval time, because the <strong>composite index</strong> is sorted by <code>class position</code>. The database can find <code>SpecialistTop</code> in <code>O(log_2(n))</code> reads rather than a full table read.</p>\r\n<p>Note that even a query on just the <code>class</code> field will benefit from this composite index since the <code>class</code> is the first field. Searching the index that is sorted by <code>class</code> is more or less equivalent to searching a composite index sorted by <code>class-position</code>.</p>\r\n<p>However, searching by <code>position</code> will NOT benefit from this composite index because the <code>position</code> is the second field. A composite index sorted by <code>class-position</code> cannot be used to quickly find a record by <code>position</code>.</p>\r\n<p><strong>Table:</strong></p>\r\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/86af59ab-fe5e-4d43-87e8-53ee73d16d3c/Untitled.png\" alt=\"Untitled\"></p>\r\n<p><strong>Indexes:</strong></p>\r\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3f053fd4-f00e-435c-b2a6-2a88d9682c0d/Untitled.png\" alt=\"Untitled\"></p>\r\n</li>\r\n</ol>', 'Index Types\r\nThe primary key is always automatically indexed and unique. Indexes by default are saved in a binary tree form (B-TREE).\r\n\r\n\r\nIndexes slow down inserts and updates, so you want to use them carefully on columns that are FREQUENTLY updated. This is because each time a record is added or updated, all the indexes need to be updated as well.\r\n\r\n\r\nIndexes speed up where clauses and order by. Remember to think about HOW your data is going to be used when building your tables. There are a few other things to remember. If your table is very small, i.e., only a few employees, it\'s worse to use an index than to leave it out and just let it do a table scan.\r\n\r\n\r\nIndexes only come in handy with tables that have a lot of rows.\r\n\r\n\r\nAnother thing to remember is that if the column is a variable length, indexes (as well as most of MySQL) perform much less efficiently.\r\n\r\n\r\nIt is highly recommended to create an index on the foreign key columns, to enhance the performance of the joins between the primary and foreign keys, and also reduce the cost of maintaining the relationship between the child and parent tables.\r\n\r\n\r\n\r\nFull-text (FULLTEXT) indexes are created on text-based columns ( CHAR, VARCHAR, or TEXT columns) to speed up queries and data manipulation operations on data contained within those columns.\r\n\r\nThey split the text into words and make an index over the words and not the whole text. This works a lot faster for text searches when looking for specific words.\r\n\r\nDescending index (DESC) causes storage of key values in descending order. Previously, indexes could be scanned in reverse order but at a performance penalty. A descending index can be scanned in forward order, which is more efficient.\r\n\r\nIt’s helpful when you run queries for the most recently added data like you might show your five most recent posts or the ten most recent comments on all your posts.\r\n\r\nComposite indexes\r\nComposite indexes work just like regular indexes, except they have multi-values keys.\r\nIf you define an index on the fields (a,b,c), the records are sorted first on a, then b, then c.\r\n\r\nIf certain fields tend to appear together in queries, then it’s a good idea to create a composite index ****on them.\r\nIf we’re going to create an index on field1 but also create a composite index on (field1, field2). Then creating just the composite index on (field1, field2) is enough since it can be used for querying by field1 alone.\r\n\r\nExamples\r\n\r\nIt is possible to pass an integer argument to specify how many characters of the string it should index. Here we are specifying to create an index on the first three characters for the products SKU:\r\n\r\n\r\n\r\n\r\nIf we create an index on users.first_name it would create a sorting of the users by their first_name with a pointer to their primary key, something like this would take only O(log_2(n)) reads since the database can perform a binary search on this index since it is sorted by first_name\r\nTable:\r\n\r\nIndexes:\r\n\r\n\r\n\r\n\r\n\r\nLike a single index, a composite index is also a data structure of records sorted on something. But unlike a single index, that something is not a field, but a concatenation of multiple fields.\r\nIf we then would try to search by class and position, our query will have improved retrieval time, because the composite index is sorted by class position. The database can find SpecialistTop in O(log_2(n)) reads rather than a full table read.\r\nNote that even a query on just the class field will benefit from this composite index since the class is the first field. Searching the index that is sorted by class is more or less equivalent to searching a composite index sorted by class-position.\r\nHowever, searching by position will NOT benefit from this composite index because the position is the second field. A composite index sorted by class-position cannot be used to quickly find a record by position.\r\nTable:\r\n\r\nIndexes:\r\n\r\n\r\n', 1, '2021-11-27 12:30:50', '2021-11-27 12:30:50', 'indexes', 'mysql', 'version', '', 'Initial publish', 1),
(8, 3, 'Indexes', '<p id=\"bkmrk-dwqdqwdwq\">DWQDQWDWQ</p>', 'DWQDQWDWQ', 1, '2021-11-27 12:38:27', '2021-11-27 12:38:27', 'indexes', 'mysql', 'version', '', '', 2),
(10, 3, 'Indexes', '<h2 id=\"bkmrk-index-types\">Index Types</h2>\r\n<p id=\"bkmrk-the-primary-key-is-a\">The primary key is always automatically indexed and unique. Indexes by default are saved in a binary tree form (<strong>B-TREE</strong>).</p>\r\n<ul id=\"bkmrk-indexes-slow-down-in\">\r\n<li>\r\n<p>Indexes slow down inserts and updates, so you want to use them carefully on columns that are FREQUENTLY updated. This is because each time a record is added or updated, all the indexes need to be updated as well.</p>\r\n</li>\r\n<li>\r\n<p>Indexes speed up where clauses and order by. Remember to think about HOW your data is going to be used when building your tables. There are a few other things to remember. If your table is very small, i.e., only a few employees, it\'s worse to use an index than to leave it out and just let it do a table scan.</p>\r\n</li>\r\n<li>\r\n<p>Indexes only come in handy with tables that have a lot of rows.</p>\r\n</li>\r\n<li>\r\n<p>Another thing to remember is that if the column is a variable length, indexes (as well as most of MySQL) perform much less efficiently.</p>\r\n</li>\r\n<li>\r\n<p>It is highly recommended to create an index on the foreign key columns, to enhance the performance of the joins between the primary and foreign keys, and also reduce the cost of maintaining the relationship between the child and parent tables.</p>\r\n</li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638023951865.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638023951865.png\" alt=\"image-1638023951865.png\" width=\"532\" height=\"443\"></a></p>\r\n<p id=\"bkmrk-full-text-%28fulltext%29\">Full-text (<strong>FULLTEXT</strong>) indexes are created on text-based columns ( CHAR, VARCHAR, or TEXT columns) to speed up queries and data manipulation operations on data contained within those columns.</p>\r\n<ul id=\"bkmrk-they-split-the-text-\">\r\n<li>They split the text into words and make an index over the words and not the whole text. This works a lot faster for text searches when looking for specific words.</li>\r\n</ul>\r\n<p id=\"bkmrk-descending-index-%28de\">Descending index (<strong>DESC</strong>) causes storage of key values in descending order. Previously, indexes could be scanned in reverse order but at a performance penalty. A descending index can be scanned in forward order, which is more efficient.</p>\r\n<ul id=\"bkmrk-it%E2%80%99s-helpful-when-yo\">\r\n<li>It’s helpful when you run queries for the most recently added data like you might show your five most recent posts or the ten most recent comments on all your posts.</li>\r\n</ul>\r\n<h2 id=\"bkmrk-composite-indexes\">Composite indexes</h2>\r\n<p id=\"bkmrk-composite-indexes-wo\"><strong>Composite indexes</strong> work just like regular indexes, except they have multi-values keys. If you define an index on the fields (a,b,c), the records are sorted first on a, then b, then c.</p>\r\n<pre id=\"bkmrk-%7C-a-%7C-b-%7C-c-%7C-------\"><code class=\"language-\">| A | B | C |\r\n-------------\r\n| 1 | 2 | 3 |\r\n| 1 | 4 | 2 |\r\n| 1 | 4 | 4 |\r\n| 2 | 3 | 5 |\r\n| 2 | 4 | 4 |\r\n| 2 | 4 | 5 |</code></pre>\r\n<ul id=\"bkmrk-if-certain-fields-te\">\r\n<li>If certain fields tend to appear together in queries, then it’s a good idea to create a <strong>composite index</strong> on them.</li>\r\n<li>If we’re going to create an index on <code>field1</code> but also create a composite index on <code>(field1, field2)</code>, then creating just the <strong>composite index</strong> on <code>(field1, field2)</code> is enough since it can be used for querying by <code>field1</code> alone.</li>\r\n</ul>\r\n<h2 id=\"bkmrk-examples\">Examples</h2>\r\n<ol id=\"bkmrk-it-is-possible-to-pa\">\r\n<li>It is possible to pass an integer argument to specify how many characters of the string it should index. Here we are specifying to create an index on the first three characters for the products SKU:</li>\r\n</ol>\r\n<pre id=\"bkmrk-create-index-idx_sku\"><code class=\"language-SQL\">CREATE INDEX idx_sku_three ON products (products_sku(3))</code></pre>\r\n<ol id=\"bkmrk-if-we-create-an-inde\">\r\n<li>If we create an index on <code>users.first_name</code> it would create a sorting of the <code>users</code> by their <code>first_name</code> with a pointer to their primary key, something like this would take only <code>O(log_2(n))</code> reads since the database can perform a binary search on this index since it is sorted by <code>first_name</code></li>\r\n</ol>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk-indexes%3A\"><strong>Indexes:</strong></p>\r\n<p id=\"bkmrk--0\"><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6e6a277f-e91f-426e-a01e-4d0c507663c3/Untitled.png\" alt=\"Untitled\"></p>\r\n<p id=\"bkmrk--1\"><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/745ebab5-bbe3-45d3-b973-2468ddd3bcb8/Untitled.png\" alt=\"Untitled\"></p>\r\n<p id=\"bkmrk-2%2Clike-a-single-inde\">2,Like a single index, a composite index is also a data structure of records sorted on something. But unlike a single index, that something is not a field, but a concatenation of multiple fields.</p>\r\n<p id=\"bkmrk-if-we-then-would-try\">If we then would try to search by <code>class</code> and <code>position</code>, our query will have improved retrieval time, because the <strong>composite index</strong> is sorted by <code>class position</code>. The database can find <code>SpecialistTop</code> in <code>O(log_2(n))</code> reads rather than a full table read.</p>\r\n<p id=\"bkmrk-note-that-even-a-que\">Note that even a query on just the <code>class</code> field will benefit from this composite index since the <code>class</code> is the first field. Searching the index that is sorted by <code>class</code> is more or less equivalent to searching a composite index sorted by <code>class-position</code>.</p>\r\n<p id=\"bkmrk-however%2C-searching-b\">However, searching by <code>position</code> will NOT benefit from this composite index because the <code>position</code> is the second field. A composite index sorted by <code>class-position</code> cannot be used to quickly find a record by <code>position</code>.</p>\r\n<p id=\"bkmrk-table%3A\"><strong>Table:</strong></p>\r\n<p id=\"bkmrk--2\"><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/86af59ab-fe5e-4d43-87e8-53ee73d16d3c/Untitled.png\" alt=\"Untitled\"></p>\r\n<p id=\"bkmrk-indexes%3A-0\"><strong>Indexes:</strong></p>\r\n<p id=\"bkmrk--3\"><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3f053fd4-f00e-435c-b2a6-2a88d9682c0d/Untitled.png\" alt=\"Untitled\"></p>\r\n<p id=\"bkmrk--4\"><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/de9534b8-7f8e-4c0c-9629-111ca1d91628/Untitled.png\" alt=\"Untitled\"></p>', 'Index Types\r\nThe primary key is always automatically indexed and unique. Indexes by default are saved in a binary tree form (B-TREE).\r\n\r\n\r\nIndexes slow down inserts and updates, so you want to use them carefully on columns that are FREQUENTLY updated. This is because each time a record is added or updated, all the indexes need to be updated as well.\r\n\r\n\r\nIndexes speed up where clauses and order by. Remember to think about HOW your data is going to be used when building your tables. There are a few other things to remember. If your table is very small, i.e., only a few employees, it\'s worse to use an index than to leave it out and just let it do a table scan.\r\n\r\n\r\nIndexes only come in handy with tables that have a lot of rows.\r\n\r\n\r\nAnother thing to remember is that if the column is a variable length, indexes (as well as most of MySQL) perform much less efficiently.\r\n\r\n\r\nIt is highly recommended to create an index on the foreign key columns, to enhance the performance of the joins between the primary and foreign keys, and also reduce the cost of maintaining the relationship between the child and parent tables.\r\n\r\n\r\n\r\nFull-text (FULLTEXT) indexes are created on text-based columns ( CHAR, VARCHAR, or TEXT columns) to speed up queries and data manipulation operations on data contained within those columns.\r\n\r\nThey split the text into words and make an index over the words and not the whole text. This works a lot faster for text searches when looking for specific words.\r\n\r\nDescending index (DESC) causes storage of key values in descending order. Previously, indexes could be scanned in reverse order but at a performance penalty. A descending index can be scanned in forward order, which is more efficient.\r\n\r\nIt’s helpful when you run queries for the most recently added data like you might show your five most recent posts or the ten most recent comments on all your posts.\r\n\r\nComposite indexes\r\nComposite indexes work just like regular indexes, except they have multi-values keys. If you define an index on the fields (a,b,c), the records are sorted first on a, then b, then c.\r\n| A | B | C |\r\n-------------\r\n| 1 | 2 | 3 |\r\n| 1 | 4 | 2 |\r\n| 1 | 4 | 4 |\r\n| 2 | 3 | 5 |\r\n| 2 | 4 | 4 |\r\n| 2 | 4 | 5 |\r\n\r\nIf certain fields tend to appear together in queries, then it’s a good idea to create a composite index on them.\r\nIf we’re going to create an index on field1 but also create a composite index on (field1, field2), then creating just the composite index on (field1, field2) is enough since it can be used for querying by field1 alone.\r\n\r\nExamples\r\n\r\nIt is possible to pass an integer argument to specify how many characters of the string it should index. Here we are specifying to create an index on the first three characters for the products SKU:\r\n\r\nCREATE INDEX idx_sku_three ON products (products_sku(3))\r\n\r\nIf we create an index on users.first_name it would create a sorting of the users by their first_name with a pointer to their primary key, something like this would take only O(log_2(n)) reads since the database can perform a binary search on this index since it is sorted by first_name\r\n\r\n \r\nIndexes:\r\n\r\n\r\n2,Like a single index, a composite index is also a data structure of records sorted on something. But unlike a single index, that something is not a field, but a concatenation of multiple fields.\r\nIf we then would try to search by class and position, our query will have improved retrieval time, because the composite index is sorted by class position. The database can find SpecialistTop in O(log_2(n)) reads rather than a full table read.\r\nNote that even a query on just the class field will benefit from this composite index since the class is the first field. Searching the index that is sorted by class is more or less equivalent to searching a composite index sorted by class-position.\r\nHowever, searching by position will NOT benefit from this composite index because the position is the second field. A composite index sorted by class-position cannot be used to quickly find a record by position.\r\nTable:\r\n\r\nIndexes:\r\n\r\n', 1, '2021-11-27 12:44:31', '2021-11-27 12:44:31', 'indexes', 'mysql', 'version', '', '', 3),
(12, 3, 'Indexes', '<h2 id=\"bkmrk-index-types\">Index Types</h2>\r\n<p id=\"bkmrk-the-primary-key-is-a\">The primary key is always automatically indexed and unique. Indexes by default are saved in a binary tree form (<strong>B-TREE</strong>).</p>\r\n<ul id=\"bkmrk-indexes-slow-down-in\">\r\n<li>\r\n<p>Indexes slow down inserts and updates, so you want to use them carefully on columns that are FREQUENTLY updated. This is because each time a record is added or updated, all the indexes need to be updated as well.</p>\r\n</li>\r\n<li>\r\n<p>Indexes speed up where clauses and order by. Remember to think about HOW your data is going to be used when building your tables. There are a few other things to remember. If your table is very small, i.e., only a few employees, it\'s worse to use an index than to leave it out and just let it do a table scan.</p>\r\n</li>\r\n<li>\r\n<p>Indexes only come in handy with tables that have a lot of rows.</p>\r\n</li>\r\n<li>\r\n<p>Another thing to remember is that if the column is a variable length, indexes (as well as most of MySQL) perform much less efficiently.</p>\r\n</li>\r\n<li>\r\n<p>It is highly recommended to create an index on the foreign key columns, to enhance the performance of the joins between the primary and foreign keys, and also reduce the cost of maintaining the relationship between the child and parent tables.</p>\r\n</li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638023951865.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638023951865.png\" alt=\"image-1638023951865.png\" width=\"532\" height=\"443\"></a></p>\r\n<p id=\"bkmrk-full-text-%28fulltext%29\">Full-text (<strong>FULLTEXT</strong>) indexes are created on text-based columns ( CHAR, VARCHAR, or TEXT columns) to speed up queries and data manipulation operations on data contained within those columns.</p>\r\n<ul id=\"bkmrk-they-split-the-text-\">\r\n<li>They split the text into words and make an index over the words and not the whole text. This works a lot faster for text searches when looking for specific words.</li>\r\n</ul>\r\n<p id=\"bkmrk-descending-index-%28de\">Descending index (<strong>DESC</strong>) causes storage of key values in descending order. Previously, indexes could be scanned in reverse order but at a performance penalty. A descending index can be scanned in forward order, which is more efficient.</p>\r\n<ul id=\"bkmrk-it%E2%80%99s-helpful-when-yo\">\r\n<li>It’s helpful when you run queries for the most recently added data like you might show your five most recent posts or the ten most recent comments on all your posts.</li>\r\n</ul>\r\n<h2 id=\"bkmrk-composite-indexes\">Composite indexes</h2>\r\n<p id=\"bkmrk-composite-indexes-wo\"><strong>Composite indexes</strong> work just like regular indexes, except they have multi-values keys. If you define an index on the fields (a,b,c), the records are sorted first on a, then b, then c.</p>\r\n<pre id=\"bkmrk-%7C-a-%7C-b-%7C-c-%7C-------\"><code class=\"language-\">| A | B | C |\r\n-------------\r\n| 1 | 2 | 3 |\r\n| 1 | 4 | 2 |\r\n| 1 | 4 | 4 |\r\n| 2 | 3 | 5 |\r\n| 2 | 4 | 4 |\r\n| 2 | 4 | 5 |</code></pre>\r\n<ul id=\"bkmrk-if-certain-fields-te\">\r\n<li>If certain fields tend to appear together in queries, then it’s a good idea to create a <strong>composite index</strong> on them.</li>\r\n<li>If we’re going to create an index on <code>field1</code> but also create a composite index on <code>(field1, field2)</code>, then creating just the <strong>composite index</strong> on <code>(field1, field2)</code> is enough since it can be used for querying by <code>field1</code> alone.</li>\r\n</ul>\r\n<h2 id=\"bkmrk-examples\">Examples</h2>\r\n<ol id=\"bkmrk-it-is-possible-to-pa\">\r\n<li>It is possible to pass an integer argument to specify how many characters of the string it should index. Here we are specifying to create an index on the first three characters for the products SKU:</li>\r\n</ol>\r\n<pre id=\"bkmrk-create-index-idx_sku\"><code class=\"language-SQL\">CREATE INDEX idx_sku_three ON products (products_sku(3))</code></pre>\r\n<ol id=\"bkmrk-if-we-create-an-inde\">\r\n<li>If we create an index on <code>users.first_name</code> it would create a sorting of the <code>users</code> by their <code>first_name</code> with a pointer to their primary key, something like this would take only <code>O(log_2(n))</code> reads since the database can perform a binary search on this index since it is sorted by <code>first_name</code></li>\r\n</ol>\r\n<pre id=\"bkmrk-id-%7C-first_name-%7C-la\"><code class=\"language-\">ID | first_name | last_name    | class      | position |\r\n--------------------------------------------------------\r\n 1 | Teemo      | Shroomer     | Specialist | Top      |\r\n 2 | Cecil      | Heimerdinger | Specialist | Mid      |\r\n 3 | Annie      | Hastur       | Mage       | Mid      |\r\n 4 | Fiora      | Laurent      | Slayer     | Top      |\r\n 5 | Garen      | Crownguard   | Fighter    | Top      |\r\n 6 | Malcolm    | Graves       | Specialist | ADC      |\r\n 7 | Irelia     | Lito         | Figher     | Top      |\r\n 8 | Janna      | Windforce    | Controller | Support  |\r\n 9 | Jarvan     | Lightshield  | Figher     | Top      |\r\n10 | Katarina   | DuCouteau    | Assassin   | Mid      |\r\n11 | Kayle      | Hex          | Specialist | Top      |\r\n12 | Emilia     | LeBlanc      | Mage       | Mid      |\r\n13 | Lee        | Sin          | Fighter    | Jungle   |\r\n14 | Lux        | Crownguard   | Mage       | Mid      |\r\n15 | Sarah      | Fortune      | Marksman   | ADC      |\r\n16 | Morgana    | Hex          | Controller | Support  |\r\n17 | Orianna    | Reveck       | Mage       | Mid      |\r\n18 | Sona       | Buvelle      | Controller | Support  |\r\n19 | Jericho    | Swain        | Mage       | Mid      |\r\n20 | Shauna     | Vayne        | Marksman   | ADC      |\r\n21 | Xin        | Zhao         | Fighter    | Jungle   |\r\n22 | Yorick     | Mori         | Tank       | Top      |\r\n23 | Wu         | Kong         | Fighter    | Jungle   |</code></pre>\r\n<pre id=\"bkmrk-create-index-first_n\"><code class=\"language-SQL\">CREATE INDEX first_name_index ON users (first_name) USING BTREE;</code></pre>\r\n<pre id=\"bkmrk-annie--%3E-3-cecil--%3E-\"><code class=\"language-\">Annie    -&gt; 3\r\nCecil    -&gt; 2\r\nEmilia   -&gt; 12\r\nFiora    -&gt; 4\r\nGaren    -&gt; 5\r\nIrelia   -&gt; 7\r\nJanna    -&gt; 8\r\nJarvan   -&gt; 9\r\nJericho  -&gt; 19\r\nKatarina -&gt; 10\r\nKayle    -&gt; 11\r\nLee      -&gt; 13\r\nLux      -&gt; 14\r\nMalcolm  -&gt; 6\r\nMorgana  -&gt; 16\r\nOrianna  -&gt; 17\r\nSarah    -&gt; 15\r\nShauna   -&gt; 20\r\nSona     -&gt; 18\r\nTeemo    -&gt; 1\r\nWu       -&gt; 23\r\nXin      -&gt; 21\r\nYorick   -&gt; 22</code></pre>\r\n<ol id=\"bkmrk-like-a-single-index%2C\">\r\n<li>\r\n<p id=\"bkmrk-2%2Clike-a-single-inde\">Like a single index, a composite index is also a data structure of records sorted on something. But unlike a single index, that something is not a field, but a concatenation of multiple fields.</p>\r\n<p id=\"bkmrk-if-we-then-would-try\">If we then would try to search by <code>class</code> and <code>position</code>, our query will have improved retrieval time, because the <strong>composite index</strong> is sorted by <code>class position</code>. The database can find <code>SpecialistTop</code> in <code>O(log_2(n))</code> reads rather than a full table read.</p>\r\n<p id=\"bkmrk-note-that-even-a-que\">Note that even a query on just the <code>class</code> field will benefit from this composite index since the <code>class</code> is the first field. Searching the index that is sorted by <code>class</code> is more or less equivalent to searching a composite index sorted by <code>class-position</code>.</p>\r\n<p id=\"bkmrk-however%2C-searching-b\">However, searching by <code>position</code> will NOT benefit from this composite index because the <code>position</code> is the second field. A composite index sorted by <code>class-position</code> cannot be used to quickly find a record by <code>position</code>.</p>\r\n</li>\r\n</ol>\r\n<pre id=\"bkmrk-create-index-class_p\"><code class=\"language-SQL\">CREATE INDEX class_pos_index ON users (class, position);</code></pre>\r\n<pre id=\"bkmrk-class-position-prima\"><code class=\"language-\">class-position       Primary Key\r\n--------------------------------\r\nAssassinMid       -&gt; 10\r\nControllerSupport -&gt; 16\r\nControllerSupport -&gt; 18\r\nControllerSupport -&gt; 8\r\nFigherTop         -&gt; 7\r\nFigherTop         -&gt; 9\r\nFighterJungle     -&gt; 13\r\nFighterJungle     -&gt; 21\r\nFighterJungle     -&gt; 23\r\nFighterTop        -&gt; 5\r\nMageMid           -&gt; 12\r\nMageMid           -&gt; 14\r\nMageMid           -&gt; 17\r\nMageMid           -&gt; 19\r\nMageMid           -&gt; 3\r\nMarksmanADC       -&gt; 15\r\nMarksmanADC       -&gt; 20\r\nSlayerTop         -&gt; 4\r\nSpecialistADC     -&gt; 6\r\nSpecialistMid     -&gt; 2\r\nSpecialistTop     -&gt; 1\r\nSpecialistTop     -&gt; 11\r\nTankTop           -&gt; 22</code></pre>', 'Index Types\r\nThe primary key is always automatically indexed and unique. Indexes by default are saved in a binary tree form (B-TREE).\r\n\r\n\r\nIndexes slow down inserts and updates, so you want to use them carefully on columns that are FREQUENTLY updated. This is because each time a record is added or updated, all the indexes need to be updated as well.\r\n\r\n\r\nIndexes speed up where clauses and order by. Remember to think about HOW your data is going to be used when building your tables. There are a few other things to remember. If your table is very small, i.e., only a few employees, it\'s worse to use an index than to leave it out and just let it do a table scan.\r\n\r\n\r\nIndexes only come in handy with tables that have a lot of rows.\r\n\r\n\r\nAnother thing to remember is that if the column is a variable length, indexes (as well as most of MySQL) perform much less efficiently.\r\n\r\n\r\nIt is highly recommended to create an index on the foreign key columns, to enhance the performance of the joins between the primary and foreign keys, and also reduce the cost of maintaining the relationship between the child and parent tables.\r\n\r\n\r\n\r\nFull-text (FULLTEXT) indexes are created on text-based columns ( CHAR, VARCHAR, or TEXT columns) to speed up queries and data manipulation operations on data contained within those columns.\r\n\r\nThey split the text into words and make an index over the words and not the whole text. This works a lot faster for text searches when looking for specific words.\r\n\r\nDescending index (DESC) causes storage of key values in descending order. Previously, indexes could be scanned in reverse order but at a performance penalty. A descending index can be scanned in forward order, which is more efficient.\r\n\r\nIt’s helpful when you run queries for the most recently added data like you might show your five most recent posts or the ten most recent comments on all your posts.\r\n\r\nComposite indexes\r\nComposite indexes work just like regular indexes, except they have multi-values keys. If you define an index on the fields (a,b,c), the records are sorted first on a, then b, then c.\r\n| A | B | C |\r\n-------------\r\n| 1 | 2 | 3 |\r\n| 1 | 4 | 2 |\r\n| 1 | 4 | 4 |\r\n| 2 | 3 | 5 |\r\n| 2 | 4 | 4 |\r\n| 2 | 4 | 5 |\r\n\r\nIf certain fields tend to appear together in queries, then it’s a good idea to create a composite index on them.\r\nIf we’re going to create an index on field1 but also create a composite index on (field1, field2), then creating just the composite index on (field1, field2) is enough since it can be used for querying by field1 alone.\r\n\r\nExamples\r\n\r\nIt is possible to pass an integer argument to specify how many characters of the string it should index. Here we are specifying to create an index on the first three characters for the products SKU:\r\n\r\nCREATE INDEX idx_sku_three ON products (products_sku(3))\r\n\r\nIf we create an index on users.first_name it would create a sorting of the users by their first_name with a pointer to their primary key, something like this would take only O(log_2(n)) reads since the database can perform a binary search on this index since it is sorted by first_name\r\n\r\nID | first_name | last_name    | class      | position |\r\n--------------------------------------------------------\r\n 1 | Teemo      | Shroomer     | Specialist | Top      |\r\n 2 | Cecil      | Heimerdinger | Specialist | Mid      |\r\n 3 | Annie      | Hastur       | Mage       | Mid      |\r\n 4 | Fiora      | Laurent      | Slayer     | Top      |\r\n 5 | Garen      | Crownguard   | Fighter    | Top      |\r\n 6 | Malcolm    | Graves       | Specialist | ADC      |\r\n 7 | Irelia     | Lito         | Figher     | Top      |\r\n 8 | Janna      | Windforce    | Controller | Support  |\r\n 9 | Jarvan     | Lightshield  | Figher     | Top      |\r\n10 | Katarina   | DuCouteau    | Assassin   | Mid      |\r\n11 | Kayle      | Hex          | Specialist | Top      |\r\n12 | Emilia     | LeBlanc      | Mage       | Mid      |\r\n13 | Lee        | Sin          | Fighter    | Jungle   |\r\n14 | Lux        | Crownguard   | Mage       | Mid      |\r\n15 | Sarah      | Fortune      | Marksman   | ADC      |\r\n16 | Morgana    | Hex          | Controller | Support  |\r\n17 | Orianna    | Reveck       | Mage       | Mid      |\r\n18 | Sona       | Buvelle      | Controller | Support  |\r\n19 | Jericho    | Swain        | Mage       | Mid      |\r\n20 | Shauna     | Vayne        | Marksman   | ADC      |\r\n21 | Xin        | Zhao         | Fighter    | Jungle   |\r\n22 | Yorick     | Mori         | Tank       | Top      |\r\n23 | Wu         | Kong         | Fighter    | Jungle   |\r\nCREATE INDEX first_name_index ON users (first_name) USING BTREE;\r\nAnnie    -> 3\r\nCecil    -> 2\r\nEmilia   -> 12\r\nFiora    -> 4\r\nGaren    -> 5\r\nIrelia   -> 7\r\nJanna    -> 8\r\nJarvan   -> 9\r\nJericho  -> 19\r\nKatarina -> 10\r\nKayle    -> 11\r\nLee      -> 13\r\nLux      -> 14\r\nMalcolm  -> 6\r\nMorgana  -> 16\r\nOrianna  -> 17\r\nSarah    -> 15\r\nShauna   -> 20\r\nSona     -> 18\r\nTeemo    -> 1\r\nWu       -> 23\r\nXin      -> 21\r\nYorick   -> 22\r\n\r\n\r\nLike a single index, a composite index is also a data structure of records sorted on something. But unlike a single index, that something is not a field, but a concatenation of multiple fields.\r\nIf we then would try to search by class and position, our query will have improved retrieval time, because the composite index is sorted by class position. The database can find SpecialistTop in O(log_2(n)) reads rather than a full table read.\r\nNote that even a query on just the class field will benefit from this composite index since the class is the first field. Searching the index that is sorted by class is more or less equivalent to searching a composite index sorted by class-position.\r\nHowever, searching by position will NOT benefit from this composite index because the position is the second field. A composite index sorted by class-position cannot be used to quickly find a record by position.\r\n\r\n\r\nCREATE INDEX class_pos_index ON users (class, position);\r\nclass-position       Primary Key\r\n--------------------------------\r\nAssassinMid       -> 10\r\nControllerSupport -> 16\r\nControllerSupport -> 18\r\nControllerSupport -> 8\r\nFigherTop         -> 7\r\nFigherTop         -> 9\r\nFighterJungle     -> 13\r\nFighterJungle     -> 21\r\nFighterJungle     -> 23\r\nFighterTop        -> 5\r\nMageMid           -> 12\r\nMageMid           -> 14\r\nMageMid           -> 17\r\nMageMid           -> 19\r\nMageMid           -> 3\r\nMarksmanADC       -> 15\r\nMarksmanADC       -> 20\r\nSlayerTop         -> 4\r\nSpecialistADC     -> 6\r\nSpecialistMid     -> 2\r\nSpecialistTop     -> 1\r\nSpecialistTop     -> 11\r\nTankTop           -> 22', 1, '2021-11-27 12:50:32', '2021-11-27 12:50:32', 'indexes', 'mysql', 'version', '', '', 4);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(13, 3, 'Indexes', '<h2 id=\"bkmrk-index-types\">Index Types</h2>\r\n<p id=\"bkmrk-the-primary-key-is-a\">The primary key is always automatically indexed and unique. Indexes by default are saved in a binary tree form (<strong>B-TREE</strong>).</p>\r\n<ul id=\"bkmrk-indexes-slow-down-in\">\r\n<li>\r\n<p>Indexes slow down inserts and updates, so you want to use them carefully on columns that are FREQUENTLY updated. This is because each time a record is added or updated, all the indexes need to be updated as well.</p>\r\n</li>\r\n<li>\r\n<p>Indexes speed up where clauses and order by. Remember to think about HOW your data is going to be used when building your tables. There are a few other things to remember. If your table is very small, i.e., only a few employees, it\'s worse to use an index than to leave it out and just let it do a table scan.</p>\r\n</li>\r\n<li>\r\n<p>Indexes only come in handy with tables that have a lot of rows.</p>\r\n</li>\r\n<li>\r\n<p>Another thing to remember is that if the column is a variable length, indexes (as well as most of MySQL) perform much less efficiently.</p>\r\n</li>\r\n<li>\r\n<p>It is highly recommended to create an index on the foreign key columns, to enhance the performance of the joins between the primary and foreign keys, and also reduce the cost of maintaining the relationship between the child and parent tables.</p>\r\n</li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638023951865.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638023951865.png\" alt=\"image-1638023951865.png\" width=\"532\" height=\"443\"></a></p>\r\n<p id=\"bkmrk-full-text-%28fulltext%29\">Full-text (<strong>FULLTEXT</strong>) indexes are created on text-based columns ( CHAR, VARCHAR, or TEXT columns) to speed up queries and data manipulation operations on data contained within those columns.</p>\r\n<ul id=\"bkmrk-they-split-the-text-\">\r\n<li>They split the text into words and make an index over the words and not the whole text. This works a lot faster for text searches when looking for specific words.</li>\r\n</ul>\r\n<p id=\"bkmrk-descending-index-%28de\">Descending index (<strong>DESC</strong>) causes storage of key values in descending order. Previously, indexes could be scanned in reverse order but at a performance penalty. A descending index can be scanned in forward order, which is more efficient.</p>\r\n<ul id=\"bkmrk-it%E2%80%99s-helpful-when-yo\">\r\n<li>It’s helpful when you run queries for the most recently added data like you might show your five most recent posts or the ten most recent comments on all your posts.</li>\r\n</ul>\r\n<h2 id=\"bkmrk-composite-indexes\">Composite indexes</h2>\r\n<p id=\"bkmrk-composite-indexes-wo\"><strong>Composite indexes</strong> work just like regular indexes, except they have multi-values keys. If you define an index on the fields (a,b,c), the records are sorted first on a, then b, then c.</p>\r\n<pre id=\"bkmrk-%7C-a-%7C-b-%7C-c-%7C-------\"><code class=\"language-\">| A | B | C |\r\n-------------\r\n| 1 | 2 | 3 |\r\n| 1 | 4 | 2 |\r\n| 1 | 4 | 4 |\r\n| 2 | 3 | 5 |\r\n| 2 | 4 | 4 |\r\n| 2 | 4 | 5 |</code></pre>\r\n<ul id=\"bkmrk-if-certain-fields-te\">\r\n<li>If certain fields tend to appear together in queries, then it’s a good idea to create a <strong>composite index</strong> on them.</li>\r\n<li>If we’re going to create an index on <code>field1</code> but also create a composite index on <code>(field1, field2)</code>, then creating just the <strong>composite index</strong> on <code>(field1, field2)</code> is enough since it can be used for querying by <code>field1</code> alone.</li>\r\n</ul>\r\n<h2 id=\"bkmrk-examples\">Examples</h2>\r\n<ol id=\"bkmrk-it-is-possible-to-pa\">\r\n<li>It is possible to pass an integer argument to specify how many characters of the string it should index. Here we are specifying to create an index on the first three characters for the products SKU:</li>\r\n</ol>\r\n<pre id=\"bkmrk-create-index-idx_sku\"><code class=\"language-SQL\">CREATE INDEX idx_sku_three ON products (products_sku(3))</code></pre>\r\n<ol id=\"bkmrk-if-we-create-an-inde\">\r\n<li>If we create an index on <code>users.first_name</code> it would create a sorting of the <code>users</code> by their <code>first_name</code> with a pointer to their primary key, something like this would take only <code>O(log_2(n))</code> reads since the database can perform a binary search on this index since it is sorted by <code>first_name</code></li>\r\n</ol>\r\n<pre id=\"bkmrk-id-%7C-first_name-%7C-la\"><code class=\"language-\">ID | first_name | last_name    | class      | position |\r\n--------------------------------------------------------\r\n 1 | Teemo      | Shroomer     | Specialist | Top      |\r\n 2 | Cecil      | Heimerdinger | Specialist | Mid      |\r\n 3 | Annie      | Hastur       | Mage       | Mid      |\r\n 4 | Fiora      | Laurent      | Slayer     | Top      |\r\n 5 | Garen      | Crownguard   | Fighter    | Top      |\r\n 6 | Malcolm    | Graves       | Specialist | ADC      |\r\n 7 | Irelia     | Lito         | Figher     | Top      |\r\n 8 | Janna      | Windforce    | Controller | Support  |\r\n 9 | Jarvan     | Lightshield  | Figher     | Top      |\r\n10 | Katarina   | DuCouteau    | Assassin   | Mid      |\r\n11 | Kayle      | Hex          | Specialist | Top      |\r\n12 | Emilia     | LeBlanc      | Mage       | Mid      |\r\n13 | Lee        | Sin          | Fighter    | Jungle   |\r\n14 | Lux        | Crownguard   | Mage       | Mid      |\r\n15 | Sarah      | Fortune      | Marksman   | ADC      |\r\n16 | Morgana    | Hex          | Controller | Support  |\r\n17 | Orianna    | Reveck       | Mage       | Mid      |\r\n18 | Sona       | Buvelle      | Controller | Support  |\r\n19 | Jericho    | Swain        | Mage       | Mid      |\r\n20 | Shauna     | Vayne        | Marksman   | ADC      |\r\n21 | Xin        | Zhao         | Fighter    | Jungle   |\r\n22 | Yorick     | Mori         | Tank       | Top      |\r\n23 | Wu         | Kong         | Fighter    | Jungle   |</code></pre>\r\n<pre id=\"bkmrk-create-index-first_n\"><code class=\"language-SQL\">CREATE INDEX first_name_index ON users (first_name) USING BTREE;</code></pre>\r\n<pre id=\"bkmrk-annie--%3E-3-cecil--%3E-\"><code class=\"language-\">Annie    -&gt; 3\r\nCecil    -&gt; 2\r\nEmilia   -&gt; 12\r\nFiora    -&gt; 4\r\nGaren    -&gt; 5\r\nIrelia   -&gt; 7\r\nJanna    -&gt; 8\r\nJarvan   -&gt; 9\r\nJericho  -&gt; 19\r\nKatarina -&gt; 10\r\nKayle    -&gt; 11\r\nLee      -&gt; 13\r\nLux      -&gt; 14\r\nMalcolm  -&gt; 6\r\nMorgana  -&gt; 16\r\nOrianna  -&gt; 17\r\nSarah    -&gt; 15\r\nShauna   -&gt; 20\r\nSona     -&gt; 18\r\nTeemo    -&gt; 1\r\nWu       -&gt; 23\r\nXin      -&gt; 21\r\nYorick   -&gt; 22</code></pre>\r\n<ol id=\"bkmrk-like-a-single-index%2C\">\r\n<li>\r\n<p id=\"bkmrk-2%2Clike-a-single-inde\">Like a single index, a composite index is also a data structure of records sorted on something. But unlike a single index, that something is not a field, but a concatenation of multiple fields.</p>\r\n<p id=\"bkmrk-if-we-then-would-try\">If we then would try to search by <code>class</code> and <code>position</code>, our query will have improved retrieval time, because the <strong>composite index</strong> is sorted by <code>class position</code>. The database can find <code>SpecialistTop</code> in <code>O(log_2(n))</code> reads rather than a full table read.</p>\r\n<p id=\"bkmrk-note-that-even-a-que\">Note that even a query on just the <code>class</code> field will benefit from this composite index since the <code>class</code> is the first field. Searching the index that is sorted by <code>class</code> is more or less equivalent to searching a composite index sorted by <code>class-position</code>.</p>\r\n<p id=\"bkmrk-however%2C-searching-b\">However, searching by <code>position</code> will NOT benefit from this composite index because the <code>position</code> is the second field. A composite index sorted by <code>class-position</code> cannot be used to quickly find a record by <code>position</code>.</p>\r\n</li>\r\n</ol>\r\n<pre id=\"bkmrk-create-index-class_p\"><code class=\"language-SQL\">CREATE INDEX class_pos_index ON users (class, position);</code></pre>\r\n<pre id=\"bkmrk-class-position-prima\"><code class=\"language-\">class-position       Primary Key\r\n--------------------------------\r\nAssassinMid       -&gt; 10\r\nControllerSupport -&gt; 16\r\nControllerSupport -&gt; 18\r\nControllerSupport -&gt; 8\r\nFigherTop         -&gt; 7\r\nFigherTop         -&gt; 9\r\nFighterJungle     -&gt; 13\r\nFighterJungle     -&gt; 21\r\nFighterJungle     -&gt; 23\r\nFighterTop        -&gt; 5\r\nMageMid           -&gt; 12\r\nMageMid           -&gt; 14\r\nMageMid           -&gt; 17\r\nMageMid           -&gt; 19\r\nMageMid           -&gt; 3\r\nMarksmanADC       -&gt; 15\r\nMarksmanADC       -&gt; 20\r\nSlayerTop         -&gt; 4\r\nSpecialistADC     -&gt; 6\r\nSpecialistMid     -&gt; 2\r\nSpecialistTop     -&gt; 1\r\nSpecialistTop     -&gt; 11\r\nTankTop           -&gt; 22</code></pre>', 'Index Types\r\nThe primary key is always automatically indexed and unique. Indexes by default are saved in a binary tree form (B-TREE).\r\n\r\n\r\nIndexes slow down inserts and updates, so you want to use them carefully on columns that are FREQUENTLY updated. This is because each time a record is added or updated, all the indexes need to be updated as well.\r\n\r\n\r\nIndexes speed up where clauses and order by. Remember to think about HOW your data is going to be used when building your tables. There are a few other things to remember. If your table is very small, i.e., only a few employees, it\'s worse to use an index than to leave it out and just let it do a table scan.\r\n\r\n\r\nIndexes only come in handy with tables that have a lot of rows.\r\n\r\n\r\nAnother thing to remember is that if the column is a variable length, indexes (as well as most of MySQL) perform much less efficiently.\r\n\r\n\r\nIt is highly recommended to create an index on the foreign key columns, to enhance the performance of the joins between the primary and foreign keys, and also reduce the cost of maintaining the relationship between the child and parent tables.\r\n\r\n\r\n\r\nFull-text (FULLTEXT) indexes are created on text-based columns ( CHAR, VARCHAR, or TEXT columns) to speed up queries and data manipulation operations on data contained within those columns.\r\n\r\nThey split the text into words and make an index over the words and not the whole text. This works a lot faster for text searches when looking for specific words.\r\n\r\nDescending index (DESC) causes storage of key values in descending order. Previously, indexes could be scanned in reverse order but at a performance penalty. A descending index can be scanned in forward order, which is more efficient.\r\n\r\nIt’s helpful when you run queries for the most recently added data like you might show your five most recent posts or the ten most recent comments on all your posts.\r\n\r\nComposite indexes\r\nComposite indexes work just like regular indexes, except they have multi-values keys. If you define an index on the fields (a,b,c), the records are sorted first on a, then b, then c.\r\n| A | B | C |\r\n-------------\r\n| 1 | 2 | 3 |\r\n| 1 | 4 | 2 |\r\n| 1 | 4 | 4 |\r\n| 2 | 3 | 5 |\r\n| 2 | 4 | 4 |\r\n| 2 | 4 | 5 |\r\n\r\nIf certain fields tend to appear together in queries, then it’s a good idea to create a composite index on them.\r\nIf we’re going to create an index on field1 but also create a composite index on (field1, field2), then creating just the composite index on (field1, field2) is enough since it can be used for querying by field1 alone.\r\n\r\nExamples\r\n\r\nIt is possible to pass an integer argument to specify how many characters of the string it should index. Here we are specifying to create an index on the first three characters for the products SKU:\r\n\r\nCREATE INDEX idx_sku_three ON products (products_sku(3))\r\n\r\nIf we create an index on users.first_name it would create a sorting of the users by their first_name with a pointer to their primary key, something like this would take only O(log_2(n)) reads since the database can perform a binary search on this index since it is sorted by first_name\r\n\r\nID | first_name | last_name    | class      | position |\r\n--------------------------------------------------------\r\n 1 | Teemo      | Shroomer     | Specialist | Top      |\r\n 2 | Cecil      | Heimerdinger | Specialist | Mid      |\r\n 3 | Annie      | Hastur       | Mage       | Mid      |\r\n 4 | Fiora      | Laurent      | Slayer     | Top      |\r\n 5 | Garen      | Crownguard   | Fighter    | Top      |\r\n 6 | Malcolm    | Graves       | Specialist | ADC      |\r\n 7 | Irelia     | Lito         | Figher     | Top      |\r\n 8 | Janna      | Windforce    | Controller | Support  |\r\n 9 | Jarvan     | Lightshield  | Figher     | Top      |\r\n10 | Katarina   | DuCouteau    | Assassin   | Mid      |\r\n11 | Kayle      | Hex          | Specialist | Top      |\r\n12 | Emilia     | LeBlanc      | Mage       | Mid      |\r\n13 | Lee        | Sin          | Fighter    | Jungle   |\r\n14 | Lux        | Crownguard   | Mage       | Mid      |\r\n15 | Sarah      | Fortune      | Marksman   | ADC      |\r\n16 | Morgana    | Hex          | Controller | Support  |\r\n17 | Orianna    | Reveck       | Mage       | Mid      |\r\n18 | Sona       | Buvelle      | Controller | Support  |\r\n19 | Jericho    | Swain        | Mage       | Mid      |\r\n20 | Shauna     | Vayne        | Marksman   | ADC      |\r\n21 | Xin        | Zhao         | Fighter    | Jungle   |\r\n22 | Yorick     | Mori         | Tank       | Top      |\r\n23 | Wu         | Kong         | Fighter    | Jungle   |\r\nCREATE INDEX first_name_index ON users (first_name) USING BTREE;\r\nAnnie    -> 3\r\nCecil    -> 2\r\nEmilia   -> 12\r\nFiora    -> 4\r\nGaren    -> 5\r\nIrelia   -> 7\r\nJanna    -> 8\r\nJarvan   -> 9\r\nJericho  -> 19\r\nKatarina -> 10\r\nKayle    -> 11\r\nLee      -> 13\r\nLux      -> 14\r\nMalcolm  -> 6\r\nMorgana  -> 16\r\nOrianna  -> 17\r\nSarah    -> 15\r\nShauna   -> 20\r\nSona     -> 18\r\nTeemo    -> 1\r\nWu       -> 23\r\nXin      -> 21\r\nYorick   -> 22\r\n\r\n\r\nLike a single index, a composite index is also a data structure of records sorted on something. But unlike a single index, that something is not a field, but a concatenation of multiple fields.\r\nIf we then would try to search by class and position, our query will have improved retrieval time, because the composite index is sorted by class position. The database can find SpecialistTop in O(log_2(n)) reads rather than a full table read.\r\nNote that even a query on just the class field will benefit from this composite index since the class is the first field. Searching the index that is sorted by class is more or less equivalent to searching a composite index sorted by class-position.\r\nHowever, searching by position will NOT benefit from this composite index because the position is the second field. A composite index sorted by class-position cannot be used to quickly find a record by position.\r\n\r\n\r\nCREATE INDEX class_pos_index ON users (class, position);\r\nclass-position       Primary Key\r\n--------------------------------\r\nAssassinMid       -> 10\r\nControllerSupport -> 16\r\nControllerSupport -> 18\r\nControllerSupport -> 8\r\nFigherTop         -> 7\r\nFigherTop         -> 9\r\nFighterJungle     -> 13\r\nFighterJungle     -> 21\r\nFighterJungle     -> 23\r\nFighterTop        -> 5\r\nMageMid           -> 12\r\nMageMid           -> 14\r\nMageMid           -> 17\r\nMageMid           -> 19\r\nMageMid           -> 3\r\nMarksmanADC       -> 15\r\nMarksmanADC       -> 20\r\nSlayerTop         -> 4\r\nSpecialistADC     -> 6\r\nSpecialistMid     -> 2\r\nSpecialistTop     -> 1\r\nSpecialistTop     -> 11\r\nTankTop           -> 22', 1, '2021-11-27 12:50:57', '2021-11-27 12:50:57', 'indexes', 'mysql', 'version', '', '', 5),
(14, 3, 'Indexes', '<h2 id=\"bkmrk-index-types\">Index Types</h2>\r\n<p id=\"bkmrk-the-primary-key-is-a\">The primary key is always automatically indexed and unique. Indexes by default are saved in a binary tree form (<strong>B-TREE</strong>).</p>\r\n<ul id=\"bkmrk-indexes-slow-down-in\">\r\n<li>\r\n<p>Indexes slow down inserts and updates, so you want to use them carefully on columns that are FREQUENTLY updated. This is because each time a record is added or updated, all the indexes need to be updated as well.</p>\r\n</li>\r\n<li>\r\n<p>Indexes speed up where clauses and order by. Remember to think about HOW your data is going to be used when building your tables. There are a few other things to remember. If your table is very small, i.e., only a few employees, it\'s worse to use an index than to leave it out and just let it do a table scan.</p>\r\n</li>\r\n<li>\r\n<p>Indexes only come in handy with tables that have a lot of rows.</p>\r\n</li>\r\n<li>\r\n<p>Another thing to remember is that if the column is a variable length, indexes (as well as most of MySQL) perform much less efficiently.</p>\r\n</li>\r\n<li>\r\n<p>It is highly recommended to create an index on the foreign key columns, to enhance the performance of the joins between the primary and foreign keys, and also reduce the cost of maintaining the relationship between the child and parent tables.</p>\r\n</li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638023951865.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638023951865.png\" alt=\"image-1638023951865.png\" width=\"532\" height=\"443\"></a></p>\r\n<p id=\"bkmrk-full-text-%28fulltext%29\">Full-text (<strong>FULLTEXT</strong>) indexes are created on text-based columns ( CHAR, VARCHAR, or TEXT columns) to speed up queries and data manipulation operations on data contained within those columns.</p>\r\n<ul id=\"bkmrk-they-split-the-text-\">\r\n<li>They split the text into words and make an index over the words and not the whole text. This works a lot faster for text searches when looking for specific words.</li>\r\n</ul>\r\n<p id=\"bkmrk-descending-index-%28de\">Descending index (<strong>DESC</strong>) causes storage of key values in descending order. Previously, indexes could be scanned in reverse order but at a performance penalty. A descending index can be scanned in forward order, which is more efficient.</p>\r\n<ul id=\"bkmrk-it%E2%80%99s-helpful-when-yo\">\r\n<li>It’s helpful when you run queries for the most recently added data like you might show your five most recent posts or the ten most recent comments on all your posts.</li>\r\n</ul>\r\n<h2 id=\"bkmrk-composite-indexes\">Composite indexes</h2>\r\n<p id=\"bkmrk-composite-indexes-wo\"><strong>Composite indexes</strong> work just like regular indexes, except they have multi-values keys. If you define an index on the fields (a,b,c), the records are sorted first on a, then b, then c.</p>\r\n<pre id=\"bkmrk-%7C-a-%7C-b-%7C-c-%7C-------\"><code class=\"language-\">| A | B | C |\r\n-------------\r\n| 1 | 2 | 3 |\r\n| 1 | 4 | 2 |\r\n| 1 | 4 | 4 |\r\n| 2 | 3 | 5 |\r\n| 2 | 4 | 4 |\r\n| 2 | 4 | 5 |</code></pre>\r\n<ul id=\"bkmrk-if-certain-fields-te\">\r\n<li>If certain fields tend to appear together in queries, then it’s a good idea to create a <strong>composite index</strong> on them.</li>\r\n<li>If we’re going to create an index on <code>field1</code> but also create a composite index on <code>(field1, field2)</code>, then creating just the <strong>composite index</strong> on <code>(field1, field2)</code> is enough since it can be used for querying by <code>field1</code> alone.</li>\r\n</ul>\r\n<h2 id=\"bkmrk-examples\">Examples</h2>\r\n<p id=\"bkmrk-1.-it-is-possible-to\">1. It is possible to pass an integer argument to specify how many characters of the string it should index. Here we are specifying to create an index on the first three characters for the products SKU:</p>\r\n<pre id=\"bkmrk-create-index-idx_sku\"><code class=\"language-SQL\">CREATE INDEX idx_sku_three ON products (products_sku(3))</code></pre>\r\n<p id=\"bkmrk-2.-if-we-create-an-i\">2. If we create an index on <code>users.first_name</code> it would create a sorting of the <code>users</code> by their <code>first_name</code> with a pointer to their primary key, something like this would take only <code>O(log_2(n))</code> reads since the database can perform a binary search on this index since it is sorted by <code>first_name</code></p>\r\n<pre id=\"bkmrk-id-%7C-first_name-%7C-la\"><code class=\"language-\">ID | first_name | last_name    | class      | position |\r\n--------------------------------------------------------\r\n 1 | Teemo      | Shroomer     | Specialist | Top      |\r\n 2 | Cecil      | Heimerdinger | Specialist | Mid      |\r\n 3 | Annie      | Hastur       | Mage       | Mid      |\r\n 4 | Fiora      | Laurent      | Slayer     | Top      |\r\n 5 | Garen      | Crownguard   | Fighter    | Top      |\r\n 6 | Malcolm    | Graves       | Specialist | ADC      |\r\n 7 | Irelia     | Lito         | Figher     | Top      |\r\n 8 | Janna      | Windforce    | Controller | Support  |\r\n 9 | Jarvan     | Lightshield  | Figher     | Top      |\r\n10 | Katarina   | DuCouteau    | Assassin   | Mid      |\r\n11 | Kayle      | Hex          | Specialist | Top      |\r\n12 | Emilia     | LeBlanc      | Mage       | Mid      |\r\n13 | Lee        | Sin          | Fighter    | Jungle   |\r\n14 | Lux        | Crownguard   | Mage       | Mid      |\r\n15 | Sarah      | Fortune      | Marksman   | ADC      |\r\n16 | Morgana    | Hex          | Controller | Support  |\r\n17 | Orianna    | Reveck       | Mage       | Mid      |\r\n18 | Sona       | Buvelle      | Controller | Support  |\r\n19 | Jericho    | Swain        | Mage       | Mid      |\r\n20 | Shauna     | Vayne        | Marksman   | ADC      |\r\n21 | Xin        | Zhao         | Fighter    | Jungle   |\r\n22 | Yorick     | Mori         | Tank       | Top      |\r\n23 | Wu         | Kong         | Fighter    | Jungle   |</code></pre>\r\n<pre id=\"bkmrk-create-index-first_n\"><code class=\"language-SQL\">CREATE INDEX first_name_index ON users (first_name) USING BTREE;</code></pre>\r\n<pre id=\"bkmrk-annie--%3E-3-cecil--%3E-\"><code class=\"language-\">Annie    -&gt; 3\r\nCecil    -&gt; 2\r\nEmilia   -&gt; 12\r\nFiora    -&gt; 4\r\nGaren    -&gt; 5\r\nIrelia   -&gt; 7\r\nJanna    -&gt; 8\r\nJarvan   -&gt; 9\r\nJericho  -&gt; 19\r\nKatarina -&gt; 10\r\nKayle    -&gt; 11\r\nLee      -&gt; 13\r\nLux      -&gt; 14\r\nMalcolm  -&gt; 6\r\nMorgana  -&gt; 16\r\nOrianna  -&gt; 17\r\nSarah    -&gt; 15\r\nShauna   -&gt; 20\r\nSona     -&gt; 18\r\nTeemo    -&gt; 1\r\nWu       -&gt; 23\r\nXin      -&gt; 21\r\nYorick   -&gt; 22</code></pre>\r\n<p id=\"bkmrk-2%2Clike-a-single-inde\">3.Like a single index, a composite index is also a data structure of records sorted on something. But unlike a single index, that something is not a field, but a concatenation of multiple fields.</p>\r\n<p id=\"bkmrk-if-we-then-would-try\">If we then would try to search by <code>class</code> and <code>position</code>, our query will have improved retrieval time, because the <strong>composite index</strong> is sorted by <code>class position</code>. The database can find <code>SpecialistTop</code> in <code>O(log_2(n))</code> reads rather than a full table read.</p>\r\n<p id=\"bkmrk-note-that-even-a-que\">Note that even a query on just the <code>class</code> field will benefit from this composite index since the <code>class</code> is the first field. Searching the index that is sorted by <code>class</code> is more or less equivalent to searching a composite index sorted by <code>class-position</code>.</p>\r\n<p id=\"bkmrk-however%2C-searching-b\">However, searching by <code>position</code> will NOT benefit from this composite index because the <code>position</code> is the second field. A composite index sorted by <code>class-position</code> cannot be used to quickly find a record by <code>position</code>.</p>\r\n<pre id=\"bkmrk-create-index-class_p\"><code class=\"language-SQL\">CREATE INDEX class_pos_index ON users (class, position);</code></pre>\r\n<pre id=\"bkmrk-class-position-prima\"><code class=\"language-\">class-position       Primary Key\r\n--------------------------------\r\nAssassinMid       -&gt; 10\r\nControllerSupport -&gt; 16\r\nControllerSupport -&gt; 18\r\nControllerSupport -&gt; 8\r\nFigherTop         -&gt; 7\r\nFigherTop         -&gt; 9\r\nFighterJungle     -&gt; 13\r\nFighterJungle     -&gt; 21\r\nFighterJungle     -&gt; 23\r\nFighterTop        -&gt; 5\r\nMageMid           -&gt; 12\r\nMageMid           -&gt; 14\r\nMageMid           -&gt; 17\r\nMageMid           -&gt; 19\r\nMageMid           -&gt; 3\r\nMarksmanADC       -&gt; 15\r\nMarksmanADC       -&gt; 20\r\nSlayerTop         -&gt; 4\r\nSpecialistADC     -&gt; 6\r\nSpecialistMid     -&gt; 2\r\nSpecialistTop     -&gt; 1\r\nSpecialistTop     -&gt; 11\r\nTankTop           -&gt; 22</code></pre>', 'Index Types\r\nThe primary key is always automatically indexed and unique. Indexes by default are saved in a binary tree form (B-TREE).\r\n\r\n\r\nIndexes slow down inserts and updates, so you want to use them carefully on columns that are FREQUENTLY updated. This is because each time a record is added or updated, all the indexes need to be updated as well.\r\n\r\n\r\nIndexes speed up where clauses and order by. Remember to think about HOW your data is going to be used when building your tables. There are a few other things to remember. If your table is very small, i.e., only a few employees, it\'s worse to use an index than to leave it out and just let it do a table scan.\r\n\r\n\r\nIndexes only come in handy with tables that have a lot of rows.\r\n\r\n\r\nAnother thing to remember is that if the column is a variable length, indexes (as well as most of MySQL) perform much less efficiently.\r\n\r\n\r\nIt is highly recommended to create an index on the foreign key columns, to enhance the performance of the joins between the primary and foreign keys, and also reduce the cost of maintaining the relationship between the child and parent tables.\r\n\r\n\r\n\r\nFull-text (FULLTEXT) indexes are created on text-based columns ( CHAR, VARCHAR, or TEXT columns) to speed up queries and data manipulation operations on data contained within those columns.\r\n\r\nThey split the text into words and make an index over the words and not the whole text. This works a lot faster for text searches when looking for specific words.\r\n\r\nDescending index (DESC) causes storage of key values in descending order. Previously, indexes could be scanned in reverse order but at a performance penalty. A descending index can be scanned in forward order, which is more efficient.\r\n\r\nIt’s helpful when you run queries for the most recently added data like you might show your five most recent posts or the ten most recent comments on all your posts.\r\n\r\nComposite indexes\r\nComposite indexes work just like regular indexes, except they have multi-values keys. If you define an index on the fields (a,b,c), the records are sorted first on a, then b, then c.\r\n| A | B | C |\r\n-------------\r\n| 1 | 2 | 3 |\r\n| 1 | 4 | 2 |\r\n| 1 | 4 | 4 |\r\n| 2 | 3 | 5 |\r\n| 2 | 4 | 4 |\r\n| 2 | 4 | 5 |\r\n\r\nIf certain fields tend to appear together in queries, then it’s a good idea to create a composite index on them.\r\nIf we’re going to create an index on field1 but also create a composite index on (field1, field2), then creating just the composite index on (field1, field2) is enough since it can be used for querying by field1 alone.\r\n\r\nExamples\r\n1. It is possible to pass an integer argument to specify how many characters of the string it should index. Here we are specifying to create an index on the first three characters for the products SKU:\r\nCREATE INDEX idx_sku_three ON products (products_sku(3))\r\n2. If we create an index on users.first_name it would create a sorting of the users by their first_name with a pointer to their primary key, something like this would take only O(log_2(n)) reads since the database can perform a binary search on this index since it is sorted by first_name\r\nID | first_name | last_name    | class      | position |\r\n--------------------------------------------------------\r\n 1 | Teemo      | Shroomer     | Specialist | Top      |\r\n 2 | Cecil      | Heimerdinger | Specialist | Mid      |\r\n 3 | Annie      | Hastur       | Mage       | Mid      |\r\n 4 | Fiora      | Laurent      | Slayer     | Top      |\r\n 5 | Garen      | Crownguard   | Fighter    | Top      |\r\n 6 | Malcolm    | Graves       | Specialist | ADC      |\r\n 7 | Irelia     | Lito         | Figher     | Top      |\r\n 8 | Janna      | Windforce    | Controller | Support  |\r\n 9 | Jarvan     | Lightshield  | Figher     | Top      |\r\n10 | Katarina   | DuCouteau    | Assassin   | Mid      |\r\n11 | Kayle      | Hex          | Specialist | Top      |\r\n12 | Emilia     | LeBlanc      | Mage       | Mid      |\r\n13 | Lee        | Sin          | Fighter    | Jungle   |\r\n14 | Lux        | Crownguard   | Mage       | Mid      |\r\n15 | Sarah      | Fortune      | Marksman   | ADC      |\r\n16 | Morgana    | Hex          | Controller | Support  |\r\n17 | Orianna    | Reveck       | Mage       | Mid      |\r\n18 | Sona       | Buvelle      | Controller | Support  |\r\n19 | Jericho    | Swain        | Mage       | Mid      |\r\n20 | Shauna     | Vayne        | Marksman   | ADC      |\r\n21 | Xin        | Zhao         | Fighter    | Jungle   |\r\n22 | Yorick     | Mori         | Tank       | Top      |\r\n23 | Wu         | Kong         | Fighter    | Jungle   |\r\nCREATE INDEX first_name_index ON users (first_name) USING BTREE;\r\nAnnie    -> 3\r\nCecil    -> 2\r\nEmilia   -> 12\r\nFiora    -> 4\r\nGaren    -> 5\r\nIrelia   -> 7\r\nJanna    -> 8\r\nJarvan   -> 9\r\nJericho  -> 19\r\nKatarina -> 10\r\nKayle    -> 11\r\nLee      -> 13\r\nLux      -> 14\r\nMalcolm  -> 6\r\nMorgana  -> 16\r\nOrianna  -> 17\r\nSarah    -> 15\r\nShauna   -> 20\r\nSona     -> 18\r\nTeemo    -> 1\r\nWu       -> 23\r\nXin      -> 21\r\nYorick   -> 22\r\n3.Like a single index, a composite index is also a data structure of records sorted on something. But unlike a single index, that something is not a field, but a concatenation of multiple fields.\r\nIf we then would try to search by class and position, our query will have improved retrieval time, because the composite index is sorted by class position. The database can find SpecialistTop in O(log_2(n)) reads rather than a full table read.\r\nNote that even a query on just the class field will benefit from this composite index since the class is the first field. Searching the index that is sorted by class is more or less equivalent to searching a composite index sorted by class-position.\r\nHowever, searching by position will NOT benefit from this composite index because the position is the second field. A composite index sorted by class-position cannot be used to quickly find a record by position.\r\nCREATE INDEX class_pos_index ON users (class, position);\r\nclass-position       Primary Key\r\n--------------------------------\r\nAssassinMid       -> 10\r\nControllerSupport -> 16\r\nControllerSupport -> 18\r\nControllerSupport -> 8\r\nFigherTop         -> 7\r\nFigherTop         -> 9\r\nFighterJungle     -> 13\r\nFighterJungle     -> 21\r\nFighterJungle     -> 23\r\nFighterTop        -> 5\r\nMageMid           -> 12\r\nMageMid           -> 14\r\nMageMid           -> 17\r\nMageMid           -> 19\r\nMageMid           -> 3\r\nMarksmanADC       -> 15\r\nMarksmanADC       -> 20\r\nSlayerTop         -> 4\r\nSpecialistADC     -> 6\r\nSpecialistMid     -> 2\r\nSpecialistTop     -> 1\r\nSpecialistTop     -> 11\r\nTankTop           -> 22', 1, '2021-11-27 12:51:18', '2021-11-27 12:51:18', 'indexes', 'mysql', 'version', '', '', 6),
(15, 1, 'Joins', '<h3 id=\"bkmrk-join-types\">JOIN types</h3>\r\n<ul id=\"bkmrk-inner-join%3A-returns-\">\r\n<li id=\"bkmrk-inner-join%3A-returns--0\"><strong>INNER JOIN</strong>: returns rows when there is a match in both tables.</li>\r\n<li id=\"bkmrk-left-join%3A-returns-a\"><strong>LEFT JOIN</strong>: returns all rows from the left table, even if there are no matches in the right table.</li>\r\n<li id=\"bkmrk-right-join%3A-returns-\"><strong>RIGHT JOIN</strong>: returns all rows from the right table, even if there are no matches in the left table.</li>\r\n<li id=\"bkmrk-full-outer-join%3A-com\"><strong>FULL OUTER JOIN</strong>: combines the results of both left and right outer joins.</li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638022906583.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638022906583.png\" alt=\"image-1638022906583.png\"></a></p>\r\n<h3 id=\"bkmrk-joining-tables-with-\">Joining tables with ON vs WHERE</h3>\r\n<p id=\"bkmrk-joining-using-on%3A\"><strong>Joining using ON:</strong></p>\r\n<pre id=\"bkmrk-select-%2A-from-facebo\"><code class=\"language-sql\">SELECT * FROM facebook\r\nJOIN linkedin\r\nON facebook.name = linkedin.name\r\nWHERE (facebook.name = Matt OR linkedin.city = \"SF\")\r\n</code></pre>\r\n<p id=\"bkmrk-joining-using-where%3A\"><strong>Joining using WHERE:</strong></p>\r\n<pre id=\"bkmrk-select-%2A-from-facebo-0\"><code class=\"language-SQL\">SELECT * FROM facebook, linkedin\r\nWHERE facebook.name = linkedin.name\r\nAND (facebook.name = Matt OR linkedin.city = \"SF\")\r\n</code></pre>', 'JOIN types\r\n\r\nINNER JOIN: returns rows when there is a match in both tables.\r\nLEFT JOIN: returns all rows from the left table, even if there are no matches in the right table.\r\nRIGHT JOIN: returns all rows from the right table, even if there are no matches in the left table.\r\nFULL OUTER JOIN: combines the results of both left and right outer joins.\r\n\r\n\r\nJoining tables with ON vs WHERE\r\nJoining using ON:\r\nSELECT * FROM facebook\r\nJOIN linkedin\r\nON facebook.name = linkedin.name\r\nWHERE (facebook.name = Matt OR linkedin.city = \"SF\")\r\n\r\nJoining using WHERE:\r\nSELECT * FROM facebook, linkedin\r\nWHERE facebook.name = linkedin.name\r\nAND (facebook.name = Matt OR linkedin.city = \"SF\")\r\n', 1, '2021-11-27 12:52:12', '2021-11-27 12:52:12', 'joins', 'mysql', 'version', '', '', 4),
(16, 2, 'Constraints', '<h3 id=\"bkmrk-what-are-constraints\">What are constraints?</h3>\r\n<p id=\"bkmrk-constraints-are-used\">Constraints are used to define rules to allow or restrict what values can be stored in columns.</p>\r\n<p id=\"bkmrk-mysql-constraints-ar\">MySQL Constraints are:</p>\r\n<ul id=\"bkmrk-not-null-unique-prim\">\r\n<li><strong>NOT NULL</strong></li>\r\n<li><strong>UNIQUE</strong></li>\r\n<li><strong>PRIMARY KEY</strong></li>\r\n<li><strong>FOREIGN KEY</strong></li>\r\n<li><strong>CHECK</strong></li>\r\n<li><strong>DEFAULT</strong></li>\r\n</ul>\r\n<h3 id=\"bkmrk-what-is-a-foreign-ke\">What is a FOREIGN KEY constraint?</h3>\r\n<p id=\"bkmrk-the%C2%A0foreign-key%C2%A0cons\">The <strong>FOREIGN KEY</strong> constraint is used to prevent actions that would destroy links between tables.</p>\r\n<ul id=\"bkmrk-typically%2C-the-forei\">\r\n<li>Typically, the foreign key columns of the child table often refer to the primary key columns of the parent table.</li>\r\n<li>The data type of the foreign key that is used in the child table must be the same as the data type of the primary key that is used in the parent table to refer to the foreign key.</li>\r\n</ul>\r\n<h4 id=\"bkmrk-referential-actions\">Referential actions</h4>\r\n<ul id=\"bkmrk-cascade%C2%A0%E2%80%93-changes-pl\">\r\n<li><strong>CASCADE</strong> – Changes placed upon the parent table column are automatically reflected on the child table columns.</li>\r\n<li><strong>SET NULL</strong> – Child table columns are set to NULL for both UPDATE or DELETE operations.</li>\r\n<li><strong>RESTRICT</strong> – Rejects the DELETE or UPDATE on any child table column. If no referential action clause is specified, this is the default action.</li>\r\n</ul>', 'What are constraints?\r\nConstraints are used to define rules to allow or restrict what values can be stored in columns.\r\nMySQL Constraints are:\r\n\r\nNOT NULL\r\nUNIQUE\r\nPRIMARY KEY\r\nFOREIGN KEY\r\nCHECK\r\nDEFAULT\r\n\r\nWhat is a FOREIGN KEY constraint?\r\nThe FOREIGN KEY constraint is used to prevent actions that would destroy links between tables.\r\n\r\nTypically, the foreign key columns of the child table often refer to the primary key columns of the parent table.\r\nThe data type of the foreign key that is used in the child table must be the same as the data type of the primary key that is used in the parent table to refer to the foreign key.\r\n\r\nReferential actions\r\n\r\nCASCADE – Changes placed upon the parent table column are automatically reflected on the child table columns.\r\nSET NULL – Child table columns are set to NULL for both UPDATE or DELETE operations.\r\nRESTRICT – Rejects the DELETE or UPDATE on any child table column. If no referential action clause is specified, this is the default action.\r\n', 1, '2021-11-27 12:52:44', '2021-11-27 12:52:44', 'constraints', 'mysql', 'version', '', '', 2),
(17, 4, 'Wildcards', '<h2 id=\"bkmrk-what-are-wildcards%3F\">What are Wildcards?</h2>\r\n<p id=\"bkmrk-mysql-provides-two-w\">MySQL provides two wildcard characters for constructing patterns: percentage <code>%</code> and the underscore <code>_</code>.</p>\r\n<ul id=\"bkmrk-the-percentage-%28%C2%A0%25%C2%A0%29\">\r\n<li>The percentage ( <code>%</code> ) wildcard matches any string of zero or more characters.</li>\r\n<li>The underscore ( <code>_</code> ) wildcard matches any single character.</li>\r\n</ul>\r\n<p id=\"bkmrk-examples\"><strong>Examples</strong></p>\r\n<ol id=\"bkmrk-to-find-employees-wh\">\r\n<li>To find employees whose first names start with the letter <code>T</code> , end with the letter <code>m</code>, and contain any single character between e.g., <code>Tom</code>, <code>Tim</code>, you use the underscore (_) wildcard to construct the pattern as follows:</li>\r\n</ol>\r\n<pre id=\"bkmrk-select-employeenumbe\"><code class=\"language-sql\">SELECT \r\n    employeeNumber, \r\n    lastName, \r\n    firstName\r\nFROM\r\n    employees\r\nWHERE\r\n    firstname LIKE \'T_m\';</code></pre>\r\n<ol id=\"bkmrk-to-find-employees-wh-0\">\r\n<li>To find employees whose name can start with any letter and any length, but whose last names end with the literal string <code>on</code> e.g., <code>Patterson</code>, <code>Thompson</code>, you use the underscore (%) wildcard to construct the pattern as follows:</li>\r\n</ol>\r\n<pre id=\"bkmrk-select-employeenumbe-0\"><code class=\"language-sql\">SELECT \r\n    employeeNumber, \r\n    lastName, \r\n    firstName\r\nFROM\r\n    employees\r\nWHERE\r\n    lastName LIKE \'%on\';</code></pre>', 'What are Wildcards?\r\nMySQL provides two wildcard characters for constructing patterns: percentage % and the underscore _.\r\n\r\nThe percentage ( % ) wildcard matches any string of zero or more characters.\r\nThe underscore ( _ ) wildcard matches any single character.\r\n\r\nExamples\r\n\r\nTo find employees whose first names start with the letter T , end with the letter m, and contain any single character between e.g., Tom, Tim, you use the underscore (_) wildcard to construct the pattern as follows:\r\n\r\nSELECT \r\n    employeeNumber, \r\n    lastName, \r\n    firstName\r\nFROM\r\n    employees\r\nWHERE\r\n    firstname LIKE \'T_m\';\r\n\r\nTo find employees whose name can start with any letter and any length, but whose last names end with the literal string on e.g., Patterson, Thompson, you use the underscore (%) wildcard to construct the pattern as follows:\r\n\r\nSELECT \r\n    employeeNumber, \r\n    lastName, \r\n    firstName\r\nFROM\r\n    employees\r\nWHERE\r\n    lastName LIKE \'%on\';', 1, '2021-11-27 13:28:56', '2021-11-27 13:28:56', 'wildcards', 'mysql', 'version', '', 'Initial publish', 1),
(18, 4, 'Wildcards', '<h3 id=\"bkmrk-what-are-wildcards%3F\">What are Wildcards?</h3>\r\n<p id=\"bkmrk-mysql-provides-two-w\">MySQL provides two wildcard characters for constructing patterns: percentage <code>%</code> and the underscore <code>_</code>.</p>\r\n<ul id=\"bkmrk-the-percentage-%28%C2%A0%25%C2%A0%29\">\r\n<li>The percentage ( <code>%</code> ) wildcard matches any string of zero or more characters.</li>\r\n<li>The underscore ( <code>_</code> ) wildcard matches any single character.</li>\r\n</ul>\r\n<p id=\"bkmrk-examples\"><strong>Examples</strong></p>\r\n<ol id=\"bkmrk-to-find-employees-wh\">\r\n<li>To find employees whose first names start with the letter <code>T</code> , end with the letter <code>m</code>, and contain any single character between e.g., <code>Tom</code>, <code>Tim</code>, you use the underscore (_) wildcard to construct the pattern as follows:</li>\r\n</ol>\r\n<pre id=\"bkmrk-select-employeenumbe\"><code class=\"language-sql\">SELECT \r\n    employeeNumber, \r\n    lastName, \r\n    firstName\r\nFROM\r\n    employees\r\nWHERE\r\n    firstname LIKE \'T_m\';</code></pre>\r\n<ol id=\"bkmrk-to-find-employees-wh-0\">\r\n<li>To find employees whose name can start with any letter and any length, but whose last names end with the literal string <code>on</code> e.g., <code>Patterson</code>, <code>Thompson</code>, you use the underscore (%) wildcard to construct the pattern as follows:</li>\r\n</ol>\r\n<pre id=\"bkmrk-select-employeenumbe-0\"><code class=\"language-sql\">SELECT \r\n    employeeNumber, \r\n    lastName, \r\n    firstName\r\nFROM\r\n    employees\r\nWHERE\r\n    lastName LIKE \'%on\';</code></pre>', 'What are Wildcards?\r\nMySQL provides two wildcard characters for constructing patterns: percentage % and the underscore _.\r\n\r\nThe percentage ( % ) wildcard matches any string of zero or more characters.\r\nThe underscore ( _ ) wildcard matches any single character.\r\n\r\nExamples\r\n\r\nTo find employees whose first names start with the letter T , end with the letter m, and contain any single character between e.g., Tom, Tim, you use the underscore (_) wildcard to construct the pattern as follows:\r\n\r\nSELECT \r\n    employeeNumber, \r\n    lastName, \r\n    firstName\r\nFROM\r\n    employees\r\nWHERE\r\n    firstname LIKE \'T_m\';\r\n\r\nTo find employees whose name can start with any letter and any length, but whose last names end with the literal string on e.g., Patterson, Thompson, you use the underscore (%) wildcard to construct the pattern as follows:\r\n\r\nSELECT \r\n    employeeNumber, \r\n    lastName, \r\n    firstName\r\nFROM\r\n    employees\r\nWHERE\r\n    lastName LIKE \'%on\';', 1, '2021-11-27 13:29:14', '2021-11-27 13:29:14', 'wildcards', 'mysql', 'version', '', '', 2),
(25, 1, 'Joins', '<h3 id=\"bkmrk-join-types\">JOIN types</h3>\r\n<ul id=\"bkmrk-inner-join%3A-returns-\">\r\n<li id=\"bkmrk-inner-join%3A-returns--0\"><strong>INNER JOIN</strong>: returns rows when there is a match in both tables.</li>\r\n<li id=\"bkmrk-left-join%3A-returns-a\"><strong>LEFT JOIN</strong>: returns all rows from the left table, even if there are no matches in the right table.</li>\r\n<li id=\"bkmrk-right-join%3A-returns-\"><strong>RIGHT JOIN</strong>: returns all rows from the right table, even if there are no matches in the left table.</li>\r\n<li id=\"bkmrk-full-outer-join%3A-com\"><strong>FULL OUTER JOIN</strong>: combines the results of both left and right outer joins.</li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638022906583.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638022906583.png\" alt=\"image-1638022906583.png\"></a></p>\r\n<h4 id=\"bkmrk-examples\">Examples</h4>\r\n<p id=\"bkmrk-1.-to-retrieve-all-r\">1. To retrieve all records that don\'t have a relation, I would LEFT JOIN the tables and then filter out by NULL</p>\r\n<p id=\"bkmrk--0\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638033737437.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638033737437.png\" alt=\"image-1638033737437.png\" width=\"207\" height=\"136\"></a></p>\r\n<h3 id=\"bkmrk-joining-tables-with-\">Joining tables with ON vs WHERE</h3>\r\n<p id=\"bkmrk-joining-using-on%3A\"><strong>Joining using ON:</strong></p>\r\n<pre id=\"bkmrk-select-%2A-from-facebo\"><code class=\"language-sql\">SELECT * FROM facebook\r\nJOIN linkedin\r\nON facebook.name = linkedin.name\r\nWHERE (facebook.name = Matt OR linkedin.city = \"SF\")\r\n</code></pre>\r\n<p id=\"bkmrk-joining-using-where%3A\"><strong>Joining using WHERE:</strong></p>\r\n<pre id=\"bkmrk-select-%2A-from-facebo-0\"><code class=\"language-SQL\">SELECT * FROM facebook, linkedin\r\nWHERE facebook.name = linkedin.name\r\nAND (facebook.name = Matt OR linkedin.city = \"SF\")\r\n</code></pre>', 'JOIN types\r\n\r\nINNER JOIN: returns rows when there is a match in both tables.\r\nLEFT JOIN: returns all rows from the left table, even if there are no matches in the right table.\r\nRIGHT JOIN: returns all rows from the right table, even if there are no matches in the left table.\r\nFULL OUTER JOIN: combines the results of both left and right outer joins.\r\n\r\n\r\nExamples\r\n1. To retrieve all records that don\'t have a relation, I would LEFT JOIN the tables and then filter out by NULL\r\n\r\nJoining tables with ON vs WHERE\r\nJoining using ON:\r\nSELECT * FROM facebook\r\nJOIN linkedin\r\nON facebook.name = linkedin.name\r\nWHERE (facebook.name = Matt OR linkedin.city = \"SF\")\r\n\r\nJoining using WHERE:\r\nSELECT * FROM facebook, linkedin\r\nWHERE facebook.name = linkedin.name\r\nAND (facebook.name = Matt OR linkedin.city = \"SF\")\r\n', 1, '2021-11-27 15:22:30', '2021-11-27 15:22:30', 'joins', 'mysql', 'version', '', '', 5);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(26, 6, 'File Permissions', '<h3 id=\"bkmrk-how-do-file-permissi\">How do File Permissions work?</h3>\r\n<p id=\"bkmrk-each-file-and-direct\">Each file and directory has three user based permission groups.</p>\r\n<ul id=\"bkmrk-owner%C2%A0%E2%80%93-the-owner-pe\">\r\n<li><strong>owner</strong> – The Owner permissions apply only the owner of the file or directory, they will not impact the actions of other users.</li>\r\n<li><strong>group</strong> – The Group permissions apply only to the group that has been assigned to the file or directory, they will not effect the actions of other users.</li>\r\n<li><strong>all users</strong> – The All Users permissions apply to all other users on the system, this is the permission group that you want to watch the most.</li>\r\n</ul>\r\n<p id=\"bkmrk-each-file-or-directo\">Each file or directory has three basic permission types.</p>\r\n<ul id=\"bkmrk-read%C2%A0%E2%80%93-the-read-perm\">\r\n<li><strong>read</strong> – The Read permission refers to a user’s capability to read the contents of the file.</li>\r\n<li><strong>write</strong> – The Write permissions refer to a user’s capability to write or modify a file or directory.</li>\r\n<li><strong>execute</strong> – The Execute permission affects a user’s capability to execute a file or view the contents of a directory.</li>\r\n</ul>\r\n<ul id=\"bkmrk-%C2%A0\">\r\n<li style=\"list-style-type: none;\"> </li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638043801377.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638043801377.png\" alt=\"image-1638043801377.png\"></a></p>\r\n<h4 id=\"bkmrk-commands\">Commands</h4>\r\n<ul id=\"bkmrk-chmod---change-permi\">\r\n<li><strong>chmod</strong> - Change permissions of file\r\n<ul>\r\n<li><strong>chmod +x <em>file</em></strong> - Execution permissions for all</li>\r\n<li><strong>chmod 111 <em>file</em></strong> - Execution permissions for all</li>\r\n<li><strong>chmod 744 <em>file</em></strong> - Read permissions for all, but only owner can execute</li>\r\n<li><strong>chmod 777 <em>file</em></strong> - Read, write, execute permissions for all</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<ul id=\"bkmrk-groups-owner---lists\">\r\n<li><strong>groups <em>owner</em></strong> - Lists all groups owner is part of</li>\r\n<li><strong>members <em>group</em></strong> - Lists all members of a group</li>\r\n<li><strong>chown <em>owner:group</em>, <em>file/directory</em></strong> - Change group or owner of file or directory</li>\r\n</ul>', 'How do File Permissions work?\r\nEach file and directory has three user based permission groups.\r\n\r\nowner – The Owner permissions apply only the owner of the file or directory, they will not impact the actions of other users.\r\ngroup – The Group permissions apply only to the group that has been assigned to the file or directory, they will not effect the actions of other users.\r\nall users – The All Users permissions apply to all other users on the system, this is the permission group that you want to watch the most.\r\n\r\nEach file or directory has three basic permission types.\r\n\r\nread – The Read permission refers to a user’s capability to read the contents of the file.\r\nwrite – The Write permissions refer to a user’s capability to write or modify a file or directory.\r\nexecute – The Execute permission affects a user’s capability to execute a file or view the contents of a directory.\r\n\r\n\r\n \r\n\r\n\r\nCommands\r\n\r\nchmod - Change permissions of file\r\n\r\nchmod +x file - Execution permissions for all\r\nchmod 111 file - Execution permissions for all\r\nchmod 744 file - Read permissions for all, but only owner can execute\r\nchmod 777 file - Read, write, execute permissions for all\r\n\r\n\r\n\r\n\r\ngroups owner - Lists all groups owner is part of\r\nmembers group - Lists all members of a group\r\nchown owner:group, file/directory - Change group or owner of file or directory\r\n', 1, '2021-11-27 18:19:19', '2021-11-27 18:19:19', 'file-permissions', 'linux', 'version', '', 'Initial publish', 1),
(27, 7, 'Archiving and Compression', '', '', 1, '2021-11-27 18:19:41', '2021-11-27 18:19:41', 'archiving-and-compression', 'linux', 'version', '', 'Initial publish', 1),
(29, 7, 'Archiving and Compression', '<h3 id=\"bkmrk-what-are-archives%3F\">What are Archives?</h3>\r\n<p id=\"bkmrk-archiving-is-the-pro\">Archiving is the process of collecting and storing a group of files and directories into one file. The <code>tar</code> utility performs this action.</p>\r\n<p id=\"bkmrk-commands%3A\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-tar--cf-destination_\">\r\n<li><strong>tar -cf <em>destination_file.tar</em> <em>file_1.*</em> <em>file_2.*... </em></strong><em>- Archive files</em></li>\r\n<li><strong>tar -xf <em>file.tar</em></strong> - Extract files</li>\r\n</ul>\r\n<h2 id=\"bkmrk-what-is-compression%3F\">What is Compression?</h2>\r\n<p id=\"bkmrk-compression-%2A%2A%2A%2Ais-t\">Compression ****is the act of shrinking the size of a file, which is quite useful in sending large files over the internet. The <strong><code>gzip</code></strong> utility performs this action and usually the files are with <code>**.gz**</code> extension.</p>\r\n<p id=\"bkmrk-commands%3A-0\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-du--h-%7B%24file_name%7D--\">\r\n<li><strong><code>du -h {$file_name}</code></strong> - List file disk usage</li>\r\n<li><strong><code>gzip {$file_name}</code></strong> - Compresses file</li>\r\n<li><strong><code>gunzip {$file_name}</code></strong> - Un-compresses file</li>\r\n</ul>', 'What are Archives?\r\nArchiving is the process of collecting and storing a group of files and directories into one file. The tar utility performs this action.\r\nCommands:\r\n\r\ntar -cf destination_file.tar file_1.* file_2.*... - Archive files\r\ntar -xf file.tar - Extract files\r\n\r\nWhat is Compression?\r\nCompression ****is the act of shrinking the size of a file, which is quite useful in sending large files over the internet. The gzip utility performs this action and usually the files are with **.gz** extension.\r\nCommands:\r\n\r\ndu -h {$file_name} - List file disk usage\r\ngzip {$file_name} - Compresses file\r\ngunzip {$file_name} - Un-compresses file\r\n', 1, '2021-11-27 18:22:31', '2021-11-27 18:22:31', 'archiving-and-compression', 'linux', 'version', '', '', 2),
(30, 6, 'File Permissions', '<h3 id=\"bkmrk-how-do-file-permissi\">How do File Permissions work?</h3>\r\n<p id=\"bkmrk-each-file-and-direct\">Each file and directory has three user based permission groups.</p>\r\n<ul id=\"bkmrk-owner%C2%A0%E2%80%93-the-owner-pe\">\r\n<li><strong>owner</strong> – The Owner permissions apply only the owner of the file or directory, they will not impact the actions of other users.</li>\r\n<li><strong>group</strong> – The Group permissions apply only to the group that has been assigned to the file or directory, they will not effect the actions of other users.</li>\r\n<li><strong>all users</strong> – The All Users permissions apply to all other users on the system, this is the permission group that you want to watch the most.</li>\r\n</ul>\r\n<p id=\"bkmrk-each-file-or-directo\">Each file or directory has three basic permission types.</p>\r\n<ul id=\"bkmrk-read%C2%A0%E2%80%93-the-read-perm\">\r\n<li><strong>read</strong> – The Read permission refers to a user’s capability to read the contents of the file.</li>\r\n<li><strong>write</strong> – The Write permissions refer to a user’s capability to write or modify a file or directory.</li>\r\n<li><strong>execute</strong> – The Execute permission affects a user’s capability to execute a file or view the contents of a directory.</li>\r\n</ul>\r\n<ul id=\"bkmrk-%C2%A0\">\r\n<li style=\"list-style-type: none;\"> </li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638043801377.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638043801377.png\" alt=\"image-1638043801377.png\"></a></p>\r\n<h4 id=\"bkmrk-commands\">Commands</h4>\r\n<ul id=\"bkmrk-chmod---change-permi\">\r\n<li><strong>chmod</strong> - Change permissions of file\r\n<ul>\r\n<li><strong>chmod +x <em>file</em></strong> - Execution permissions for all</li>\r\n<li><strong>chmod 111 <em>file</em></strong> - Execution permissions for all</li>\r\n<li><strong>chmod 744 <em>file</em></strong> - Read permissions for all, but only owner can execute</li>\r\n<li><strong>chmod 777 <em>file</em></strong> - Read, write, execute permissions for all</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<ul id=\"bkmrk-groups-owner---lists\">\r\n<li><strong>groups <em>owner</em></strong> - Lists all groups owner is part of</li>\r\n<li><strong>members <em>group</em></strong> - Lists all members of a group</li>\r\n<li><strong>chown <em>owner:group</em>, <em>file/directory</em></strong> - Change group or owner of file or directory</li>\r\n</ul>', 'How do File Permissions work?\r\nEach file and directory has three user based permission groups.\r\n\r\nowner – The Owner permissions apply only the owner of the file or directory, they will not impact the actions of other users.\r\ngroup – The Group permissions apply only to the group that has been assigned to the file or directory, they will not effect the actions of other users.\r\nall users – The All Users permissions apply to all other users on the system, this is the permission group that you want to watch the most.\r\n\r\nEach file or directory has three basic permission types.\r\n\r\nread – The Read permission refers to a user’s capability to read the contents of the file.\r\nwrite – The Write permissions refer to a user’s capability to write or modify a file or directory.\r\nexecute – The Execute permission affects a user’s capability to execute a file or view the contents of a directory.\r\n\r\n\r\n \r\n\r\n\r\nCommands\r\n\r\nchmod - Change permissions of file\r\n\r\nchmod +x file - Execution permissions for all\r\nchmod 111 file - Execution permissions for all\r\nchmod 744 file - Read permissions for all, but only owner can execute\r\nchmod 777 file - Read, write, execute permissions for all\r\n\r\n\r\n\r\n\r\ngroups owner - Lists all groups owner is part of\r\nmembers group - Lists all members of a group\r\nchown owner:group, file/directory - Change group or owner of file or directory\r\n', 1, '2021-11-27 18:22:50', '2021-11-27 18:22:50', 'file-permissions', 'linux', 'version', '', '', 2),
(32, 7, 'Archiving and Compression', '<h3 id=\"bkmrk-what-are-archives%3F\">What are Archives?</h3>\r\n<p id=\"bkmrk-archiving-is-the-pro\"><strong>Archiving</strong> is the process of collecting and storing a group of files and directories into one file. The <code>tar</code> utility performs this action.</p>\r\n<p id=\"bkmrk-commands%3A\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-tar--cf-destination_\">\r\n<li><strong>tar -cf <em>destination_file.tar</em> <em>file_1.*</em> <em>file_2.*... </em></strong><em>- Archive files</em></li>\r\n<li><strong>tar -xf <em>file.tar</em></strong> - Extract files</li>\r\n</ul>\r\n<h3 id=\"bkmrk-what-is-compression%3F\">What is Compression?</h3>\r\n<p id=\"bkmrk-compression-%2A%2A%2A%2Ais-t\"><strong>Compression</strong> is the act of shrinking the size of a file, which is quite useful in sending large files over the internet. The <code>gzip</code> utility performs this action and usually the files are with <code>gz</code> extension.</p>\r\n<p id=\"bkmrk-commands%3A-0\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-du--h-%7B%24file_name%7D--\">\r\n<li><strong>du -h <em>file</em></strong> - List file disk usage</li>\r\n<li><strong>gzip <em>file</em></strong> - Compresses file</li>\r\n<li><strong>gunzip <em>file</em></strong> - Un-compresses file</li>\r\n</ul>', 'What are Archives?\r\nArchiving is the process of collecting and storing a group of files and directories into one file. The tar utility performs this action.\r\nCommands:\r\n\r\ntar -cf destination_file.tar file_1.* file_2.*... - Archive files\r\ntar -xf file.tar - Extract files\r\n\r\nWhat is Compression?\r\nCompression is the act of shrinking the size of a file, which is quite useful in sending large files over the internet. The gzip utility performs this action and usually the files are with gz extension.\r\nCommands:\r\n\r\ndu -h file - List file disk usage\r\ngzip file - Compresses file\r\ngunzip file - Un-compresses file\r\n', 1, '2021-11-27 18:24:32', '2021-11-27 18:24:32', 'archiving-and-compression', 'linux', 'version', '', '', 3),
(33, 7, 'Archiving and Compression', '<h3 id=\"bkmrk-what-are-archives%3F\">What are Archives?</h3>\r\n<p id=\"bkmrk-archiving-is-the-pro\"><strong>Archiving</strong> is the process of collecting and storing a group of files and directories into one file. The <code>tar</code> utility performs this action and the files are with <code>tar</code> extension.</p>\r\n<p id=\"bkmrk-commands%3A\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-tar--cf-destination_\">\r\n<li><strong>tar -cf <em>destination_file.tar</em> <em>file_1.*</em> <em>file_2.*... </em></strong><em>- Archive files</em></li>\r\n<li><strong>tar -xf <em>file.tar</em></strong> - Extract files</li>\r\n</ul>\r\n<h3 id=\"bkmrk-what-is-compression%3F\">What is Compression?</h3>\r\n<p id=\"bkmrk-compression-%2A%2A%2A%2Ais-t\"><strong>Compression</strong> is the act of shrinking the size of a file, which is quite useful in sending large files over the internet. The <code>gzip</code> utility performs this action and the files are with <code>gz</code> extension.</p>\r\n<p id=\"bkmrk-commands%3A-0\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-du--h-%7B%24file_name%7D--\">\r\n<li><strong>du -h <em>file</em></strong> - List file disk usage</li>\r\n<li><strong>gzip <em>file</em></strong> - Compresses file</li>\r\n<li><strong>gunzip <em>file</em></strong> - Un-compresses file</li>\r\n</ul>', 'What are Archives?\r\nArchiving is the process of collecting and storing a group of files and directories into one file. The tar utility performs this action and the files are with tar extension.\r\nCommands:\r\n\r\ntar -cf destination_file.tar file_1.* file_2.*... - Archive files\r\ntar -xf file.tar - Extract files\r\n\r\nWhat is Compression?\r\nCompression is the act of shrinking the size of a file, which is quite useful in sending large files over the internet. The gzip utility performs this action and the files are with gz extension.\r\nCommands:\r\n\r\ndu -h file - List file disk usage\r\ngzip file - Compresses file\r\ngunzip file - Un-compresses file\r\n', 1, '2021-11-27 18:24:59', '2021-11-27 18:24:59', 'archiving-and-compression', 'linux', 'version', '', '', 4),
(35, 6, 'File Permissions', '<h3 id=\"bkmrk-how-do-file-permissi\">How do File Permissions work?</h3>\r\n<p id=\"bkmrk-each-file-and-direct\">Each file and directory has three user based permission groups.</p>\r\n<ul id=\"bkmrk-owner%C2%A0%E2%80%93-the-owner-pe\">\r\n<li><strong>owner</strong> – The Owner permissions apply only the owner of the file or directory, they will not impact the actions of other users.</li>\r\n<li><strong>group</strong> – The Group permissions apply only to the group that has been assigned to the file or directory, they will not effect the actions of other users.</li>\r\n<li><strong>all users</strong> – The All Users permissions apply to all other users on the system, this is the permission group that you want to watch the most.</li>\r\n</ul>\r\n<p id=\"bkmrk-each-file-or-directo\">Each file or directory has three basic permission types.</p>\r\n<ul id=\"bkmrk-read%C2%A0%E2%80%93-the-read-perm\">\r\n<li><strong>read</strong> – The Read permission refers to a user’s capability to read the contents of the file.</li>\r\n<li><strong>write</strong> – The Write permissions refer to a user’s capability to write or modify a file or directory.</li>\r\n<li><strong>execute</strong> – The Execute permission affects a user’s capability to execute a file or view the contents of a directory.</li>\r\n</ul>\r\n<ul id=\"bkmrk-%C2%A0\">\r\n<li style=\"list-style-type: none;\"> </li>\r\n</ul>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638043801377.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638043801377.png\" alt=\"image-1638043801377.png\"></a></p>\r\n<h4 id=\"bkmrk-commands\">Commands</h4>\r\n<ul id=\"bkmrk-chmod---change-permi\">\r\n<li><strong>chmod</strong> - Change permissions of file.\r\n<ul>\r\n<li><strong>chmod +x <em>file</em></strong> - Execution permissions for all.</li>\r\n<li><strong>chmod 111 <em>file</em></strong> - Execution permissions for all.</li>\r\n<li><strong>chmod 744 <em>file</em></strong> - Read permissions for all, but only owner can execute.</li>\r\n<li><strong>chmod 777 <em>file</em></strong> - Read, write, execute permissions for all.</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<ul id=\"bkmrk-groups-owner---lists\">\r\n<li><strong>groups <em>owner</em></strong> - Lists all groups owner is part of.</li>\r\n<li><strong>members <em>group</em></strong> - Lists all members of a group.</li>\r\n<li><strong>chown <em>owner:group</em>, <em>file/directory</em></strong> - Change group or owner of file or directory.</li>\r\n</ul>', 'How do File Permissions work?\r\nEach file and directory has three user based permission groups.\r\n\r\nowner – The Owner permissions apply only the owner of the file or directory, they will not impact the actions of other users.\r\ngroup – The Group permissions apply only to the group that has been assigned to the file or directory, they will not effect the actions of other users.\r\nall users – The All Users permissions apply to all other users on the system, this is the permission group that you want to watch the most.\r\n\r\nEach file or directory has three basic permission types.\r\n\r\nread – The Read permission refers to a user’s capability to read the contents of the file.\r\nwrite – The Write permissions refer to a user’s capability to write or modify a file or directory.\r\nexecute – The Execute permission affects a user’s capability to execute a file or view the contents of a directory.\r\n\r\n\r\n \r\n\r\n\r\nCommands\r\n\r\nchmod - Change permissions of file.\r\n\r\nchmod +x file - Execution permissions for all.\r\nchmod 111 file - Execution permissions for all.\r\nchmod 744 file - Read permissions for all, but only owner can execute.\r\nchmod 777 file - Read, write, execute permissions for all.\r\n\r\n\r\n\r\n\r\ngroups owner - Lists all groups owner is part of.\r\nmembers group - Lists all members of a group.\r\nchown owner:group, file/directory - Change group or owner of file or directory.\r\n', 1, '2021-11-27 18:26:00', '2021-11-27 18:26:00', 'file-permissions', 'linux', 'version', '', '', 3),
(36, 7, 'Archiving and Compression', '<h3 id=\"bkmrk-what-are-archives%3F\">What are Archives?</h3>\r\n<p id=\"bkmrk-archiving-is-the-pro\"><strong>Archiving</strong> is the process of collecting and storing a group of files and directories into one file. The <code>tar</code> utility performs this action and the files are with <code>tar</code> extension.</p>\r\n<p id=\"bkmrk-commands%3A\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-tar--cf-destination_\">\r\n<li><strong>tar -cf <em>destination_file.tar</em> <em>file_1.*</em> <em>file_2.*... </em></strong><em>- Archive files.</em></li>\r\n<li><strong>tar -xf <em>file.tar</em></strong> - Extract files.</li>\r\n</ul>\r\n<h3 id=\"bkmrk-what-is-compression%3F\">What is Compression?</h3>\r\n<p id=\"bkmrk-compression-%2A%2A%2A%2Ais-t\"><strong>Compression</strong> is the act of shrinking the size of a file, which is quite useful in sending large files over the internet. The <code>gzip</code> utility performs this action and the files are with <code>gz</code> extension.</p>\r\n<p id=\"bkmrk-commands%3A-0\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-du--h-%7B%24file_name%7D--\">\r\n<li><strong>du -h <em>file</em></strong> - List file disk usage.</li>\r\n<li><strong>gzip <em>file</em></strong> - Compresses file.</li>\r\n<li><strong>gunzip <em>file</em></strong> - Un-compresses file.</li>\r\n</ul>', 'What are Archives?\r\nArchiving is the process of collecting and storing a group of files and directories into one file. The tar utility performs this action and the files are with tar extension.\r\nCommands:\r\n\r\ntar -cf destination_file.tar file_1.* file_2.*... - Archive files.\r\ntar -xf file.tar - Extract files.\r\n\r\nWhat is Compression?\r\nCompression is the act of shrinking the size of a file, which is quite useful in sending large files over the internet. The gzip utility performs this action and the files are with gz extension.\r\nCommands:\r\n\r\ndu -h file - List file disk usage.\r\ngzip file - Compresses file.\r\ngunzip file - Un-compresses file.\r\n', 1, '2021-11-27 18:26:13', '2021-11-27 18:26:13', 'archiving-and-compression', 'linux', 'version', '', '', 5),
(37, 8, 'Device Files', '<h3 id=\"bkmrk-what-are-device-file\">What are Device Files?</h3>\r\n<p id=\"bkmrk-in-linux-various-spe\">In Linux various special files can be found under the <strong><code>/dev</code></strong> directory. These files are called device files and behave unlike ordinary files. Two standard types of device files exist.</p>\r\n<ul id=\"bkmrk-character-devices-ar\">\r\n<li>\r\n<p><strong>Character devices</strong> are devices where that communicate by sending and receiving single characters or bytes.</p>\r\n<ul>\r\n<li><strong><code>/dev/null</code></strong>,<strong><code>/dev/urandom</code></strong>, <strong><code>/dev/zero</code></strong> etc. These are called <strong>pseudo devices.</strong></li>\r\n<li>Sound cards</li>\r\n<li>Serial ports</li>\r\n<li>Parallel ports</li>\r\n</ul>\r\n</li>\r\n<li>\r\n<p><strong>Block devices</strong> are devices where that communicate by sending entire blocks of data.</p>\r\n<ul>\r\n<li>Hard drives</li>\r\n<li>CD-ROM drives</li>\r\n<li>RAM disks</li>\r\n<li>USB cameras</li>\r\n</ul>\r\n<h3 id=\"bkmrk-how-are-device-disks-0\">How are Device Disks grouped?</h3>\r\n<p>Disk names in Linux are alphabetical. <strong><code>/dev/sda</code></strong> is the first hard drive, usually the primary one, <strong><code>/dev/sdb</code></strong> is the second etc. The numbers refer to partitions, so <strong><code>/dev/sda1</code></strong> is the first partition of the first drive. Storage devices are prefixed with <strong><code>sd</code></strong> because they are <strong>SCSI devices</strong>.</p>\r\n<p><strong>Commands:</strong></p>\r\n<ul>\r\n<li><strong>df -h</strong> - Lists all the mounted partitions.</li>\r\n<li><strong>lsblk</strong> - Lists all block devices.</li>\r\n<li><strong>lsusb</strong> - Lists all USB devices.</li>\r\n<li><strong>lspci</strong> - Lists all PCI Devices.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'What are Device Files?\r\nIn Linux various special files can be found under the /dev directory. These files are called device files and behave unlike ordinary files. Two standard types of device files exist.\r\n\r\n\r\nCharacter devices are devices where that communicate by sending and receiving single characters or bytes.\r\n\r\n/dev/null,/dev/urandom, /dev/zero etc. These are called pseudo devices.\r\nSound cards\r\nSerial ports\r\nParallel ports\r\n\r\n\r\n\r\nBlock devices are devices where that communicate by sending entire blocks of data.\r\n\r\nHard drives\r\nCD-ROM drives\r\nRAM disks\r\nUSB cameras\r\n\r\nHow are Device Disks grouped?\r\nDisk names in Linux are alphabetical. /dev/sda is the first hard drive, usually the primary one, /dev/sdb is the second etc. The numbers refer to partitions, so /dev/sda1 is the first partition of the first drive. Storage devices are prefixed with sd because they are SCSI devices.\r\nCommands:\r\n\r\ndf -h - Lists all the mounted partitions.\r\nlsblk - Lists all block devices.\r\nlsusb - Lists all USB devices.\r\nlspci - Lists all PCI Devices.\r\n\r\n\r\n', 1, '2021-11-27 18:28:40', '2021-11-27 18:28:40', 'device-files', 'linux', 'version', '', 'Initial publish', 1),
(38, 9, 'DD Utility', '<h3 id=\"bkmrk-how-to-use-the-dd-co\">How to use the DD command for file transfer and copy?</h3>\r\n<p id=\"bkmrk-dd-is-a-very-powerfu\">Dd is a very powerful and useful utility available on Unix and Unix-like operating systems. As stated in its manual, its purpose is to convert and copy files. On Unix and Unix-like operating systems like Linux, almost everything is treated as a file, even block devices: this makes dd useful, among the other things, to clone disks or wipe data.</p>\r\n<p id=\"bkmrk-commands%3A\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-dd---convert-and-cop\">\r\n<li><strong>dd</strong> - Convert and copy files.\r\n<ul>\r\n<li><strong>-bs</strong> - Block size, default is 512 KB, <strong>-count</strong> - Number of blocks to be copied, <strong>-if -of -</strong> Input/output file.</li>\r\n<li><strong>dd if=/dev/sda | gzip -c -9 &gt; sda.dd.gz</strong> - Make a copy of drive A and compress it.</li>\r\n<li><strong>dd if=/dev/zero of=~/howtogeek.img bs=1M count=250</strong> - Create an empty 250MB image file.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'How to use the DD command for file transfer and copy?\r\nDd is a very powerful and useful utility available on Unix and Unix-like operating systems. As stated in its manual, its purpose is to convert and copy files. On Unix and Unix-like operating systems like Linux, almost everything is treated as a file, even block devices: this makes dd useful, among the other things, to clone disks or wipe data.\r\nCommands:\r\n\r\ndd - Convert and copy files.\r\n\r\n-bs - Block size, default is 512 KB, -count - Number of blocks to be copied, -if -of - Input/output file.\r\ndd if=/dev/sda | gzip -c -9 > sda.dd.gz - Make a copy of drive A and compress it.\r\ndd if=/dev/zero of=~/howtogeek.img bs=1M count=250 - Create an empty 250MB image file.\r\n\r\n\r\n', 1, '2021-11-27 18:30:31', '2021-11-27 18:30:31', 'dd-utility', 'linux', 'version', '', 'Initial publish', 1),
(39, 9, 'DD Utility', '<h3 id=\"bkmrk-how-to-use-the-dd-co\">What is DD command used for?</h3>\r\n<p id=\"bkmrk-dd-is-a-very-powerfu\">Dd is a very powerful and useful utility available on Unix and Unix-like operating systems. As stated in its manual, its purpose is to convert and copy files. On Unix and Unix-like operating systems like Linux, almost everything is treated as a file, even block devices: this makes dd useful, among the other things, to clone disks or wipe data.</p>\r\n<p id=\"bkmrk-commands%3A\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-dd---convert-and-cop\">\r\n<li><strong>dd</strong> - Convert and copy files.\r\n<ul>\r\n<li><strong>-bs</strong> - Block size, default is 512 KB, <strong>-count</strong> - Number of blocks to be copied, <strong>-if -of -</strong> Input/output file.</li>\r\n<li><strong>dd if=/dev/sda | gzip -c -9 &gt; sda.dd.gz</strong> - Make a copy of drive A and compress it.</li>\r\n<li><strong>dd if=/dev/zero of=~/howtogeek.img bs=1M count=250</strong> - Create an empty 250MB image file.</li>\r\n</ul>\r\n</li>\r\n</ul>', 'What is DD command used for?\r\nDd is a very powerful and useful utility available on Unix and Unix-like operating systems. As stated in its manual, its purpose is to convert and copy files. On Unix and Unix-like operating systems like Linux, almost everything is treated as a file, even block devices: this makes dd useful, among the other things, to clone disks or wipe data.\r\nCommands:\r\n\r\ndd - Convert and copy files.\r\n\r\n-bs - Block size, default is 512 KB, -count - Number of blocks to be copied, -if -of - Input/output file.\r\ndd if=/dev/sda | gzip -c -9 > sda.dd.gz - Make a copy of drive A and compress it.\r\ndd if=/dev/zero of=~/howtogeek.img bs=1M count=250 - Create an empty 250MB image file.\r\n\r\n\r\n', 1, '2021-11-27 18:30:53', '2021-11-27 18:30:53', 'dd-utility', 'linux', 'version', '', '', 2),
(40, 10, 'Disk Partitioning', '<h3 id=\"bkmrk-what-is-disk-partiti\">What is Disk Partitioning?</h3>\r\n<p id=\"bkmrk-disk-partitioning-is\">Disk partitioning is splitting a drive into logical drives or volumes. Each volume on a partitioned disk has its own drive letter and folder structure and also can be formatted with different file systems without affecting other partitions. It is possible to set up hidden partition with no drive letter. When creating a partition, partition table has to be specified. Each drive can have only 1 partition table.</p>\r\n<h4 id=\"bkmrk-which-partition-tabl\">Which partition table should I use?</h4>\r\n<ul id=\"bkmrk-mbr-if-the-motherboa\">\r\n<li><strong>MBR</strong>\r\n<ul>\r\n<li>If the motherboard uses legacy BIOS</li>\r\n</ul>\r\n</li>\r\n<li><strong>GPT</strong>\r\n<ul>\r\n<li>If the drive capacity exceeds 2 TB</li>\r\n<li>If the motherboard supports UEFI</li>\r\n<li>If the drive will have more than 4 partitions</li>\r\n</ul>\r\n</li>\r\n</ul>', 'What is Disk Partitioning?\r\nDisk partitioning is splitting a drive into logical drives or volumes. Each volume on a partitioned disk has its own drive letter and folder structure and also can be formatted with different file systems without affecting other partitions. It is possible to set up hidden partition with no drive letter. When creating a partition, partition table has to be specified. Each drive can have only 1 partition table.\r\nWhich partition table should I use?\r\n\r\nMBR\r\n\r\nIf the motherboard uses legacy BIOS\r\n\r\n\r\nGPT\r\n\r\nIf the drive capacity exceeds 2 TB\r\nIf the motherboard supports UEFI\r\nIf the drive will have more than 4 partitions\r\n\r\n\r\n', 1, '2021-11-27 18:31:33', '2021-11-27 18:31:33', 'disk-partitioning', 'linux', 'version', '', 'Initial publish', 1),
(41, 11, 'File Systems', '', '', 1, '2021-11-27 18:31:44', '2021-11-27 18:31:44', 'file-systems', 'linux', 'version', '', 'Initial publish', 1),
(43, 11, 'File Systems', '<h2 id=\"bkmrk-what-are-file-system\">What are File Systems?</h2>\r\n<p id=\"bkmrk-file-system-is-the-w\">File system is the way storage space on a drive is split. Without it we wouldn\'t have any way to know where file one file ends and other one starts. An <strong>inode</strong> is a data structure that describes a file and each file has one. Each file system has an <strong>inode table</strong> which stores <strong>inodes</strong>.</p>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638045208973.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638045208973.png\" alt=\"image-1638045208973.png\" width=\"317\" height=\"222\"></a></p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<h4 id=\"bkmrk-what-data-do-inodes-\">What data do inodes contain?</h4>\r\n<ul id=\"bkmrk-unique-index-file-si\">\r\n<li>Unique index</li>\r\n<li>File size</li>\r\n<li>Permissions</li>\r\n<li>Location of the data</li>\r\n<li>Creation read, write timestamps</li>\r\n</ul>\r\n<h4 id=\"bkmrk-which-file-system-sh\">Which file system should I use for my system drive?</h4>\r\n<ul id=\"bkmrk-nfts-suitable-for-wi\">\r\n<li><strong>NFTS</strong>\r\n<ul>\r\n<li>Suitable for Windows</li>\r\n</ul>\r\n</li>\r\n<li><strong>ext4</strong>\r\n<ul>\r\n<li>Suitable for Linux</li>\r\n</ul>\r\n</li>\r\n<li><strong>HFS+/APFS</strong>\r\n<ul>\r\n<li>Suitable for MacOS</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<h4 id=\"bkmrk-which-file-system-sh-0\">Which file system should I use for my secondary drives?</h4>\r\n<ul id=\"bkmrk-nfts-suitable-for-wi-0\">\r\n<li><strong>NFTS</strong>\r\n<ul>\r\n<li>Suitable for Windows</li>\r\n</ul>\r\n</li>\r\n<li><strong>exFat</strong>\r\n<ul>\r\n<li>Suitable for Windows or MacOS</li>\r\n</ul>\r\n</li>\r\n<li><strong>FAT32</strong>\r\n<ul>\r\n<li>Will work across all Operating Systems</li>\r\n<li>Supports only 4 GB of memory</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<p id=\"bkmrk-commands%3A\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-wipefs--a-device%C2%A0--w\">\r\n<li><strong>wipefs -a <em>device</em></strong> - Wipe the file-system of a device, use <strong>--all</strong> will wipe all partitions.</li>\r\n<li><strong>mkfs.<em>file_system</em> <em>image</em></strong> - Create a file system on an device or image</li>\r\n</ul>\r\n<h3 id=\"bkmrk-how-can-i-mount-file\">How can I mount File Systems?</h3>\r\n<p id=\"bkmrk-one-of-the-key-diffe\">One of the key differences between Linux and other operating systems is that on Linux you need to mount a file system before you can use it. These usually are disk partitions, DVDs, USB drives etc. When mounting a file system that has been created on a disk partition or on a flash drive, it gets mounted into an existing file directory within the Linux file system. That way, when we switch into that directory, we are actually switching into that mounted file system. Usually file systems get mounted in <strong><code>/mnt</code></strong> directory.</p>\r\n<p id=\"bkmrk-commands%3A-0\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-mount---returns-all-\">\r\n<li><strong>mount</strong> - Returns all mounted file-systems</li>\r\n<li><strong>mount -t <em>file_system</em> <em>device_location destination_location</em></strong>\r\n<ul>\r\n<li><strong>mount -a</strong> - When using <strong>-a</strong>, the file-system doesn\'t need to be provided. It goes through all file-systems until one works.</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<p id=\"bkmrk-how-do-i-keep-a-file\"><strong>How do I keep a File System mounted after system reboot?</strong></p>\r\n<p id=\"bkmrk-to-keep-a-file-syste\">To keep a file-system mounted even after system reboot, it needs to be added in the <strong><code>/etc/fstab</code></strong> file.</p>\r\n<h4 id=\"bkmrk-what-are-image-files\">What are Image files?</h4>\r\n<p id=\"bkmrk-.img-files-are-exact\"><code>.img</code> files are exact copies storage devices. Since <code>.img</code> files hold no additional data beyond the disk contents, these files can only be automatically handled by programs that can detect their file systems. <code>.iso</code> files and <code>.img</code> files are used to keep a copy of a disc with information about its file structure. <code>.iso</code> files cannot be compressed, while <code>.img</code> files can be either compressed or uncompressed. If an <code>.img</code> file is uncompressed, you could rename it to <code>.iso</code> and it would still function.</p>', 'What are File Systems?\r\nFile system is the way storage space on a drive is split. Without it we wouldn\'t have any way to know where file one file ends and other one starts. An inode is a data structure that describes a file and each file has one. Each file system has an inode table which stores inodes.\r\n\r\n \r\nWhat data do inodes contain?\r\n\r\nUnique index\r\nFile size\r\nPermissions\r\nLocation of the data\r\nCreation read, write timestamps\r\n\r\nWhich file system should I use for my system drive?\r\n\r\nNFTS\r\n\r\nSuitable for Windows\r\n\r\n\r\next4\r\n\r\nSuitable for Linux\r\n\r\n\r\nHFS+/APFS\r\n\r\nSuitable for MacOS\r\n\r\n\r\n\r\nWhich file system should I use for my secondary drives?\r\n\r\nNFTS\r\n\r\nSuitable for Windows\r\n\r\n\r\nexFat\r\n\r\nSuitable for Windows or MacOS\r\n\r\n\r\nFAT32\r\n\r\nWill work across all Operating Systems\r\nSupports only 4 GB of memory\r\n\r\n\r\n\r\nCommands:\r\n\r\nwipefs -a device - Wipe the file-system of a device, use --all will wipe all partitions.\r\nmkfs.file_system image - Create a file system on an device or image\r\n\r\nHow can I mount File Systems?\r\nOne of the key differences between Linux and other operating systems is that on Linux you need to mount a file system before you can use it. These usually are disk partitions, DVDs, USB drives etc. When mounting a file system that has been created on a disk partition or on a flash drive, it gets mounted into an existing file directory within the Linux file system. That way, when we switch into that directory, we are actually switching into that mounted file system. Usually file systems get mounted in /mnt directory.\r\nCommands:\r\n\r\nmount - Returns all mounted file-systems\r\nmount -t file_system device_location destination_location\r\n\r\nmount -a - When using -a, the file-system doesn\'t need to be provided. It goes through all file-systems until one works.\r\n\r\n\r\n\r\nHow do I keep a File System mounted after system reboot?\r\nTo keep a file-system mounted even after system reboot, it needs to be added in the /etc/fstab file.\r\nWhat are Image files?\r\n.img files are exact copies storage devices. Since .img files hold no additional data beyond the disk contents, these files can only be automatically handled by programs that can detect their file systems. .iso files and .img files are used to keep a copy of a disc with information about its file structure. .iso files cannot be compressed, while .img files can be either compressed or uncompressed. If an .img file is uncompressed, you could rename it to .iso and it would still function.', 1, '2021-11-27 18:38:59', '2021-11-27 18:38:59', 'file-systems', 'linux', 'version', '', '', 2),
(45, 11, 'File Systems', '<h2 id=\"bkmrk-what-are-file-system\">What are File Systems?</h2>\r\n<p id=\"bkmrk-file-system-is-the-w\">File system is the way storage space on a drive is split. Without it we wouldn\'t have any way to know where file one file ends and other one starts. An <strong>inode</strong> is a data structure that describes a file and each file has one. Each file system has an <strong>inode table</strong> which stores <strong>inodes</strong>.</p>\r\n<p id=\"bkmrk-\"><a href=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/image-1638045208973.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://127.0.0.1:8000/uploads/images/gallery/2021-11/scaled-1680-/image-1638045208973.png\" alt=\"image-1638045208973.png\" width=\"317\" height=\"222\"></a></p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<h4 id=\"bkmrk-what-data-do-inodes-\">What data do inodes contain?</h4>\r\n<ul id=\"bkmrk-unique-index-file-si\">\r\n<li>Unique index</li>\r\n<li>File size</li>\r\n<li>Permissions</li>\r\n<li>Location of the data</li>\r\n<li>Creation read, write timestamps</li>\r\n</ul>\r\n<h4 id=\"bkmrk-which-file-system-sh\">Which file system should I use for my system drive?</h4>\r\n<ul id=\"bkmrk-nfts-suitable-for-wi\">\r\n<li><strong>NFTS</strong>\r\n<ul>\r\n<li>Suitable for Windows</li>\r\n</ul>\r\n</li>\r\n<li><strong>ext4</strong>\r\n<ul>\r\n<li>Suitable for Linux</li>\r\n</ul>\r\n</li>\r\n<li><strong>HFS+/APFS</strong>\r\n<ul>\r\n<li>Suitable for MacOS</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<h4 id=\"bkmrk-which-file-system-sh-0\">Which file system should I use for my secondary drives?</h4>\r\n<ul id=\"bkmrk-nfts-suitable-for-wi-0\">\r\n<li><strong>NFTS</strong>\r\n<ul>\r\n<li>Suitable for Windows</li>\r\n</ul>\r\n</li>\r\n<li><strong>exFat</strong>\r\n<ul>\r\n<li>Suitable for Windows or MacOS</li>\r\n</ul>\r\n</li>\r\n<li><strong>FAT32</strong>\r\n<ul>\r\n<li>Will work across all Operating Systems</li>\r\n<li>Supports only 4 GB of memory</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<p id=\"bkmrk-commands%3A\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-wipefs--a-device%C2%A0--w\">\r\n<li><strong>wipefs -a <em>device</em></strong> - Wipe the file-system of a device, use <strong>--all</strong> will wipe all partitions.</li>\r\n<li><strong>mkfs.<em>file_system</em> <em>image</em></strong> - Create a file system on an device or image</li>\r\n</ul>\r\n<h3 id=\"bkmrk-how-can-i-mount-file\">How can I mount File Systems?</h3>\r\n<p id=\"bkmrk-one-of-the-key-diffe\">One of the key differences between Linux and other operating systems is that on Linux you need to mount a file system before you can use it. These usually are disk partitions, DVDs, USB drives etc. When mounting a file system that has been created on a disk partition or on a flash drive, it gets mounted into an existing file directory within the Linux file system. That way, when we switch into that directory, we are actually switching into that mounted file system. Usually file systems get mounted in <strong><code>/mnt</code></strong> directory.</p>\r\n<p id=\"bkmrk-commands%3A-0\"><strong>Commands:</strong></p>\r\n<ul id=\"bkmrk-mount---returns-all-\">\r\n<li><strong>mount</strong> - Returns all mounted file-systems</li>\r\n<li><strong>mount -t <em>file_system</em> <em>device_location destination_location</em></strong>\r\n<ul>\r\n<li><strong>mount -a</strong> - When using <strong>-a</strong>, the file-system doesn\'t need to be provided. It goes through all file-systems until one works.</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<h4 id=\"bkmrk-how-do-i-keep-a-file\">How do I keep a File System mounted after system reboot?</h4>\r\n<p id=\"bkmrk-to-keep-a-file-syste\">To keep a file-system mounted even after system reboot, it needs to be added in the <strong><code>/etc/fstab</code></strong> file.</p>\r\n<h4 id=\"bkmrk-what-are-image-files\">What are Image files?</h4>\r\n<p id=\"bkmrk-.img-files-are-exact\"><code>.img</code> is a computer file containing the contents and structure of a disk volume or of an entire data storage device. Since image files hold no additional data beyond the disk contents, these files can only be automatically handled by programs that can detect their file systems. </p>\r\n<p id=\"bkmrk-.iso-files-cannot-be\"><code>.iso</code> files cannot be compressed, while <code>.img</code> files can be either compressed or uncompressed. If an <code>.img</code> file is uncompressed, you could rename it to <code>.iso</code> and it would still function.</p>', 'What are File Systems?\r\nFile system is the way storage space on a drive is split. Without it we wouldn\'t have any way to know where file one file ends and other one starts. An inode is a data structure that describes a file and each file has one. Each file system has an inode table which stores inodes.\r\n\r\n \r\nWhat data do inodes contain?\r\n\r\nUnique index\r\nFile size\r\nPermissions\r\nLocation of the data\r\nCreation read, write timestamps\r\n\r\nWhich file system should I use for my system drive?\r\n\r\nNFTS\r\n\r\nSuitable for Windows\r\n\r\n\r\next4\r\n\r\nSuitable for Linux\r\n\r\n\r\nHFS+/APFS\r\n\r\nSuitable for MacOS\r\n\r\n\r\n\r\nWhich file system should I use for my secondary drives?\r\n\r\nNFTS\r\n\r\nSuitable for Windows\r\n\r\n\r\nexFat\r\n\r\nSuitable for Windows or MacOS\r\n\r\n\r\nFAT32\r\n\r\nWill work across all Operating Systems\r\nSupports only 4 GB of memory\r\n\r\n\r\n\r\nCommands:\r\n\r\nwipefs -a device - Wipe the file-system of a device, use --all will wipe all partitions.\r\nmkfs.file_system image - Create a file system on an device or image\r\n\r\nHow can I mount File Systems?\r\nOne of the key differences between Linux and other operating systems is that on Linux you need to mount a file system before you can use it. These usually are disk partitions, DVDs, USB drives etc. When mounting a file system that has been created on a disk partition or on a flash drive, it gets mounted into an existing file directory within the Linux file system. That way, when we switch into that directory, we are actually switching into that mounted file system. Usually file systems get mounted in /mnt directory.\r\nCommands:\r\n\r\nmount - Returns all mounted file-systems\r\nmount -t file_system device_location destination_location\r\n\r\nmount -a - When using -a, the file-system doesn\'t need to be provided. It goes through all file-systems until one works.\r\n\r\n\r\n\r\nHow do I keep a File System mounted after system reboot?\r\nTo keep a file-system mounted even after system reboot, it needs to be added in the /etc/fstab file.\r\nWhat are Image files?\r\n.img is a computer file containing the contents and structure of a disk volume or of an entire data storage device. Since image files hold no additional data beyond the disk contents, these files can only be automatically handled by programs that can detect their file systems. \r\n.iso files cannot be compressed, while .img files can be either compressed or uncompressed. If an .img file is uncompressed, you could rename it to .iso and it would still function.', 1, '2021-11-27 18:41:30', '2021-11-27 18:41:30', 'file-systems', 'linux', 'version', '', '', 3),
(46, 12, 'SSH keys', '<h3 id=\"bkmrk-how-to-use-ssh-keys%3F\">How to use SSH keys?</h3>\r\n<p id=\"bkmrk-to-authenticate-usin\">To authenticate using SSH keys, a user must have an SSH key pair on their local computer. On the remote server, the public key must be copied to a file within the user’s home directory at <code>~/.ssh/authorized_keys</code>. This file contains a list of public keys, one-per-line, that are authorised to log into this account.</p>\r\n<p id=\"bkmrk-when-a-client-connec\">When a client connects to the host, wishing to use SSH key authentication, it will inform the server of this intent and will tell the server which public key to use. The server then checks its <code>authorized_keys</code> file for the public key, generates a random string, and encrypts it using the public key. This encrypted message can only be decrypted with the associated private key. The server will send this encrypted message to the client to test whether they actually have the associated private key.</p>\r\n<p id=\"bkmrk-to-generate-an-rsa-k\">To generate an RSA key pair on your local computer, type: <code>ssh-keygen</code></p>\r\n<pre id=\"bkmrk-enter-passphrase-%28em\"><code class=\"language-\">Enter passphrase (empty for no passphrase):\r\nEnter same passphrase again:\r\n</code></pre>\r\n<p id=\"bkmrk-the-next-prompt-allo\">The next prompt allows you to enter a passphrase of an arbitrary length to secure your private key. By default, you will have to enter any passphrase you set here every time you use the private key, as an additional security measure. Feel free to press <code>ENTER</code> to leave this blank if you do not want a passphrase. Keep in mind though that this will allow anyone who gains control of your private key to login to your servers.</p>\r\n<p id=\"bkmrk-if-you-choose-to-ent\">If you choose to enter a passphrase, nothing will be displayed as you type. This is a security precaution.</p>\r\n<ul id=\"bkmrk-%7E%2F.ssh%2Fid_rsa%3A-the-p\">\r\n<li><code>~/.ssh/id_rsa</code>: The private key. DO NOT SHARE THIS FILE!</li>\r\n<li><code>~/.ssh/id_rsa.pub</code>: The associated public key. This can be shared freely without consequence.</li>\r\n</ul>', 'How to use SSH keys?\r\nTo authenticate using SSH keys, a user must have an SSH key pair on their local computer. On the remote server, the public key must be copied to a file within the user’s home directory at ~/.ssh/authorized_keys. This file contains a list of public keys, one-per-line, that are authorised to log into this account.\r\nWhen a client connects to the host, wishing to use SSH key authentication, it will inform the server of this intent and will tell the server which public key to use. The server then checks its authorized_keys file for the public key, generates a random string, and encrypts it using the public key. This encrypted message can only be decrypted with the associated private key. The server will send this encrypted message to the client to test whether they actually have the associated private key.\r\nTo generate an RSA key pair on your local computer, type: ssh-keygen\r\nEnter passphrase (empty for no passphrase):\r\nEnter same passphrase again:\r\n\r\nThe next prompt allows you to enter a passphrase of an arbitrary length to secure your private key. By default, you will have to enter any passphrase you set here every time you use the private key, as an additional security measure. Feel free to press ENTER to leave this blank if you do not want a passphrase. Keep in mind though that this will allow anyone who gains control of your private key to login to your servers.\r\nIf you choose to enter a passphrase, nothing will be displayed as you type. This is a security precaution.\r\n\r\n~/.ssh/id_rsa: The private key. DO NOT SHARE THIS FILE!\r\n~/.ssh/id_rsa.pub: The associated public key. This can be shared freely without consequence.\r\n', 1, '2021-11-27 18:44:19', '2021-11-27 18:44:19', 'ssh-keys', 'linux', 'version', '', 'Initial publish', 1);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(48, 12, 'SSH keys', '<h3 id=\"bkmrk-how-to-use-ssh-keys%3F\">How to use SSH Keys?</h3>\r\n<p id=\"bkmrk-to-authenticate-usin\">To authenticate using SSH keys, a user must have an SSH key pair on their local computer. On the remote server, the public key must be copied to a file within the user’s home directory at <code>~/.ssh/authorized_keys</code>. This file contains a list of public keys, one-per-line, that are authorised to log into this account.</p>\r\n<p id=\"bkmrk-when-a-client-connec\">When a client connects to the host, wishing to use SSH key authentication, it will inform the server of this intent and will tell the server which public key to use. The server then checks its <code>authorized_keys</code> file for the public key, generates a random string, and encrypts it using the public key. This encrypted message can only be decrypted with the associated private key. The server will send this encrypted message to the client to test whether they actually have the associated private key.</p>\r\n<h4 id=\"bkmrk-how-to-generate-a-ss\">How to generate a SSH key?</h4>\r\n<p id=\"bkmrk-to-generate-an-rsa-k\">To generate an RSA key pair on your local computer, type: <code>ssh-keygen</code></p>\r\n<pre id=\"bkmrk-enter-passphrase-%28em\"><code class=\"language-\">Enter passphrase (empty for no passphrase):\r\nEnter same passphrase again:</code></pre>\r\n<p id=\"bkmrk-the-next-prompt-allo\">The next prompt allows you to enter a passphrase of an arbitrary length to secure your private key. By default, you will have to enter any passphrase you set here every time you use the private key, as an additional security measure. Feel free to press <code>ENTER</code> to leave this blank if you do not want a passphrase. Keep in mind though that this will allow anyone who gains control of your private key to login to your servers.</p>\r\n<p id=\"bkmrk-if-you-choose-to-ent\">If you choose to enter a passphrase, nothing will be displayed as you type. This is a security precaution.</p>\r\n<ul id=\"bkmrk-%7E%2F.ssh%2Fid_rsa%3A-the-p\">\r\n<li><code>~/.ssh/id_rsa</code>: The private key. DO NOT SHARE THIS FILE!</li>\r\n<li><code>~/.ssh/id_rsa.pub</code>: The associated public key. This can be shared freely without consequence.</li>\r\n</ul>', 'How to use SSH Keys?\r\nTo authenticate using SSH keys, a user must have an SSH key pair on their local computer. On the remote server, the public key must be copied to a file within the user’s home directory at ~/.ssh/authorized_keys. This file contains a list of public keys, one-per-line, that are authorised to log into this account.\r\nWhen a client connects to the host, wishing to use SSH key authentication, it will inform the server of this intent and will tell the server which public key to use. The server then checks its authorized_keys file for the public key, generates a random string, and encrypts it using the public key. This encrypted message can only be decrypted with the associated private key. The server will send this encrypted message to the client to test whether they actually have the associated private key.\r\nHow to generate a SSH key?\r\nTo generate an RSA key pair on your local computer, type: ssh-keygen\r\nEnter passphrase (empty for no passphrase):\r\nEnter same passphrase again:\r\nThe next prompt allows you to enter a passphrase of an arbitrary length to secure your private key. By default, you will have to enter any passphrase you set here every time you use the private key, as an additional security measure. Feel free to press ENTER to leave this blank if you do not want a passphrase. Keep in mind though that this will allow anyone who gains control of your private key to login to your servers.\r\nIf you choose to enter a passphrase, nothing will be displayed as you type. This is a security precaution.\r\n\r\n~/.ssh/id_rsa: The private key. DO NOT SHARE THIS FILE!\r\n~/.ssh/id_rsa.pub: The associated public key. This can be shared freely without consequence.\r\n', 1, '2021-11-27 18:45:42', '2021-11-27 18:45:42', 'ssh-keys', 'linux', 'version', '', '', 2),
(49, 13, 'Common Linux Commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\">\r\n<li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul>\r\n<li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul>\r\n</li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n</ul>\r\n<h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\">\r\n<li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul>\r\n<li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul>\r\n</li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n</ul>\r\n<h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\">\r\n<li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul>\r\n<li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to an file</p>\r\n<p class=\"callout warning\"><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n</li>\r\n</ul>\r\n</li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\n\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\n\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\n\r\nFile\r\n\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\n\r\nzcat - Read a compressed file\r\n\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\n\r\nPiping\r\n\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\n\r\nls -al > file - Redirect output to an file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 1, '2021-11-27 18:51:27', '2021-11-27 18:51:27', 'common-linux-commands', 'linux', 'version', '', 'Initial publish', 1),
(50, 13, 'Common Linux Commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\">\r\n<li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul>\r\n<li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul>\r\n</li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n</ul>\r\n<h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\">\r\n<li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul>\r\n<li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul>\r\n</li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n</ul>\r\n<h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\">\r\n<li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul>\r\n<li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to a file</p>\r\n<p><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n<p> </p>\r\n</li>\r\n</ul>\r\n</li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\n\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\n\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\n\r\nFile\r\n\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\n\r\nzcat - Read a compressed file\r\n\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\n\r\nPiping\r\n\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\n\r\nls -al > file - Redirect output to a file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n \r\n\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 1, '2021-11-27 18:51:56', '2021-11-27 18:51:56', 'common-linux-commands', 'linux', 'version', '', '', 2),
(51, 13, 'Common Linux Commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\">\r\n<li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul>\r\n<li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul>\r\n</li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n</ul>\r\n<h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\">\r\n<li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul>\r\n<li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul>\r\n</li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n</ul>\r\n<h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\">\r\n<li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul>\r\n<li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to a file</p>\r\n<p><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n</li>\r\n</ul>\r\n</li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\n\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\n\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\n\r\nFile\r\n\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\n\r\nzcat - Read a compressed file\r\n\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\n\r\nPiping\r\n\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\n\r\nls -al > file - Redirect output to a file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 1, '2021-11-27 18:52:03', '2021-11-27 18:52:03', 'common-linux-commands', 'linux', 'version', '', '', 3),
(52, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What are SHA-1 hashes?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\">Git refers to all commits by their SHA-1 hashes, and because this hash is unique to its content, a commit can\'t change. If you change any data about the commit, it will have a new SHA1. Even if the files don\'t change, the created date will.</p>\r\n<p id=\"bkmrk-sha-1-hash-is-20-cha\">SHA-1 hash is 20 characters in hexadecimal form. </p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How does Git calculate hashes?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em class=\"ix\">diff </em>of the contents of your files. It stores snapshots(the exact content of the files) at the point a commit is made.</p>\r\n<p id=\"bkmrk-git-uses-three-diffe\">Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Contents of a single file, <strong>without</strong> any metadata (Creation date, author...). Blobs are identified by it\'s SHA-1 hash.</li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees. Trees are identified by their SHA-1 hash.</li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit</strong> - Snapshot of the working tree.</li>\r\n</ul><h3 id=\"bkmrk-what-are-git-commits\">What are Git commits?</h3>\r\n<p id=\"bkmrk-a-commit-is-a-code-s\" class=\"ib ic fy id b ie mm ig ih ii mn ik il im mo io ip iq mp is it iu mq iw ix iy dn gv\" data-selectable-paragraph=\"\">A commit is a code snapshot. It points to a tree, and contains the difference between 2 states (the previous commit and the new one) and some meta data like:</p>\r\n<ul id=\"bkmrk-the-author-and-commi\" class=\"\"><li id=\"bkmrk-the-author-and-commi-0\" class=\"ib ic fy id b ie if ig ih ii ij ik il im in io ip iq ir is it iu iv iw ix iy mr ms mt gv\" data-selectable-paragraph=\"\">the author and committer</li>\r\n<li id=\"bkmrk-the-date\" class=\"ib ic fy id b ie mu ig ih ii mv ik il im mw io ip iq mx is it iu my iw ix iy mr ms mt gv\" data-selectable-paragraph=\"\">the date</li>\r\n<li id=\"bkmrk-the-message\" class=\"ib ic fy id b ie mu ig ih ii mv ik il im mw io ip iq mx is it iu my iw ix iy mr ms mt gv\" data-selectable-paragraph=\"\">the message</li>\r\n<li id=\"bkmrk-parent-of-the-commit\" class=\"ib ic fy id b ie mu ig ih ii mv ik il im mw io ip iq mx is it iu my iw ix iy mr ms mt gv\" data-selectable-paragraph=\"\">parent of the commit (<em class=\"jc\">many parents if it is a merge</em>)</li>\r\n</ul><p id=\"bkmrk-the-sha1-of-the-comm\" class=\"ib ic fy id b ie if ig ih ii ij ik il im in io ip iq ir is it iu iv iw ix iy dn gv\" data-selectable-paragraph=\"\">The SHA1 of the commit is the hash of all the information. And because this hash is unique to its content, <strong class=\"id fz\">a commit can’t change</strong>. If you change any data about the commit, it will have a new SHA1. Even if the files don’t change, the created date will.</p>', 'What are SHA-1 hashes?\r\nGit refers to all commits by their SHA-1 hashes, and because this hash is unique to its content, a commit can\'t change. If you change any data about the commit, it will have a new SHA1. Even if the files don\'t change, the created date will.\r\nSHA-1 hash is 20 characters in hexadecimal form. \r\nHow does Git calculate hashes?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores snapshots(the exact content of the files) at the point a commit is made.\r\nGit uses different types of objects:\r\nblob - Contents of a single file, without any metadata (Creation date, author...). Blobs are identified by it\'s SHA-1 hash.\r\ntree - Object that contains references to other blobs or subtrees. Trees are identified by their SHA-1 hash.\r\ncommit - Snapshot of the working tree.\r\nWhat are Git commits?\r\nA commit is a code snapshot. It points to a tree, and contains the difference between 2 states (the previous commit and the new one) and some meta data like:\r\nthe author and committer\r\nthe date\r\nthe message\r\nparent of the commit (many parents if it is a merge)\r\nThe SHA1 of the commit is the hash of all the information. And because this hash is unique to its content, a commit can’t change. If you change any data about the commit, it will have a new SHA1. Even if the files don’t change, the created date will.', 1, '2021-11-29 15:23:46', '2021-11-29 15:23:46', 'how-does-git-work-under-the-hood', 'git', 'version', '', 'Initial publish', 1),
(54, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<hr id=\"bkmrk-\"><p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.</li>\r\n</ul><h3 id=\"bkmrk-how-does-git-calcula\">How does Git calculate hashes?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em class=\"ix\">diff </em>of the contents of your files. It stores snapshots(the exact content of the files) at the point a commit is made.</p>\r\n<p id=\"bkmrk-git-uses-three-diffe\">Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Contents of a single file, <strong>without</strong> any metadata (Creation date, author...). Blobs are identified by it\'s SHA-1 hash.</li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees. Trees are identified by their SHA-1 hash.</li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit</strong> - Snapshot of the working tree.</li>\r\n</ul><h3 id=\"bkmrk-what-are-git-commits\">What are Git commits?</h3>\r\n<p id=\"bkmrk-a-commit-is-a-code-s\" class=\"ib ic fy id b ie mm ig ih ii mn ik il im mo io ip iq mp is it iu mq iw ix iy dn gv\" data-selectable-paragraph=\"\">A commit is a code snapshot. It points to a tree, and contains the difference between 2 states (the previous commit and the new one) and some meta data like:</p>\r\n<ul id=\"bkmrk-the-author-and-commi\" class=\"\"><li id=\"bkmrk-the-author-and-commi-0\" class=\"ib ic fy id b ie if ig ih ii ij ik il im in io ip iq ir is it iu iv iw ix iy mr ms mt gv\" data-selectable-paragraph=\"\">the author and committer</li>\r\n<li id=\"bkmrk-the-date\" class=\"ib ic fy id b ie mu ig ih ii mv ik il im mw io ip iq mx is it iu my iw ix iy mr ms mt gv\" data-selectable-paragraph=\"\">the date</li>\r\n<li id=\"bkmrk-the-message\" class=\"ib ic fy id b ie mu ig ih ii mv ik il im mw io ip iq mx is it iu my iw ix iy mr ms mt gv\" data-selectable-paragraph=\"\">the message</li>\r\n<li id=\"bkmrk-parent-of-the-commit\" class=\"ib ic fy id b ie mu ig ih ii mv ik il im mw io ip iq mx is it iu my iw ix iy mr ms mt gv\" data-selectable-paragraph=\"\">parent of the commit (<em class=\"jc\">many parents if it is a merge</em>)</li>\r\n</ul><p id=\"bkmrk-the-sha1-of-the-comm\" class=\"ib ic fy id b ie if ig ih ii ij ik il im in io ip iq ir is it iu iv iw ix iy dn gv\" data-selectable-paragraph=\"\">The SHA1 of the commit is the hash of all the information. And because this hash is unique to its content, <strong class=\"id fz\">a commit can’t change</strong>. If you change any data about the commit, it will have a new SHA1. Even if the files don’t change, the created date will.</p>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.\r\nHow does Git calculate hashes?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores snapshots(the exact content of the files) at the point a commit is made.\r\nGit uses different types of objects:\r\nblob - Contents of a single file, without any metadata (Creation date, author...). Blobs are identified by it\'s SHA-1 hash.\r\ntree - Object that contains references to other blobs or subtrees. Trees are identified by their SHA-1 hash.\r\ncommit - Snapshot of the working tree.\r\nWhat are Git commits?\r\nA commit is a code snapshot. It points to a tree, and contains the difference between 2 states (the previous commit and the new one) and some meta data like:\r\nthe author and committer\r\nthe date\r\nthe message\r\nparent of the commit (many parents if it is a merge)\r\nThe SHA1 of the commit is the hash of all the information. And because this hash is unique to its content, a commit can’t change. If you change any data about the commit, it will have a new SHA1. Even if the files don’t change, the created date will.', 1, '2021-11-30 08:23:35', '2021-11-30 08:23:35', 'how-does-git-work-under-the-hood', 'git', 'version', '', '', 2),
(56, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.</li>\r\n</ul><p id=\"bkmrk-note%3A-that-if-you-ha\"><strong>Note:</strong> that if you hash the same object twice, you get the same hash both times.</p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How are Git objects stored internally?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em>diff </em>of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Raw contents of a single file, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit</strong> - Snapshot of the working tree.</li>\r\n</ul><p id=\"bkmrk-when-you-commit-a-fi\">When you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. </p>\r\n<p id=\"bkmrk-git-creates-a-blob-f\">Git creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in <em>.git/objects</em>.</p>\r\n<div id=\"bkmrk-\">\r\n<div data-post-id=\"780148\"><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638262197596.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-11/scaled-1680-/image-1638262197596.png\" alt=\"image-1638262197596.png\"></a></p>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.\r\nNote: that if you hash the same object twice, you get the same hash both times.\r\nHow are Git objects stored internally?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:\r\nblob - Raw contents of a single file, named with the SHA-1 hash of its contents. \r\ntree - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. \r\ncommit - Snapshot of the working tree.\r\nWhen you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. \r\nGit creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in .git/objects.\r\n\r\n\r\n\r\n', 1, '2021-11-30 08:59:07', '2021-11-30 08:59:07', 'how-does-git-work-under-the-hood', 'git', 'version', '', '', 3),
(57, 16, 'Contributing to Open Source projects', '<h3 id=\"bkmrk-how-can-i-contribute\">How can I contribute to an Open Source project?</h3>\r\n<p id=\"bkmrk-a-fork-is-simply-a-c\">A <strong>fork</strong> is simply a copy of the repo that lives on your own personal Github profile. You can make any changes you want to this fork and experiment all you want with its code, and that’s fine! Any changes you make to your fork have no effect on the original, upstream repository you forked from. The only way your changes make it into the upstream repo is through pull requests.</p>\r\n<p id=\"bkmrk-generally%2C-upstream-\">Generally, <strong>upstream</strong> is from where you clone the repository, and <strong>downstream</strong> is any project that integrates your work with other works.</p>\r\n<p id=\"bkmrk-if-you-make-a-pull-r\">If you make a <strong>pull request</strong>, the maintainers can look at your new code, make sure it integrates with the rest of the project, and then merge it into the upstream. And if your code isn\'t 100% ready just yet, the maintainers can comment on your pull request to tell you what you need to fix.</p>\r\n<p id=\"bkmrk-in-summary%2C-if-you-w\"><strong>In summary, if you want to contribute to a project, the simplest way is to:</strong></p>\r\n<ol class=\"X5LH0c\" id=\"bkmrk-find-a-project-you-w\"><li class=\"TrT0Xe\">Find a project you want to contribute to.</li>\r\n<li class=\"TrT0Xe\">Fork it.</li>\r\n<li class=\"TrT0Xe\">Clone it to your local system.</li>\r\n<li class=\"TrT0Xe\">Make a new branch.</li>\r\n<li class=\"TrT0Xe\">Make your changes.</li>\r\n<li class=\"TrT0Xe\">Push it back to your repo.</li>\r\n<li class=\"TrT0Xe\">Click the Compare &amp; pull request button.</li>\r\n<li class=\"TrT0Xe\">Click Create pull request to open a new pull request.</li>\r\n</ol>', 'How can I contribute to an Open Source project?\r\nA fork is simply a copy of the repo that lives on your own personal Github profile. You can make any changes you want to this fork and experiment all you want with its code, and that’s fine! Any changes you make to your fork have no effect on the original, upstream repository you forked from. The only way your changes make it into the upstream repo is through pull requests.\r\nGenerally, upstream is from where you clone the repository, and downstream is any project that integrates your work with other works.\r\nIf you make a pull request, the maintainers can look at your new code, make sure it integrates with the rest of the project, and then merge it into the upstream. And if your code isn\'t 100% ready just yet, the maintainers can comment on your pull request to tell you what you need to fix.\r\nIn summary, if you want to contribute to a project, the simplest way is to:\r\nFind a project you want to contribute to.\r\nFork it.\r\nClone it to your local system.\r\nMake a new branch.\r\nMake your changes.\r\nPush it back to your repo.\r\nClick the Compare & pull request button.\r\nClick Create pull request to open a new pull request.\r\n', 1, '2021-11-30 09:15:44', '2021-11-30 09:15:44', 'contributing-to-open-source-projects', 'git', 'version', '', 'Initial publish', 1),
(59, 16, 'Contributing to Open Source projects', '<h3 id=\"bkmrk-how-can-i-contribute\">How can I contribute to an Open Source project?</h3>\r\n<p id=\"bkmrk-a-fork-is-simply-a-c\">A <strong>fork</strong> is simply a copy of the repo that lives on your own personal Github profile. You can make any changes you want to this fork and experiment all you want with its code, and that’s fine! Any changes you make to your fork have no effect on the original, upstream repository you forked from. The only way your changes make it into the upstream repo is through pull requests.</p>\r\n<p id=\"bkmrk-generally%2C-upstream-\">Generally, <strong>upstream</strong> is from where you clone the repository, and <strong>downstream</strong> is any project that integrates your work with other works.</p>\r\n<p id=\"bkmrk-if-you-make-a-pull-r\"><strong>Pull requests</strong> are a mechanism for a developer to notify team members that they have completed a feature. If you make a pull request, the maintainers can look at your new code, make sure it integrates with the rest of the project, and then merge it into the upstream. And if your code isn\'t 100% ready just yet, the maintainers can comment on your pull request to tell you what you need to fix.</p>\r\n<p id=\"bkmrk-in-summary%2C-if-you-w\"><strong>In summary, if you want to contribute to a project, the simplest way is to:</strong></p>\r\n<ol id=\"bkmrk-find-a-project-you-w\" class=\"X5LH0c\"><li class=\"TrT0Xe\">Find a project you want to contribute to.</li>\r\n<li class=\"TrT0Xe\">Fork it.</li>\r\n<li class=\"TrT0Xe\">Clone it to your local system.</li>\r\n<li class=\"TrT0Xe\">Make a new branch.</li>\r\n<li class=\"TrT0Xe\">Make your changes.</li>\r\n<li class=\"TrT0Xe\">Push it back to your repo.</li>\r\n<li class=\"TrT0Xe\">Click the Compare &amp; pull request button.</li>\r\n<li class=\"TrT0Xe\">Click Create pull request to open a new pull request.</li>\r\n</ol>', 'How can I contribute to an Open Source project?\r\nA fork is simply a copy of the repo that lives on your own personal Github profile. You can make any changes you want to this fork and experiment all you want with its code, and that’s fine! Any changes you make to your fork have no effect on the original, upstream repository you forked from. The only way your changes make it into the upstream repo is through pull requests.\r\nGenerally, upstream is from where you clone the repository, and downstream is any project that integrates your work with other works.\r\nPull requests are a mechanism for a developer to notify team members that they have completed a feature. If you make a pull request, the maintainers can look at your new code, make sure it integrates with the rest of the project, and then merge it into the upstream. And if your code isn\'t 100% ready just yet, the maintainers can comment on your pull request to tell you what you need to fix.\r\nIn summary, if you want to contribute to a project, the simplest way is to:\r\nFind a project you want to contribute to.\r\nFork it.\r\nClone it to your local system.\r\nMake a new branch.\r\nMake your changes.\r\nPush it back to your repo.\r\nClick the Compare & pull request button.\r\nClick Create pull request to open a new pull request.\r\n', 1, '2021-11-30 09:18:55', '2021-11-30 09:18:55', 'contributing-to-open-source-projects', 'git', 'version', '', '', 2),
(61, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.</li>\r\n</ul><p id=\"bkmrk-note%3A-that-if-you-ha\"><strong>Note:</strong> that if you hash the same object twice, you get the same hash both times.</p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How are Git objects stored internally?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em>diff </em>of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Raw contents of a single file, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit</strong> - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.</li>\r\n</ul><p id=\"bkmrk-when-you-commit-a-fi\">When you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. </p>\r\n<p id=\"bkmrk-git-creates-a-blob-f\">Git creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in <em>.git/objects</em>.</p>\r\n<div id=\"bkmrk-\">\r\n<div data-post-id=\"780148\"><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638262197596.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-11/scaled-1680-/image-1638262197596.png\" alt=\"image-1638262197596.png\"></a></p>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.\r\nNote: that if you hash the same object twice, you get the same hash both times.\r\nHow are Git objects stored internally?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:\r\nblob - Raw contents of a single file, named with the SHA-1 hash of its contents. \r\ntree - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. \r\ncommit - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.\r\nWhen you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. \r\nGit creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in .git/objects.\r\n\r\n\r\n\r\n', 1, '2021-12-01 13:32:34', '2021-12-01 13:32:34', 'how-does-git-work-under-the-hood', 'git', 'version', '', '', 4);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(63, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.</li>\r\n</ul><p id=\"bkmrk-note%3A-that-if-you-ha\"><strong>Note:</strong> that if you hash the same object twice, you get the same hash both times.</p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How are Git objects stored internally?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em>diff </em>of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Raw contents of a single file, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit</strong> - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.</li>\r\n</ul><p id=\"bkmrk-when-you-commit-a-fi\">When you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. </p>\r\n<p id=\"bkmrk-git-creates-a-blob-f\">Git creates a <code>blob</code> for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in <em>.git/objects</em>.</p>\r\n<p id=\"bkmrk-tree-objects-stores-\"><code>tree</code> objects stores every file in your project, and it stores whole files not diffs. This means that each <code>commit</code> contains a snapshot of the entire project.</p>\r\n<div id=\"bkmrk-\">\r\n<div data-post-id=\"780148\"><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638262197596.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-11/scaled-1680-/image-1638262197596.png\" alt=\"image-1638262197596.png\"></a></p>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.\r\nNote: that if you hash the same object twice, you get the same hash both times.\r\nHow are Git objects stored internally?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:\r\nblob - Raw contents of a single file, named with the SHA-1 hash of its contents. \r\ntree - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. \r\ncommit - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.\r\nWhen you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. \r\nGit creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in .git/objects.\r\ntree objects stores every file in your project, and it stores whole files not diffs. This means that each commit contains a snapshot of the entire project.\r\n\r\n\r\n\r\n', 1, '2021-12-01 13:34:41', '2021-12-01 13:34:41', 'how-does-git-work-under-the-hood', 'git', 'version', '', '', 5),
(64, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.</li>\r\n</ul><p id=\"bkmrk-note%3A-that-if-you-ha\"><strong>Note:</strong> that if you hash the same object twice, you get the same hash both times.</p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How are Git objects stored internally?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em>diff </em>of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Raw contents of a single file, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit (snapshot of the project)</strong> - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.</li>\r\n</ul><p id=\"bkmrk-when-you-commit-a-fi\">When you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. </p>\r\n<p id=\"bkmrk-git-creates-a-blob-f\">Git creates a <code>blob</code> for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in <em>.git/objects</em>.</p>\r\n<p id=\"bkmrk-tree-objects-stores-\"><code>tree</code> objects stores every file in your project, and it stores whole files not diffs. This means that each <code>commit</code> contains a snapshot of the entire project.</p>\r\n<div id=\"bkmrk-\">\r\n<div data-post-id=\"780148\"><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638262197596.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-11/scaled-1680-/image-1638262197596.png\" alt=\"image-1638262197596.png\"></a></p>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.\r\nNote: that if you hash the same object twice, you get the same hash both times.\r\nHow are Git objects stored internally?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:\r\nblob - Raw contents of a single file, named with the SHA-1 hash of its contents. \r\ntree - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. \r\ncommit (snapshot of the project) - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.\r\nWhen you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. \r\nGit creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in .git/objects.\r\ntree objects stores every file in your project, and it stores whole files not diffs. This means that each commit contains a snapshot of the entire project.\r\n\r\n\r\n\r\n', 1, '2021-12-01 13:35:11', '2021-12-01 13:35:11', 'how-does-git-work-under-the-hood', 'git', 'version', '', '', 6),
(65, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.</li>\r\n</ul><p id=\"bkmrk-note%3A-that-if-you-ha\"><strong>Note:</strong> that if you hash the same object twice, you get the same hash both times.</p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How are Git objects stored internally?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em>diff </em>of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Raw contents of a single file, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit (Snapshot of the entire project)</strong> - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.</li>\r\n</ul><p id=\"bkmrk-when-you-commit-a-fi\">When you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. </p>\r\n<p id=\"bkmrk-git-creates-a-blob-f\">Git creates a <code>blob</code> for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in <em>.git/objects</em>.</p>\r\n<p id=\"bkmrk-tree-objects-stores-\"><code>tree</code> objects stores every file in your project, and it stores whole files not diffs. This means that each <code>commit</code> contains a snapshot of the entire project.</p>\r\n<div id=\"bkmrk-\">\r\n<div data-post-id=\"780148\"><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638262197596.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-11/scaled-1680-/image-1638262197596.png\" alt=\"image-1638262197596.png\"></a></p>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.\r\nNote: that if you hash the same object twice, you get the same hash both times.\r\nHow are Git objects stored internally?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:\r\nblob - Raw contents of a single file, named with the SHA-1 hash of its contents. \r\ntree - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. \r\ncommit (Snapshot of the entire project) - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.\r\nWhen you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. \r\nGit creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in .git/objects.\r\ntree objects stores every file in your project, and it stores whole files not diffs. This means that each commit contains a snapshot of the entire project.\r\n\r\n\r\n\r\n', 1, '2021-12-01 13:35:28', '2021-12-01 13:35:28', 'how-does-git-work-under-the-hood', 'git', 'version', '', '', 7),
(66, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.</li>\r\n</ul><p id=\"bkmrk-note%3A-that-if-you-ha\"><strong>Note:</strong> that if you hash the same object twice, you get the same hash both times.</p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How are Git objects stored internally?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em>diff </em>of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Raw contents of a single file, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit (snapshot of the entire project)</strong> - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.</li>\r\n</ul><p id=\"bkmrk-when-you-commit-a-fi\">When you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. </p>\r\n<p id=\"bkmrk-git-creates-a-blob-f\">Git creates a <code>blob</code> for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in <em>.git/objects</em>.</p>\r\n<p id=\"bkmrk-tree-objects-stores-\"><code>tree</code> objects stores every file in your project, and it stores whole files not diffs. This means that each <code>commit</code> contains a snapshot of the entire project.</p>\r\n<div id=\"bkmrk-\">\r\n<div data-post-id=\"780148\"><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638262197596.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-11/scaled-1680-/image-1638262197596.png\" alt=\"image-1638262197596.png\"></a></p>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.\r\nNote: that if you hash the same object twice, you get the same hash both times.\r\nHow are Git objects stored internally?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:\r\nblob - Raw contents of a single file, named with the SHA-1 hash of its contents. \r\ntree - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. \r\ncommit (snapshot of the entire project) - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.\r\nWhen you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. \r\nGit creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in .git/objects.\r\ntree objects stores every file in your project, and it stores whole files not diffs. This means that each commit contains a snapshot of the entire project.\r\n\r\n\r\n\r\n', 1, '2021-12-01 13:35:35', '2021-12-01 13:35:35', 'how-does-git-work-under-the-hood', 'git', 'version', '', '', 8),
(68, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.</li>\r\n</ul><p id=\"bkmrk-note%3A-that-if-you-ha\"><strong>Note:</strong> that if you hash the same object twice, you get the same hash both times.</p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How are Git objects stored internally?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em>diff </em>of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Raw contents of a single file, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit (snapshot of the entire project)</strong> - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.</li>\r\n</ul><p id=\"bkmrk-when-you-commit-a-fi\">When you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. </p>\r\n<p id=\"bkmrk-git-creates-a-blob-f\">Git creates a <code>blob</code> for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in <em>.git/objects</em>.</p>\r\n<p id=\"bkmrk-tree-objects-stores-\"><code>tree</code> objects stores every file in your project, and it stores whole files not diffs. This means that each <code>commit</code> contains a snapshot of the entire project.</p>\r\n<div id=\"bkmrk-\">\r\n<div data-post-id=\"780148\"><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-11/image-1638262197596.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-11/scaled-1680-/image-1638262197596.png\" alt=\"image-1638262197596.png\"></a></p>\r\n<p id=\"bkmrk-contents-of-a-commit\"><strong>Contents of a Commit:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file-commi\"><code class=\"language-\">$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nauthor Geddy Lee &lt;glee@rush.com&gt;\r\ncommiter Neil Peart &lt;npeart@rush.com&gt;</code></pre>\r\n<p id=\"bkmrk-contents-of-a-tree%3A\"><strong>Contents of a Tree:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-07\"><code class=\"language-\">$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt</code></pre>\r\n<p id=\"bkmrk-contents-of-a-blob%3A\"><strong>Contents of a Blob:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-ca\"><code class=\"language-\">$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...</code></pre>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.\r\nNote: that if you hash the same object twice, you get the same hash both times.\r\nHow are Git objects stored internally?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:\r\nblob - Raw contents of a single file, named with the SHA-1 hash of its contents. \r\ntree - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. \r\ncommit (snapshot of the entire project) - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.\r\nWhen you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. \r\nGit creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in .git/objects.\r\ntree objects stores every file in your project, and it stores whole files not diffs. This means that each commit contains a snapshot of the entire project.\r\n\r\n\r\n\r\n\r\nContents of a Commit:\r\n$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nauthor Geddy Lee <glee@rush.com>\r\ncommiter Neil Peart <npeart@rush.com>\r\nContents of a Tree:\r\n$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt\r\nContents of a Blob:\r\n$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...', 1, '2021-12-01 13:47:39', '2021-12-01 13:47:39', 'how-does-git-work-under-the-hood', 'git', 'version', '', '', 9),
(70, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.</li>\r\n</ul><p id=\"bkmrk-note%3A-that-if-you-ha\"><strong>Note:</strong> that if you hash the same object twice, you get the same hash both times.</p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How are Git objects stored internally?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em>diff </em>of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Raw contents of a single file, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit (snapshot of the entire project)</strong> - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.</li>\r\n</ul><p id=\"bkmrk-when-you-commit-a-fi\">When you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. </p>\r\n<p id=\"bkmrk-git-creates-a-blob-f\">Git creates a <code>blob</code> for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in <em>.git/objects</em>.</p>\r\n<p id=\"bkmrk-tree-objects-stores-\"><code>tree</code> objects stores every file in your project, and it stores whole files not diffs. This means that each <code>commit</code> contains a snapshot of the entire project. It\'s hash is calculated based on all the files and their filenames in the project.</p>\r\n<div id=\"bkmrk-\">\r\n<div data-post-id=\"780148\"><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1638367106410.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1638367106410.png\" alt=\"image-1638367106410.png\" width=\"509\" height=\"370\"></a></p>\r\n<p id=\"bkmrk-contents-of-a-commit\"><strong>Contents of a Commit:</strong></p>\r\n<p id=\"bkmrk-a%C2%A0commit%C2%A0object-incl\">A commit object includes a pointer to the main tree (the root directory). The main tree hash is recalculated every commit because file or filename changes occur. This means, that almost always a new tree object is created when creating a new commit. </p>\r\n<pre id=\"bkmrk-%24-git-cat-file-commi\"><code class=\"language-\">$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nauthor Geddy Lee &lt;glee@rush.com&gt;\r\ncommiter Neil Peart &lt;npeart@rush.com&gt;</code></pre>\r\n<p id=\"bkmrk-contents-of-a-tree%3A\"><strong>Contents of a Tree:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-07\"><code class=\"language-\">$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt</code></pre>\r\n<p id=\"bkmrk-contents-of-a-blob%3A\"><strong>Contents of a Blob:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-ca\"><code class=\"language-\">$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...</code></pre>\r\n<h3 class=\"fs-headline1 ow-break-word mb8 flex--item fl1\" id=\"bkmrk-does-every-commit-cr\">Does every commit creates a new tree object in git?</h3>\r\n<p id=\"bkmrk-every-time-you-add-a\">Every time you add a file to your repository, usually by adding it to the index and then committing, a snapshot of the whole file is added. A hash is calculated, and this hash is the identifier for this file.</p>\r\n<p id=\"bkmrk-however%2C-if-you-5-6-\">However, if you 5-6 commits down the line manage to restore a files contents back to what it was previously, its new hash will already exist in the repository and thus no additional file will be added. Instead, whatever is going to refer to this file will use the hash but thus refer to the \"old\" file.</p>\r\n<p id=\"bkmrk-so%2C-theoretically-no\">So, theoretically not always a new tree object will be created.</p>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination. A checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.\r\nNote: that if you hash the same object twice, you get the same hash both times.\r\nHow are Git objects stored internally?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:\r\nblob - Raw contents of a single file, named with the SHA-1 hash of its contents. \r\ntree - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. \r\ncommit (snapshot of the entire project) - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.\r\nWhen you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. \r\nGit creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in .git/objects.\r\ntree objects stores every file in your project, and it stores whole files not diffs. This means that each commit contains a snapshot of the entire project. It\'s hash is calculated based on all the files and their filenames in the project.\r\n\r\n\r\n\r\n\r\nContents of a Commit:\r\nA commit object includes a pointer to the main tree (the root directory). The main tree hash is recalculated every commit because file or filename changes occur. This means, that almost always a new tree object is created when creating a new commit. \r\n$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nauthor Geddy Lee <glee@rush.com>\r\ncommiter Neil Peart <npeart@rush.com>\r\nContents of a Tree:\r\n$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt\r\nContents of a Blob:\r\n$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...\r\nDoes every commit creates a new tree object in git?\r\nEvery time you add a file to your repository, usually by adding it to the index and then committing, a snapshot of the whole file is added. A hash is calculated, and this hash is the identifier for this file.\r\nHowever, if you 5-6 commits down the line manage to restore a files contents back to what it was previously, its new hash will already exist in the repository and thus no additional file will be added. Instead, whatever is going to refer to this file will use the hash but thus refer to the \"old\" file.\r\nSo, theoretically not always a new tree object will be created.', 1, '2021-12-01 14:14:05', '2021-12-01 14:14:05', 'how-does-git-work-under-the-hood', 'git', 'version', '', '', 10),
(71, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination.</li>\r\n</ul><p id=\"bkmrk-a-checksum-is-a-numb\">A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.</p>\r\n<p id=\"bkmrk-note%3A-that-if-you-ha\"><strong>Note:</strong> that if you hash the same object twice, you get the same hash both times.</p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How are Git objects stored internally?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em>diff </em>of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Raw contents of a single file, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit (snapshot of the entire project)</strong> - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.</li>\r\n</ul><p id=\"bkmrk-when-you-commit-a-fi\">When you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. </p>\r\n<p id=\"bkmrk-git-creates-a-blob-f\">Git creates a <code>blob</code> for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in <em>.git/objects</em>.</p>\r\n<p id=\"bkmrk-tree-objects-stores-\"><code>tree</code> objects stores every file in your project, and it stores whole files not diffs. This means that each <code>commit</code> contains a snapshot of the entire project. It\'s hash is calculated based on all the files and their filenames in the project.</p>\r\n<div id=\"bkmrk-\">\r\n<div data-post-id=\"780148\"><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1638367106410.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1638367106410.png\" alt=\"image-1638367106410.png\" width=\"509\" height=\"370\"></a></p>\r\n<p id=\"bkmrk-contents-of-a-commit\"><strong>Contents of a Commit:</strong></p>\r\n<p id=\"bkmrk-a%C2%A0commit%C2%A0object-incl\">A commit object includes a pointer to the main tree (the root directory). The main tree hash is recalculated every commit because file or filename changes occur. This means, that almost always a new tree object is created when creating a new commit. </p>\r\n<pre id=\"bkmrk-%24-git-cat-file-commi\"><code class=\"language-\">$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nauthor Geddy Lee &lt;glee@rush.com&gt;\r\ncommiter Neil Peart &lt;npeart@rush.com&gt;</code></pre>\r\n<p id=\"bkmrk-contents-of-a-tree%3A\"><strong>Contents of a Tree:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-07\"><code class=\"language-\">$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt</code></pre>\r\n<p id=\"bkmrk-contents-of-a-blob%3A\"><strong>Contents of a Blob:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-ca\"><code class=\"language-\">$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...</code></pre>\r\n<h3 id=\"bkmrk-does-every-commit-cr\" class=\"fs-headline1 ow-break-word mb8 flex--item fl1\">Does every commit creates a new tree object in git?</h3>\r\n<p id=\"bkmrk-every-time-you-add-a\">Every time you add a file to your repository, usually by adding it to the index and then committing, a snapshot of the whole file is added. A hash is calculated, and this hash is the identifier for this file.</p>\r\n<p id=\"bkmrk-however%2C-if-you-5-6-\">However, if you 5-6 commits down the line manage to restore a files contents back to what it was previously, its new hash will already exist in the repository and thus no additional file will be added. Instead, whatever is going to refer to this file will use the hash but thus refer to the \"old\" file.</p>\r\n<p id=\"bkmrk-so%2C-theoretically-no\">So, theoretically not always a new tree object will be created.</p>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination.\r\nA checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.\r\nNote: that if you hash the same object twice, you get the same hash both times.\r\nHow are Git objects stored internally?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:\r\nblob - Raw contents of a single file, named with the SHA-1 hash of its contents. \r\ntree - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. \r\ncommit (snapshot of the entire project) - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.\r\nWhen you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. \r\nGit creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in .git/objects.\r\ntree objects stores every file in your project, and it stores whole files not diffs. This means that each commit contains a snapshot of the entire project. It\'s hash is calculated based on all the files and their filenames in the project.\r\n\r\n\r\n\r\n\r\nContents of a Commit:\r\nA commit object includes a pointer to the main tree (the root directory). The main tree hash is recalculated every commit because file or filename changes occur. This means, that almost always a new tree object is created when creating a new commit. \r\n$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nauthor Geddy Lee <glee@rush.com>\r\ncommiter Neil Peart <npeart@rush.com>\r\nContents of a Tree:\r\n$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt\r\nContents of a Blob:\r\n$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...\r\nDoes every commit creates a new tree object in git?\r\nEvery time you add a file to your repository, usually by adding it to the index and then committing, a snapshot of the whole file is added. A hash is calculated, and this hash is the identifier for this file.\r\nHowever, if you 5-6 commits down the line manage to restore a files contents back to what it was previously, its new hash will already exist in the repository and thus no additional file will be added. Instead, whatever is going to refer to this file will use the hash but thus refer to the \"old\" file.\r\nSo, theoretically not always a new tree object will be created.', 1, '2021-12-01 14:14:30', '2021-12-01 14:14:30', 'how-does-git-work-under-the-hood', 'git', 'version', '', '', 11);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(73, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination.</li>\r\n</ul><p id=\"bkmrk-a-checksum-is-a-numb\">A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.</p>\r\n<p id=\"bkmrk-note%3A-that-if-you-ha\"><strong>Note:</strong> that if you hash the same object twice, you get the same hash both times.</p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How are Git objects stored internally?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em>diff </em>of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Raw contents of a single file, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit (snapshot of the entire project)</strong> - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.</li>\r\n</ul><p id=\"bkmrk-when-you-commit-a-fi\">When you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. </p>\r\n<p id=\"bkmrk-git-creates-a-blob-f\">Git creates a <code>blob</code> for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in <em>.git/objects</em>.</p>\r\n<p id=\"bkmrk-tree-objects-stores-\"><code>tree</code> objects stores every file in your project, and it stores whole files not diffs. This means that each <code>commit</code> contains a snapshot of the entire project. It\'s hash is calculated based on all the files and their filenames in the project.</p>\r\n<div id=\"bkmrk-\">\r\n<div data-post-id=\"780148\"><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1638367106410.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1638367106410.png\" alt=\"image-1638367106410.png\" width=\"509\" height=\"370\"></a></p>\r\n<p id=\"bkmrk-contents-of-a-commit\"><strong>Contents of a Commit:</strong></p>\r\n<p id=\"bkmrk-a%C2%A0commit%C2%A0object-incl\">A commit object includes a pointer to the main tree (the root directory). The main tree hash is recalculated every commit because file or filename changes occur. This means, that almost always a new tree object is created when creating a new commit. </p>\r\n<ul id=\"bkmrk-tree--%C2%A0-main-tree-%28t\"><li><strong>tree</strong> -  main tree (the root directory)</li>\r\n<li><strong>parent </strong>- A commit object may have any number of parents. With exactly one parent, it is an ordinary commit. Having more than one parent makes the commit a merge. Initial (root) commits have no parents.</li>\r\n<li><strong>author </strong>- Commit author</li>\r\n</ul><pre id=\"bkmrk-%24-git-cat-file-commi\"><code class=\"language-\">$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nparent a3d5ad1...\r\nauthor Geddy Lee &lt;glee@rush.com&gt;\r\ncommiter Neil Peart &lt;npeart@rush.com&gt;</code></pre>\r\n<p id=\"bkmrk-contents-of-a-tree%3A\"><strong>Contents of a Tree:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-07\"><code class=\"language-\">$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt</code></pre>\r\n<p id=\"bkmrk-contents-of-a-blob%3A\"><strong>Contents of a Blob:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-ca\"><code class=\"language-\">$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...</code></pre>\r\n<h3 id=\"bkmrk-does-every-commit-cr\" class=\"fs-headline1 ow-break-word mb8 flex--item fl1\">Does every commit creates a new tree object in git?</h3>\r\n<p id=\"bkmrk-every-time-you-add-a\">Every time you add a file to your repository, usually by adding it to the index and then committing, a snapshot of the whole file is added. A hash is calculated, and this hash is the identifier for this file.</p>\r\n<p id=\"bkmrk-however%2C-if-you-5-6-\">However, if you 5-6 commits down the line manage to restore a files contents back to what it was previously, its new hash will already exist in the repository and thus no additional file will be added. Instead, whatever is going to refer to this file will use the hash but thus refer to the \"old\" file.</p>\r\n<p id=\"bkmrk-so%2C-theoretically-no\">So, theoretically not always a new tree object will be created.</p>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination.\r\nA checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.\r\nNote: that if you hash the same object twice, you get the same hash both times.\r\nHow are Git objects stored internally?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:\r\nblob - Raw contents of a single file, named with the SHA-1 hash of its contents. \r\ntree - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. \r\ncommit (snapshot of the entire project) - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.\r\nWhen you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. \r\nGit creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in .git/objects.\r\ntree objects stores every file in your project, and it stores whole files not diffs. This means that each commit contains a snapshot of the entire project. It\'s hash is calculated based on all the files and their filenames in the project.\r\n\r\n\r\n\r\n\r\nContents of a Commit:\r\nA commit object includes a pointer to the main tree (the root directory). The main tree hash is recalculated every commit because file or filename changes occur. This means, that almost always a new tree object is created when creating a new commit. \r\ntree -  main tree (the root directory)\r\nparent - A commit object may have any number of parents. With exactly one parent, it is an ordinary commit. Having more than one parent makes the commit a merge. Initial (root) commits have no parents.\r\nauthor - Commit author\r\n$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nparent a3d5ad1...\r\nauthor Geddy Lee <glee@rush.com>\r\ncommiter Neil Peart <npeart@rush.com>\r\nContents of a Tree:\r\n$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt\r\nContents of a Blob:\r\n$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...\r\nDoes every commit creates a new tree object in git?\r\nEvery time you add a file to your repository, usually by adding it to the index and then committing, a snapshot of the whole file is added. A hash is calculated, and this hash is the identifier for this file.\r\nHowever, if you 5-6 commits down the line manage to restore a files contents back to what it was previously, its new hash will already exist in the repository and thus no additional file will be added. Instead, whatever is going to refer to this file will use the hash but thus refer to the \"old\" file.\r\nSo, theoretically not always a new tree object will be created.', 1, '2021-12-01 14:21:47', '2021-12-01 14:21:47', 'how-does-git-work-under-the-hood', 'git', 'version', '', '', 12),
(74, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination.</li>\r\n</ul><p id=\"bkmrk-a-checksum-is-a-numb\">A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.</p>\r\n<p id=\"bkmrk-note%3A-that-if-you-ha\"><strong>Note:</strong> that if you hash the same object twice, you get the same hash both times.</p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How are Git objects stored internally?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em>diff </em>of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Raw contents of a single file, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit (snapshot of the entire project)</strong> - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.</li>\r\n</ul><p id=\"bkmrk-when-you-commit-a-fi\">When you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. </p>\r\n<p id=\"bkmrk-git-creates-a-blob-f\">Git creates a <code>blob</code> for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in <em>.git/objects</em>.</p>\r\n<p id=\"bkmrk-tree-objects-stores-\"><code>tree</code> objects stores every file in your project, and it stores whole files not diffs. This means that each <code>commit</code> contains a snapshot of the entire project. It\'s hash is calculated based on all the files and their filenames in the project.</p>\r\n<div id=\"bkmrk-\">\r\n<div data-post-id=\"780148\"><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1638367106410.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1638367106410.png\" alt=\"image-1638367106410.png\" width=\"509\" height=\"370\"></a></p>\r\n<p id=\"bkmrk-contents-of-a-commit\"><strong>Contents of a Commit:</strong></p>\r\n<p id=\"bkmrk-a%C2%A0commit%C2%A0object-incl\">A commit object includes a pointer to the main tree. The main tree hash is recalculated every commit because file or filename changes occur. This means, that almost always a new tree object is created when creating a new commit. </p>\r\n<ul id=\"bkmrk-tree--%C2%A0-main-tree-%28t\"><li><strong>tree</strong> -  main tree (the root directory)</li>\r\n<li><strong>parent </strong>- A commit object may have any number of parents. With exactly one parent, it is an ordinary commit. Having more than one parent makes the commit a merge. Initial (root) commits have no parents.</li>\r\n<li><strong>author </strong>- Commit author</li>\r\n</ul><pre id=\"bkmrk-%24-git-cat-file-commi\"><code class=\"language-\">$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nparent a3d5ad1...\r\nauthor Geddy Lee &lt;glee@rush.com&gt;\r\ncommiter Neil Peart &lt;npeart@rush.com&gt;</code></pre>\r\n<p id=\"bkmrk-contents-of-a-tree%3A\"><strong>Contents of a Tree:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-07\"><code class=\"language-\">$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt</code></pre>\r\n<p id=\"bkmrk-contents-of-a-blob%3A\"><strong>Contents of a Blob:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-ca\"><code class=\"language-\">$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...</code></pre>\r\n<h3 id=\"bkmrk-does-every-commit-cr\" class=\"fs-headline1 ow-break-word mb8 flex--item fl1\">Does every commit creates a new tree object in git?</h3>\r\n<p id=\"bkmrk-every-time-you-add-a\">Every time you add a file to your repository, usually by adding it to the index and then committing, a snapshot of the whole file is added. A hash is calculated, and this hash is the identifier for this file.</p>\r\n<p id=\"bkmrk-however%2C-if-you-5-6-\">However, if you 5-6 commits down the line manage to restore a files contents back to what it was previously, its new hash will already exist in the repository and thus no additional file will be added. Instead, whatever is going to refer to this file will use the hash but thus refer to the \"old\" file.</p>\r\n<p id=\"bkmrk-so%2C-theoretically-no\">So, theoretically not always a new tree object will be created.</p>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination.\r\nA checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation.\r\nNote: that if you hash the same object twice, you get the same hash both times.\r\nHow are Git objects stored internally?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:\r\nblob - Raw contents of a single file, named with the SHA-1 hash of its contents. \r\ntree - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. \r\ncommit (snapshot of the entire project) - Structures that hold metadata about your commit, as well as the pointers to the parent commit and the files underneath.\r\nWhen you commit a file into your repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. \r\nGit creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Every object is stored in .git/objects.\r\ntree objects stores every file in your project, and it stores whole files not diffs. This means that each commit contains a snapshot of the entire project. It\'s hash is calculated based on all the files and their filenames in the project.\r\n\r\n\r\n\r\n\r\nContents of a Commit:\r\nA commit object includes a pointer to the main tree. The main tree hash is recalculated every commit because file or filename changes occur. This means, that almost always a new tree object is created when creating a new commit. \r\ntree -  main tree (the root directory)\r\nparent - A commit object may have any number of parents. With exactly one parent, it is an ordinary commit. Having more than one parent makes the commit a merge. Initial (root) commits have no parents.\r\nauthor - Commit author\r\n$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nparent a3d5ad1...\r\nauthor Geddy Lee <glee@rush.com>\r\ncommiter Neil Peart <npeart@rush.com>\r\nContents of a Tree:\r\n$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt\r\nContents of a Blob:\r\n$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...\r\nDoes every commit creates a new tree object in git?\r\nEvery time you add a file to your repository, usually by adding it to the index and then committing, a snapshot of the whole file is added. A hash is calculated, and this hash is the identifier for this file.\r\nHowever, if you 5-6 commits down the line manage to restore a files contents back to what it was previously, its new hash will already exist in the repository and thus no additional file will be added. Instead, whatever is going to refer to this file will use the hash but thus refer to the \"old\" file.\r\nSo, theoretically not always a new tree object will be created.', 1, '2021-12-01 14:22:10', '2021-12-01 14:22:10', 'how-does-git-work-under-the-hood', 'git', 'version', '', '', 13),
(76, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination.</li>\r\n</ul><p id=\"bkmrk-a-checksum-is-a-numb\">A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation. If you hash the same object twice, you will get the same hash both times.</p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How are Git objects stored internally?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em>diff </em>of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Raw contents of a single file, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit</strong> - Snapshot of the entire project.</li>\r\n</ul><p id=\"bkmrk-when-you-commit-a-fi\">When a file is commited into the repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. </p>\r\n<p id=\"bkmrk-every-git-object-is-\">Every Git object is stored in <em>.git/objects</em>.</p>\r\n<div id=\"bkmrk-\">\r\n<div data-post-id=\"780148\"><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1638367106410.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1638367106410.png\" alt=\"image-1638367106410.png\" width=\"509\" height=\"370\"></a></p>\r\n<h4 id=\"bkmrk-contents-of-a-commit\">Commit</h4>\r\n<p id=\"bkmrk-a%C2%A0commit%C2%A0object-incl\"><code>commit</code> object includes a pointer to the main tree. The main tree hash is recalculated every commit because file or filename changes occur. This means, that almost always a new tree object is created when creating a new commit. </p>\r\n<p id=\"bkmrk-the-hash-of-the-comm\">The hash of the commit is calculated based on:</p>\r\n<ul id=\"bkmrk-the-commit-message-t\"><li>The commit message</li>\r\n<li>The file changes</li>\r\n<li>The commit author</li>\r\n<li>The date</li>\r\n<li>The parent commit hash</li>\r\n</ul><p id=\"bkmrk-contents-of-a-commit-0\"><strong>Contents of a Commit</strong></p>\r\n<ul id=\"bkmrk-tree--%C2%A0-main-tree-%28t\"><li><strong>tree</strong> -  main tree (the root directory, always only one)</li>\r\n<li><strong>parent </strong>- A commit object may have any number of parents. With exactly one parent, it is an ordinary commit. Having more than one parent makes the commit a merge. Initial (root) commits have no parents.</li>\r\n<li><strong>author </strong>- Commit author</li>\r\n</ul><pre id=\"bkmrk-%24-git-cat-file-commi\"><code class=\"language-\">$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nparent a3d5ad1...\r\nauthor Geddy Lee &lt;glee@rush.com&gt;\r\ncommiter Neil Peart &lt;npeart@rush.com&gt;</code></pre>\r\n<h4 id=\"bkmrk-tree\">Tree</h4>\r\n<p id=\"bkmrk-tree-is-an-object-%28a\"><code>tree</code> is an object (a file, really) which contains a list of pointers to blobs or other trees. It\'s hash is calculated based on all the files and their filenames in the project.</p>\r\n<p id=\"bkmrk-contents-of-a-tree%3A\"><strong>Contents of a Tree:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-07\"><code class=\"language-\">$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt</code></pre>\r\n<h4 id=\"bkmrk-blob\">Blob</h4>\r\n<p id=\"bkmrk-git-creates-a-blob-f\">Git creates a <code>blob</code> for the content of each file, unless that same content already exists (in which case it reuses the blob).</p>\r\n<p id=\"bkmrk-contents-of-a-blob%3A\"><strong>Contents of a Blob:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-ca\"><code class=\"language-\">$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...</code></pre>\r\n<h3 id=\"bkmrk-does-every-commit-cr\" class=\"fs-headline1 ow-break-word mb8 flex--item fl1\">Does every commit creates a new tree object in git?</h3>\r\n<p id=\"bkmrk-every-time-you-add-a\">Every time you add a file to your repository, usually by adding it to the index and then committing, a snapshot of the whole file is added. A hash is calculated, and this hash is the identifier for this file.</p>\r\n<p id=\"bkmrk-however%2C-if-you-5-6-\">However, if you 5-6 commits down the line manage to restore a files contents back to what it was previously, its new hash will already exist in the repository and thus no additional file will be added. Instead, whatever is going to refer to this file will use the hash but thus refer to the \"old\" file.</p>\r\n<p id=\"bkmrk-so%2C-theoretically-no\">So, theoretically not always a new tree object will be created.</p>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination.\r\nA checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation. If you hash the same object twice, you will get the same hash both times.\r\nHow are Git objects stored internally?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:\r\nblob - Raw contents of a single file, named with the SHA-1 hash of its contents. \r\ntree - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. \r\ncommit - Snapshot of the entire project.\r\nWhen a file is commited into the repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. \r\nEvery Git object is stored in .git/objects.\r\n\r\n\r\n\r\n\r\nCommit\r\ncommit object includes a pointer to the main tree. The main tree hash is recalculated every commit because file or filename changes occur. This means, that almost always a new tree object is created when creating a new commit. \r\nThe hash of the commit is calculated based on:\r\nThe commit message\r\nThe file changes\r\nThe commit author\r\nThe date\r\nThe parent commit hash\r\nContents of a Commit\r\ntree -  main tree (the root directory, always only one)\r\nparent - A commit object may have any number of parents. With exactly one parent, it is an ordinary commit. Having more than one parent makes the commit a merge. Initial (root) commits have no parents.\r\nauthor - Commit author\r\n$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nparent a3d5ad1...\r\nauthor Geddy Lee <glee@rush.com>\r\ncommiter Neil Peart <npeart@rush.com>\r\nTree\r\ntree is an object (a file, really) which contains a list of pointers to blobs or other trees. It\'s hash is calculated based on all the files and their filenames in the project.\r\nContents of a Tree:\r\n$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt\r\nBlob\r\nGit creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob).\r\nContents of a Blob:\r\n$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...\r\nDoes every commit creates a new tree object in git?\r\nEvery time you add a file to your repository, usually by adding it to the index and then committing, a snapshot of the whole file is added. A hash is calculated, and this hash is the identifier for this file.\r\nHowever, if you 5-6 commits down the line manage to restore a files contents back to what it was previously, its new hash will already exist in the repository and thus no additional file will be added. Instead, whatever is going to refer to this file will use the hash but thus refer to the \"old\" file.\r\nSo, theoretically not always a new tree object will be created.', 1, '2021-12-01 14:36:50', '2021-12-01 14:36:50', 'how-does-git-work-under-the-hood', 'git', 'version', '', '', 14),
(77, 15, 'How does Git work under the hood?', '<h3 id=\"bkmrk-what-are-sha-1-hashe\">What is SHA-1?</h3>\r\n<p id=\"bkmrk-git-refers-to-all-co\"><strong>SHA-1</strong> (<strong>Secure Hash Algorithm 1</strong>) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.</p>\r\n<ul id=\"bkmrk-sha-1-is-most-often-\"><li>SHA-1 is most often used to <strong>verify that a file has been unaltered</strong>. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination.</li>\r\n</ul><p id=\"bkmrk-a-checksum-is-a-numb\">A <strong>checksum</strong> is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation. If you hash the same object twice, you will get the same hash both times.</p>\r\n<h3 id=\"bkmrk-how-does-git-calcula\">How are Git objects stored internally?</h3>\r\n<p id=\"bkmrk-one-thing-to-underst\">One thing to understand about git is that git doesn’t store <em>diff </em>of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:</p>\r\n<ul id=\"bkmrk-blobs-trees-commits.\"><li id=\"bkmrk-blob---contents-of-a\" class=\"ho hp fy hq b hr ii hs ht hu ij hv hw hx ik hy hz ia il ib ic id im ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>blob</strong> - Raw contents of a single file, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-tree---object-that-c\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>tree</strong> - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. </li>\r\n<li id=\"bkmrk-commit---snapshot-of\" class=\"ho hp fy hq b hr kp hs ht hu kq hv hw hx kr hy hz ia ks ib ic id kt ie if ih km kn ko gv\" data-selectable-paragraph=\"\"><strong>commit</strong> - Snapshot of the entire project.</li>\r\n</ul><p id=\"bkmrk-when-you-commit-a-fi\">When a file is commited into the repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. </p>\r\n<p id=\"bkmrk-every-git-object-is-\">Every Git object is stored in <em>.git/objects</em>.</p>\r\n<div id=\"bkmrk-\">\r\n<div data-post-id=\"780148\"><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1638367106410.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1638367106410.png\" alt=\"image-1638367106410.png\" width=\"509\" height=\"370\"></a></p>\r\n<h4 id=\"bkmrk-contents-of-a-commit\">Commit</h4>\r\n<p id=\"bkmrk-a%C2%A0commit%C2%A0object-incl\"><code>commit</code> object includes a pointer to the main tree. The main tree hash is recalculated every commit because file or filename changes occur. This means, that almost always a new tree object is created when creating a new commit. </p>\r\n<p id=\"bkmrk-the-hash-of-the-comm\">The hash of the commit is calculated based on:</p>\r\n<ul id=\"bkmrk-the-commit-message-t\"><li>The commit message</li>\r\n<li>The file changes</li>\r\n<li>The commit author</li>\r\n<li>The date</li>\r\n<li>The parent commit hash</li>\r\n</ul><p id=\"bkmrk-contents-of-a-commit-0\"><strong>Contents of a Commit</strong></p>\r\n<ul id=\"bkmrk-tree--%C2%A0-main-tree-%28t\"><li><strong>tree</strong> -  main tree (the root directory, always only one)</li>\r\n<li><strong>parent </strong>- A commit object may have any number of parents. With exactly one parent, it is an ordinary commit. Having more than one parent makes the commit a merge. Initial (root) commits have no parents.</li>\r\n<li><strong>author </strong>- Commit author</li>\r\n</ul><pre id=\"bkmrk-%24-git-cat-file-commi\"><code class=\"language-\">$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nparent a3d5ad1...\r\nauthor Geddy Lee &lt;glee@rush.com&gt;\r\ncommiter Neil Peart &lt;npeart@rush.com&gt;</code></pre>\r\n<h4 id=\"bkmrk-tree\">Tree</h4>\r\n<p id=\"bkmrk-tree-is-an-object-%28a\"><code>tree</code> is an object (a file, really) which contains a list of pointers to blobs or other trees. It\'s hash is calculated based on all the files and their filenames in the project.</p>\r\n<p id=\"bkmrk-contents-of-a-tree%3A\"><strong>Contents of a Tree:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-07\"><code class=\"language-\">$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt</code></pre>\r\n<h4 id=\"bkmrk-blob\">Blob</h4>\r\n<p id=\"bkmrk-git-creates-a-blob-f\">Git creates a <code>blob</code> for the content of each file, unless that same content already exists (in which case it reuses the blob). Only stores the contents of the file rather than the name or any metadata.</p>\r\n<p id=\"bkmrk-contents-of-a-blob%3A\"><strong>Contents of a Blob:</strong></p>\r\n<pre id=\"bkmrk-%24-git-cat-file--p-ca\"><code class=\"language-\">$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...</code></pre>\r\n<h3 id=\"bkmrk-does-every-commit-cr\" class=\"fs-headline1 ow-break-word mb8 flex--item fl1\">Does every commit creates a new tree object in git?</h3>\r\n<p id=\"bkmrk-every-time-you-add-a\">Every time you add a file to your repository, usually by adding it to the index and then committing, a snapshot of the whole file is added. A hash is calculated, and this hash is the identifier for this file.</p>\r\n<p id=\"bkmrk-however%2C-if-you-5-6-\">However, if you 5-6 commits down the line manage to restore a files contents back to what it was previously, its new hash will already exist in the repository and thus no additional file will be added. Instead, whatever is going to refer to this file will use the hash but thus refer to the \"old\" file.</p>\r\n<p id=\"bkmrk-so%2C-theoretically-no\">So, theoretically not always a new tree object will be created.</p>', 'What is SHA-1?\r\nSHA-1 (Secure Hash Algorithm 1) is a cryptographic hash function which takes an input and produces a 160-bit (20-byte) hash value known as a message digest, typically rendered as a hexadecimal number, 40 digits long.\r\nSHA-1 is most often used to verify that a file has been unaltered. This is done by producing a checksum before the file has been transmitted, and then again once it reaches its destination.\r\nA checksum is a number computed from the contents of a file using an algorithm that doesn\'t care about anything except using the actual bytes that are in a file to make the computation. If you hash the same object twice, you will get the same hash both times.\r\nHow are Git objects stored internally?\r\nOne thing to understand about git is that git doesn’t store diff of the contents of your files. It stores the exact contents of the files at the point a commit is made. Git uses different types of objects:\r\nblob - Raw contents of a single file, named with the SHA-1 hash of its contents. \r\ntree - Object that contains references to other blobs or subtrees, named with the SHA-1 hash of its contents. \r\ncommit - Snapshot of the entire project.\r\nWhen a file is commited into the repository, Git calculates and remembers the hash of the contents of the file. When you later retrieve the file, Git can verify that the hash of the data being retrieved exactly matches the hash that was computed when it was stored. \r\nEvery Git object is stored in .git/objects.\r\n\r\n\r\n\r\n\r\nCommit\r\ncommit object includes a pointer to the main tree. The main tree hash is recalculated every commit because file or filename changes occur. This means, that almost always a new tree object is created when creating a new commit. \r\nThe hash of the commit is calculated based on:\r\nThe commit message\r\nThe file changes\r\nThe commit author\r\nThe date\r\nThe parent commit hash\r\nContents of a Commit\r\ntree -  main tree (the root directory, always only one)\r\nparent - A commit object may have any number of parents. With exactly one parent, it is an ordinary commit. Having more than one parent makes the commit a merge. Initial (root) commits have no parents.\r\nauthor - Commit author\r\n$ git cat-file commit 5bac93\r\ntree 04d1daef...\r\nparent b7850ef5...\r\nparent a3d5ad1...\r\nauthor Geddy Lee <glee@rush.com>\r\ncommiter Neil Peart <npeart@rush.com>\r\nTree\r\ntree is an object (a file, really) which contains a list of pointers to blobs or other trees. It\'s hash is calculated based on all the files and their filenames in the project.\r\nContents of a Tree:\r\n$ git cat-file -p 07b1a631\r\n100644 blob b91bba1b   .gitignore\r\n100644 blob cc0956f1   Makefile\r\n040000 tree 92e1ca7e   src\r\n100644 blob cae391ff   Readme.txt\r\nBlob\r\nGit creates a blob for the content of each file, unless that same content already exists (in which case it reuses the blob). Only stores the contents of the file rather than the name or any metadata.\r\nContents of a Blob:\r\n$ git cat-file -p cae391ff\r\nWelcome to my project! This is the readmefile\r\n...\r\nDoes every commit creates a new tree object in git?\r\nEvery time you add a file to your repository, usually by adding it to the index and then committing, a snapshot of the whole file is added. A hash is calculated, and this hash is the identifier for this file.\r\nHowever, if you 5-6 commits down the line manage to restore a files contents back to what it was previously, its new hash will already exist in the repository and thus no additional file will be added. Instead, whatever is going to refer to this file will use the hash but thus refer to the \"old\" file.\r\nSo, theoretically not always a new tree object will be created.', 1, '2021-12-01 14:37:50', '2021-12-01 14:37:50', 'how-does-git-work-under-the-hood', 'git', 'version', '', '', 15),
(80, 13, 'Common Linux Commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\"><li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul><li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul></li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n</ul><h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\"><li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul><li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul></li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updated</strong></li>\r\n<li><strong>ark </strong>- Scripting language used for manipulating data</li>\r\n<li><strong>uniq </strong>- Filters or counts out the repeated lines in a file</li>\r\n</ul><h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\"><li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul><li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to a file</p>\r\n<p><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\nFile\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\nzcat - Read a compressed file\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updated\r\nark - Scripting language used for manipulating data\r\nuniq - Filters or counts out the repeated lines in a file\r\nPiping\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\nls -al > file - Redirect output to a file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 1, '2021-12-08 10:45:16', '2021-12-08 10:45:16', 'common-linux-commands', 'linux', 'version', '', '', 4);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(81, 13, 'Common Linux Commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\"><li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul><li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul></li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n</ul><h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\"><li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul><li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul></li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updated</strong></li>\r\n<li><strong>ark </strong>- Scripting language used for manipulating data</li>\r\n<li><strong>uniq </strong>- Filters or counts out the repeated lines in a file</li>\r\n<li><strong>sort </strong>- Sort a file, arranging the records in a particular order</li>\r\n</ul><h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\"><li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul><li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to a file</p>\r\n<p><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\nFile\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\nzcat - Read a compressed file\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updated\r\nark - Scripting language used for manipulating data\r\nuniq - Filters or counts out the repeated lines in a file\r\nsort - Sort a file, arranging the records in a particular order\r\nPiping\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\nls -al > file - Redirect output to a file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 1, '2021-12-08 10:46:55', '2021-12-08 10:46:55', 'common-linux-commands', 'linux', 'version', '', '', 5),
(83, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files.</li>\r\n</ul><p id=\"bkmrk-%C2%A0\"> </p>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files.\r\n \r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\n', 1, '2021-12-08 13:50:14', '2021-12-08 13:50:14', 'common-git-commands', 'git', 'version', '', 'Initial publish', 1),
(85, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files.\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files.\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\n', 1, '2021-12-08 13:51:20', '2021-12-08 13:51:20', 'common-git-commands', 'git', 'version', '', '', 2),
(87, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\n', 1, '2021-12-08 13:56:09', '2021-12-08 13:56:09', 'common-git-commands', 'git', 'version', '', '', 3),
(89, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\n', 1, '2021-12-08 14:07:58', '2021-12-08 14:07:58', 'common-git-commands', 'git', 'version', '', '', 4),
(91, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with files</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -f </strong>- Discard all untracked files.</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nWorking with files\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -f - Discard all untracked files.\r\n', 1, '2021-12-08 14:54:37', '2021-12-08 14:54:37', 'common-git-commands', 'git', 'version', '', '', 5),
(92, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with files</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -f </strong>- Deletes all untracked files.</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nWorking with files\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -f - Deletes all untracked files.\r\n', 1, '2021-12-08 16:54:31', '2021-12-08 16:54:31', 'common-git-commands', 'git', 'version', '', '', 6),
(93, 13, 'Common Linux Commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\"><li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul><li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul></li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n</ul><h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\"><li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul><li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul></li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updated</strong></li>\r\n<li><strong>awk </strong>- Scripting language used for manipulating data</li>\r\n<li><strong>uniq </strong>- Filters or counts out the repeated lines in a file</li>\r\n<li><strong>sort </strong>- Sort a file, arranging the records in a particular order</li>\r\n</ul><h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\"><li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul><li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to a file</p>\r\n<p><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\nFile\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\nzcat - Read a compressed file\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updated\r\nawk - Scripting language used for manipulating data\r\nuniq - Filters or counts out the repeated lines in a file\r\nsort - Sort a file, arranging the records in a particular order\r\nPiping\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\nls -al > file - Redirect output to a file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 1, '2021-12-09 09:29:57', '2021-12-09 09:29:57', 'common-linux-commands', 'linux', 'version', '', '', 6),
(95, 13, 'Common Linux Commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\"><li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul><li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul></li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n</ul><h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\"><li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul><li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul></li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updated</strong></li>\r\n<li><strong>awk </strong>- Scripting language used for manipulating data\r\n<ul id=\"bkmrk-awk-%27%7Bprint-%241%2C%244%7D%27%C2%A0\"><li><strong>awk \'{print $1,$4}\' </strong>- Get first and 4th word</li>\r\n</ul></li>\r\n<li><strong>uniq </strong>- Filters or counts out the repeated lines in a file</li>\r\n<li><strong>sort </strong>- Sort a file, arranging the records in a particular order</li>\r\n</ul><h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\"><li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul><li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to a file</p>\r\n<p><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\nFile\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\nzcat - Read a compressed file\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updated\r\nawk - Scripting language used for manipulating data\r\nawk \'{print $1,$4}\' - Get first and 4th word\r\n\r\nuniq - Filters or counts out the repeated lines in a file\r\nsort - Sort a file, arranging the records in a particular order\r\nPiping\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\nls -al > file - Redirect output to a file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 1, '2021-12-09 09:34:56', '2021-12-09 09:34:56', 'common-linux-commands', 'linux', 'version', '', '', 7);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(97, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with files</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -f </strong>- Deletes all untracked files.</li>\r\n</ul><h3 id=\"bkmrk-log\">Log</h3>\r\n<ul id=\"bkmrk-git-log---returns-a-\"><li><strong>git log</strong> - Returns a log of commits\r\n<ul><li><strong>git log --oneline </strong>- Returns commits condensed in one line. Useful for getting a high-level overview of your project.</li>\r\n<li><strong>git log -p </strong>- See changes of each commit.</li>\r\n</ul></li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nWorking with files\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -f - Deletes all untracked files.\r\nLog\r\ngit log - Returns a log of commits\r\ngit log --oneline - Returns commits condensed in one line. Useful for getting a high-level overview of your project.\r\ngit log -p - See changes of each commit.\r\n\r\n', 1, '2021-12-09 09:42:08', '2021-12-09 09:42:08', 'common-git-commands', 'git', 'version', '', '', 7),
(99, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with files</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -f </strong>- Deletes all untracked files.</li>\r\n</ul><h3 id=\"bkmrk-log\">Log</h3>\r\n<ul id=\"bkmrk-git-log---returns-a-\"><li><strong>git log</strong> - Returns a log of commits\r\n<ul><li><strong>git log --oneline </strong>- Returns commits condensed in one line. Useful for getting a high-level overview of your project.</li>\r\n<li><strong>git log -p </strong>- See changes of each commit.</li>\r\n<li><strong>git log -3</strong> - Show 3 most recent commits.</li>\r\n<li><strong>git log --after=\"2014-7-1\" </strong>- Show commit after or before a certain date.</li>\r\n</ul></li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nWorking with files\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -f - Deletes all untracked files.\r\nLog\r\ngit log - Returns a log of commits\r\ngit log --oneline - Returns commits condensed in one line. Useful for getting a high-level overview of your project.\r\ngit log -p - See changes of each commit.\r\ngit log -3 - Show 3 most recent commits.\r\ngit log --after=\"2014-7-1\" - Show commit after or before a certain date.\r\n\r\n', 1, '2021-12-09 09:45:31', '2021-12-09 09:45:31', 'common-git-commands', 'git', 'version', '', '', 8),
(100, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with files</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -f </strong>- Deletes all untracked files.</li>\r\n</ul><h3 id=\"bkmrk-log\">Log</h3>\r\n<ul id=\"bkmrk-git-log---returns-a-\"><li><strong>git log</strong> - Returns a log of commits\r\n<ul><li><strong>git log --oneline </strong>- Returns commits condensed in one line. Useful for getting a high-level overview of your project.</li>\r\n<li><strong>git log --graph --oneline </strong>- Show log in a graph format</li>\r\n<li><strong>git log -p </strong>- See changes of each commit.</li>\r\n<li><strong>git log -3</strong> - Show 3 most recent commits.</li>\r\n<li><strong>git log --after=\"2014-7-1\" </strong>- Show commit after or before a certain date.</li>\r\n</ul></li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nWorking with files\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -f - Deletes all untracked files.\r\nLog\r\ngit log - Returns a log of commits\r\ngit log --oneline - Returns commits condensed in one line. Useful for getting a high-level overview of your project.\r\ngit log --graph --oneline - Show log in a graph format\r\ngit log -p - See changes of each commit.\r\ngit log -3 - Show 3 most recent commits.\r\ngit log --after=\"2014-7-1\" - Show commit after or before a certain date.\r\n\r\n', 1, '2021-12-09 09:46:23', '2021-12-09 09:46:23', 'common-git-commands', 'git', 'version', '', '', 9),
(101, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-log\">Log</h3>\r\n<ul id=\"bkmrk-git-log---returns-a-\"><li><strong>git log</strong> - Returns a log of commits\r\n<ul><li><strong>git log --oneline </strong>- Returns commits condensed in one line. Useful for getting a high-level overview of your project.</li>\r\n<li><strong>git log --graph --oneline </strong>- Show log in a graph format</li>\r\n<li><strong>git log -p </strong>- See changes of each commit.</li>\r\n<li><strong>git log -3</strong> - Show 3 most recent commits.</li>\r\n<li><strong>git log --after=\"2014-7-1\" </strong>- Show commit after or before a certain date.</li>\r\n</ul></li>\r\n</ul><ul id=\"bkmrk-\"></ul><h3 id=\"bkmrk-working-with-files\">Working with files</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -f </strong>- Deletes all untracked files.</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nLog\r\ngit log - Returns a log of commits\r\ngit log --oneline - Returns commits condensed in one line. Useful for getting a high-level overview of your project.\r\ngit log --graph --oneline - Show log in a graph format\r\ngit log -p - See changes of each commit.\r\ngit log -3 - Show 3 most recent commits.\r\ngit log --after=\"2014-7-1\" - Show commit after or before a certain date.\r\n\r\nWorking with files\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -f - Deletes all untracked files.\r\n', 1, '2021-12-09 09:46:53', '2021-12-09 09:46:53', 'common-git-commands', 'git', 'version', '', '', 10),
(102, 21, 'Rebasing', '', '', 1, '2021-12-09 09:47:29', '2021-12-09 09:47:29', 'rebasing', 'git', 'version', '', 'Initial publish', 1),
(104, 21, 'Merge vs Rebase', '<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639043550959.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639043550959.png\" alt=\"image-1639043550959.png\" width=\"462\" height=\"352\"></a></p>\r\n<p id=\"bkmrk-there-are-two-option\">There are two options for integrating your feature into the main branch:</p>\r\n<ul id=\"bkmrk-merging-directly.-re\"><li>merging directly.</li>\r\n<li>rebasing and then merging.</li>\r\n</ul><h3 id=\"bkmrk-how-does-git-rebase-\">How does Git Rebase work?</h3>\r\n<p id=\"bkmrk-rebasing-is-the-proc\">Rebasing is the process of moving or combining a sequence of commits to a new base commit.</p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639043336362.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639043336362.png\" alt=\"image-1639043336362.png\" width=\"325\" height=\"248\"></a></p>', '\r\nThere are two options for integrating your feature into the main branch:\r\nmerging directly.\r\nrebasing and then merging.\r\nHow does Git Rebase work?\r\nRebasing is the process of moving or combining a sequence of commits to a new base commit.\r\n \r\n', 1, '2021-12-09 09:54:20', '2021-12-09 09:54:20', 'merge-vs-rebase', 'git', 'version', '', '', 2),
(106, 21, 'Merge vs Rebase', '<p id=\"bkmrk-there-are-two-option\">There are two options for integrating your feature into the main branch:</p>\r\n<ul id=\"bkmrk-merging-directly.-re\"><li>merging directly.</li>\r\n<li>rebasing and then merging.</li>\r\n</ul><h3 id=\"bkmrk-how-does-git-rebase-\">How does Git Rebase work?</h3>\r\n<p id=\"bkmrk-rebasing-is-the-proc\">Rebasing is the process of moving or combining a sequence of commits to a new base commit.Rebase compresses all the changes into a single “patch.” Then it integrates the patch onto the target branch.</p>\r\n<p id=\"bkmrk-unlike-merging%2C-reba\">Unlike merging, rebasing flattens the history because it transfers the completed work from one branch to another. In the process, unwanted history is eliminated.</p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639043929091.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639043929091.png\" alt=\"image-1639043929091.png\" width=\"289\" height=\"150\"></a></p>', 'There are two options for integrating your feature into the main branch:\r\nmerging directly.\r\nrebasing and then merging.\r\nHow does Git Rebase work?\r\nRebasing is the process of moving or combining a sequence of commits to a new base commit.Rebase compresses all the changes into a single “patch.” Then it integrates the patch onto the target branch.\r\nUnlike merging, rebasing flattens the history because it transfers the completed work from one branch to another. In the process, unwanted history is eliminated.\r\n \r\n', 1, '2021-12-09 09:59:12', '2021-12-09 09:59:12', 'merge-vs-rebase', 'git', 'version', '', '', 3),
(108, 23, 'Git Reset', '', '', 1, '2021-12-09 11:56:06', '2021-12-09 11:56:06', 'git-reset', 'git', 'version', '', 'Initial publish', 1),
(110, 23, 'Git Reset', '<h3 id=\"bkmrk-git-checkout\">Git Checkout</h3>\r\n<p id=\"bkmrk-with%C2%A0git-checkout%2C-t\">With git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.</p>\r\n<pre id=\"bkmrk-git-checkout-d\"><code class=\"language-\">git checkout d</code></pre>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051052100.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051052100.png\" alt=\"image-1639051052100.png\" width=\"440\" height=\"175\"></a></p>\r\n<h3 id=\"bkmrk-git-reset\">Git Reset</h3>\r\n<p id=\"bkmrk-comparatively%2C%C2%A0git-r\">Comparatively, git reset, moves both the HEAD and branch refs to the specified commit.</p>\r\n<pre id=\"bkmrk-git-reset-d\"><code class=\"language-\">git reset d</code></pre>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051143108.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051143108.png\" alt=\"image-1639051143108.png\" width=\"354\" height=\"188\"></a></p>', 'Git Checkout\r\nWith git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.\r\ngit checkout d\r\n\r\nGit Reset\r\nComparatively, git reset, moves both the HEAD and branch refs to the specified commit.\r\ngit reset d\r\n', 1, '2021-12-09 11:59:10', '2021-12-09 11:59:10', 'git-reset', 'git', 'version', '', '', 2),
(112, 23, 'Git Reset', '<h3 id=\"bkmrk-git-checkout\">Git Checkout</h3>\r\n<p id=\"bkmrk-with%C2%A0git-checkout%2C-t\">With git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.</p>\r\n<pre id=\"bkmrk-git-checkout-d\"><code class=\"language-\">git checkout d</code></pre>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051052100.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051052100.png\" alt=\"image-1639051052100.png\" width=\"440\" height=\"175\"></a></p>\r\n<p id=\"bkmrk-to-move-back-to-the-\">To move back to the latest commit, just checkout to the branch</p>\r\n<pre id=\"bkmrk-git-checkout-main\"><code class=\"language-\">git checkout main</code></pre>\r\n<h3 id=\"bkmrk-git-reset\">Git Reset</h3>\r\n<p id=\"bkmrk-comparatively%2C%C2%A0git-r\">Comparatively, git reset, moves both the HEAD and branch refs to the specified commit.</p>\r\n<pre id=\"bkmrk-git-reset-d\"><code class=\"language-\">git reset d</code></pre>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051143108.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051143108.png\" alt=\"image-1639051143108.png\" width=\"354\" height=\"188\"></a></p>', 'Git Checkout\r\nWith git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.\r\ngit checkout d\r\n\r\nTo move back to the latest commit, just checkout to the branch\r\ngit checkout main\r\nGit Reset\r\nComparatively, git reset, moves both the HEAD and branch refs to the specified commit.\r\ngit reset d\r\n', 1, '2021-12-09 12:04:52', '2021-12-09 12:04:52', 'git-reset', 'git', 'version', '', '', 3),
(114, 23, 'Undoing Commits', '<h3 id=\"bkmrk-git-checkout\">Git Checkout</h3>\r\n<p id=\"bkmrk-with%C2%A0git-checkout%2C-t\">With git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.</p>\r\n<pre id=\"bkmrk-git-checkout-d\"><code class=\"language-\">git checkout d</code></pre>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051052100.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051052100.png\" alt=\"image-1639051052100.png\" width=\"440\" height=\"175\"></a></p>\r\n<p id=\"bkmrk-to-move-back-to-the-\">To move back to the latest commit, just checkout to the branch</p>\r\n<pre id=\"bkmrk-git-checkout-main\"><code class=\"language-\">git checkout main</code></pre>\r\n<h3 id=\"bkmrk-git-reset\">Git Reset</h3>\r\n<p id=\"bkmrk-comparatively%2C%C2%A0git-r\">Comparatively, git reset, moves both the HEAD and branch refs to the specified commit.</p>\r\n<pre id=\"bkmrk-git-reset-d\"><code class=\"language-\">git reset d</code></pre>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051143108.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051143108.png\" alt=\"image-1639051143108.png\" width=\"354\" height=\"188\"></a></p>', 'Git Checkout\r\nWith git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.\r\ngit checkout d\r\n\r\nTo move back to the latest commit, just checkout to the branch\r\ngit checkout main\r\nGit Reset\r\nComparatively, git reset, moves both the HEAD and branch refs to the specified commit.\r\ngit reset d\r\n', 1, '2021-12-09 12:15:24', '2021-12-09 12:15:24', 'undoing-commits', 'git', 'version', '', '', 4),
(116, 23, 'Undoing Commits', '<h3 id=\"bkmrk-git-checkout\">Git Checkout</h3>\r\n<p id=\"bkmrk-with%C2%A0git-checkout%2C-t\">With git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.</p>\r\n<pre id=\"bkmrk-git-checkout-d\"><code class=\"language-\">git checkout d</code></pre>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051052100.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051052100.png\" alt=\"image-1639051052100.png\" width=\"440\" height=\"175\"></a></p>\r\n<p id=\"bkmrk-to-move-back-to-the-\">To move back to the latest commit, just checkout to the branch</p>\r\n<pre id=\"bkmrk-git-checkout-main\"><code class=\"language-\">git checkout main</code></pre>\r\n<h3 id=\"bkmrk-git-reset\">Git Reset</h3>\r\n<p id=\"bkmrk-comparatively%2C%C2%A0git-r\">Comparatively, git reset, moves both the HEAD and branch refs to the specified commit.</p>\r\n<pre id=\"bkmrk-git-reset-d\"><code class=\"language-\">git reset d</code></pre>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051143108.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051143108.png\" alt=\"image-1639051143108.png\" width=\"354\" height=\"188\"></a></p>\r\n<p id=\"bkmrk-options%3A\"><strong>Options:</strong></p>\r\n<ul id=\"bkmrk---soft---uncommit-ch\"><li><strong><code>--soft</code> </strong>- <strong>uncommit</strong> changes, changes are left staged.</li>\r\n<li><strong><code>--mixed (default)</code> </strong>- <strong>uncommit + unstage</strong> changes, changes are left in working tree.</li>\r\n<li><strong><code>--hard</code> </strong>- <strong>uncommit + unstage + delete</strong> changes, nothing left.</li>\r\n</ul>', 'Git Checkout\r\nWith git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.\r\ngit checkout d\r\n\r\nTo move back to the latest commit, just checkout to the branch\r\ngit checkout main\r\nGit Reset\r\nComparatively, git reset, moves both the HEAD and branch refs to the specified commit.\r\ngit reset d\r\n\r\nOptions:\r\n--soft - uncommit changes, changes are left staged.\r\n--mixed (default) - uncommit + unstage changes, changes are left in working tree.\r\n--hard - uncommit + unstage + delete changes, nothing left.\r\n', 1, '2021-12-09 12:19:04', '2021-12-09 12:19:04', 'undoing-commits', 'git', 'version', '', '', 5),
(117, 23, 'Undoing Commits', '<h3 id=\"bkmrk-git-checkout\">Git Checkout</h3>\r\n<p id=\"bkmrk-with%C2%A0git-checkout%2C-t\">With git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.</p>\r\n<pre id=\"bkmrk-git-checkout-d\"><code class=\"language-\">git checkout d</code></pre>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051052100.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051052100.png\" alt=\"image-1639051052100.png\" width=\"440\" height=\"175\"></a></p>\r\n<p id=\"bkmrk-to-move-back-to-the-\">To move back to the latest commit, just checkout to the branch</p>\r\n<pre id=\"bkmrk-git-checkout-main\"><code class=\"language-\">git checkout main</code></pre>\r\n<h3 id=\"bkmrk-git-reset\">Git Reset</h3>\r\n<p id=\"bkmrk-comparatively%2C%C2%A0git-r\">Comparatively, git reset, moves both the HEAD and branch refs to the specified commit. Reset doesn\'t make commits, it just updates a branch to point to a different commit. </p>\r\n<pre id=\"bkmrk-git-reset-d\"><code class=\"language-\">git reset d</code></pre>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051143108.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051143108.png\" alt=\"image-1639051143108.png\" width=\"354\" height=\"188\"></a></p>\r\n<p id=\"bkmrk-options%3A\"><strong>Options:</strong></p>\r\n<ul id=\"bkmrk---soft---uncommit-ch\"><li><strong><code>--soft</code> </strong>- <strong>uncommit</strong> changes, changes are left staged.</li>\r\n<li><strong><code>--mixed (default)</code> </strong>- <strong>uncommit + unstage</strong> changes, changes are left in working tree.</li>\r\n<li><strong><code>--hard</code> </strong>- <strong>uncommit + unstage + delete</strong> changes, nothing left.</li>\r\n</ul>', 'Git Checkout\r\nWith git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.\r\ngit checkout d\r\n\r\nTo move back to the latest commit, just checkout to the branch\r\ngit checkout main\r\nGit Reset\r\nComparatively, git reset, moves both the HEAD and branch refs to the specified commit. Reset doesn\'t make commits, it just updates a branch to point to a different commit. \r\ngit reset d\r\n\r\nOptions:\r\n--soft - uncommit changes, changes are left staged.\r\n--mixed (default) - uncommit + unstage changes, changes are left in working tree.\r\n--hard - uncommit + unstage + delete changes, nothing left.\r\n', 1, '2021-12-09 12:19:59', '2021-12-09 12:19:59', 'undoing-commits', 'git', 'version', '', '', 6),
(118, 24, 'Workflow', '<ul id=\"bkmrk-working-directory-%2F-\"><li>\r\n<p><strong>Working directory / Working tree / Workspace </strong>holds files in your computer\'s ordinary format, rather than in the special Git-only format that goes into each new commit you make.</p>\r\n</li>\r\n<li>\r\n<p>The <strong>index / staging-area / </strong><strong>cache</strong> holds the proposed next snapshot. If you change a file in your <strong>work-tree</strong>, you need to copy it back into the <strong>index</strong> so that the updated file is the one that goes into the next commit.</p>\r\n<ul><li>The index is not the git repository. Files in the git index are files that git would commit to the git repository if you used the git commit command.</li>\r\n</ul></li>\r\n</ul><p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639052540832.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639052540832.png\" alt=\"image-1639052540832.png\"></a></p>', '\r\nWorking directory / Working tree / Workspace holds files in your computer\'s ordinary format, rather than in the special Git-only format that goes into each new commit you make.\r\n\r\n\r\nThe index / staging-area / cache holds the proposed next snapshot. If you change a file in your work-tree, you need to copy it back into the index so that the updated file is the one that goes into the next commit.\r\nThe index is not the git repository. Files in the git index are files that git would commit to the git repository if you used the git commit command.\r\n\r\n \r\n', 1, '2021-12-09 12:30:00', '2021-12-09 12:30:00', 'workflow', 'git', 'version', '', 'Initial publish', 1),
(119, 24, 'Workflow', '<h3 id=\"bkmrk-what-is-the-git-work\">What is the Git Workflow?</h3>\r\n<ul id=\"bkmrk-working-directory-%2F-\"><li>\r\n<p><strong>Working directory / Working tree / Workspace </strong>holds files in your computer\'s ordinary format, rather than in the special Git-only format that goes into each new commit you make.</p>\r\n</li>\r\n<li>\r\n<p>The <strong>index / staging-area / </strong><strong>cache</strong> holds the proposed next snapshot. If you change a file in your <strong>work-tree</strong>, you need to copy it back into the <strong>index</strong> so that the updated file is the one that goes into the next commit.</p>\r\n<ul><li>The index is not the git repository. Files in the git index are files that git would commit to the git repository if you used the git commit command.</li>\r\n</ul></li>\r\n</ul><p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639052540832.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639052540832.png\" alt=\"image-1639052540832.png\"></a></p>', 'What is the Git Workflow?\r\n\r\nWorking directory / Working tree / Workspace holds files in your computer\'s ordinary format, rather than in the special Git-only format that goes into each new commit you make.\r\n\r\n\r\nThe index / staging-area / cache holds the proposed next snapshot. If you change a file in your work-tree, you need to copy it back into the index so that the updated file is the one that goes into the next commit.\r\nThe index is not the git repository. Files in the git index are files that git would commit to the git repository if you used the git commit command.\r\n\r\n \r\n', 1, '2021-12-09 12:30:19', '2021-12-09 12:30:19', 'workflow', 'git', 'version', '', '', 2);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(121, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-log\">Log</h3>\r\n<ul id=\"bkmrk-git-log---returns-a-\"><li><strong>git log</strong> - Returns a log of commits\r\n<ul><li><strong>git log --oneline </strong>- Returns commits condensed in one line. Useful for getting a high-level overview of your project.</li>\r\n<li><strong>git log --graph --oneline </strong>- Show log in a graph format</li>\r\n<li><strong>git log -p </strong>- See changes of each commit.</li>\r\n<li><strong>git log -3</strong> - Show 3 most recent commits.</li>\r\n<li><strong>git log --after=\"2014-7-1\" </strong>- Show commit after or before a certain date.</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-branches\">Branches</h3>\r\n<ul id=\"bkmrk-git-branch---show-cu\"><li><strong>git branch --show-current</strong> - Show current branch.</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with files</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -f </strong>- Deletes all untracked files.</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nLog\r\ngit log - Returns a log of commits\r\ngit log --oneline - Returns commits condensed in one line. Useful for getting a high-level overview of your project.\r\ngit log --graph --oneline - Show log in a graph format\r\ngit log -p - See changes of each commit.\r\ngit log -3 - Show 3 most recent commits.\r\ngit log --after=\"2014-7-1\" - Show commit after or before a certain date.\r\n\r\nBranches\r\ngit branch --show-current - Show current branch.\r\nWorking with files\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -f - Deletes all untracked files.\r\n', 1, '2021-12-09 12:34:07', '2021-12-09 12:34:07', 'common-git-commands', 'git', 'version', '', '', 11),
(122, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-log\">Log</h3>\r\n<ul id=\"bkmrk-git-log---returns-a-\"><li><strong>git log</strong> - Returns a log of commits\r\n<ul><li><strong>git log --oneline </strong>- Returns commits condensed in one line. Useful for getting a high-level overview of your project.</li>\r\n<li><strong>git log --graph --oneline </strong>- Show log in a graph format</li>\r\n<li><strong>git log -p </strong>- See changes of each commit.</li>\r\n<li><strong>git log -3</strong> - Show 3 most recent commits.</li>\r\n<li><strong>git log --after=\"2014-7-1\" </strong>- Show commit after or before a certain date.</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-branches\">Branches</h3>\r\n<ul id=\"bkmrk-git-branch---show-cu\"><li><strong>git branch --show-current</strong> - Show current branch.</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with files</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -fd </strong>- Deletes all untracked files.</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nLog\r\ngit log - Returns a log of commits\r\ngit log --oneline - Returns commits condensed in one line. Useful for getting a high-level overview of your project.\r\ngit log --graph --oneline - Show log in a graph format\r\ngit log -p - See changes of each commit.\r\ngit log -3 - Show 3 most recent commits.\r\ngit log --after=\"2014-7-1\" - Show commit after or before a certain date.\r\n\r\nBranches\r\ngit branch --show-current - Show current branch.\r\nWorking with files\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -fd - Deletes all untracked files.\r\n', 1, '2021-12-09 12:38:01', '2021-12-09 12:38:01', 'common-git-commands', 'git', 'version', '', '', 12),
(124, 21, 'Merge vs Rebase', '<p id=\"bkmrk-there-are-two-option\">There are two options for integrating your feature into the main branch:</p>\r\n<ul id=\"bkmrk-merging-directly.-re\"><li>merging directly.</li>\r\n<li>rebasing and then merging.</li>\r\n</ul><h3 id=\"bkmrk-how-does-git-rebase-\">How does Git Rebase work?</h3>\r\n<p id=\"bkmrk-rebasing-is-the-proc\">Rebasing is the process of moving or combining a sequence of commits to a new base commit. Rebase compresses all the changes into a single “patch.” Then it integrates the patch onto the target branch.</p>\r\n<p id=\"bkmrk-unlike-merging%2C-reba\">Unlike merging, rebasing flattens the history because it transfers the completed work from one branch to another. In the process, unwanted history is eliminated.</p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639043929091.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639043929091.png\" alt=\"image-1639043929091.png\" width=\"289\" height=\"150\"></a></p>', 'There are two options for integrating your feature into the main branch:\r\nmerging directly.\r\nrebasing and then merging.\r\nHow does Git Rebase work?\r\nRebasing is the process of moving or combining a sequence of commits to a new base commit. Rebase compresses all the changes into a single “patch.” Then it integrates the patch onto the target branch.\r\nUnlike merging, rebasing flattens the history because it transfers the completed work from one branch to another. In the process, unwanted history is eliminated.\r\n \r\n', 1, '2021-12-09 14:05:53', '2021-12-09 14:05:53', 'merge-vs-rebase', 'git', 'version', '', '', 4),
(126, 21, 'Merge vs Rebase', '<p id=\"bkmrk-there-are-two-option\">There are two options for integrating your feature into the main branch:</p>\r\n<ul id=\"bkmrk-merging-directly.-re\"><li>merging directly.</li>\r\n<li>rebasing and then merging.</li>\r\n</ul><h3 id=\"bkmrk-how-does-git-merge-w\">How does Git Merge work?</h3>\r\n<p id=\"bkmrk-git-merge%C2%A0will-combi\">Git merge will combine multiple sequences of commits into one unified history. </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639058986917.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639058986917.png\" alt=\"image-1639058986917.png\" width=\"406\" height=\"209\"></a></p>\r\n<p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-otherbranch-%7C-x-%3C--y\"><code class=\"language-\">                    otherbranch\r\n                        |\r\n              X &lt;- Y &lt;- Z\r\n             /\r\n  A &lt;- B &lt;- C &lt;- D &lt;- E &lt;- F &lt;- G\r\n                                |\r\n                              master\r\n                                |\r\n                              HEAD</code></pre>\r\n<p id=\"bkmrk-you-are-on%C2%A0master%C2%A0an\">You are on <code>master</code> and you said <code>git merge otherbranch</code>. Then:</p>\r\n<ol id=\"bkmrk-git-first-figures-ou\"><li>\r\n<p>Git first figures out that the merge base is commit <code>C</code>.</p>\r\n</li>\r\n<li>\r\n<p>Git then calculates the diff from <code>C</code> to <code>G</code> and the diff from <code>C</code> to <code>Z</code>.</p>\r\n</li>\r\n<li>\r\n<p>Git then applies both of those diffs to <code>C</code> simultaneously — and commits the result on <code>master</code>. That is the merge commit.</p>\r\n</li>\r\n</ol><h3 id=\"bkmrk-how-does-git-rebase-\">How does Git Rebase work?</h3>\r\n<p id=\"bkmrk-rebasing-is-the-proc\">Rebasing is the process of moving or combining a sequence of commits to a new base commit. Rebase compresses all the changes into a single “patch.” Then it integrates the patch onto the target branch.</p>\r\n<p id=\"bkmrk-unlike-merging%2C-reba\">Unlike merging, rebasing flattens the history because it transfers the completed work from one branch to another. In the process, unwanted history is eliminated.</p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639043929091.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639043929091.png\" alt=\"image-1639043929091.png\" width=\"289\" height=\"150\"></a></p>', 'There are two options for integrating your feature into the main branch:\r\nmerging directly.\r\nrebasing and then merging.\r\nHow does Git Merge work?\r\nGit merge will combine multiple sequences of commits into one unified history. \r\n\r\nExample:\r\n                    otherbranch\r\n                        |\r\n              X <- Y <- Z\r\n             /\r\n  A <- B <- C <- D <- E <- F <- G\r\n                                |\r\n                              master\r\n                                |\r\n                              HEAD\r\nYou are on master and you said git merge otherbranch. Then:\r\n\r\nGit first figures out that the merge base is commit C.\r\n\r\n\r\nGit then calculates the diff from C to G and the diff from C to Z.\r\n\r\n\r\nGit then applies both of those diffs to C simultaneously — and commits the result on master. That is the merge commit.\r\n\r\nHow does Git Rebase work?\r\nRebasing is the process of moving or combining a sequence of commits to a new base commit. Rebase compresses all the changes into a single “patch.” Then it integrates the patch onto the target branch.\r\nUnlike merging, rebasing flattens the history because it transfers the completed work from one branch to another. In the process, unwanted history is eliminated.\r\n \r\n', 1, '2021-12-09 14:18:32', '2021-12-09 14:18:32', 'merge-vs-rebase', 'git', 'version', '', '', 5),
(128, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-log\">Log</h3>\r\n<ul id=\"bkmrk-git-log---returns-a-\"><li><strong>git log</strong> - Returns a log of commits\r\n<ul><li><strong>git log --oneline </strong>- Returns commits condensed in one line. Useful for getting a high-level overview of your project.</li>\r\n<li><strong>git log --graph --oneline </strong>- Show log in a graph format</li>\r\n<li><strong>git log -p </strong>- See changes of each commit.</li>\r\n<li><strong>git log -3</strong> - Show 3 most recent commits.</li>\r\n<li><strong>git log --after=\"2014-7-1\" </strong>- Show commit after or before a certain date.</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-branches\">Branches</h3>\r\n<ul id=\"bkmrk-git-branch---show-cu\"><li><strong>git branch --show-current</strong> - Show current branch.</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with Changes</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -fd </strong>- Deletes all untracked files.</li>\r\n<li><strong>git cherry-pick <em>commit </em></strong>- Get changes from a specific commit.</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nLog\r\ngit log - Returns a log of commits\r\ngit log --oneline - Returns commits condensed in one line. Useful for getting a high-level overview of your project.\r\ngit log --graph --oneline - Show log in a graph format\r\ngit log -p - See changes of each commit.\r\ngit log -3 - Show 3 most recent commits.\r\ngit log --after=\"2014-7-1\" - Show commit after or before a certain date.\r\n\r\nBranches\r\ngit branch --show-current - Show current branch.\r\nWorking with Changes\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -fd - Deletes all untracked files.\r\ngit cherry-pick commit - Get changes from a specific commit.\r\n', 1, '2021-12-09 14:21:26', '2021-12-09 14:21:26', 'common-git-commands', 'git', 'version', '', '', 13),
(130, 23, 'Undoing Commits', '<h3 id=\"bkmrk-git-checkout\">Git Checkout</h3>\r\n<p id=\"bkmrk-with%C2%A0git-checkout%2C-t\">With git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.</p>\r\n<pre id=\"bkmrk-git-checkout-d\"><code class=\"language-\">git checkout d</code></pre>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051052100.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051052100.png\" alt=\"image-1639051052100.png\" width=\"440\" height=\"175\"></a></p>\r\n<p id=\"bkmrk-to-move-back-to-the-\">To move back to the latest commit, just checkout to the branch</p>\r\n<pre id=\"bkmrk-git-checkout-main\"><code class=\"language-\">git checkout main</code></pre>\r\n<h3 id=\"bkmrk-git-reset\">Git Reset</h3>\r\n<p id=\"bkmrk-comparatively%2C%C2%A0git-r\">Comparatively, git reset, moves both the HEAD and branch refs to the specified commit. Reset doesn\'t make commits, it just updates a branch to point to a different commit. </p>\r\n<pre id=\"bkmrk-git-reset-d\"><code class=\"language-\">git reset d</code></pre>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051143108.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051143108.png\" alt=\"image-1639051143108.png\" width=\"354\" height=\"188\"></a></p>\r\n<p id=\"bkmrk-options%3A\"><strong>Options:</strong></p>\r\n<ul id=\"bkmrk---soft---uncommit-ch\"><li><strong><code>--soft</code> </strong>- <strong>uncommit</strong> changes, changes are left staged.</li>\r\n<li><strong><code>--mixed (default)</code> </strong>- <strong>uncommit + unstage</strong> changes, changes are left in working tree.</li>\r\n<li><strong><code>--hard</code> </strong>- <strong>uncommit + unstage + delete</strong> changes, nothing left.</li>\r\n</ul><h3 id=\"bkmrk-git-revert\">Git Revert</h3>\r\n<p id=\"bkmrk-git-revert-simply-cr\">Git revert simply creates a new commit that is the opposite of an existing commit. It leaves the files in the same state as if the commit that has been reverted never existed.</p>\r\n<pre id=\"bkmrk-git-revert-%3Ccommit%3E\"><code class=\"language-\">git revert &lt;commit&gt;</code></pre>\r\n<p id=\"bkmrk--1\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639059919753.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639059919753.png\" alt=\"image-1639059919753.png\" width=\"428\" height=\"128\"></a></p>', 'Git Checkout\r\nWith git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.\r\ngit checkout d\r\n\r\nTo move back to the latest commit, just checkout to the branch\r\ngit checkout main\r\nGit Reset\r\nComparatively, git reset, moves both the HEAD and branch refs to the specified commit. Reset doesn\'t make commits, it just updates a branch to point to a different commit. \r\ngit reset d\r\n\r\nOptions:\r\n--soft - uncommit changes, changes are left staged.\r\n--mixed (default) - uncommit + unstage changes, changes are left in working tree.\r\n--hard - uncommit + unstage + delete changes, nothing left.\r\nGit Revert\r\nGit revert simply creates a new commit that is the opposite of an existing commit. It leaves the files in the same state as if the commit that has been reverted never existed.\r\ngit revert <commit>\r\n', 1, '2021-12-09 14:25:26', '2021-12-09 14:25:26', 'undoing-commits', 'git', 'version', '', '', 7),
(131, 23, 'Undoing Changes', '<h3 id=\"bkmrk-git-checkout\">Git Checkout</h3>\r\n<p id=\"bkmrk-with%C2%A0git-checkout%2C-t\">With git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.</p>\r\n<pre id=\"bkmrk-git-checkout-d\"><code class=\"language-\">git checkout d</code></pre>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051052100.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051052100.png\" alt=\"image-1639051052100.png\" width=\"440\" height=\"175\"></a></p>\r\n<p id=\"bkmrk-to-move-back-to-the-\">To move back to the latest commit, just checkout to the branch</p>\r\n<pre id=\"bkmrk-git-checkout-main\"><code class=\"language-\">git checkout main</code></pre>\r\n<h3 id=\"bkmrk-git-reset\">Git Reset</h3>\r\n<p id=\"bkmrk-comparatively%2C%C2%A0git-r\">Comparatively, git reset, moves both the HEAD and branch refs to the specified commit. Reset doesn\'t make commits, it just updates a branch to point to a different commit. </p>\r\n<pre id=\"bkmrk-git-reset-d\"><code class=\"language-\">git reset d</code></pre>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051143108.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051143108.png\" alt=\"image-1639051143108.png\" width=\"354\" height=\"188\"></a></p>\r\n<p id=\"bkmrk-options%3A\"><strong>Options:</strong></p>\r\n<ul id=\"bkmrk---soft---uncommit-ch\"><li><strong><code>--soft</code> </strong>- <strong>uncommit</strong> changes, changes are left staged.</li>\r\n<li><strong><code>--mixed (default)</code> </strong>- <strong>uncommit + unstage</strong> changes, changes are left in working tree.</li>\r\n<li><strong><code>--hard</code> </strong>- <strong>uncommit + unstage + delete</strong> changes, nothing left.</li>\r\n</ul><h3 id=\"bkmrk-git-revert\">Git Revert</h3>\r\n<p id=\"bkmrk-git-revert-simply-cr\">Git revert simply creates a new commit that is the opposite of an existing commit. It leaves the files in the same state as if the commit that has been reverted never existed.</p>\r\n<pre id=\"bkmrk-git-revert-%3Ccommit%3E\"><code class=\"language-\">git revert &lt;commit&gt;</code></pre>\r\n<p id=\"bkmrk--1\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639059919753.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639059919753.png\" alt=\"image-1639059919753.png\" width=\"428\" height=\"128\"></a></p>', 'Git Checkout\r\nWith git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.\r\ngit checkout d\r\n\r\nTo move back to the latest commit, just checkout to the branch\r\ngit checkout main\r\nGit Reset\r\nComparatively, git reset, moves both the HEAD and branch refs to the specified commit. Reset doesn\'t make commits, it just updates a branch to point to a different commit. \r\ngit reset d\r\n\r\nOptions:\r\n--soft - uncommit changes, changes are left staged.\r\n--mixed (default) - uncommit + unstage changes, changes are left in working tree.\r\n--hard - uncommit + unstage + delete changes, nothing left.\r\nGit Revert\r\nGit revert simply creates a new commit that is the opposite of an existing commit. It leaves the files in the same state as if the commit that has been reverted never existed.\r\ngit revert <commit>\r\n', 1, '2021-12-09 14:25:48', '2021-12-09 14:25:48', 'undoing-changes', 'git', 'version', '', '', 8),
(132, 23, 'Reset vs Revert', '<h3 id=\"bkmrk-git-checkout\">Git Checkout</h3>\r\n<p id=\"bkmrk-with%C2%A0git-checkout%2C-t\">With git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.</p>\r\n<pre id=\"bkmrk-git-checkout-d\"><code class=\"language-\">git checkout d</code></pre>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051052100.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051052100.png\" alt=\"image-1639051052100.png\" width=\"440\" height=\"175\"></a></p>\r\n<p id=\"bkmrk-to-move-back-to-the-\">To move back to the latest commit, just checkout to the branch</p>\r\n<pre id=\"bkmrk-git-checkout-main\"><code class=\"language-\">git checkout main</code></pre>\r\n<h3 id=\"bkmrk-git-reset\">Git Reset</h3>\r\n<p id=\"bkmrk-comparatively%2C%C2%A0git-r\">Comparatively, git reset, moves both the HEAD and branch refs to the specified commit. Reset doesn\'t make commits, it just updates a branch to point to a different commit. </p>\r\n<pre id=\"bkmrk-git-reset-d\"><code class=\"language-\">git reset d</code></pre>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639051143108.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639051143108.png\" alt=\"image-1639051143108.png\" width=\"354\" height=\"188\"></a></p>\r\n<p id=\"bkmrk-options%3A\"><strong>Options:</strong></p>\r\n<ul id=\"bkmrk---soft---uncommit-ch\"><li><strong><code>--soft</code> </strong>- <strong>uncommit</strong> changes, changes are left staged.</li>\r\n<li><strong><code>--mixed (default)</code> </strong>- <strong>uncommit + unstage</strong> changes, changes are left in working tree.</li>\r\n<li><strong><code>--hard</code> </strong>- <strong>uncommit + unstage + delete</strong> changes, nothing left.</li>\r\n</ul><h3 id=\"bkmrk-git-revert\">Git Revert</h3>\r\n<p id=\"bkmrk-git-revert-simply-cr\">Git revert simply creates a new commit that is the opposite of an existing commit. It leaves the files in the same state as if the commit that has been reverted never existed.</p>\r\n<pre id=\"bkmrk-git-revert-%3Ccommit%3E\"><code class=\"language-\">git revert &lt;commit&gt;</code></pre>\r\n<p id=\"bkmrk--1\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639059919753.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639059919753.png\" alt=\"image-1639059919753.png\" width=\"428\" height=\"128\"></a></p>', 'Git Checkout\r\nWith git checkout, the main ref is still pointing to d. The HEAD ref has been moved, and now points at commit b. The repo is now in a \'detached HEAD\' state.\r\ngit checkout d\r\n\r\nTo move back to the latest commit, just checkout to the branch\r\ngit checkout main\r\nGit Reset\r\nComparatively, git reset, moves both the HEAD and branch refs to the specified commit. Reset doesn\'t make commits, it just updates a branch to point to a different commit. \r\ngit reset d\r\n\r\nOptions:\r\n--soft - uncommit changes, changes are left staged.\r\n--mixed (default) - uncommit + unstage changes, changes are left in working tree.\r\n--hard - uncommit + unstage + delete changes, nothing left.\r\nGit Revert\r\nGit revert simply creates a new commit that is the opposite of an existing commit. It leaves the files in the same state as if the commit that has been reverted never existed.\r\ngit revert <commit>\r\n', 1, '2021-12-09 14:26:10', '2021-12-09 14:26:10', 'reset-vs-revert', 'git', 'version', '', '', 9),
(134, 21, 'Merge vs Rebase', '<p id=\"bkmrk-there-are-two-option\">There are two options for integrating your feature into the main branch:</p>\r\n<ul id=\"bkmrk-merging-directly.-re\"><li>merging directly.</li>\r\n<li>rebasing and then merging.</li>\r\n</ul><h3 id=\"bkmrk-how-does-git-merge-w\">How does Git Merge work?</h3>\r\n<p id=\"bkmrk-git-merge%C2%A0will-combi\">Git merge will combine multiple sequences of commits into one unified history. </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639058986917.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639058986917.png\" alt=\"image-1639058986917.png\" width=\"406\" height=\"209\"></a></p>\r\n<p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-otherbranch-%7C-x-%3C--y\"><code class=\"language-\">                    otherbranch\r\n                        |\r\n              X &lt;- Y &lt;- Z\r\n             /\r\n  A &lt;- B &lt;- C &lt;- D &lt;- E &lt;- F &lt;- G\r\n                                |\r\n                              master\r\n                                |\r\n                              HEAD</code></pre>\r\n<p id=\"bkmrk-you-are-on%C2%A0master%C2%A0an\">You are on <code>master</code> and you said <code>git merge otherbranch</code>. Then:</p>\r\n<ol id=\"bkmrk-git-first-figures-ou\"><li>\r\n<p>Git first figures out that the merge base is commit <code>C</code>.</p>\r\n</li>\r\n<li>\r\n<p>Git then calculates the diff from <code>C</code> to <code>G</code> and the diff from <code>C</code> to <code>Z</code>.</p>\r\n</li>\r\n<li>\r\n<p>Git then applies both of those diffs to <code>C</code> simultaneously — and commits the result on <code>master</code>. That is the merge commit.</p>\r\n</li>\r\n</ol><h4 id=\"bkmrk-squash-merge\">Squash Merge</h4>\r\n<p id=\"bkmrk-a-squash-merge---squ\">A squash merge <code>--squash</code> is a merge option in Git that will produce a merge commit with only one parent. The files are merged exactly as they would be in a normal merge, but the commit metadata is changed to show only one of the parent commits.</p>\r\n<h3 id=\"bkmrk-how-does-git-rebase-\">How does Git Rebase work?</h3>\r\n<p id=\"bkmrk-rebasing-is-the-proc\">Rebasing is the process of moving or combining a sequence of commits to a new base commit. Rebase compresses all the changes into a single “patch.” Then it integrates the patch onto the target branch.</p>\r\n<p id=\"bkmrk-unlike-merging%2C-reba\">Unlike merging, rebasing flattens the history because it transfers the completed work from one branch to another. In the process, unwanted history is eliminated.</p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639043929091.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639043929091.png\" alt=\"image-1639043929091.png\" width=\"289\" height=\"150\"></a></p>', 'There are two options for integrating your feature into the main branch:\r\nmerging directly.\r\nrebasing and then merging.\r\nHow does Git Merge work?\r\nGit merge will combine multiple sequences of commits into one unified history. \r\n\r\nExample:\r\n                    otherbranch\r\n                        |\r\n              X <- Y <- Z\r\n             /\r\n  A <- B <- C <- D <- E <- F <- G\r\n                                |\r\n                              master\r\n                                |\r\n                              HEAD\r\nYou are on master and you said git merge otherbranch. Then:\r\n\r\nGit first figures out that the merge base is commit C.\r\n\r\n\r\nGit then calculates the diff from C to G and the diff from C to Z.\r\n\r\n\r\nGit then applies both of those diffs to C simultaneously — and commits the result on master. That is the merge commit.\r\n\r\nSquash Merge\r\nA squash merge --squash is a merge option in Git that will produce a merge commit with only one parent. The files are merged exactly as they would be in a normal merge, but the commit metadata is changed to show only one of the parent commits.\r\nHow does Git Rebase work?\r\nRebasing is the process of moving or combining a sequence of commits to a new base commit. Rebase compresses all the changes into a single “patch.” Then it integrates the patch onto the target branch.\r\nUnlike merging, rebasing flattens the history because it transfers the completed work from one branch to another. In the process, unwanted history is eliminated.\r\n \r\n', 1, '2021-12-09 14:28:11', '2021-12-09 14:28:11', 'merge-vs-rebase', 'git', 'version', '', '', 6),
(136, 13, 'Common Linux Commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\"><li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul><li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul></li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n</ul><h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\"><li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul><li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul></li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updated</strong></li>\r\n<li><strong>awk </strong>- Scripting language used for manipulating data\r\n<ul id=\"bkmrk-awk-%27%7Bprint-%241%2C%244%7D%27%C2%A0\"><li><strong>awk \'{print $1,$4}\' </strong>- Get first and 4th word</li>\r\n</ul></li>\r\n<li><strong>uniq </strong>- Filters or counts out the repeated lines in a file\r\n<ul id=\"bkmrk-uniq--c%C2%A0--counts-all\"><li><strong>uniq -c </strong>- Counts all unique values</li>\r\n</ul></li>\r\n<li><strong>sort </strong>- Sort a file, arranging the records in a particular order\r\n<ul id=\"bkmrk-sort--r%C2%A0--sorts-in-r\"><li><strong>sort -r </strong>- Sorts in reverse order</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\"><li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul><li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to a file</p>\r\n<p><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\nFile\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\nzcat - Read a compressed file\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updated\r\nawk - Scripting language used for manipulating data\r\nawk \'{print $1,$4}\' - Get first and 4th word\r\n\r\nuniq - Filters or counts out the repeated lines in a file\r\nuniq -c - Counts all unique values\r\n\r\nsort - Sort a file, arranging the records in a particular order\r\nsort -r - Sorts in reverse order\r\n\r\nPiping\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\nls -al > file - Redirect output to a file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 1, '2021-12-09 16:49:26', '2021-12-09 16:49:26', 'common-linux-commands', 'linux', 'version', '', '', 8);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(138, 26, 'Productivity Tools', '<h3 id=\"bkmrk-what-tools-do-i-use-\">What tools do I use for productivity?</h3>\r\n<ul id=\"bkmrk-lightshot%C2%A0--tool-for\"><li><strong>Lightshot </strong>- Tool for taking and editing screenshots.</li>\r\n<li><strong>Spectacle </strong>- Window resizing tool for shortcut support.</li>\r\n<li><strong>Copyless </strong>- Tool for managing your clipboard history.</li>\r\n</ul><h3 id=\"bkmrk-what-terminal-config\">What terminal configuration I use?</h3>', 'What tools do I use for productivity?\r\nLightshot - Tool for taking and editing screenshots.\r\nSpectacle - Window resizing tool for shortcut support.\r\nCopyless - Tool for managing your clipboard history.\r\nWhat terminal configuration I use?', 1, '2021-12-11 20:01:19', '2021-12-11 20:01:19', 'productivity-tools', 'development-environment', 'version', '', 'Initial publish', 1),
(140, 26, 'Productivity Tools', '<h4 id=\"bkmrk-what-tools-do-i-use-\">What tools do I use for productivity?</h4>\r\n<ul id=\"bkmrk-lightshot%C2%A0--tool-for\"><li><strong>Lightshot </strong>- Tool for taking and editing screenshots.</li>\r\n<li><strong>Spectacle </strong>- Window resizing tool for shortcut support.</li>\r\n<li><strong>Copyless </strong>- Tool for managing your clipboard history.</li>\r\n</ul><h4 id=\"bkmrk-what-terminal-config\">What terminal configuration I use?</h4>\r\n<p id=\"bkmrk-i-use-iterm-terminal\">I use <strong>iTerm</strong> terminal together with <strong>Oh My Zsh. </strong>I like zsh because it is more customizable than bash and supports more plugins.</p>\r\n<p id=\"bkmrk-what-plugins-do-i-us\"><strong>What plugins do I use?</strong></p>\r\n<ul id=\"bkmrk-zsh-autosuggestions-\"><li>\r\n<p class=\" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal\">zsh-autosuggestions</p>\r\n</li>\r\n<li>copyfile</li>\r\n<li>copydir</li>\r\n</ul>', 'What tools do I use for productivity?\r\nLightshot - Tool for taking and editing screenshots.\r\nSpectacle - Window resizing tool for shortcut support.\r\nCopyless - Tool for managing your clipboard history.\r\nWhat terminal configuration I use?\r\nI use iTerm terminal together with Oh My Zsh. I like zsh because it is more customizable than bash and supports more plugins.\r\nWhat plugins do I use?\r\n\r\nzsh-autosuggestions\r\n\r\ncopyfile\r\ncopydir\r\n', 1, '2021-12-11 20:29:55', '2021-12-11 20:29:55', 'productivity-tools', 'misc', 'version', '', '', 2),
(141, 26, 'Productivity Tools', '<h4 id=\"bkmrk-what-tools-do-i-use-\">What tools do I use for productivity?</h4>\r\n<ul id=\"bkmrk-lightshot%C2%A0--tool-for\"><li><strong>Lightshot </strong>- Tool for taking and editing screenshots.</li>\r\n<li><strong>Spectacle </strong>- Window resizing tool for shortcut support.</li>\r\n<li><strong>Copyless </strong>- Tool for managing your clipboard history.</li>\r\n<li><strong>CleanMyMac </strong>- Tool for cleaning junk files and managing start-up apps.</li>\r\n</ul><h4 id=\"bkmrk-what-terminal-config\">What terminal configuration I use?</h4>\r\n<p id=\"bkmrk-i-use-iterm-terminal\">I use <strong>iTerm</strong> terminal together with <strong>Oh My Zsh. </strong>I like zsh because it is more customizable than bash and supports more plugins.</p>\r\n<p id=\"bkmrk-what-plugins-do-i-us\"><strong>What plugins do I use?</strong></p>\r\n<ul id=\"bkmrk-zsh-autosuggestions-\"><li>\r\n<p class=\" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal\">zsh-autosuggestions</p>\r\n</li>\r\n<li>copyfile</li>\r\n<li>copydir</li>\r\n</ul>', 'What tools do I use for productivity?\r\nLightshot - Tool for taking and editing screenshots.\r\nSpectacle - Window resizing tool for shortcut support.\r\nCopyless - Tool for managing your clipboard history.\r\nCleanMyMac - Tool for cleaning junk files and managing start-up apps.\r\nWhat terminal configuration I use?\r\nI use iTerm terminal together with Oh My Zsh. I like zsh because it is more customizable than bash and supports more plugins.\r\nWhat plugins do I use?\r\n\r\nzsh-autosuggestions\r\n\r\ncopyfile\r\ncopydir\r\n', 1, '2021-12-11 20:42:18', '2021-12-11 20:42:18', 'productivity-tools', 'misc', 'version', '', '', 3),
(142, 26, 'Productivity Tools', '<h4 id=\"bkmrk-what-tools-do-i-use-\">What tools do I use for productivity?</h4>\r\n<ul id=\"bkmrk-lightshot%C2%A0--tool-for\"><li><strong>Lightshot </strong>- Tool for taking and editing screenshots.</li>\r\n<li><strong>Spectacle </strong>- Window resizing tool for shortcut support.</li>\r\n<li><strong>Copyless </strong>- Tool for managing your clipboard history.</li>\r\n<li><strong>CleanMyMac </strong>- Tool for cleaning junk files and managing startup apps.</li>\r\n</ul><h4 id=\"bkmrk-what-terminal-config\">What terminal configuration I use?</h4>\r\n<p id=\"bkmrk-i-use-iterm-terminal\">I use <strong>iTerm</strong> terminal together with <strong>Oh My Zsh. </strong>I like zsh because it is more customizable than bash and supports more plugins.</p>\r\n<p id=\"bkmrk-what-plugins-do-i-us\"><strong>What plugins do I use?</strong></p>\r\n<ul id=\"bkmrk-zsh-autosuggestions-\"><li>\r\n<p class=\" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal\">zsh-autosuggestions</p>\r\n</li>\r\n<li>copyfile</li>\r\n<li>copydir</li>\r\n</ul>', 'What tools do I use for productivity?\r\nLightshot - Tool for taking and editing screenshots.\r\nSpectacle - Window resizing tool for shortcut support.\r\nCopyless - Tool for managing your clipboard history.\r\nCleanMyMac - Tool for cleaning junk files and managing startup apps.\r\nWhat terminal configuration I use?\r\nI use iTerm terminal together with Oh My Zsh. I like zsh because it is more customizable than bash and supports more plugins.\r\nWhat plugins do I use?\r\n\r\nzsh-autosuggestions\r\n\r\ncopyfile\r\ncopydir\r\n', 1, '2021-12-11 20:42:54', '2021-12-11 20:42:54', 'productivity-tools', 'misc', 'version', '', '', 4),
(144, 26, 'Productivity Tools', '<h4 id=\"bkmrk-what-tools-do-i-use-\">What tools do I use for productivity?</h4>\r\n<ul id=\"bkmrk-lightshot%C2%A0--tool-for\"><li><strong>Lightshot </strong>- Tool for taking and editing screenshots.</li>\r\n<li><strong>Spectacle </strong>- Window resizing tool for shortcut support.</li>\r\n<li><strong>Copyless </strong>- Tool for managing your clipboard history.</li>\r\n<li><strong>CleanMyMac </strong>- Tool for cleaning junk files and managing startup apps.</li>\r\n<li><strong>MySQL Workbench </strong>- Database IDE.</li>\r\n<li><strong>PHPStorm </strong>- Development IDE.</li>\r\n</ul><h4 id=\"bkmrk-what-terminal-config\">What terminal configuration I use?</h4>\r\n<p id=\"bkmrk-i-use-iterm-terminal\">I use <strong>iTerm</strong> terminal together with <strong>Oh My Zsh. </strong>I like zsh because it is more customizable than bash and supports more plugins.</p>\r\n<p id=\"bkmrk-what-plugins-do-i-us\"><strong>What plugins do I use?</strong></p>\r\n<ul id=\"bkmrk-zsh-autosuggestions-\"><li>\r\n<p class=\" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal\">zsh-autosuggestions</p>\r\n</li>\r\n<li>copyfile</li>\r\n<li>copydir</li>\r\n</ul>', 'What tools do I use for productivity?\r\nLightshot - Tool for taking and editing screenshots.\r\nSpectacle - Window resizing tool for shortcut support.\r\nCopyless - Tool for managing your clipboard history.\r\nCleanMyMac - Tool for cleaning junk files and managing startup apps.\r\nMySQL Workbench - Database IDE.\r\nPHPStorm - Development IDE.\r\nWhat terminal configuration I use?\r\nI use iTerm terminal together with Oh My Zsh. I like zsh because it is more customizable than bash and supports more plugins.\r\nWhat plugins do I use?\r\n\r\nzsh-autosuggestions\r\n\r\ncopyfile\r\ncopydir\r\n', 1, '2021-12-11 20:58:29', '2021-12-11 20:58:29', 'productivity-tools', 'misc', 'version', '', '', 5),
(145, 26, 'Productivity Tools', '<h4 id=\"bkmrk-what-tools-do-i-use-\">What tools do I use for productivity?</h4>\r\n<ul id=\"bkmrk-lightshot%C2%A0--tool-for\"><li><strong>Lightshot </strong>- Tool for taking and editing screenshots.</li>\r\n<li><strong>Spectacle </strong>- Window resizing tool for shortcut support.</li>\r\n<li><strong>Copyless </strong>- Tool for managing your clipboard history.</li>\r\n<li><strong>CleanMyMac </strong>- Tool for cleaning junk files and managing startup apps.</li>\r\n<li><strong>MySQL Workbench </strong>- Database IDE.</li>\r\n<li><strong>PHPStorm </strong>- Development IDE.</li>\r\n<li><strong>Brave </strong>- Internet Browser</li>\r\n</ul><h4 id=\"bkmrk-what-terminal-config\">What terminal configuration I use?</h4>\r\n<p id=\"bkmrk-i-use-iterm-terminal\">I use <strong>iTerm</strong> terminal together with <strong>Oh My Zsh. </strong>I like zsh because it is more customizable than bash and supports more plugins.</p>\r\n<p id=\"bkmrk-what-plugins-do-i-us\"><strong>What plugins do I use?</strong></p>\r\n<ul id=\"bkmrk-zsh-autosuggestions-\"><li>\r\n<p class=\" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal\">zsh-autosuggestions</p>\r\n</li>\r\n<li>copyfile</li>\r\n<li>copydir</li>\r\n</ul>', 'What tools do I use for productivity?\r\nLightshot - Tool for taking and editing screenshots.\r\nSpectacle - Window resizing tool for shortcut support.\r\nCopyless - Tool for managing your clipboard history.\r\nCleanMyMac - Tool for cleaning junk files and managing startup apps.\r\nMySQL Workbench - Database IDE.\r\nPHPStorm - Development IDE.\r\nBrave - Internet Browser\r\nWhat terminal configuration I use?\r\nI use iTerm terminal together with Oh My Zsh. I like zsh because it is more customizable than bash and supports more plugins.\r\nWhat plugins do I use?\r\n\r\nzsh-autosuggestions\r\n\r\ncopyfile\r\ncopydir\r\n', 1, '2021-12-11 21:06:18', '2021-12-11 21:06:18', 'productivity-tools', 'misc', 'version', '', '', 6),
(146, 26, 'Productivity Tools', '<h4 id=\"bkmrk-what-tools-do-i-use-\">What tools do I use for productivity?</h4>\r\n<ul id=\"bkmrk-lightshot%C2%A0--tool-for\"><li><strong>Lightshot </strong>- Tool for taking and editing screenshots.</li>\r\n<li><strong>Spectacle </strong>- Window resizing tool for shortcut support.</li>\r\n<li><strong>Copyless </strong>- Tool for managing your clipboard history.</li>\r\n<li><strong>CleanMyMac </strong>- Tool for cleaning junk files and managing startup apps.</li>\r\n<li><strong>MySQL Workbench </strong>- Database IDE.</li>\r\n<li><strong>PHPStorm </strong>- Development IDE.</li>\r\n<li><strong>Brave </strong>- Internet Browser</li>\r\n</ul><h4 id=\"bkmrk-what-terminal-config\">What terminal configuration I use?</h4>\r\n<p id=\"bkmrk-i-use-iterm-terminal\">I use <strong>iTerm</strong> terminal together with <strong>Oh My Zsh. </strong>I like zsh because it is more customizable than bash and supports more plugins.</p>\r\n<p id=\"bkmrk-what-plugins-do-i-us\"><strong>What zsh plugins do I use?</strong></p>\r\n<ul id=\"bkmrk-zsh-autosuggestions-\"><li>\r\n<p class=\" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal\">zsh-autosuggestions</p>\r\n</li>\r\n</ul>', 'What tools do I use for productivity?\r\nLightshot - Tool for taking and editing screenshots.\r\nSpectacle - Window resizing tool for shortcut support.\r\nCopyless - Tool for managing your clipboard history.\r\nCleanMyMac - Tool for cleaning junk files and managing startup apps.\r\nMySQL Workbench - Database IDE.\r\nPHPStorm - Development IDE.\r\nBrave - Internet Browser\r\nWhat terminal configuration I use?\r\nI use iTerm terminal together with Oh My Zsh. I like zsh because it is more customizable than bash and supports more plugins.\r\nWhat zsh plugins do I use?\r\n\r\nzsh-autosuggestions\r\n\r\n', 1, '2021-12-12 08:37:39', '2021-12-12 08:37:39', 'productivity-tools', 'misc', 'version', '', '', 7),
(147, 26, 'Productivity Tools', '<h4 id=\"bkmrk-what-tools-do-i-use-\">What tools do I use for productivity?</h4>\r\n<ul id=\"bkmrk-lightshot%C2%A0--tool-for\"><li><strong>Lightshot </strong>- Tool for taking and editing screenshots.</li>\r\n<li><strong>Spectacle </strong>- Window resizing tool for shortcut support.</li>\r\n<li><strong>Copyless </strong>- Tool for managing your clipboard history.</li>\r\n<li><strong>CleanMyMac </strong>- Tool for cleaning junk files and managing startup apps.</li>\r\n<li><strong>MySQL Workbench </strong>- Database IDE.</li>\r\n<li><strong>PHPStorm </strong>- Development IDE.</li>\r\n<li><strong>Brave </strong>- Internet Browser</li>\r\n</ul><h4 id=\"bkmrk-what-terminal-config\">What terminal configuration I use?</h4>\r\n<p id=\"bkmrk-i-use-iterm-terminal\">I use <strong>iTerm</strong> terminal together with <strong>Oh My Zsh. </strong>I like zsh because it is more customisable than bash and supports more plugins.</p>\r\n<p id=\"bkmrk-what-plugins-do-i-us\"><strong>What zsh plugins do I use?</strong></p>\r\n<ul id=\"bkmrk-zsh-autosuggestions-\"><li>\r\n<p class=\" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal\">zsh-autosuggestions</p>\r\n</li>\r\n</ul>', 'What tools do I use for productivity?\r\nLightshot - Tool for taking and editing screenshots.\r\nSpectacle - Window resizing tool for shortcut support.\r\nCopyless - Tool for managing your clipboard history.\r\nCleanMyMac - Tool for cleaning junk files and managing startup apps.\r\nMySQL Workbench - Database IDE.\r\nPHPStorm - Development IDE.\r\nBrave - Internet Browser\r\nWhat terminal configuration I use?\r\nI use iTerm terminal together with Oh My Zsh. I like zsh because it is more customisable than bash and supports more plugins.\r\nWhat zsh plugins do I use?\r\n\r\nzsh-autosuggestions\r\n\r\n', 1, '2021-12-12 08:37:44', '2021-12-12 08:37:44', 'productivity-tools', 'misc', 'version', '', '', 8),
(148, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><p id=\"bkmrk-user%40host%7E%3A%24echo%24%28se\"><textarea style=\"display: none;\">user@host~:$echo$(seq 1 5)\r\n1 2 3 4 5\r\n\r\n# Or, to create 5 new directories:\r\nuser@host~:$ mkdir$(seq 1 5)\r\n</textarea></p>\r\n<div id=\"bkmrk-xxxxxxxxxx-%C2%A0-1-user%40\">\r\n<div><textarea style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; min-height: 1em; outline: none;\" tabindex=\"0\" spellcheck=\"false\" readonly></textarea></div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<pre class=\"CodeMirror-line-like\">xxxxxxxxxx</pre>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div> </div>\r\n</div>\r\n<div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>1</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">user@host~:$echo$(seq 1 5)</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>2</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">1 2 3 4 5</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>3</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">​</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>4</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\"># Or, to create 5 new directories:</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>5</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">user@host~:$ mkdir$(seq 1 5)</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>6</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">​</span></pre>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<div></div>\r\n<div>\r\n<div></div>\r\n</div>\r\n</div>\r\n</div>\r\n<ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><p id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><textarea style=\"display: none;\">dest=\"/backups\"\r\n\r\necho \"$dest\"\r\n# ****OR\r\nprintf \"$dest\"\r\n# ****OR\r\necho \"${dest}\"\r\n</textarea></p>\r\n<div id=\"bkmrk-xxxxxxxxxx-%C2%A0-1-dest%3D\">\r\n<div><textarea style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; min-height: 1em; outline: none;\" tabindex=\"0\" spellcheck=\"false\" readonly></textarea></div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<pre class=\"CodeMirror-line-like\">xxxxxxxxxx</pre>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div> </div>\r\n</div>\r\n<div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>1</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">dest=\"/backups\"</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>2</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">​</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>3</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">echo \"$dest\"</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>4</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\"># ****OR</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>5</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">printf \"$dest\"</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>6</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\"># ****OR</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>7</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">echo \"${dest}\"</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>8</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">​</span></pre>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<div></div>\r\n<div>\r\n<div></div>\r\n</div>\r\n</div>\r\n</div>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---arithmetic-\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n</ul>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\nuser@host~:$echo$(seq 1 5)\r\n1 2 3 4 5\r\n\r\n# Or, to create 5 new directories:\r\nuser@host~:$ mkdir$(seq 1 5)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nxxxxxxxxxx\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n1\r\n\r\nuser@host~:$echo$(seq 1 5)\r\n\r\n\r\n\r\n2\r\n\r\n1 2 3 4 5\r\n\r\n\r\n\r\n3\r\n\r\n​\r\n\r\n\r\n\r\n4\r\n\r\n# Or, to create 5 new directories:\r\n\r\n\r\n\r\n5\r\n\r\nuser@host~:$ mkdir$(seq 1 5)\r\n\r\n\r\n\r\n6\r\n\r\n​\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho \"$dest\"\r\n# ****OR\r\nprintf \"$dest\"\r\n# ****OR\r\necho \"${dest}\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nxxxxxxxxxx\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n1\r\n\r\ndest=\"/backups\"\r\n\r\n\r\n\r\n2\r\n\r\n​\r\n\r\n\r\n\r\n3\r\n\r\necho \"$dest\"\r\n\r\n\r\n\r\n4\r\n\r\n# ****OR\r\n\r\n\r\n\r\n5\r\n\r\nprintf \"$dest\"\r\n\r\n\r\n\r\n6\r\n\r\n# ****OR\r\n\r\n\r\n\r\n7\r\n\r\necho \"${dest}\"\r\n\r\n\r\n\r\n8\r\n\r\n​\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\n', 1, '2021-12-13 19:06:38', '2021-12-13 19:06:38', 'shell-scripting', 'linux', 'version', '', 'Initial publish', 1),
(150, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-user%40host%7E%3A%24echo%24%28se\"><code class=\"language-shell\">user@host~:$echo$(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nuser@host~:$ mkdir$(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li>$<strong>(( ))</strong> - ****Arithmetic Expansion, do basic calculations.</li>\r\n</ul>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\nuser@host~:$echo$(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nuser@host~:$ mkdir$(seq 1 5)\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\n$(( )) - ****Arithmetic Expansion, do basic calculations.\r\n', 1, '2021-12-13 19:07:46', '2021-12-13 19:07:46', 'shell-scripting', 'linux', 'version', '', '', 2),
(152, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-user%40host%7E%3A%24echo%24%28se\"><code class=\"language-shell\">user@host~:$echo$(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nuser@host~:$ mkdir$(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n</ul>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\nuser@host~:$echo$(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nuser@host~:$ mkdir$(seq 1 5)\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\n', 1, '2021-12-13 19:08:42', '2021-12-13 19:08:42', 'shell-scripting', 'linux', 'version', '', '', 3),
(153, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-user%40host%7E%3A%24echo%24%28se\"><code class=\"language-shell\">user@host~:$echo$(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nuser@host~:$ mkdir$(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n</ul>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\nuser@host~:$echo$(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nuser@host~:$ mkdir$(seq 1 5)\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\n', 1, '2021-12-13 19:08:46', '2021-12-13 19:08:46', 'shell-scripting', 'linux', 'version', '', '', 4),
(155, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-echo-%24%28seq-1-5%29-1-2-\"><code class=\"language-shell\">echo $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n</ul>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\necho $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\n', 1, '2021-12-13 19:13:32', '2021-12-13 19:13:32', 'shell-scripting', 'linux', 'version', '', '', 5),
(157, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-echo-%24%28seq-1-5%29-1-2-\"><code class=\"language-shell\">echo $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n</ul><h4 id=\"bkmrk-functions\">Functions</h4>\r\n<pre id=\"bkmrk-sum%3D10-%23-global-vari\"><code class=\"language-shell\">sum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7</code></pre>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\necho $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\nFunctions\r\nsum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7', 1, '2021-12-14 08:53:31', '2021-12-14 08:53:31', 'shell-scripting', 'linux', 'version', '', '', 6),
(159, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-echo-%24%28seq-1-5%29-1-2-\"><code class=\"language-shell\">echo $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n</ul><h4 id=\"bkmrk-functions\">Functions</h4>\r\n<pre id=\"bkmrk-sum%3D10-%23-global-vari\"><code class=\"language-shell\">sum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7</code></pre>\r\n<div data-ved=\"2ahUKEwjqqPbO9eL0AhWoSvEDHVHfC3MQ7NUEegQIHBAD\" id=\"bkmrk-conditional-statemen\">\r\n<div>\r\n<div data-hveid=\"CBwQBA\" data-ved=\"2ahUKEwjqqPbO9eL0AhWoSvEDHVHfC3MQu04oAHoECBwQBA\">\r\n<div>\r\n<div data-md=\"61\">\r\n<div data-attrid=\"wa:/description\" aria-level=\"3\" data-hveid=\"CBgQAA\"><span class=\"ILfuVd\"><span class=\"hgKElc\">Conditional statements</span></span></div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\necho $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\nFunctions\r\nsum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7\r\n\r\n\r\n\r\n\r\n\r\nConditional statements\r\n\r\n\r\n\r\n\r\n', 1, '2021-12-14 08:55:54', '2021-12-14 08:55:54', 'shell-scripting', 'linux', 'version', '', '', 7),
(161, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-echo-%24%28seq-1-5%29-1-2-\"><code class=\"language-shell\">echo $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n</ul><h4 id=\"bkmrk-functions\">Functions</h4>\r\n<pre id=\"bkmrk-sum%3D10-%23-global-vari\"><code class=\"language-shell\">sum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7</code></pre>\r\n<h4 id=\"bkmrk-conditional-statemen\">Conditional Statements</h4>\r\n<p id=\"bkmrk-%C2%A0\"> </p>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\necho $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\nFunctions\r\nsum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7\r\nConditional Statements\r\n ', 1, '2021-12-14 09:36:21', '2021-12-14 09:36:21', 'shell-scripting', 'linux', 'version', '', '', 8),
(163, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-echo-%24%28seq-1-5%29-1-2-\"><code class=\"language-shell\">echo $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n<li><strong>[ ] </strong>- Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1.\r\n<ul id=\"bkmrk-%5B--d-%22%2Fpath%2Fto%2Fdir%22-\"><li>\r\n<p class=\"de1\"><span class=\"br0\">[</span> <span class=\"re5\">-d</span> <span class=\"st0\">\"/path/to/dir\"</span> <span class=\"br0\">]</span></p>\r\n</li>\r\n</ul></li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639474795035.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639474795035.png\" alt=\"image-1639474795035.png\" width=\"320\" height=\"734\"></a></p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<h4 id=\"bkmrk-functions\">Functions</h4>\r\n<pre id=\"bkmrk-sum%3D10-%23-global-vari\"><code class=\"language-shell\">sum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7</code></pre>\r\n<h4 id=\"bkmrk-conditional-statemen\">Conditional Statements</h4>\r\n<pre id=\"bkmrk-read-inputvalue-%23-ge\"><code class=\"language-shell\">read inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue &gt; 20)) &amp;&amp; ((inputValue &lt; 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\n\r\nif [ $inputValue -ge 10 ] then\r\n	echo \"Value is greater or equal than 10\"\r\nelif [ $inputValue -eq 20 ] then\r\n	echo \"Value equal to 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi</code></pre>\r\n<p id=\"bkmrk-%C2%A0-0\"> </p>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\necho $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\n[ ] - Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1.\r\n\r\n[ -d \"/path/to/dir\" ]\r\n\r\n\r\n\r\n \r\nFunctions\r\nsum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7\r\nConditional Statements\r\nread inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue > 20)) && ((inputValue < 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\n\r\nif [ $inputValue -ge 10 ] then\r\n	echo \"Value is greater or equal than 10\"\r\nelif [ $inputValue -eq 20 ] then\r\n	echo \"Value equal to 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n ', 1, '2021-12-14 09:48:25', '2021-12-14 09:48:25', 'shell-scripting', 'linux', 'version', '', '', 9),
(165, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-echo-%24%28seq-1-5%29-1-2-\"><code class=\"language-shell\">echo $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n<li><strong>[ ] </strong>- Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1. For example, the conditional test can be used to check if file[s] or directory[s] exist. </li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639474795035.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639474795035.png\" alt=\"image-1639474795035.png\" width=\"320\" height=\"734\"></a></p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<h4 id=\"bkmrk-functions\">Functions</h4>\r\n<pre id=\"bkmrk-sum%3D10-%23-global-vari\"><code class=\"language-shell\">sum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7</code></pre>\r\n<h4 id=\"bkmrk-conditional-statemen\">Conditional Statements</h4>\r\n<pre id=\"bkmrk-read-inputvalue-%23-ge\"><code class=\"language-shell\">read inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue &gt; 20)) &amp;&amp; ((inputValue &lt; 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\n\r\nif [ $inputValue -ge 10 ] then\r\n	echo \"Value is greater or equal than 10\"\r\nelif [ $inputValue -eq 20 ] then\r\n	echo \"Value equal to 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi</code></pre>\r\n<p id=\"bkmrk-%C2%A0-0\"> </p>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\necho $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\n[ ] - Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1. For example, the conditional test can be used to check if file[s] or directory[s] exist. \r\n\r\n \r\nFunctions\r\nsum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7\r\nConditional Statements\r\nread inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue > 20)) && ((inputValue < 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\n\r\nif [ $inputValue -ge 10 ] then\r\n	echo \"Value is greater or equal than 10\"\r\nelif [ $inputValue -eq 20 ] then\r\n	echo \"Value equal to 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n ', 1, '2021-12-14 09:49:44', '2021-12-14 09:49:44', 'shell-scripting', 'linux', 'version', '', '', 10);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(167, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-echo-%24%28seq-1-5%29-1-2-\"><code class=\"language-shell\">echo $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n<li><strong>[ ] </strong>- Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1. For example, the conditional test can be used to check if file[s] or directory[s] exist. </li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639474795035.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639474795035.png\" alt=\"image-1639474795035.png\" width=\"320\" height=\"734\"></a></p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<h4 id=\"bkmrk-functions\">Functions</h4>\r\n<pre id=\"bkmrk-sum%3D10-%23-global-vari\"><code class=\"language-shell\">sum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7</code></pre>\r\n<h4 id=\"bkmrk-conditional-statemen\">Conditional Statements</h4>\r\n<pre id=\"bkmrk-read-inputvalue-%23-ge\"><code class=\"language-shell\">read inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue &gt; 20)) &amp;&amp; ((inputValue &lt; 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\nexampleFile=\"./example_file\"\r\n\r\nif [ -e \"$exampleFile\" ]; then\r\n	echo \"$exampleFile exists\"\r\n    \r\n   if [-f \"$exampleFile\"]; then\r\n   		echo \"$exampleFile is a normal file\"\r\n   fi\r\n   \r\n   if [-r \"$exampleFile\"]; then\r\n   		echo \"$exampleFile is a readable\"\r\n   fi\r\n   \r\n   if [-w \"$exampleFile\"]; then\r\n   		echo \"$exampleFile is a writable\"\r\n   fi\r\nfi</code></pre>\r\n<p id=\"bkmrk-%C2%A0-0\"> </p>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\necho $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\n[ ] - Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1. For example, the conditional test can be used to check if file[s] or directory[s] exist. \r\n\r\n \r\nFunctions\r\nsum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7\r\nConditional Statements\r\nread inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue > 20)) && ((inputValue < 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\nexampleFile=\"./example_file\"\r\n\r\nif [ -e \"$exampleFile\" ]; then\r\n	echo \"$exampleFile exists\"\r\n    \r\n   if [-f \"$exampleFile\"]; then\r\n   		echo \"$exampleFile is a normal file\"\r\n   fi\r\n   \r\n   if [-r \"$exampleFile\"]; then\r\n   		echo \"$exampleFile is a readable\"\r\n   fi\r\n   \r\n   if [-w \"$exampleFile\"]; then\r\n   		echo \"$exampleFile is a writable\"\r\n   fi\r\nfi\r\n ', 1, '2021-12-14 09:58:30', '2021-12-14 09:58:30', 'shell-scripting', 'linux', 'version', '', '', 11),
(168, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-echo-%24%28seq-1-5%29-1-2-\"><code class=\"language-shell\">echo $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---arithmetic-\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n</ul><ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li><strong>[ ] </strong>- Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1. For example, the conditional test can be used to check if file[s] or directory[s] exist. </li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639474795035.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639474795035.png\" alt=\"image-1639474795035.png\" width=\"320\" height=\"734\"></a></p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<h4 id=\"bkmrk-functions\">Functions</h4>\r\n<pre id=\"bkmrk-sum%3D10-%23-global-vari\"><code class=\"language-shell\">sum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7</code></pre>\r\n<h4 id=\"bkmrk-conditional-statemen\">Conditional Statements</h4>\r\n<pre id=\"bkmrk-read-inputvalue-%23-ge\"><code class=\"language-shell\">read inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue &gt; 20)) &amp;&amp; ((inputValue &lt; 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\nexampleFile=\"./example_file\"\r\n\r\nif [ -e \"$exampleFile\" ]; then\r\n	echo \"$exampleFile exists\"\r\n    \r\n   if [-f \"$exampleFile\"]; then\r\n   		echo \"$exampleFile is a normal file\"\r\n   fi\r\n   \r\n   if [-r \"$exampleFile\"]; then\r\n   		echo \"$exampleFile is a readable\"\r\n   fi\r\n   \r\n   if [-w \"$exampleFile\"]; then\r\n   		echo \"$exampleFile is a writable\"\r\n   fi\r\nfi</code></pre>\r\n<p id=\"bkmrk-%C2%A0-0\"> </p>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\necho $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\n[ ] - Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1. For example, the conditional test can be used to check if file[s] or directory[s] exist. \r\n\r\n \r\nFunctions\r\nsum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7\r\nConditional Statements\r\nread inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue > 20)) && ((inputValue < 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\nexampleFile=\"./example_file\"\r\n\r\nif [ -e \"$exampleFile\" ]; then\r\n	echo \"$exampleFile exists\"\r\n    \r\n   if [-f \"$exampleFile\"]; then\r\n   		echo \"$exampleFile is a normal file\"\r\n   fi\r\n   \r\n   if [-r \"$exampleFile\"]; then\r\n   		echo \"$exampleFile is a readable\"\r\n   fi\r\n   \r\n   if [-w \"$exampleFile\"]; then\r\n   		echo \"$exampleFile is a writable\"\r\n   fi\r\nfi\r\n ', 1, '2021-12-14 09:58:54', '2021-12-14 09:58:54', 'shell-scripting', 'linux', 'version', '', '', 12),
(170, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-echo-%24%28seq-1-5%29-1-2-\"><code class=\"language-shell\">echo $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---arithmetic-\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n</ul><ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li><strong>test, [ ], [[ ]] </strong>- Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1. For example, the conditional test can be used to check if file[s] or directory[s] exist. <strong>[[ ]] </strong>is preferred over <strong>test </strong>and <strong>[ ]</strong>, because it is considered safer.</li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639474795035.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639474795035.png\" alt=\"image-1639474795035.png\" width=\"320\" height=\"734\"></a></p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<h4 id=\"bkmrk-functions\">Functions</h4>\r\n<pre id=\"bkmrk-sum%3D10-%23-global-vari\"><code class=\"language-shell\">sum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7</code></pre>\r\n<h4 id=\"bkmrk-conditional-statemen\">Conditional Statements</h4>\r\n<pre id=\"bkmrk-read-inputvalue-%23-ge\"><code class=\"language-shell\">read inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue &gt; 20)) &amp;&amp; ((inputValue &lt; 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\nexampleFile=\"./example_file\"\r\n\r\nif [[ -e $exampleFile ]]; then\r\n	echo \"$exampleFile exists\"\r\n    \r\n   if [[ -f $exampleFile ]]; then\r\n   		echo \"$exampleFile is a normal file\"\r\n   fi\r\n   \r\n   if [[ -r $exampleFile ]]; then\r\n   		echo \"$exampleFile is a readable\"\r\n   fi\r\n   \r\n   if [[ -w $exampleFile ]]; then\r\n   		echo \"$exampleFile is a writable\"\r\n   fi\r\nfi</code></pre>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\necho $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\ntest, [ ], [[ ]] - Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1. For example, the conditional test can be used to check if file[s] or directory[s] exist. [[ ]] is preferred over test and [ ], because it is considered safer.\r\n\r\n \r\nFunctions\r\nsum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7\r\nConditional Statements\r\nread inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue > 20)) && ((inputValue < 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\nexampleFile=\"./example_file\"\r\n\r\nif [[ -e $exampleFile ]]; then\r\n	echo \"$exampleFile exists\"\r\n    \r\n   if [[ -f $exampleFile ]]; then\r\n   		echo \"$exampleFile is a normal file\"\r\n   fi\r\n   \r\n   if [[ -r $exampleFile ]]; then\r\n   		echo \"$exampleFile is a readable\"\r\n   fi\r\n   \r\n   if [[ -w $exampleFile ]]; then\r\n   		echo \"$exampleFile is a writable\"\r\n   fi\r\nfi', 1, '2021-12-14 10:17:59', '2021-12-14 10:17:59', 'shell-scripting', 'linux', 'version', '', '', 13),
(172, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-echo-%24%28seq-1-5%29-1-2-\"><code class=\"language-shell\">echo $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---arithmetic-\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n</ul><ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li><strong>test, [ ], [[ ]] </strong>- Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1. For example, the conditional test can be used to check if file[s] or directory[s] exist. <strong>[[ ]] </strong>is preferred over <strong>test </strong>and <strong>[ ]</strong>, because it is considered safer.</li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639474795035.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639474795035.png\" alt=\"image-1639474795035.png\" width=\"320\" height=\"734\"></a></p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<h4 id=\"bkmrk-functions\">Functions</h4>\r\n<pre id=\"bkmrk-sum%3D10-%23-global-vari\"><code class=\"language-shell\">sum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7</code></pre>\r\n<h4 id=\"bkmrk-conditional-statemen\">Conditional Statements</h4>\r\n<pre id=\"bkmrk-read-inputvalue-%23-ge\"><code class=\"language-shell\">read inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue &gt; 20)) &amp;&amp; ((inputValue &lt; 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\nexampleFile=\"./example_file\"\r\n\r\nif [[ -e $exampleFile ]]; then\r\n	echo \"$exampleFile exists\"\r\n    \r\n   if [[ -f $exampleFile ]]; then\r\n   		echo \"$exampleFile is a normal file\"\r\n   fi\r\n   \r\n   if [[ -r $exampleFile ]]; then\r\n   		echo \"$exampleFile is a readable\"\r\n   fi\r\n   \r\n   if [[ -w $exampleFile ]]; then\r\n   		echo \"$exampleFile is a writable\"\r\n   fi\r\nfi</code></pre>\r\n<h4 id=\"bkmrk-case\">Case</h4>\r\n<pre id=\"bkmrk-read-country-case-%24c\"><code class=\"language-shell\">read COUNTRY\r\n\r\ncase $COUNTRY in\r\n  Lithuania)\r\n    echo -n \"Lithuanian\"\r\n    ;;\r\n  Romania | Moldova)\r\n    echo -n \"Romanian\"\r\n    ;;\r\n  Italy | \"San Marino\" | Switzerland | \"Vatican City\")\r\n    echo -n \"Italian\"\r\n    ;;\r\n  *)\r\n    echo -n \"unknown\"\r\n    ;;\r\nesac</code></pre>\r\n<p id=\"bkmrk-%C2%A0-0\"> </p>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\necho $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\ntest, [ ], [[ ]] - Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1. For example, the conditional test can be used to check if file[s] or directory[s] exist. [[ ]] is preferred over test and [ ], because it is considered safer.\r\n\r\n \r\nFunctions\r\nsum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7\r\nConditional Statements\r\nread inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue > 20)) && ((inputValue < 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\nexampleFile=\"./example_file\"\r\n\r\nif [[ -e $exampleFile ]]; then\r\n	echo \"$exampleFile exists\"\r\n    \r\n   if [[ -f $exampleFile ]]; then\r\n   		echo \"$exampleFile is a normal file\"\r\n   fi\r\n   \r\n   if [[ -r $exampleFile ]]; then\r\n   		echo \"$exampleFile is a readable\"\r\n   fi\r\n   \r\n   if [[ -w $exampleFile ]]; then\r\n   		echo \"$exampleFile is a writable\"\r\n   fi\r\nfi\r\nCase\r\nread COUNTRY\r\n\r\ncase $COUNTRY in\r\n  Lithuania)\r\n    echo -n \"Lithuanian\"\r\n    ;;\r\n  Romania | Moldova)\r\n    echo -n \"Romanian\"\r\n    ;;\r\n  Italy | \"San Marino\" | Switzerland | \"Vatican City\")\r\n    echo -n \"Italian\"\r\n    ;;\r\n  *)\r\n    echo -n \"unknown\"\r\n    ;;\r\nesac\r\n ', 1, '2021-12-14 12:18:26', '2021-12-14 12:18:26', 'shell-scripting', 'linux', 'version', '', '', 14),
(174, 27, 'Shell Scripting', '<p id=\"bkmrk-to-create-a-bash-scr\">To create a bash script, create a plain file without any extension and put <strong>#!/bin/bash</strong> at the beginning of the file.</p>\r\n<h4 id=\"bkmrk-operations\">Operations</h4>\r\n<ul id=\"bkmrk-%24%28-%29---command-subst\"><li><strong>$( )</strong> - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.</li>\r\n</ul><pre id=\"bkmrk-echo-%24%28seq-1-5%29-1-2-\"><code class=\"language-shell\">echo $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---arithmetic-\"><li>$<strong>(( ))</strong> - Arithmetic Expansion, do basic calculations.</li>\r\n</ul><ul id=\"bkmrk-%24%7B-%7D---variable%2Fpara\"><li>\r\n<p><strong>${ }</strong> - Variable/Parameter Substitution. Substitute the value of variable.</p>\r\n</li>\r\n</ul><pre id=\"bkmrk-dest%3D%22%2Fbackups%22-echo\"><code class=\"language-shell\">dest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n</code></pre>\r\n<ul id=\"bkmrk-%24%28%28-%29%29---%2A%2A%2A%2Aarithme\"><li><strong>test, [ ], [[ ]] </strong>- Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1. For example, the conditional test can be used to check if file[s] or directory[s] exist. <strong>[[ ]] </strong>is preferred over <strong>test </strong>and <strong>[ ]</strong>, because it is considered safer.</li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639474795035.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639474795035.png\" alt=\"image-1639474795035.png\" width=\"320\" height=\"734\"></a></p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<h4 id=\"bkmrk-functions\">Functions</h4>\r\n<pre id=\"bkmrk-sum%3D10-%23-global-vari\"><code class=\"language-shell\">sum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7</code></pre>\r\n<h4 id=\"bkmrk-conditional-statemen\">Conditional Statements</h4>\r\n<pre id=\"bkmrk-read-inputvalue-%23-ge\"><code class=\"language-shell\">read inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue &gt; 20)) &amp;&amp; ((inputValue &lt; 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\nexampleFile=\"./example_file\"\r\n\r\nif [[ -e $exampleFile ]]; then\r\n	echo \"$exampleFile exists\"\r\n    \r\n   if [[ -f $exampleFile ]]; then\r\n   		echo \"$exampleFile is a normal file\"\r\n   fi\r\n   \r\n   if [[ -r $exampleFile ]]; then\r\n   		echo \"$exampleFile is a readable\"\r\n   fi\r\n   \r\n   if [[ -w $exampleFile ]]; then\r\n   		echo \"$exampleFile is a writable\"\r\n   fi\r\nfi</code></pre>\r\n<h4 id=\"bkmrk-case\">Case</h4>\r\n<pre id=\"bkmrk-read-country-case-%24c\"><code class=\"language-shell\">read COUNTRY\r\n\r\ncase $COUNTRY in\r\n  Lithuania)\r\n    echo -n \"Lithuanian\"\r\n    ;;\r\n  Romania | Moldova)\r\n    echo -n \"Romanian\"\r\n    ;;\r\n  Italy | \"San Marino\" | Switzerland | \"Vatican City\")\r\n    echo -n \"Italian\"\r\n    ;;\r\n  *)\r\n    echo -n \"unknown\"\r\n    ;;\r\nesac</code></pre>\r\n<h4 id=\"bkmrk-string-operations\">String Operations</h4>\r\n<pre id=\"bkmrk-rand_str%3D%22a-random-s\"><code class=\"language-shell\">rand_str=\"A random string\"\r\n\r\necho \"String Length: ${#rand_str}\"\r\necho \"${rand_str:2}\" # get second word of string\r\necho \"${rand_str:1:2}\" # get words in range from 1st to 2nd\r\necho \"${rand_str#*A }\" # get words that follow \"A \" characters</code></pre>', 'To create a bash script, create a plain file without any extension and put #!/bin/bash at the beginning of the file.\r\nOperations\r\n$( ) - Command Substitution. Encapsulate the result of command(s) and pass it as an argument to another command.\r\necho $(seq 1 5)\r\n1 2 3 4 5 \r\n# Or, to create 5 new directories: \r\nmkdir $(seq 1 5)\r\n$(( )) - Arithmetic Expansion, do basic calculations.\r\n\r\n${ } - Variable/Parameter Substitution. Substitute the value of variable.\r\n\r\ndest=\"/backups\"\r\n\r\necho $dest\r\n# OR\r\necho \"$dest\"\r\n# OR\r\nprintf \"$dest\"\r\n# OR\r\necho \"${dest}\"\r\n\r\ntest, [ ], [[ ]] - Conditional Test/Expression to simply evaluate the conditional, and return a 0 or a 1. For example, the conditional test can be used to check if file[s] or directory[s] exist. [[ ]] is preferred over test and [ ], because it is considered safer.\r\n\r\n \r\nFunctions\r\nsum=10 # global variable\r\n\r\ngetSum() {\r\n	local num3=$1 # 1st parameter\r\n    local num4=$2 # 2nd parameter\r\n    \r\n    local sum=$((num3+num4)) # local variable\r\n    echo $sum\r\n}\r\n\r\necho $sum\r\nnewSum=$(getSum 10 10)\r\necho $newSum\r\ngetSum 3 4\r\n\r\n# output\r\n10\r\n20\r\n7\r\nConditional Statements\r\nread inputValue # get parameters provider when running the script\r\n\r\nif(( ((inputValue > 20)) && ((inputValue < 10)) )); then\r\n	echo \"Value is greater than 10 but less than 20\"\r\nelse \r\n	echo \"Some other number\"\r\nfi\r\n\r\nexampleFile=\"./example_file\"\r\n\r\nif [[ -e $exampleFile ]]; then\r\n	echo \"$exampleFile exists\"\r\n    \r\n   if [[ -f $exampleFile ]]; then\r\n   		echo \"$exampleFile is a normal file\"\r\n   fi\r\n   \r\n   if [[ -r $exampleFile ]]; then\r\n   		echo \"$exampleFile is a readable\"\r\n   fi\r\n   \r\n   if [[ -w $exampleFile ]]; then\r\n   		echo \"$exampleFile is a writable\"\r\n   fi\r\nfi\r\nCase\r\nread COUNTRY\r\n\r\ncase $COUNTRY in\r\n  Lithuania)\r\n    echo -n \"Lithuanian\"\r\n    ;;\r\n  Romania | Moldova)\r\n    echo -n \"Romanian\"\r\n    ;;\r\n  Italy | \"San Marino\" | Switzerland | \"Vatican City\")\r\n    echo -n \"Italian\"\r\n    ;;\r\n  *)\r\n    echo -n \"unknown\"\r\n    ;;\r\nesac\r\nString Operations\r\nrand_str=\"A random string\"\r\n\r\necho \"String Length: ${#rand_str}\"\r\necho \"${rand_str:2}\" # get second word of string\r\necho \"${rand_str:1:2}\" # get words in range from 1st to 2nd\r\necho \"${rand_str#*A }\" # get words that follow \"A \" characters', 1, '2021-12-14 12:25:37', '2021-12-14 12:25:37', 'shell-scripting', 'linux', 'version', '', '', 15),
(175, 29, 'Commonly Used Commands', '<h4 id=\"bkmrk-container-actions\">Container Actions</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li>\r\n<p><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</p>\r\n<ul><li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\n<ul><li><strong>-p 8080:80</strong> - Map TCP port 80 in the container to port 8080 on the Docker host.</li>\r\n</ul></li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. </li>\r\n<li>When running a docker container, it is possible to specify the initial command, that is responsible fo</li>\r\n</ul><p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/52f585c5-d7eb-4802-8701-f83fef91419c/Untitled.png\" alt=\"Untitled\"></p>\r\n<ul><li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quiting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume. If you start the volume name with // then it will be created as bind mount. <strong>-v //local_file/directory:container file/directory.</strong> Use <strong>//</strong> for windows and <strong>/</strong> for mac/linux.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec -it</strong> - Run a command in the existing container.</p>\r\n</li>\r\n<li>\r\n<p><em>docker container stop container -</em> Stop a docker container.</p>\r\n</li>\r\n<li>\r\n<p><strong>docker container rm <em>container</em></strong> - Remove a container</p>\r\n<ul><li>Use <strong>-f</strong> to force remove</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container start <em>container</em></strong> - Start docker container</p>\r\n<ul><li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a new command in a running container</p>\r\n<ul><li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-all-container-info\">All Container info</h3>\r\n<ul id=\"bkmrk-docker-container-ls-\"><li><strong>docker container ls</strong> - list all started containers.\r\n<ul><li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n</ul></li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n</ul><h3 id=\"bkmrk-single-container-inf\">Single container info</h3>\r\n<ul id=\"bkmrk-docker-container-log\"><li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config\r\n<ul><li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker*-*specific formatting language.</li>\r\n</ul></li>\r\n<li><em>docker container port container -</em> List port mappings</li>\r\n</ul><h3 id=\"bkmrk-image-info\">Image info</h3>\r\n<ul id=\"bkmrk-docker-image-ls---sh\"><li><strong>docker image ls</strong> - Show info about all images</li>\r\n<li><em>docker image inspect image -</em> Show info about an image</li>\r\n<li><strong>docker image history <em>image</em></strong> - Show image layer history</li>\r\n<li><em>docker image tag source_image target_image -</em> Create a new image based on an existing image. It is possible to specify tag, by default it will be <strong>latest</strong></li>\r\n<li><strong>docker image push <em>image</em></strong> - Push the image to your docker hub repository.</li>\r\n<li><em>docker image build image -</em> Build a image from dockerfile</li>\r\n</ul><h3 id=\"bkmrk-networks\">Networks</h3>\r\n<ul id=\"bkmrk-docker-network-ls---\"><li><strong>docker network ls</strong> - Show all networks</li>\r\n<li><strong>docker network inspect <em>network</em></strong> - Inspect a network</li>\r\n<li><strong>docker network create <em>network</em></strong> - Create a network</li>\r\n<li><strong>docker network connect <em>network container</em></strong> - Attach a network to a container</li>\r\n<li><strong>docker network disconnect <em>network container</em></strong> - Detach a network from a container</li>\r\n</ul><h2 id=\"bkmrk-volumes\">Volumes</h2>\r\n<p id=\"bkmrk-volumes-outlive-the-\">Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. Volumes are file systems mounted on Docker containers to preserve data generated by the running container. Whenever a new file will be created on host or docker container instance, it will be available in both file systems, and whenever the file will be edited on the host, it will change on the docker instance as well.</p>\r\n<ul id=\"bkmrk-docker-volume-ls---l\"><li><strong>docker volume ls</strong> - List all volumes</li>\r\n</ul><h2 id=\"bkmrk-bind-mounting\">Bind Mounting</h2>\r\n<p id=\"bkmrk-maps-host-file-or-di\">Maps host file or directory to container file or directory. Basically two locations pointing to the same file(s)</p>\r\n<h3 id=\"bkmrk-what-happens-in-%27doc\">What happens in \'<strong>docker container run</strong>\' command</h3>\r\n<ol id=\"bkmrk-looks-for-that-image\"><li>Looks for that image locally in image cache</li>\r\n<li>Then looks in remote image repository (defaults to Docker Hub)</li>\r\n<li>Downloads the latest version</li>\r\n<li>Creates a new container based on that image and prepares to start</li>\r\n<li>Gives it a virtual IP on a private network inside docker engine</li>\r\n<li>Starts the container</li>\r\n</ol><h2 id=\"bkmrk-docker-vs-vm%27s\">Docker vs VM\'s</h2>\r\n<p id=\"bkmrk-image\"><a href=\"https://www.notion.so/Image-be4ce8090e284a309b3466e7a8c97a1f\">Image</a></p>\r\n<p id=\"bkmrk-https%3A%2F%2Fdor.ky%2Fproje\"><a href=\"https://dor.ky/projects/\">https://dor.ky/projects/</a></p>\r\n<p id=\"bkmrk-dockerfile\"><a href=\"https://www.notion.so/Dockerfile-eff77d699c4849809cc33881d15c0d97\">Dockerfile</a></p>\r\n<p id=\"bkmrk-volumes-0\"><a href=\"https://www.notion.so/Volumes-e8b4f870d7e649898333aee78e000ef9\">Volumes</a></p>', 'Container Actions\r\n\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\n-p 8080:80 - Map TCP port 80 in the container to port 8080 on the Docker host.\r\n\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\nWhen running a docker container, it is possible to specify the initial command, that is responsible fo\r\n\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quiting.\r\nUse -v volume_name:volume to specify a volume. If you start the volume name with // then it will be created as bind mount. -v //local_file/directory:container file/directory. Use // for windows and / for mac/linux.\r\n\r\n\r\ndocker container exec -it - Run a command in the existing container.\r\n\r\n\r\ndocker container stop container - Stop a docker container.\r\n\r\n\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\n\r\n\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\n\r\n\r\ndocker container exec container command - Runs a new command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\n\r\nAll Container info\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\n\r\ndocker container stats - Performance stats for all containers\r\nSingle container info\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker*-*specific formatting language.\r\n\r\ndocker container port container - List port mappings\r\nImage info\r\ndocker image ls - Show info about all images\r\ndocker image inspect image - Show info about an image\r\ndocker image history image - Show image layer history\r\ndocker image tag source_image target_image - Create a new image based on an existing image. It is possible to specify tag, by default it will be latest\r\ndocker image push image - Push the image to your docker hub repository.\r\ndocker image build image - Build a image from dockerfile\r\nNetworks\r\ndocker network ls - Show all networks\r\ndocker network inspect network - Inspect a network\r\ndocker network create network - Create a network\r\ndocker network connect network container - Attach a network to a container\r\ndocker network disconnect network container - Detach a network from a container\r\nVolumes\r\nVolumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. Volumes are file systems mounted on Docker containers to preserve data generated by the running container. Whenever a new file will be created on host or docker container instance, it will be available in both file systems, and whenever the file will be edited on the host, it will change on the docker instance as well.\r\ndocker volume ls - List all volumes\r\nBind Mounting\r\nMaps host file or directory to container file or directory. Basically two locations pointing to the same file(s)\r\nWhat happens in \'docker container run\' command\r\nLooks for that image locally in image cache\r\nThen looks in remote image repository (defaults to Docker Hub)\r\nDownloads the latest version\r\nCreates a new container based on that image and prepares to start\r\nGives it a virtual IP on a private network inside docker engine\r\nStarts the container\r\nDocker vs VM\'s\r\nImage\r\nhttps://dor.ky/projects/\r\nDockerfile\r\nVolumes', 1, '2021-12-14 18:16:15', '2021-12-14 18:16:15', 'commonly-used-commands', 'docker', 'version', '', 'Initial publish', 1),
(176, 30, 'Terminology', '<ul id=\"bkmrk-data-persistence---t\"><li><strong>Data Persistence</strong> - The data survives after the process with which it was created has ended. </li>\r\n</ul>', 'Data Persistence - The data survives after the process with which it was created has ended. \r\n', 1, '2021-12-14 18:25:56', '2021-12-14 18:25:56', 'terminology', 'misc', 'version', '', 'Initial publish', 1),
(177, 31, 'Volumes', '<p id=\"bkmrk-docker-volumes-are%C2%A0f\">Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. </p>\r\n<p id=\"bkmrk-docker-has-two-optio\">Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:</p>\r\n<ol class=\"points\" id=\"bkmrk-volumes---are-stored\"><li><strong>Volumes</strong> - are stored in a part of the host filesystem, which is managed by.</li>\r\n<li><strong>Bind mounts </strong>- may be stored <em>anywhere</em> on the host system.</li>\r\n</ol><p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639506691980.png\" alt=\"image-1639506691980.png\"></a></p>', 'Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. \r\nDocker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:\r\nVolumes - are stored in a part of the host filesystem, which is managed by.\r\nBind mounts - may be stored anywhere on the host system.\r\n \r\n', 1, '2021-12-14 18:31:40', '2021-12-14 18:31:40', 'volumes', 'docker', 'version', '', 'Initial publish', 1),
(179, 31, 'Volumes', '<p id=\"bkmrk-docker-volumes-are-f\">Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. There are 3 ways to create a volume:</p>\r\n<ul id=\"bkmrk-docker-container-run\"><li>docker container run <strong>-v <em>container_directory </em></strong>- Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (<strong>Anonymous Volume</strong>).</li>\r\n<li>docker container run <strong>-v <em>host_directory:</em><em>container_directory </em></strong>- Mount a file system in container directory and specify the directory on the host where it should save the persisted data. </li>\r\n<li>docker container run <strong>-v volume_name<em>:</em><em>container_directory </em></strong>- Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (<strong>Named Volume</strong>).</li>\r\n</ul><p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk-docker-has-two-optio\">Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:</p>\r\n<ol id=\"bkmrk-volumes---are-stored\" class=\"points\"><li><strong>Volumes</strong> - are stored in a part of the host filesystem, which is managed by.</li>\r\n<li><strong>Bind mounts </strong>- may be stored <em>anywhere</em> on the host system.</li>\r\n</ol><p id=\"bkmrk-%C2%A0-0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639506691980.png\" alt=\"image-1639506691980.png\"></a></p>', 'Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. There are 3 ways to create a volume:\r\ndocker container run -v container_directory - Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (Anonymous Volume).\r\ndocker container run -v host_directory:container_directory - Mount a file system in container directory and specify the directory on the host where it should save the persisted data. \r\ndocker container run -v volume_name:container_directory - Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (Named Volume).\r\n \r\nDocker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:\r\nVolumes - are stored in a part of the host filesystem, which is managed by.\r\nBind mounts - may be stored anywhere on the host system.\r\n \r\n', 1, '2021-12-14 18:43:23', '2021-12-14 18:43:23', 'volumes', 'docker', 'version', '', '', 2),
(181, 31, 'Volumes', '<p id=\"bkmrk-docker-volumes-are-f\">Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).</p>\r\n<p id=\"bkmrk-there-are-3-ways-to-\">There are 3 ways to create a volume:</p>\r\n<ul id=\"bkmrk-docker-container-run\"><li>docker container run <strong>-v <em>container_directory </em></strong>- Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (<strong>Anonymous Volume</strong>).</li>\r\n<li>docker container run <strong>-v <em>host_directory:</em><em>container_directory </em></strong>- Mount a file system in container directory and specify the directory on the host where it should save the persisted data. </li>\r\n<li>docker container run <strong>-v volume_name<em>:</em><em>container_directory </em></strong>- Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (<strong>Named Volume</strong>).</li>\r\n</ul><p id=\"bkmrk-docker-has-two-optio\">Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:</p>\r\n<ol id=\"bkmrk-volumes---are-stored\" class=\"points\"><li><strong>Volumes</strong> - are stored in a part of the host filesystem, which is managed by.</li>\r\n<li><strong>Bind mounts </strong>- may be stored <em>anywhere</em> on the host system.</li>\r\n</ol><p id=\"bkmrk-%C2%A0-0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639506691980.png\" alt=\"image-1639506691980.png\"></a></p>', 'Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).\r\nThere are 3 ways to create a volume:\r\ndocker container run -v container_directory - Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (Anonymous Volume).\r\ndocker container run -v host_directory:container_directory - Mount a file system in container directory and specify the directory on the host where it should save the persisted data. \r\ndocker container run -v volume_name:container_directory - Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (Named Volume).\r\nDocker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:\r\nVolumes - are stored in a part of the host filesystem, which is managed by.\r\nBind mounts - may be stored anywhere on the host system.\r\n \r\n', 1, '2021-12-14 18:48:06', '2021-12-14 18:48:06', 'volumes', 'docker', 'version', '', '', 3);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(183, 31, 'Volumes', '<p id=\"bkmrk-docker-has-two-optio\">Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:</p>\r\n<ol id=\"bkmrk-volumes---are-stored\" class=\"points\"><li><strong>Volumes</strong> - are stored in a part of the host filesystem, which is managed by.</li>\r\n<li><strong>Bind mounts </strong>- may be stored <em>anywhere</em> on the host system.</li>\r\n</ol><p id=\"bkmrk-%C2%A0-0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639506691980.png\" alt=\"image-1639506691980.png\"></a></p>\r\n<h4 id=\"bkmrk-what-are-volumes%3F\">What are Volumes?</h4>\r\n<p id=\"bkmrk-docker-volumes-are-f\">Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).</p>\r\n<p id=\"bkmrk-there-are-3-ways-to-\">There are 3 ways to create a volume:</p>\r\n<ul id=\"bkmrk-docker-container-run\"><li>docker container run <strong>-v <em>container_directory </em></strong>- Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (<strong>Anonymous Volume</strong>).</li>\r\n<li>docker container run <strong>-v <em>host_directory:</em><em>container_directory </em></strong>- Mount a file system in container directory and specify the directory on the host where it should save the persisted data. </li>\r\n<li>docker container run <strong>-v volume_name<em>:</em><em>container_directory </em></strong>- Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (<strong>Named Volume</strong>).</li>\r\n</ul><p id=\"bkmrk-when-creating-a-volu\">When creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. </p>\r\n<ul id=\"bkmrk-for%C2%A0mongodb%C2%A0its-%2Fdat\"><li>For MongoDB its <strong>/data/db</strong></li>\r\n<li>For MySQLits <strong>var/lib/mysql</strong></li>\r\n<li>For PostgreSQL its <strong>/var/lib/postresql/data</strong></li>\r\n</ul><h4 id=\"bkmrk-what-are-bind-mounts\">What are Bind Mounts?</h4>', 'Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:\r\nVolumes - are stored in a part of the host filesystem, which is managed by.\r\nBind mounts - may be stored anywhere on the host system.\r\n \r\n\r\nWhat are Volumes?\r\nDocker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).\r\nThere are 3 ways to create a volume:\r\ndocker container run -v container_directory - Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (Anonymous Volume).\r\ndocker container run -v host_directory:container_directory - Mount a file system in container directory and specify the directory on the host where it should save the persisted data. \r\ndocker container run -v volume_name:container_directory - Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (Named Volume).\r\nWhen creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. \r\nFor MongoDB its /data/db\r\nFor MySQLits var/lib/mysql\r\nFor PostgreSQL its /var/lib/postresql/data\r\nWhat are Bind Mounts?', 1, '2021-12-14 18:55:02', '2021-12-14 18:55:02', 'volumes', 'docker', 'version', '', '', 4),
(184, 31, 'Volumes', '<p id=\"bkmrk-docker-has-two-optio\">Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:</p>\r\n<ol id=\"bkmrk-volumes---are-stored\" class=\"points\"><li><strong>Volumes</strong> - are stored in a part of the host filesystem, which is managed by.</li>\r\n<li><strong>Bind mounts </strong>- may be stored <em>anywhere</em> on the host system.</li>\r\n</ol><p id=\"bkmrk-%C2%A0-0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639506691980.png\" alt=\"image-1639506691980.png\"></a></p>\r\n<h3 id=\"bkmrk-what-are-volumes%3F\">What are Volumes?</h3>\r\n<p id=\"bkmrk-docker-volumes-are-f\">Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).</p>\r\n<p id=\"bkmrk-there-are-3-ways-to-\">There are 3 ways to create a volume:</p>\r\n<ul id=\"bkmrk-docker-container-run\"><li>docker container run <strong>-v <em>container_directory </em></strong>- Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (<strong>Anonymous Volume</strong>).</li>\r\n<li>docker container run <strong>-v <em>host_directory:</em><em>container_directory </em></strong>- Mount a file system in container directory and specify the directory on the host where it should save the persisted data. </li>\r\n<li>docker container run <strong>-v volume_name<em>:</em><em>container_directory </em></strong>- Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (<strong>Named Volume</strong>).</li>\r\n</ul><p id=\"bkmrk-when-creating-a-volu\">When creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. </p>\r\n<ul id=\"bkmrk-for%C2%A0mongodb%C2%A0its-%2Fdat\"><li>For MongoDB its <strong>/data/db</strong></li>\r\n<li>For MySQLits <strong>var/lib/mysql</strong></li>\r\n<li>For PostgreSQL its <strong>/var/lib/postresql/data</strong></li>\r\n</ul><h3 id=\"bkmrk-what-are-bind-mounts\">What are Bind Mounts?</h3>', 'Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:\r\nVolumes - are stored in a part of the host filesystem, which is managed by.\r\nBind mounts - may be stored anywhere on the host system.\r\n \r\n\r\nWhat are Volumes?\r\nDocker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).\r\nThere are 3 ways to create a volume:\r\ndocker container run -v container_directory - Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (Anonymous Volume).\r\ndocker container run -v host_directory:container_directory - Mount a file system in container directory and specify the directory on the host where it should save the persisted data. \r\ndocker container run -v volume_name:container_directory - Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (Named Volume).\r\nWhen creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. \r\nFor MongoDB its /data/db\r\nFor MySQLits var/lib/mysql\r\nFor PostgreSQL its /var/lib/postresql/data\r\nWhat are Bind Mounts?', 1, '2021-12-14 18:55:17', '2021-12-14 18:55:17', 'volumes', 'docker', 'version', '', '', 5),
(186, 31, 'Volumes', '<p id=\"bkmrk-docker-has-two-optio\">Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:</p>\r\n<ol id=\"bkmrk-volumes---are-stored\" class=\"points\"><li><strong>Volumes</strong> - are stored in a part of the host filesystem, which is managed by.</li>\r\n<li><strong>Bind mounts </strong>- may be stored <em>anywhere</em> on the host system.</li>\r\n</ol><p id=\"bkmrk-%C2%A0-0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639506691980.png\" alt=\"image-1639506691980.png\"></a></p>\r\n<h3 id=\"bkmrk-what-are-volumes%3F\">What are Volumes?</h3>\r\n<p id=\"bkmrk-docker-volumes-are-f\">Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).</p>\r\n<p id=\"bkmrk-there-are-3-ways-to-\">There are 3 ways to create a volume:</p>\r\n<ul id=\"bkmrk-docker-container-run\"><li>docker container run <strong>-v <em>container_directory </em></strong>- Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (<strong>Anonymous Volume</strong>).</li>\r\n<li>docker container run <strong>-v <em>host_directory:</em><em>container_directory </em></strong>- Mount a file system in container directory and specify the directory on the host where it should save the persisted data. </li>\r\n<li>docker container run <strong>-v volume_name<em>:</em><em>container_directory </em></strong>- Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (<strong>Named Volume</strong>).</li>\r\n</ul><p id=\"bkmrk-when-creating-a-volu\">When creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.</p>\r\n<ul id=\"bkmrk-for%C2%A0mongodb%C2%A0its-%2Fdat\"><li>For MongoDB its <strong>/data/db</strong></li>\r\n<li>For MySQLits <strong>var/lib/mysql</strong></li>\r\n<li>For PostgreSQL its <strong>/var/lib/postresql/data</strong></li>\r\n</ul><h3 id=\"bkmrk-what-are-bind-mounts\">What are Bind Mounts?</h3>', 'Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:\r\nVolumes - are stored in a part of the host filesystem, which is managed by.\r\nBind mounts - may be stored anywhere on the host system.\r\n \r\n\r\nWhat are Volumes?\r\nDocker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).\r\nThere are 3 ways to create a volume:\r\ndocker container run -v container_directory - Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (Anonymous Volume).\r\ndocker container run -v host_directory:container_directory - Mount a file system in container directory and specify the directory on the host where it should save the persisted data. \r\ndocker container run -v volume_name:container_directory - Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (Named Volume).\r\nWhen creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.\r\nFor MongoDB its /data/db\r\nFor MySQLits var/lib/mysql\r\nFor PostgreSQL its /var/lib/postresql/data\r\nWhat are Bind Mounts?', 1, '2021-12-14 18:56:19', '2021-12-14 18:56:19', 'volumes', 'docker', 'version', '', '', 6),
(187, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container Actions</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li>\r\n<p><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</p>\r\n<ul><li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\n<ul><li><strong>-p 8080:80</strong> - Map TCP port 80 in the container to port 8080 on the Docker host.</li>\r\n</ul></li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. </li>\r\n<li>When running a docker container, it is possible to specify the initial command, that is responsible fo</li>\r\n</ul><p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/52f585c5-d7eb-4802-8701-f83fef91419c/Untitled.png\" alt=\"Untitled\"></p>\r\n<ul><li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quiting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume. If you start the volume name with // then it will be created as bind mount. <strong>-v //local_file/directory:container file/directory.</strong> Use <strong>//</strong> for windows and <strong>/</strong> for mac/linux.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec -it</strong> - Run a command in the existing container.</p>\r\n</li>\r\n<li>\r\n<p><em>docker container stop container -</em> Stop a docker container.</p>\r\n</li>\r\n<li>\r\n<p><strong>docker container rm <em>container</em></strong> - Remove a container</p>\r\n<ul><li>Use <strong>-f</strong> to force remove</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container start <em>container</em></strong> - Start docker container</p>\r\n<ul><li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a new command in a running container</p>\r\n<ul><li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-all-container-info\">All Container info</h3>\r\n<ul id=\"bkmrk-docker-container-ls-\"><li><strong>docker container ls</strong> - list all started containers.\r\n<ul><li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n</ul></li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n</ul><h3 id=\"bkmrk-single-container-inf\">Single container info</h3>\r\n<ul id=\"bkmrk-docker-container-log\"><li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config\r\n<ul><li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker*-*specific formatting language.</li>\r\n</ul></li>\r\n<li><em>docker container port container -</em> List port mappings</li>\r\n</ul><h3 id=\"bkmrk-image-info\">Image info</h3>\r\n<ul id=\"bkmrk-docker-image-ls---sh\"><li><strong>docker image ls</strong> - Show info about all images</li>\r\n<li><em>docker image inspect image -</em> Show info about an image</li>\r\n<li><strong>docker image history <em>image</em></strong> - Show image layer history</li>\r\n<li><em>docker image tag source_image target_image -</em> Create a new image based on an existing image. It is possible to specify tag, by default it will be <strong>latest</strong></li>\r\n<li><strong>docker image push <em>image</em></strong> - Push the image to your docker hub repository.</li>\r\n<li><em>docker image build image -</em> Build a image from dockerfile</li>\r\n</ul><h3 id=\"bkmrk-networks\">Networks</h3>\r\n<ul id=\"bkmrk-docker-network-ls---\"><li><strong>docker network ls</strong> - Show all networks</li>\r\n<li><strong>docker network inspect <em>network</em></strong> - Inspect a network</li>\r\n<li><strong>docker network create <em>network</em></strong> - Create a network</li>\r\n<li><strong>docker network connect <em>network container</em></strong> - Attach a network to a container</li>\r\n<li><strong>docker network disconnect <em>network container</em></strong> - Detach a network from a container</li>\r\n</ul><h2 id=\"bkmrk-volumes\">Volumes</h2>\r\n<p id=\"bkmrk-volumes-outlive-the-\">Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. Volumes are file systems mounted on Docker containers to preserve data generated by the running container. Whenever a new file will be created on host or docker container instance, it will be available in both file systems, and whenever the file will be edited on the host, it will change on the docker instance as well.</p>\r\n<ul id=\"bkmrk-docker-volume-ls---l\"><li><strong>docker volume ls</strong> - List all volumes</li>\r\n</ul><h2 id=\"bkmrk-bind-mounting\">Bind Mounting</h2>\r\n<p id=\"bkmrk-maps-host-file-or-di\">Maps host file or directory to container file or directory. Basically two locations pointing to the same file(s)</p>\r\n<h3 id=\"bkmrk-what-happens-in-%27doc\">What happens in \'<strong>docker container run</strong>\' command</h3>\r\n<ol id=\"bkmrk-looks-for-that-image\"><li>Looks for that image locally in image cache</li>\r\n<li>Then looks in remote image repository (defaults to Docker Hub)</li>\r\n<li>Downloads the latest version</li>\r\n<li>Creates a new container based on that image and prepares to start</li>\r\n<li>Gives it a virtual IP on a private network inside docker engine</li>\r\n<li>Starts the container</li>\r\n</ol><h2 id=\"bkmrk-docker-vs-vm%27s\">Docker vs VM\'s</h2>\r\n<p id=\"bkmrk-image\"><a href=\"https://www.notion.so/Image-be4ce8090e284a309b3466e7a8c97a1f\">Image</a></p>\r\n<p id=\"bkmrk-https%3A%2F%2Fdor.ky%2Fproje\"><a href=\"https://dor.ky/projects/\">https://dor.ky/projects/</a></p>\r\n<p id=\"bkmrk-dockerfile\"><a href=\"https://www.notion.so/Dockerfile-eff77d699c4849809cc33881d15c0d97\">Dockerfile</a></p>\r\n<p id=\"bkmrk-volumes-0\"><a href=\"https://www.notion.so/Volumes-e8b4f870d7e649898333aee78e000ef9\">Volumes</a></p>', 'Container Actions\r\n\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\n-p 8080:80 - Map TCP port 80 in the container to port 8080 on the Docker host.\r\n\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\nWhen running a docker container, it is possible to specify the initial command, that is responsible fo\r\n\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quiting.\r\nUse -v volume_name:volume to specify a volume. If you start the volume name with // then it will be created as bind mount. -v //local_file/directory:container file/directory. Use // for windows and / for mac/linux.\r\n\r\n\r\ndocker container exec -it - Run a command in the existing container.\r\n\r\n\r\ndocker container stop container - Stop a docker container.\r\n\r\n\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\n\r\n\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\n\r\n\r\ndocker container exec container command - Runs a new command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\n\r\nAll Container info\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\n\r\ndocker container stats - Performance stats for all containers\r\nSingle container info\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker*-*specific formatting language.\r\n\r\ndocker container port container - List port mappings\r\nImage info\r\ndocker image ls - Show info about all images\r\ndocker image inspect image - Show info about an image\r\ndocker image history image - Show image layer history\r\ndocker image tag source_image target_image - Create a new image based on an existing image. It is possible to specify tag, by default it will be latest\r\ndocker image push image - Push the image to your docker hub repository.\r\ndocker image build image - Build a image from dockerfile\r\nNetworks\r\ndocker network ls - Show all networks\r\ndocker network inspect network - Inspect a network\r\ndocker network create network - Create a network\r\ndocker network connect network container - Attach a network to a container\r\ndocker network disconnect network container - Detach a network from a container\r\nVolumes\r\nVolumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. Volumes are file systems mounted on Docker containers to preserve data generated by the running container. Whenever a new file will be created on host or docker container instance, it will be available in both file systems, and whenever the file will be edited on the host, it will change on the docker instance as well.\r\ndocker volume ls - List all volumes\r\nBind Mounting\r\nMaps host file or directory to container file or directory. Basically two locations pointing to the same file(s)\r\nWhat happens in \'docker container run\' command\r\nLooks for that image locally in image cache\r\nThen looks in remote image repository (defaults to Docker Hub)\r\nDownloads the latest version\r\nCreates a new container based on that image and prepares to start\r\nGives it a virtual IP on a private network inside docker engine\r\nStarts the container\r\nDocker vs VM\'s\r\nImage\r\nhttps://dor.ky/projects/\r\nDockerfile\r\nVolumes', 1, '2021-12-14 18:58:44', '2021-12-14 18:58:44', 'common-docker-commands', 'docker', 'version', '', '', 2),
(189, 31, 'Volumes', '<p id=\"bkmrk-docker-has-two-optio\">Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:</p>\r\n<ol id=\"bkmrk-volumes---are-stored\" class=\"points\"><li><strong>Volumes</strong> - are stored in a part of the host filesystem, which is managed by.</li>\r\n<li><strong>Bind mounts </strong>- may be stored <em>anywhere</em> on the host system.</li>\r\n</ol><p id=\"bkmrk-%C2%A0-0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639506691980.png\" alt=\"image-1639506691980.png\"></a></p>\r\n<h3 id=\"bkmrk-what-are-volumes%3F\">What are Volumes?</h3>\r\n<p id=\"bkmrk-docker-volumes-are-f\">Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).</p>\r\n<p id=\"bkmrk-there-are-3-ways-to-\">There are 3 ways to create a volume:</p>\r\n<ul id=\"bkmrk-docker-container-run\"><li>docker container run <strong>-v <em>container_directory </em></strong>- Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (<strong>Anonymous Volume</strong>).</li>\r\n<li>docker container run <strong>-v <em>host_directory:</em><em>container_directory </em></strong>- Mount a file system in container directory and specify the directory on the host where it should save the persisted data. </li>\r\n<li>docker container run <strong>-v volume_name<em>:</em><em>container_directory </em></strong>- Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (<strong>Named Volume</strong>).</li>\r\n</ul><p id=\"bkmrk-when-creating-a-volu\">When creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.</p>\r\n<ul id=\"bkmrk-for%C2%A0mongodb%C2%A0its-%2Fdat\"><li>For MongoDB its <strong>/data/db</strong></li>\r\n<li>For MySQLits <strong>var/lib/mysql</strong></li>\r\n<li>For PostgreSQL its <strong>/var/lib/postresql/data</strong></li>\r\n</ul><h3 id=\"bkmrk-what-are-bind-mounts\">Should I use bind mounts?</h3>\r\n<p id=\"bkmrk-volumes%C2%A0are-the-pref\">Volumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.</p>', 'Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:\r\nVolumes - are stored in a part of the host filesystem, which is managed by.\r\nBind mounts - may be stored anywhere on the host system.\r\n \r\n\r\nWhat are Volumes?\r\nDocker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).\r\nThere are 3 ways to create a volume:\r\ndocker container run -v container_directory - Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (Anonymous Volume).\r\ndocker container run -v host_directory:container_directory - Mount a file system in container directory and specify the directory on the host where it should save the persisted data. \r\ndocker container run -v volume_name:container_directory - Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (Named Volume).\r\nWhen creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.\r\nFor MongoDB its /data/db\r\nFor MySQLits var/lib/mysql\r\nFor PostgreSQL its /var/lib/postresql/data\r\nShould I use bind mounts?\r\nVolumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.', 1, '2021-12-14 19:03:10', '2021-12-14 19:03:10', 'volumes', 'docker', 'version', '', '', 7),
(190, 31, 'Volumes', '<p id=\"bkmrk-docker-has-two-optio\">Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:</p>\r\n<ol id=\"bkmrk-volumes---are-stored\" class=\"points\"><li><strong>Volumes</strong> - are stored in a part of the host filesystem, which is managed by.</li>\r\n<li><strong>Bind mounts </strong>- may be stored <em>anywhere</em> on the host system.</li>\r\n</ol><p id=\"bkmrk-%C2%A0-0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639506691980.png\" alt=\"image-1639506691980.png\"></a></p>\r\n<h3 id=\"bkmrk-what-are-volumes%3F\">What are Volumes?</h3>\r\n<p id=\"bkmrk-docker-volumes-are-f\">Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).</p>\r\n<p id=\"bkmrk-there-are-3-ways-to-\">There are 3 ways to create a volume:</p>\r\n<ul id=\"bkmrk-docker-container-run\"><li>docker container run <strong>-v <em>container_directory </em></strong>- Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (<strong>Anonymous Volume</strong>).</li>\r\n<li>docker container run <strong>-v <em>host_directory:</em><em>container_directory </em></strong>- Mount a file system in container directory and specify the directory on the host where it should save the persisted data. </li>\r\n<li>docker container run <strong>-v volume_name<em>:</em><em>container_directory </em></strong>- Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (<strong>Named Volume</strong>).</li>\r\n</ul><p id=\"bkmrk-when-creating-a-volu\">When creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.</p>\r\n<ul id=\"bkmrk-for%C2%A0mongodb%C2%A0its-%2Fdat\"><li>For MongoDB its <strong>/data/db</strong></li>\r\n<li>For MySQLits <strong>var/lib/mysql</strong></li>\r\n<li>For PostgreSQL its <strong>/var/lib/postresql/data</strong></li>\r\n</ul><h3 id=\"bkmrk-what-are-bind-mounts\">Why Bind Mounts are not recommended?</h3>\r\n<p id=\"bkmrk-volumes%C2%A0are-the-pref\">Volumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.</p>', 'Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:\r\nVolumes - are stored in a part of the host filesystem, which is managed by.\r\nBind mounts - may be stored anywhere on the host system.\r\n \r\n\r\nWhat are Volumes?\r\nDocker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).\r\nThere are 3 ways to create a volume:\r\ndocker container run -v container_directory - Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (Anonymous Volume).\r\ndocker container run -v host_directory:container_directory - Mount a file system in container directory and specify the directory on the host where it should save the persisted data. \r\ndocker container run -v volume_name:container_directory - Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (Named Volume).\r\nWhen creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.\r\nFor MongoDB its /data/db\r\nFor MySQLits var/lib/mysql\r\nFor PostgreSQL its /var/lib/postresql/data\r\nWhy Bind Mounts are not recommended?\r\nVolumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.', 1, '2021-12-14 19:03:29', '2021-12-14 19:03:29', 'volumes', 'docker', 'version', '', '', 8),
(192, 31, 'Volumes', '<p id=\"bkmrk-docker-has-two-optio\">Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:</p>\r\n<ol id=\"bkmrk-volumes---are-stored\" class=\"points\"><li><strong>Volumes</strong> - are stored in a part of the host filesystem, which is managed by.</li>\r\n<li><strong>Bind mounts </strong>- may be stored <em>anywhere</em> on the host system.</li>\r\n</ol><p id=\"bkmrk-%C2%A0-0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639506691980.png\" alt=\"image-1639506691980.png\"></a></p>\r\n<h3 id=\"bkmrk-what-are-volumes%3F\">What are Volumes?</h3>\r\n<p id=\"bkmrk-docker-volumes-are-f\">Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).</p>\r\n<p id=\"bkmrk-there-are-3-ways-to-\">There are 3 ways to create a volume:</p>\r\n<ul id=\"bkmrk-docker-container-run\"><li>docker container run <strong>-v <em>container_directory </em></strong>- Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (<strong>Anonymous Volume</strong>).</li>\r\n<li>docker container run <strong>-v <em>host_directory:</em><em>container_directory </em></strong>- Mount a file system in container directory and specify the directory on the host where it should save the persisted data. </li>\r\n<li>docker container run <strong>-v volume_name<em>:</em><em>container_directory </em></strong>- Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (<strong>Named Volume</strong>).</li>\r\n</ul><p id=\"bkmrk-when-creating-a-volu\">When creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.</p>\r\n<ul id=\"bkmrk-for%C2%A0mongodb%C2%A0its-%2Fdat\"><li>For MongoDB its <strong>/data/db</strong></li>\r\n<li>For MySQLits <strong>var/lib/mysql</strong></li>\r\n<li>For PostgreSQL its <strong>/var/lib/postresql/data</strong></li>\r\n</ul><h3 id=\"bkmrk-what-are-bind-mounts\">What are Bind Mounts?</h3>\r\n<p id=\"bkmrk-bind-mounts-are-crea\">Bind mounts are created by binding an existing folder in the host system to a path in the container, similarly to volumes.</p>\r\n<p id=\"bkmrk-to-use-bind-mounts%2C-\">To use bind mounts, the file or directory does not need to exist on your Docker host already. If it doesn’t exist, it will be created on demand. Bind mounts rely on the host machine’s filesystem having a specific directory structure available. You must explicitly create a path to the file or folder to place the storage.</p>\r\n<h3 id=\"bkmrk-volumes-vs-bind-moun\">Volumes vs Bind Mounts</h3>\r\n<p id=\"bkmrk-volumes%C2%A0are-the-pref\">Volumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.</p>', 'Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:\r\nVolumes - are stored in a part of the host filesystem, which is managed by.\r\nBind mounts - may be stored anywhere on the host system.\r\n \r\n\r\nWhat are Volumes?\r\nDocker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).\r\nThere are 3 ways to create a volume:\r\ndocker container run -v container_directory - Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (Anonymous Volume).\r\ndocker container run -v host_directory:container_directory - Mount a file system in container directory and specify the directory on the host where it should save the persisted data. \r\ndocker container run -v volume_name:container_directory - Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (Named Volume).\r\nWhen creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.\r\nFor MongoDB its /data/db\r\nFor MySQLits var/lib/mysql\r\nFor PostgreSQL its /var/lib/postresql/data\r\nWhat are Bind Mounts?\r\nBind mounts are created by binding an existing folder in the host system to a path in the container, similarly to volumes.\r\nTo use bind mounts, the file or directory does not need to exist on your Docker host already. If it doesn’t exist, it will be created on demand. Bind mounts rely on the host machine’s filesystem having a specific directory structure available. You must explicitly create a path to the file or folder to place the storage.\r\nVolumes vs Bind Mounts\r\nVolumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.', 1, '2021-12-14 19:06:57', '2021-12-14 19:06:57', 'volumes', 'docker', 'version', '', '', 9);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(193, 31, 'Volumes', '<p id=\"bkmrk-docker-has-two-optio\">Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:</p>\r\n<ol id=\"bkmrk-volumes---are-stored\" class=\"points\"><li><strong>Volumes</strong> - are stored in a part of the host filesystem, which is managed by.</li>\r\n<li><strong>Bind mounts </strong>- may be stored <em>anywhere</em> on the host system.</li>\r\n</ol><p id=\"bkmrk-%C2%A0-0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639506691980.png\" alt=\"image-1639506691980.png\"></a></p>\r\n<h3 id=\"bkmrk-what-are-volumes%3F\">What are Volumes?</h3>\r\n<p id=\"bkmrk-docker-volumes-are-f\">Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).</p>\r\n<p id=\"bkmrk-there-are-3-ways-to-\">There are 3 ways to create a volume:</p>\r\n<ul id=\"bkmrk-docker-container-run\"><li>docker container run <strong>-v <em>container_directory </em></strong>- Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (<strong>Anonymous Volume</strong>).</li>\r\n<li>docker container run <strong>-v <em>host_directory:</em><em>container_directory </em></strong>- Mount a file system in container directory and specify the directory on the host where it should save the persisted data. </li>\r\n<li>docker container run <strong>-v volume_name<em>:</em><em>container_directory </em></strong>- Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (<strong>Named Volume</strong>).</li>\r\n</ul><p id=\"bkmrk-when-creating-a-volu\">When creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.</p>\r\n<ul id=\"bkmrk-for%C2%A0mongodb%C2%A0its-%2Fdat\"><li>For MongoDB its <strong>/data/db</strong></li>\r\n<li>For MySQLits <strong>var/lib/mysql</strong></li>\r\n<li>For PostgreSQL its <strong>/var/lib/postresql/data</strong></li>\r\n</ul><h3 id=\"bkmrk-what-are-bind-mounts\">What are Bind Mounts?</h3>\r\n<p id=\"bkmrk-bind-mounts-are-crea\">Bind mounts are created by binding an existing folder in the host system to a path in the container, similarly to volumes.</p>\r\n<p id=\"bkmrk-to-use-bind-mounts%2C-\">To use bind mounts, the file or directory does not need to exist on your Docker host already. If it doesn’t exist, it will be created on demand. Bind mounts rely on the host machine’s filesystem having a specific directory structure available. You must explicitly create a path to the file or folder to place the storage.</p>\r\n<h3 id=\"bkmrk-volumes-vs-bind-moun\">Volumes vs Bind Mounts</h3>\r\n<p id=\"bkmrk-volumes%C2%A0are-the-pref\"><strong>Volumes </strong>are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.</p>', 'Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:\r\nVolumes - are stored in a part of the host filesystem, which is managed by.\r\nBind mounts - may be stored anywhere on the host system.\r\n \r\n\r\nWhat are Volumes?\r\nDocker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).\r\nThere are 3 ways to create a volume:\r\ndocker container run -v container_directory - Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (Anonymous Volume).\r\ndocker container run -v host_directory:container_directory - Mount a file system in container directory and specify the directory on the host where it should save the persisted data. \r\ndocker container run -v volume_name:container_directory - Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (Named Volume).\r\nWhen creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.\r\nFor MongoDB its /data/db\r\nFor MySQLits var/lib/mysql\r\nFor PostgreSQL its /var/lib/postresql/data\r\nWhat are Bind Mounts?\r\nBind mounts are created by binding an existing folder in the host system to a path in the container, similarly to volumes.\r\nTo use bind mounts, the file or directory does not need to exist on your Docker host already. If it doesn’t exist, it will be created on demand. Bind mounts rely on the host machine’s filesystem having a specific directory structure available. You must explicitly create a path to the file or folder to place the storage.\r\nVolumes vs Bind Mounts\r\nVolumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.', 1, '2021-12-14 19:07:06', '2021-12-14 19:07:06', 'volumes', 'docker', 'version', '', '', 10),
(194, 31, 'Volumes', '<p id=\"bkmrk-docker-has-two-optio\">Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:</p>\r\n<ol id=\"bkmrk-volumes---are-stored\" class=\"points\"><li><strong>Volumes</strong> - are stored in a part of the host filesystem, which is managed by Docker.</li>\r\n<li><strong>Bind mounts </strong>- may be stored <em>anywhere</em> on the host system.</li>\r\n</ol><p id=\"bkmrk-%C2%A0-0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639506691980.png\" alt=\"image-1639506691980.png\"></a></p>\r\n<h3 id=\"bkmrk-what-are-volumes%3F\">What are Volumes?</h3>\r\n<p id=\"bkmrk-docker-volumes-are-f\">Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).</p>\r\n<p id=\"bkmrk-there-are-3-ways-to-\">There are 3 ways to create a volume:</p>\r\n<ul id=\"bkmrk-docker-container-run\"><li>docker container run <strong>-v <em>container_directory </em></strong>- Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (<strong>Anonymous Volume</strong>).</li>\r\n<li>docker container run <strong>-v <em>host_directory:</em><em>container_directory </em></strong>- Mount a file system in container directory and specify the directory on the host where it should save the persisted data. </li>\r\n<li>docker container run <strong>-v volume_name<em>:</em><em>container_directory </em></strong>- Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (<strong>Named Volume</strong>).</li>\r\n</ul><p id=\"bkmrk-when-creating-a-volu\">When creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.</p>\r\n<ul id=\"bkmrk-for%C2%A0mongodb%C2%A0its-%2Fdat\"><li>For MongoDB its <strong>/data/db</strong></li>\r\n<li>For MySQLits <strong>var/lib/mysql</strong></li>\r\n<li>For PostgreSQL its <strong>/var/lib/postresql/data</strong></li>\r\n</ul><h3 id=\"bkmrk-what-are-bind-mounts\">What are Bind Mounts?</h3>\r\n<p id=\"bkmrk-bind-mounts-are-crea\">Bind mounts are created by binding an existing folder in the host system to a path in the container, similarly to volumes.</p>\r\n<p id=\"bkmrk-to-use-bind-mounts%2C-\">To use bind mounts, the file or directory does not need to exist on your Docker host already. If it doesn’t exist, it will be created on demand. Bind mounts rely on the host machine’s filesystem having a specific directory structure available. You must explicitly create a path to the file or folder to place the storage.</p>\r\n<h3 id=\"bkmrk-volumes-vs-bind-moun\">Volumes vs Bind Mounts</h3>\r\n<p id=\"bkmrk-volumes%C2%A0are-the-pref\"><strong>Volumes </strong>are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.</p>', 'Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:\r\nVolumes - are stored in a part of the host filesystem, which is managed by Docker.\r\nBind mounts - may be stored anywhere on the host system.\r\n \r\n\r\nWhat are Volumes?\r\nDocker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).\r\nThere are 3 ways to create a volume:\r\ndocker container run -v container_directory - Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (Anonymous Volume).\r\ndocker container run -v host_directory:container_directory - Mount a file system in container directory and specify the directory on the host where it should save the persisted data. \r\ndocker container run -v volume_name:container_directory - Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (Named Volume).\r\nWhen creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.\r\nFor MongoDB its /data/db\r\nFor MySQLits var/lib/mysql\r\nFor PostgreSQL its /var/lib/postresql/data\r\nWhat are Bind Mounts?\r\nBind mounts are created by binding an existing folder in the host system to a path in the container, similarly to volumes.\r\nTo use bind mounts, the file or directory does not need to exist on your Docker host already. If it doesn’t exist, it will be created on demand. Bind mounts rely on the host machine’s filesystem having a specific directory structure available. You must explicitly create a path to the file or folder to place the storage.\r\nVolumes vs Bind Mounts\r\nVolumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.', 1, '2021-12-14 19:08:37', '2021-12-14 19:08:37', 'volumes', 'docker', 'version', '', '', 11),
(196, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container Actions</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li>\r\n<ul><li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. \r\n<p><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</p>\r\n</li>\r\n</ul><ul><li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume. If you start the volume name with // then it will be created as bind mount. <strong>-v //local_file/directory:container file/directory.</strong> Use <strong>//</strong> for windows and <strong>/</strong> for mac/linux.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec -it</strong> - Run a command in the existing container.</p>\r\n</li>\r\n<li>\r\n<p><em><strong>docker container stop container</strong> -</em> Stop a docker container.</p>\r\n</li>\r\n<li>\r\n<p><strong>docker container rm <em>container</em></strong> - Remove a container</p>\r\n<ul><li>Use <strong>-f</strong> to force remove</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container start <em>container</em></strong> - Start docker container</p>\r\n<ul><li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</p>\r\n<ul><li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n</ul></li>\r\n</ul><h4 id=\"bkmrk-all-container-info\">Container info</h4>\r\n<ul id=\"bkmrk-docker-container-ls-\"><li><strong>docker container ls</strong> - list all started containers.\r\n<ul><li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n</ul></li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n</ul><h4 id=\"bkmrk-single-container-inf\">Single container info</h4>\r\n<ul id=\"bkmrk-docker-container-log\"><li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config\r\n<ul><li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker*-*specific formatting language.</li>\r\n</ul></li>\r\n<li><em>docker container port container -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<ul id=\"bkmrk-docker-image-ls---sh\"><li><strong>docker image ls</strong> - Show info about all images</li>\r\n<li><em>docker image inspect image -</em> Show info about an image</li>\r\n<li><strong>docker image history <em>image</em></strong> - Show image layer history</li>\r\n<li><em>docker image tag source_image target_image -</em> Create a new image based on an existing image. It is possible to specify tag, by default it will be <strong>latest</strong></li>\r\n<li><strong>docker image push <em>image</em></strong> - Push the image to your docker hub repository.</li>\r\n<li><em>docker image build image -</em> Build a image from dockerfile</li>\r\n</ul><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<ul id=\"bkmrk-docker-network-ls---\"><li><strong>docker network ls</strong> - Show all networks</li>\r\n<li><strong>docker network inspect <em>network</em></strong> - Inspect a network</li>\r\n<li><strong>docker network create <em>network</em></strong> - Create a network</li>\r\n<li><strong>docker network connect <em>network container</em></strong> - Attach a network to a container</li>\r\n<li><strong>docker network disconnect <em>network container</em></strong> - Detach a network from a container</li>\r\n</ul><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<ul id=\"bkmrk-docker-volume-ls---l\"><li><strong>docker volume ls</strong> - List all volumes</li>\r\n</ul>', 'Container Actions\r\n\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\n\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume. If you start the volume name with // then it will be created as bind mount. -v //local_file/directory:container file/directory. Use // for windows and / for mac/linux.\r\n\r\n\r\ndocker container exec -it - Run a command in the existing container.\r\n\r\n\r\ndocker container stop container - Stop a docker container.\r\n\r\n\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\n\r\n\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\n\r\n\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\n\r\nContainer info\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\n\r\ndocker container stats - Performance stats for all containers\r\nSingle container info\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker*-*specific formatting language.\r\n\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image ls - Show info about all images\r\ndocker image inspect image - Show info about an image\r\ndocker image history image - Show image layer history\r\ndocker image tag source_image target_image - Create a new image based on an existing image. It is possible to specify tag, by default it will be latest\r\ndocker image push image - Push the image to your docker hub repository.\r\ndocker image build image - Build a image from dockerfile\r\nNetworks\r\ndocker network ls - Show all networks\r\ndocker network inspect network - Inspect a network\r\ndocker network create network - Create a network\r\ndocker network connect network container - Attach a network to a container\r\ndocker network disconnect network container - Detach a network from a container\r\nVolumes\r\ndocker volume ls - List all volumes\r\n', 1, '2021-12-14 19:13:46', '2021-12-14 19:13:46', 'common-docker-commands', 'docker', 'version', '', '', 3),
(197, 31, 'Volumes', '<p id=\"bkmrk-docker-has-two-optio\">Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:</p>\r\n<ol id=\"bkmrk-volumes---are-stored\" class=\"points\"><li><strong>Volumes</strong> - are stored in a part of the host filesystem, which is managed by Docker.</li>\r\n<li><strong>Bind mounts </strong>- may be stored <em>anywhere</em> on the host system.</li>\r\n</ol><p id=\"bkmrk-%C2%A0-0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639506691980.png\" alt=\"image-1639506691980.png\"></a></p>\r\n<h3 id=\"bkmrk-what-are-volumes%3F\">What are Volumes?</h3>\r\n<p id=\"bkmrk-docker-volumes-are-f\">Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).</p>\r\n<p id=\"bkmrk-there-are-3-ways-to-\">There are 3 ways to create a volume:</p>\r\n<ul id=\"bkmrk-docker-container-run\"><li>docker container run <strong>-v <em>container_directory </em></strong>- Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (<strong>Anonymous Volume</strong>).</li>\r\n<li>docker container run <strong>-v <em>host_directory:</em><em>container_directory </em></strong>- Mount a file system in container directory and specify the directory on the host where it should save the persisted data. </li>\r\n<li>docker container run <strong>-v volume_name<em>:</em><em>container_directory </em></strong>- Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (<strong>Named Volume</strong>).</li>\r\n</ul><p id=\"bkmrk-when-creating-a-volu\">When creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.</p>\r\n<ul id=\"bkmrk-for%C2%A0mongodb%C2%A0its-%2Fdat\"><li>For MongoDB its <strong>/data/db</strong></li>\r\n<li>For MySQLits /<strong>var/lib/mysql</strong></li>\r\n<li>For PostgreSQL its <strong>/var/lib/postresql/data</strong></li>\r\n</ul><h3 id=\"bkmrk-what-are-bind-mounts\">What are Bind Mounts?</h3>\r\n<p id=\"bkmrk-bind-mounts-are-crea\">Bind mounts are created by binding an existing folder in the host system to a path in the container, similarly to volumes.</p>\r\n<p id=\"bkmrk-to-use-bind-mounts%2C-\">To use bind mounts, the file or directory does not need to exist on your Docker host already. If it doesn’t exist, it will be created on demand. Bind mounts rely on the host machine’s filesystem having a specific directory structure available. You must explicitly create a path to the file or folder to place the storage.</p>\r\n<h3 id=\"bkmrk-volumes-vs-bind-moun\">Volumes vs Bind Mounts</h3>\r\n<p id=\"bkmrk-volumes%C2%A0are-the-pref\"><strong>Volumes </strong>are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.</p>', 'Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:\r\nVolumes - are stored in a part of the host filesystem, which is managed by Docker.\r\nBind mounts - may be stored anywhere on the host system.\r\n \r\n\r\nWhat are Volumes?\r\nDocker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).\r\nThere are 3 ways to create a volume:\r\ndocker container run -v container_directory - Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (Anonymous Volume).\r\ndocker container run -v host_directory:container_directory - Mount a file system in container directory and specify the directory on the host where it should save the persisted data. \r\ndocker container run -v volume_name:container_directory - Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (Named Volume).\r\nWhen creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.\r\nFor MongoDB its /data/db\r\nFor MySQLits /var/lib/mysql\r\nFor PostgreSQL its /var/lib/postresql/data\r\nWhat are Bind Mounts?\r\nBind mounts are created by binding an existing folder in the host system to a path in the container, similarly to volumes.\r\nTo use bind mounts, the file or directory does not need to exist on your Docker host already. If it doesn’t exist, it will be created on demand. Bind mounts rely on the host machine’s filesystem having a specific directory structure available. You must explicitly create a path to the file or folder to place the storage.\r\nVolumes vs Bind Mounts\r\nVolumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.', 1, '2021-12-14 19:37:46', '2021-12-14 19:37:46', 'volumes', 'docker', 'version', '', '', 12),
(198, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container Actions</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li style=\"list-style-type: none;\">\r\n<ul><li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. \r\n<p><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</p>\r\n</li>\r\n</ul><ul><li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec -it</strong> - Run a command in the existing container.</p>\r\n</li>\r\n<li>\r\n<p><em><strong>docker container stop container</strong> -</em> Stop a docker container.</p>\r\n</li>\r\n<li>\r\n<p><strong>docker container rm <em>container</em></strong> - Remove a container</p>\r\n<ul><li>Use <strong>-f</strong> to force remove</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container start <em>container</em></strong> - Start docker container</p>\r\n<ul><li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</p>\r\n<ul><li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n</ul></li>\r\n</ul><h4 id=\"bkmrk-all-container-info\">Container info</h4>\r\n<ul id=\"bkmrk-docker-container-ls-\"><li><strong>docker container ls</strong> - list all started containers.\r\n<ul><li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n</ul></li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n</ul><h4 id=\"bkmrk-single-container-inf\">Single container info</h4>\r\n<ul id=\"bkmrk-docker-container-log\"><li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config\r\n<ul><li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker*-*specific formatting language.</li>\r\n</ul></li>\r\n<li><em>docker container port container -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<ul id=\"bkmrk-docker-image-ls---sh\"><li><strong>docker image ls</strong> - Show info about all images</li>\r\n<li><em>docker image inspect image -</em> Show info about an image</li>\r\n<li><strong>docker image history <em>image</em></strong> - Show image layer history</li>\r\n<li><em>docker image tag source_image target_image -</em> Create a new image based on an existing image. It is possible to specify tag, by default it will be <strong>latest</strong></li>\r\n<li><strong>docker image push <em>image</em></strong> - Push the image to your docker hub repository.</li>\r\n<li><em>docker image build image -</em> Build a image from dockerfile</li>\r\n</ul><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<ul id=\"bkmrk-docker-network-ls---\"><li><strong>docker network ls</strong> - Show all networks</li>\r\n<li><strong>docker network inspect <em>network</em></strong> - Inspect a network</li>\r\n<li><strong>docker network create <em>network</em></strong> - Create a network</li>\r\n<li><strong>docker network connect <em>network container</em></strong> - Attach a network to a container</li>\r\n<li><strong>docker network disconnect <em>network container</em></strong> - Detach a network from a container</li>\r\n</ul><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<ul id=\"bkmrk-docker-volume-ls---l\"><li><strong>docker volume ls</strong> - List all volumes</li>\r\n</ul>', 'Container Actions\r\n\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\n\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\n\r\n\r\ndocker container exec -it - Run a command in the existing container.\r\n\r\n\r\ndocker container stop container - Stop a docker container.\r\n\r\n\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\n\r\n\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\n\r\n\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\n\r\nContainer info\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\n\r\ndocker container stats - Performance stats for all containers\r\nSingle container info\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker*-*specific formatting language.\r\n\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image ls - Show info about all images\r\ndocker image inspect image - Show info about an image\r\ndocker image history image - Show image layer history\r\ndocker image tag source_image target_image - Create a new image based on an existing image. It is possible to specify tag, by default it will be latest\r\ndocker image push image - Push the image to your docker hub repository.\r\ndocker image build image - Build a image from dockerfile\r\nNetworks\r\ndocker network ls - Show all networks\r\ndocker network inspect network - Inspect a network\r\ndocker network create network - Create a network\r\ndocker network connect network container - Attach a network to a container\r\ndocker network disconnect network container - Detach a network from a container\r\nVolumes\r\ndocker volume ls - List all volumes\r\n', 1, '2021-12-14 19:43:37', '2021-12-14 19:43:37', 'common-docker-commands', 'docker', 'version', '', '', 4),
(200, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container Actions</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\n<ul><li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. \r\n<p><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</p>\r\n</li>\r\n</ul><ul><li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec -it</strong> - Run a command in the existing container.</p>\r\n</li>\r\n<li>\r\n<p><em><strong>docker container stop container</strong> -</em> Stop a docker container.</p>\r\n</li>\r\n<li>\r\n<p><strong>docker container rm <em>container</em></strong> - Remove a container</p>\r\n<ul><li>Use <strong>-f</strong> to force remove</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container start <em>container</em></strong> - Start docker container</p>\r\n<ul><li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</p>\r\n<ul><li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n</ul></li>\r\n</ul><h4 id=\"bkmrk-all-container-info\">Container info</h4>\r\n<ul id=\"bkmrk-docker-container-ls-\"><li><strong>docker container ls</strong> - list all started containers.\r\n<ul><li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n</ul></li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n</ul><h4 id=\"bkmrk-single-container-inf\">Single container info</h4>\r\n<ul id=\"bkmrk-docker-container-log\"><li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config\r\n<ul><li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker*-*specific formatting language.</li>\r\n</ul></li>\r\n<li><em>docker container port container -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<ul id=\"bkmrk-docker-image-ls---sh\"><li><strong>docker image ls</strong> - Show info about all images</li>\r\n<li><em>docker image inspect image -</em> Show info about an image</li>\r\n<li><strong>docker image history <em>image</em></strong> - Show image layer history</li>\r\n<li><em>docker image tag source_image target_image -</em> Create a new image based on an existing image. It is possible to specify tag, by default it will be <strong>latest</strong></li>\r\n<li><strong>docker image push <em>image</em></strong> - Push the image to your docker hub repository.</li>\r\n<li><em>docker image build image -</em> Build a image from dockerfile</li>\r\n</ul><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<ul id=\"bkmrk-docker-network-ls---\"><li><strong>docker network ls</strong> - Show all networks</li>\r\n<li><strong>docker network inspect <em>network</em></strong> - Inspect a network</li>\r\n<li><strong>docker network create <em>network</em></strong> - Create a network</li>\r\n<li><strong>docker network connect <em>network container</em></strong> - Attach a network to a container</li>\r\n<li><strong>docker network disconnect <em>network container</em></strong> - Detach a network from a container</li>\r\n</ul><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<ul id=\"bkmrk-docker-volume-ls---l\"><li><strong>docker volume ls</strong> - List all volumes</li>\r\n</ul>', 'Container Actions\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\n\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\n\r\n\r\ndocker container exec -it - Run a command in the existing container.\r\n\r\n\r\ndocker container stop container - Stop a docker container.\r\n\r\n\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\n\r\n\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\n\r\n\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\n\r\nContainer info\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\n\r\ndocker container stats - Performance stats for all containers\r\nSingle container info\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker*-*specific formatting language.\r\n\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image ls - Show info about all images\r\ndocker image inspect image - Show info about an image\r\ndocker image history image - Show image layer history\r\ndocker image tag source_image target_image - Create a new image based on an existing image. It is possible to specify tag, by default it will be latest\r\ndocker image push image - Push the image to your docker hub repository.\r\ndocker image build image - Build a image from dockerfile\r\nNetworks\r\ndocker network ls - Show all networks\r\ndocker network inspect network - Inspect a network\r\ndocker network create network - Create a network\r\ndocker network connect network container - Attach a network to a container\r\ndocker network disconnect network container - Detach a network from a container\r\nVolumes\r\ndocker volume ls - List all volumes\r\n', 1, '2021-12-14 19:44:41', '2021-12-14 19:44:41', 'common-docker-commands', 'docker', 'version', '', '', 5);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(201, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container Actions</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\n<ul><li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. \r\n<p><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</p>\r\n</li>\r\n</ul><ul><li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec -it</strong> - Run a command in the existing container.</p>\r\n</li>\r\n<li>\r\n<p><em><strong>docker container stop container</strong> -</em> Stop a docker container.</p>\r\n</li>\r\n<li>\r\n<p><strong>docker container rm <em>container</em></strong> - Remove a container</p>\r\n<ul><li>Use <strong>-f</strong> to force remove</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container start <em>container</em></strong> - Start docker container</p>\r\n<ul><li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</p>\r\n<ul><li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n</ul></li>\r\n</ul><h4 id=\"bkmrk-all-container-info\">Container info</h4>\r\n<ul id=\"bkmrk-docker-container-ls-\"><li><strong>docker container ls</strong> - list all started containers.\r\n<ul><li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n</ul></li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n</ul><h4 id=\"bkmrk-single-container-inf\">Single container info</h4>\r\n<ul id=\"bkmrk-docker-container-log\"><li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config\r\n<ul><li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker specific formatting language.</li>\r\n</ul></li>\r\n<li><em>docker container port container -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<ul id=\"bkmrk-docker-image-ls---sh\"><li><strong>docker image ls</strong> - Show info about all images</li>\r\n<li><em>docker image inspect image -</em> Show info about an image</li>\r\n<li><strong>docker image history <em>image</em></strong> - Show image layer history</li>\r\n<li><em>docker image tag source_image target_image -</em> Create a new image based on an existing image. It is possible to specify tag, by default it will be <strong>latest</strong></li>\r\n<li><strong>docker image push <em>image</em></strong> - Push the image to your docker hub repository.</li>\r\n<li><em>docker image build image -</em> Build a image from dockerfile</li>\r\n</ul><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<ul id=\"bkmrk-docker-network-ls---\"><li><strong>docker network ls</strong> - Show all networks</li>\r\n<li><strong>docker network inspect <em>network</em></strong> - Inspect a network</li>\r\n<li><strong>docker network create <em>network</em></strong> - Create a network</li>\r\n<li><strong>docker network connect <em>network container</em></strong> - Attach a network to a container</li>\r\n<li><strong>docker network disconnect <em>network container</em></strong> - Detach a network from a container</li>\r\n</ul><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<ul id=\"bkmrk-docker-volume-ls---l\"><li><strong>docker volume ls</strong> - List all volumes</li>\r\n</ul>', 'Container Actions\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\n\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\n\r\n\r\ndocker container exec -it - Run a command in the existing container.\r\n\r\n\r\ndocker container stop container - Stop a docker container.\r\n\r\n\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\n\r\n\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\n\r\n\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\n\r\nContainer info\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\n\r\ndocker container stats - Performance stats for all containers\r\nSingle container info\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker specific formatting language.\r\n\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image ls - Show info about all images\r\ndocker image inspect image - Show info about an image\r\ndocker image history image - Show image layer history\r\ndocker image tag source_image target_image - Create a new image based on an existing image. It is possible to specify tag, by default it will be latest\r\ndocker image push image - Push the image to your docker hub repository.\r\ndocker image build image - Build a image from dockerfile\r\nNetworks\r\ndocker network ls - Show all networks\r\ndocker network inspect network - Inspect a network\r\ndocker network create network - Create a network\r\ndocker network connect network container - Attach a network to a container\r\ndocker network disconnect network container - Detach a network from a container\r\nVolumes\r\ndocker volume ls - List all volumes\r\n', 1, '2021-12-14 19:45:02', '2021-12-14 19:45:02', 'common-docker-commands', 'docker', 'version', '', '', 6),
(204, 31, 'Volumes', '<p id=\"bkmrk-docker-has-two-optio\">Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:</p>\r\n<ol id=\"bkmrk-volumes---are-stored\" class=\"points\"><li><strong>Volumes</strong> - are stored in a part of the host filesystem, which is managed by Docker.</li>\r\n<li><strong>Bind mounts </strong>- may be stored <em>anywhere</em> on the host system.</li>\r\n</ol><p id=\"bkmrk-%C2%A0-0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639506691980.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639506691980.png\" alt=\"image-1639506691980.png\"></a></p>\r\n<h3 id=\"bkmrk-what-are-volumes%3F\">What are Volumes?</h3>\r\n<p id=\"bkmrk-docker-volumes-are-f\">Docker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).</p>\r\n<p id=\"bkmrk-there-are-3-ways-to-\">There are 3 ways to create a volume:</p>\r\n<ul id=\"bkmrk-docker-container-run\"><li>docker container run <strong>-v <em>container_directory </em></strong>- Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (<strong>Anonymous Volume</strong>).</li>\r\n<li>docker container run <strong>-v <em>host_directory:</em><em>container_directory </em></strong>- Mount a file system in container directory and specify the directory on the host where it should save the persisted data. </li>\r\n<li>docker container run <strong>-v volume_name<em>:</em><em>container_directory </em></strong>- Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (<strong>Named Volume</strong>).</li>\r\n</ul><p id=\"bkmrk-when-creating-a-volu\">When creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.</p>\r\n<ul id=\"bkmrk-for%C2%A0mongodb%C2%A0its-%2Fdat\"><li>For MongoDB its <strong>/data/db</strong></li>\r\n<li>For MySQLits /<strong>var/lib/mysql</strong></li>\r\n<li>For PostgreSQL its <strong>/var/lib/postresql/data</strong></li>\r\n</ul><h3 id=\"bkmrk-what-are-bind-mounts\">What are Bind Mounts?</h3>\r\n<p id=\"bkmrk-bind-mounts-are-crea\">Bind mounts are created by binding an existing folder in the host system to a path in the container, similarly to volumes. </p>\r\n<p id=\"bkmrk-to-use-bind-mounts%2C-\">To use bind mounts, the file or directory does not need to exist on your Docker host already. If it doesn’t exist, it will be created on demand. Bind mounts rely on the host machine’s filesystem having a specific directory structure available. You must explicitly create a path to the file or folder to place the storage.</p>\r\n<h3 id=\"bkmrk-volumes-vs-bind-moun\">Volumes vs Bind Mounts</h3>\r\n<p id=\"bkmrk-volumes%C2%A0are-the-pref\"><strong>Volumes </strong>are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.</p>', 'Docker has two options for containers to store files in the host machine so that the files are persisted even after the container stops:\r\nVolumes - are stored in a part of the host filesystem, which is managed by Docker.\r\nBind mounts - may be stored anywhere on the host system.\r\n \r\n\r\nWhat are Volumes?\r\nDocker volumes are file systems mounted on Docker containers to preserve data generated by the running container. Volumes outlive the containers. That means if the container will be deleted, the volume won\'t and it has to be deleted manually. All data that will be inside the container on the mounted directory will be available to the host machine as well. One volume can be used for more than one container (if both containers need to access the same data).\r\nThere are 3 ways to create a volume:\r\ndocker container run -v container_directory - Mount a file system in container directory without specifying host directory. This means that Docker will automatically create a new directory and manage the volume for us. Since we don\'t specify the volume name, it will be generated as a random hash (Anonymous Volume).\r\ndocker container run -v host_directory:container_directory - Mount a file system in container directory and specify the directory on the host where it should save the persisted data. \r\ndocker container run -v volume_name:container_directory - Mount a file system in container directory and like in the anonymous volumes, docker will handle the host directory automatically. This type of volume is better because it allows us to give the volume a name (Named Volume).\r\nWhen creating a volume, we need to specify the container directory where it stores its data. Each database has its own unique path. When a container will start, all the data that is in the host volume directory will be replicated to the specified container directory.\r\nFor MongoDB its /data/db\r\nFor MySQLits /var/lib/mysql\r\nFor PostgreSQL its /var/lib/postresql/data\r\nWhat are Bind Mounts?\r\nBind mounts are created by binding an existing folder in the host system to a path in the container, similarly to volumes. \r\nTo use bind mounts, the file or directory does not need to exist on your Docker host already. If it doesn’t exist, it will be created on demand. Bind mounts rely on the host machine’s filesystem having a specific directory structure available. You must explicitly create a path to the file or folder to place the storage.\r\nVolumes vs Bind Mounts\r\nVolumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes are often a better choice than persisting data in a container’s writable layer, because a volume does not increase the size of the containers using it, and the volume’s contents exist outside the lifecycle of a given container.', 1, '2021-12-18 10:50:18', '2021-12-18 10:50:18', 'volumes', 'docker', 'version', '', '', 13),
(205, 33, 'Docker Compose', '', '', 1, '2021-12-18 11:02:25', '2021-12-18 11:02:25', 'docker-compose', 'docker', 'version', '', 'Initial publish', 1),
(206, 34, 'Networks', '', '', 1, '2021-12-18 12:28:53', '2021-12-18 12:28:53', 'networks', 'docker', 'version', '', 'Initial publish', 1),
(208, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container Actions</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\n<ul><li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. \r\n<p><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</p>\r\n</li>\r\n</ul><ul><li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec -it</strong> - Run a command in the existing container.</p>\r\n</li>\r\n<li>\r\n<p><em><strong>docker container stop container</strong> -</em> Stop a docker container.</p>\r\n</li>\r\n<li>\r\n<p><strong>docker container rm <em>container</em></strong> - Remove a container</p>\r\n<ul><li>Use <strong>-f</strong> to force remove</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container start <em>container</em></strong> - Start docker container</p>\r\n<ul><li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</p>\r\n<ul><li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n</ul></li>\r\n</ul><h4 id=\"bkmrk-all-container-info\">Container info</h4>\r\n<ul id=\"bkmrk-docker-container-ls-\"><li><strong>docker container ls</strong> - list all started containers.\r\n<ul><li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n</ul></li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n</ul><h4 id=\"bkmrk-single-container-inf\">Single container info</h4>\r\n<ul id=\"bkmrk-docker-container-log\"><li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config\r\n<ul><li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker specific formatting language.</li>\r\n</ul></li>\r\n<li><em>docker container port container -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<ul id=\"bkmrk-docker-image-ls---sh\"><li><strong>docker image ls</strong> - Show info about all images</li>\r\n<li><em>docker image inspect image -</em> Show info about an image</li>\r\n<li><strong>docker image history <em>image</em></strong> - Show image layer history</li>\r\n<li><em>docker image tag source_image target_image -</em> Create a new image based on an existing image. It is possible to specify tag, by default it will be <strong>latest</strong></li>\r\n<li><strong>docker image push <em>image</em></strong> - Push the image to your docker hub repository.</li>\r\n<li><em>docker image build image -</em> Build a image from dockerfile</li>\r\n</ul><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<ul id=\"bkmrk-docker-network-ls---\"><li><strong>docker network ls</strong> - Show all networks</li>\r\n<li><strong>docker network inspect <em>network</em></strong> - Inspect a network</li>\r\n<li><strong>docker network create <em>network</em></strong> - Create a network</li>\r\n<li><strong>docker network connect <em>network container</em></strong> - Attach a network to a container</li>\r\n<li><strong>docker network disconnect <em>network container</em></strong> - Detach a network from a container</li>\r\n</ul><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<ul id=\"bkmrk-docker-volume-ls---l\"><li><strong>docker volume ls</strong> - List all volumes</li>\r\n</ul><h4 id=\"bkmrk-misc.%C2%A0\">Misc. </h4>\r\n<p id=\"bkmrk-%C2%A0docker-cp-container\"> <strong>docker cp <em>container:src_path dest_path </em></strong><em>- </em>Copy files/folders between a container and the local filesystem<em>.</em></p>', 'Container Actions\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\n\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\n\r\n\r\ndocker container exec -it - Run a command in the existing container.\r\n\r\n\r\ndocker container stop container - Stop a docker container.\r\n\r\n\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\n\r\n\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\n\r\n\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\n\r\nContainer info\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\n\r\ndocker container stats - Performance stats for all containers\r\nSingle container info\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker specific formatting language.\r\n\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image ls - Show info about all images\r\ndocker image inspect image - Show info about an image\r\ndocker image history image - Show image layer history\r\ndocker image tag source_image target_image - Create a new image based on an existing image. It is possible to specify tag, by default it will be latest\r\ndocker image push image - Push the image to your docker hub repository.\r\ndocker image build image - Build a image from dockerfile\r\nNetworks\r\ndocker network ls - Show all networks\r\ndocker network inspect network - Inspect a network\r\ndocker network create network - Create a network\r\ndocker network connect network container - Attach a network to a container\r\ndocker network disconnect network container - Detach a network from a container\r\nVolumes\r\ndocker volume ls - List all volumes\r\nMisc. \r\n docker cp container:src_path dest_path - Copy files/folders between a container and the local filesystem.', 1, '2021-12-18 12:56:54', '2021-12-18 12:56:54', 'common-docker-commands', 'docker', 'version', '', '', 7),
(210, 34, 'Networks', '<p id=\"bkmrk-docker-networks-take\">Docker Networks takes care of the networking aspects so that the containers can communicate with other containers and also with the Docker Host. Already running containers can also be attached to a network.</p>\r\n<p id=\"bkmrk-docker-by%C2%A0default-su\">Docker by default supports 3 networks:</p>\r\n<ul id=\"bkmrk-bridge-host-none\"><li>Bridge</li>\r\n<li>Host</li>\r\n<li>None</li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639842891807.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639842891807.png\" alt=\"image-1639842891807.png\"></a></p>\r\n<h4 id=\"bkmrk-none\">None</h4>\r\n<p id=\"bkmrk-this-mode%C2%A0will-not-c\">This mode will not configure any IP for the container and doesn’t have any access to the external network as well as for other containers. It does have the loopback address and can be used for running batch jobs.</p>\r\n<h4 id=\"bkmrk-bridge\">Bridge</h4>\r\n<p id=\"bkmrk-it-is-the-docker-def\">It is the Docker default networking mode which will enable the connectivity to the other interfaces of the host machine as well as among containers.</p>\r\n<h4 id=\"bkmrk-host\">Host</h4>\r\n<p id=\"bkmrk-in-this-mode%C2%A0contain\">In this mode container will share the host’s network stack and all interfaces from the host will be available to the container. The container’s host name will match the host name on the host system</p>', 'Docker Networks takes care of the networking aspects so that the containers can communicate with other containers and also with the Docker Host. Already running containers can also be attached to a network.\r\nDocker by default supports 3 networks:\r\nBridge\r\nHost\r\nNone\r\n\r\nNone\r\nThis mode will not configure any IP for the container and doesn’t have any access to the external network as well as for other containers. It does have the loopback address and can be used for running batch jobs.\r\nBridge\r\nIt is the Docker default networking mode which will enable the connectivity to the other interfaces of the host machine as well as among containers.\r\nHost\r\nIn this mode container will share the host’s network stack and all interfaces from the host will be available to the container. The container’s host name will match the host name on the host system', 1, '2021-12-18 15:58:47', '2021-12-18 15:58:47', 'networks', 'docker', 'version', '', '', 2),
(212, 34, 'Networks', '<p id=\"bkmrk-docker-networks-take\">Docker Networks takes care of the networking aspects so that the containers can communicate with other containers and also with the Docker Host. Already running containers can also be attached to a network.</p>\r\n<p id=\"bkmrk-docker-by%C2%A0default-su\">Docker by default supports 3 networks:</p>\r\n<ul id=\"bkmrk-bridge-host-none\"><li>Bridge</li>\r\n<li>Host</li>\r\n<li>None</li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639842891807.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639842891807.png\" alt=\"image-1639842891807.png\"></a></p>\r\n<h4 id=\"bkmrk-none\">None</h4>\r\n<p id=\"bkmrk-this-mode-will-not-c\">This mode will not configure any IP for the container and doesn’t have any access to the external network as well as for other containers. This option is used when a user wants to disable the networking access to a container.</p>\r\n<h4 id=\"bkmrk-bridge\">Bridge</h4>\r\n<p id=\"bkmrk-it-is-the-docker-def\">Bridge network uses a software bridge which allows containers connected to the same bridge network to communicate, while providing isolation from containers which are not connected to that bridge network. </p>\r\n<p id=\"bkmrk-when-you-start-docke\">When you start Docker, a default bridge network is created automatically, and newly-started containers connect to it unless otherwise specified. You can also create user-defined custom bridge networks. User-defined bridge networks are superior to the default bridge network.</p>\r\n<p id=\"bkmrk-differences-between-\"><strong>Differences between user-defined bridges and the default bridge</strong></p>\r\n<ul id=\"bkmrk-containers-on-the-de\"><li>Containers on the default bridge network can only access each other by IP addresses. On a user-defined bridge network, containers can resolve each other by name or alias.</li>\r\n</ul><h4 id=\"bkmrk-host\">Host</h4>\r\n<p id=\"bkmrk-in-this-mode%C2%A0contain\">In this mode container will share the host’s network stack and all interfaces from the host will be available to the container. The container’s host name will match the host name on the host system</p>', 'Docker Networks takes care of the networking aspects so that the containers can communicate with other containers and also with the Docker Host. Already running containers can also be attached to a network.\r\nDocker by default supports 3 networks:\r\nBridge\r\nHost\r\nNone\r\n\r\nNone\r\nThis mode will not configure any IP for the container and doesn’t have any access to the external network as well as for other containers. This option is used when a user wants to disable the networking access to a container.\r\nBridge\r\nBridge network uses a software bridge which allows containers connected to the same bridge network to communicate, while providing isolation from containers which are not connected to that bridge network. \r\nWhen you start Docker, a default bridge network is created automatically, and newly-started containers connect to it unless otherwise specified. You can also create user-defined custom bridge networks. User-defined bridge networks are superior to the default bridge network.\r\nDifferences between user-defined bridges and the default bridge\r\nContainers on the default bridge network can only access each other by IP addresses. On a user-defined bridge network, containers can resolve each other by name or alias.\r\nHost\r\nIn this mode container will share the host’s network stack and all interfaces from the host will be available to the container. The container’s host name will match the host name on the host system', 1, '2021-12-18 16:08:58', '2021-12-18 16:08:58', 'networks', 'docker', 'version', '', '', 3),
(213, 34, 'Networks', '<p id=\"bkmrk-docker-networks-take\">Docker Networks takes care of the networking aspects so that the containers can communicate with other containers and also with the Docker Host. Already running containers can also be attached to a network.</p>\r\n<p id=\"bkmrk-docker-by%C2%A0default-su\">Docker by default supports 3 networks:</p>\r\n<ul id=\"bkmrk-bridge-host-none\"><li>Bridge</li>\r\n<li>Host</li>\r\n<li>None</li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639842891807.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639842891807.png\" alt=\"image-1639842891807.png\"></a></p>\r\n<h4 id=\"bkmrk-none\">None</h4>\r\n<p id=\"bkmrk-this-mode-will-not-c\">This mode will not configure any IP for the container and doesn’t have any access to the external network as well as for other containers. This option is used when a user wants to disable the networking access to a container.</p>\r\n<h4 id=\"bkmrk-bridge\">Bridge</h4>\r\n<p id=\"bkmrk-it-is-the-docker-def\">Bridge network uses a software bridge which allows containers connected to the same bridge network to communicate, while providing isolation from containers which are not connected to that bridge network. </p>\r\n<p id=\"bkmrk-when-you-start-docke\">When you start Docker, a default bridge network is created automatically, and newly-started containers connect to it unless otherwise specified. You can also create user-defined custom bridge networks. User-defined bridge networks are superior to the default bridge network.</p>\r\n<p id=\"bkmrk-differences-between-\"><strong>Differences between user-defined bridges and the default bridge</strong></p>\r\n<ul id=\"bkmrk-containers-on-the-de\"><li>User-defined bridges provide automatic DNS resolution between containers. Containers on the default bridge network can only access each other by IP addresses. On a user-defined bridge network, containers can resolve each other by name or alias.</li>\r\n</ul><h4 id=\"bkmrk-host\">Host</h4>\r\n<p id=\"bkmrk-in-this-mode%C2%A0contain\">In this mode container will share the host’s network stack and all interfaces from the host will be available to the container. The container’s host name will match the host name on the host system</p>', 'Docker Networks takes care of the networking aspects so that the containers can communicate with other containers and also with the Docker Host. Already running containers can also be attached to a network.\r\nDocker by default supports 3 networks:\r\nBridge\r\nHost\r\nNone\r\n\r\nNone\r\nThis mode will not configure any IP for the container and doesn’t have any access to the external network as well as for other containers. This option is used when a user wants to disable the networking access to a container.\r\nBridge\r\nBridge network uses a software bridge which allows containers connected to the same bridge network to communicate, while providing isolation from containers which are not connected to that bridge network. \r\nWhen you start Docker, a default bridge network is created automatically, and newly-started containers connect to it unless otherwise specified. You can also create user-defined custom bridge networks. User-defined bridge networks are superior to the default bridge network.\r\nDifferences between user-defined bridges and the default bridge\r\nUser-defined bridges provide automatic DNS resolution between containers. Containers on the default bridge network can only access each other by IP addresses. On a user-defined bridge network, containers can resolve each other by name or alias.\r\nHost\r\nIn this mode container will share the host’s network stack and all interfaces from the host will be available to the container. The container’s host name will match the host name on the host system', 1, '2021-12-18 16:09:23', '2021-12-18 16:09:23', 'networks', 'docker', 'version', '', '', 4),
(215, 34, 'Networks', '<p id=\"bkmrk-docker-networks-take\">Docker Networks takes care of the networking aspects so that the containers can communicate with other containers and also with the Docker Host. Already running containers can also be attached to a network.</p>\r\n<p id=\"bkmrk-docker-by%C2%A0default-su\">Docker by default supports 3 networks:</p>\r\n<ul id=\"bkmrk-bridge-host-none\"><li>Bridge</li>\r\n<li>Host</li>\r\n<li>None</li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639842891807.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639842891807.png\" alt=\"image-1639842891807.png\" width=\"362\" height=\"225\"></a></p>\r\n<h4 id=\"bkmrk-none\">None</h4>\r\n<p id=\"bkmrk-this-mode-will-not-c\">This mode will not configure any IP for the container and doesn’t have any access to the external network as well as for other containers. This option is used when a user wants to disable the networking access to a container.</p>\r\n<h4 id=\"bkmrk-bridge\">Bridge</h4>\r\n<p id=\"bkmrk-it-is-the-docker-def\">Bridge network uses a software bridge which allows containers connected to the same bridge network to communicate, while providing isolation from containers which are not connected to that bridge network. </p>\r\n<p id=\"bkmrk-when-you-start-docke\">When you start Docker, a default bridge network is created automatically, and newly-started containers connect to it unless otherwise specified. You can also create user-defined custom bridge networks. User-defined bridge networks are superior to the default bridge network.</p>\r\n<ul id=\"bkmrk-the-container-can%27t-\"><li>The container can\'t directly use host\'s networking, there is a need for “port mapping“.</li>\r\n<li>User-defined bridges provide automatic DNS resolution between containers. Containers on the default bridge network can only access each other by IP addresses. On a user-defined bridge network, containers can resolve each other by name or alias.</li>\r\n</ul><h4 id=\"bkmrk-host\">Host</h4>\r\n<p id=\"bkmrk-in-this-mode%C2%A0contain\">In this mode container will share the host’s network stack and all interfaces from the host will be available to the container. The container’s host name will match the host name on the host system. </p>\r\n<ul id=\"bkmrk-the-a-container-can-\"><li>The a container can directly use the host’s networking, for example, the docker container can directly use the “eth0” for sending and receiving packets. There is no need for \"port mapping\".</li>\r\n</ul>', 'Docker Networks takes care of the networking aspects so that the containers can communicate with other containers and also with the Docker Host. Already running containers can also be attached to a network.\r\nDocker by default supports 3 networks:\r\nBridge\r\nHost\r\nNone\r\n\r\nNone\r\nThis mode will not configure any IP for the container and doesn’t have any access to the external network as well as for other containers. This option is used when a user wants to disable the networking access to a container.\r\nBridge\r\nBridge network uses a software bridge which allows containers connected to the same bridge network to communicate, while providing isolation from containers which are not connected to that bridge network. \r\nWhen you start Docker, a default bridge network is created automatically, and newly-started containers connect to it unless otherwise specified. You can also create user-defined custom bridge networks. User-defined bridge networks are superior to the default bridge network.\r\nThe container can\'t directly use host\'s networking, there is a need for “port mapping“.\r\nUser-defined bridges provide automatic DNS resolution between containers. Containers on the default bridge network can only access each other by IP addresses. On a user-defined bridge network, containers can resolve each other by name or alias.\r\nHost\r\nIn this mode container will share the host’s network stack and all interfaces from the host will be available to the container. The container’s host name will match the host name on the host system. \r\nThe a container can directly use the host’s networking, for example, the docker container can directly use the “eth0” for sending and receiving packets. There is no need for \"port mapping\".\r\n', 1, '2021-12-18 16:18:02', '2021-12-18 16:18:02', 'networks', 'docker', 'version', '', '', 5),
(216, 34, 'Networks', '<p id=\"bkmrk-docker-networks-take\">Docker Networks takes care of the networking aspects so that the containers can communicate with other containers and also with the Docker Host. Already running containers can also be attached to a network.</p>\r\n<p id=\"bkmrk-docker-by%C2%A0default-su\">Docker by default supports 3 networks:</p>\r\n<ul id=\"bkmrk-bridge-host-none\"><li>Bridge</li>\r\n<li>Host</li>\r\n<li>None</li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639842891807.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639842891807.png\" alt=\"image-1639842891807.png\" width=\"362\" height=\"225\"></a></p>\r\n<h4 id=\"bkmrk-none\">None</h4>\r\n<p id=\"bkmrk-this-mode-will-not-c\">This mode will not configure any IP for the container and doesn’t have any access to the external network as well as for other containers. This option is used when a user wants to disable the networking access to a container.</p>\r\n<h4 id=\"bkmrk-bridge\">Bridge</h4>\r\n<p id=\"bkmrk-it-is-the-docker-def\">Bridge network uses a software bridge which allows containers connected to the same bridge network to communicate, while providing isolation from containers which are not connected to that bridge network. </p>\r\n<p id=\"bkmrk-when-you-start-docke\">When you start Docker, a default bridge network is created automatically, and newly-started containers connect to it unless otherwise specified. You can also create user-defined custom bridge networks. User-defined bridge networks are superior to the default bridge network.</p>\r\n<ul id=\"bkmrk-the-container-can%27t-\"><li>The container can\'t directly use host\'s networking, there is a need for “port mapping“.</li>\r\n<li>User-defined bridges provide automatic DNS resolution between containers. Containers on the default bridge network can only access each other by IP addresses. On a user-defined bridge network, containers can resolve each other by name or alias.</li>\r\n</ul><h4 id=\"bkmrk-host\">Host</h4>\r\n<p id=\"bkmrk-in-this-mode%C2%A0contain\">In this mode container will share the host’s network stack and all interfaces from the host will be available to the container. The container’s host name will match the host name on the host system. </p>\r\n<ul id=\"bkmrk-the-a-container-can-\"><li>The a container can directly use the host’s networking, for example, the docker container can directly use the “eth0” for sending and receiving packets. There is no need for \"port mapping\".</li>\r\n</ul>', 'Docker Networks takes care of the networking aspects so that the containers can communicate with other containers and also with the Docker Host. Already running containers can also be attached to a network.\r\nDocker by default supports 3 networks:\r\nBridge\r\nHost\r\nNone\r\n\r\nNone\r\nThis mode will not configure any IP for the container and doesn’t have any access to the external network as well as for other containers. This option is used when a user wants to disable the networking access to a container.\r\nBridge\r\nBridge network uses a software bridge which allows containers connected to the same bridge network to communicate, while providing isolation from containers which are not connected to that bridge network. \r\nWhen you start Docker, a default bridge network is created automatically, and newly-started containers connect to it unless otherwise specified. You can also create user-defined custom bridge networks. User-defined bridge networks are superior to the default bridge network.\r\nThe container can\'t directly use host\'s networking, there is a need for “port mapping“.\r\nUser-defined bridges provide automatic DNS resolution between containers. Containers on the default bridge network can only access each other by IP addresses. On a user-defined bridge network, containers can resolve each other by name or alias.\r\nHost\r\nIn this mode container will share the host’s network stack and all interfaces from the host will be available to the container. The container’s host name will match the host name on the host system. \r\nThe a container can directly use the host’s networking, for example, the docker container can directly use the “eth0” for sending and receiving packets. There is no need for \"port mapping\".\r\n', 1, '2021-12-18 16:19:56', '2021-12-18 16:19:56', 'networks', 'docker', 'version', '', '', 6);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(217, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-log\">Log</h3>\r\n<ul id=\"bkmrk-git-log---returns-a-\"><li><strong>git log</strong> - Returns a log of commits\r\n<ul><li><strong>git log --oneline </strong>- Returns commits condensed in one line. Useful for getting a high-level overview of your project.</li>\r\n<li><strong>git log --graph --oneline </strong>- Show log in a graph format</li>\r\n<li><strong>git log -p </strong>- See changes of each commit.</li>\r\n<li><strong>git log -3</strong> - Show 3 most recent commits.</li>\r\n<li><strong>git log --after=\"2014-7-1\" </strong>- Show commit after or before a certain date.</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-branches\">Branches</h3>\r\n<ul id=\"bkmrk-git-branch---show-cu\"><li><strong>git branch --show-current</strong> - Show current branch.</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with Changes</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -fd </strong>- Deletes all untracked files.</li>\r\n<li><strong>git cherry-pick <em>commit </em></strong>- Get changes from a specific commit.</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nLog\r\ngit log - Returns a log of commits\r\ngit log --oneline - Returns commits condensed in one line. Useful for getting a high-level overview of your project.\r\ngit log --graph --oneline - Show log in a graph format\r\ngit log -p - See changes of each commit.\r\ngit log -3 - Show 3 most recent commits.\r\ngit log --after=\"2014-7-1\" - Show commit after or before a certain date.\r\n\r\nBranches\r\ngit branch --show-current - Show current branch.\r\nWorking with Changes\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -fd - Deletes all untracked files.\r\ngit cherry-pick commit - Get changes from a specific commit.\r\n', 1, '2021-12-18 16:44:23', '2021-12-18 16:44:23', 'common-git-commands', 'git', 'version', '', '', 14),
(219, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n<li><strong>git clone - </strong>Clones a repository into a newly created directory.<br><ul id=\"bkmrk-use%C2%A0--depth-to-creat\"><li>Use <strong>--depth </strong>to create a shallow clone with a history truncated to the specified number of commits. Using <strong>--depth 1 </strong>to clone a repository will be a lot faster than cloning it normally.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-log\">Log</h3>\r\n<ul id=\"bkmrk-git-log---returns-a-\"><li><strong>git log</strong> - Returns a log of commits\r\n<ul><li><strong>git log --oneline </strong>- Returns commits condensed in one line. Useful for getting a high-level overview of your project.</li>\r\n<li><strong>git log --graph --oneline </strong>- Show log in a graph format</li>\r\n<li><strong>git log -p </strong>- See changes of each commit.</li>\r\n<li><strong>git log -3</strong> - Show 3 most recent commits.</li>\r\n<li><strong>git log --after=\"2014-7-1\" </strong>- Show commit after or before a certain date.</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-branches\">Branches</h3>\r\n<ul id=\"bkmrk-git-branch---show-cu\"><li><strong>git branch --show-current</strong> - Show current branch.</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with Changes</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -fd </strong>- Deletes all untracked files.</li>\r\n<li><strong>git cherry-pick <em>commit </em></strong>- Get changes from a specific commit.</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit clone - Clones a repository into a newly created directory.Use --depth to create a shallow clone with a history truncated to the specified number of commits. Using --depth 1 to clone a repository will be a lot faster than cloning it normally.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nLog\r\ngit log - Returns a log of commits\r\ngit log --oneline - Returns commits condensed in one line. Useful for getting a high-level overview of your project.\r\ngit log --graph --oneline - Show log in a graph format\r\ngit log -p - See changes of each commit.\r\ngit log -3 - Show 3 most recent commits.\r\ngit log --after=\"2014-7-1\" - Show commit after or before a certain date.\r\n\r\nBranches\r\ngit branch --show-current - Show current branch.\r\nWorking with Changes\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -fd - Deletes all untracked files.\r\ngit cherry-pick commit - Get changes from a specific commit.\r\n', 1, '2021-12-18 16:48:50', '2021-12-18 16:48:50', 'common-git-commands', 'git', 'version', '', '', 15),
(221, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n<li><strong>git clone - </strong>Clones a repository into a newly created directory.<br><ul id=\"bkmrk-use%C2%A0--depth-to-creat\"><li>Use <strong>--depth </strong>to create a shallow clone with a history truncated to the specified number of commits. Using <strong>--depth 1 </strong>to clone a repository will be a lot faster than cloning it normally.</li>\r\n<li>Use <strong>--single-branch </strong>to pull only the latest (master) branch from the repository.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-log\">Log</h3>\r\n<ul id=\"bkmrk-git-log---returns-a-\"><li><strong>git log</strong> - Returns a log of commits\r\n<ul><li><strong>git log --oneline </strong>- Returns commits condensed in one line. Useful for getting a high-level overview of your project.</li>\r\n<li><strong>git log --graph --oneline </strong>- Show log in a graph format</li>\r\n<li><strong>git log -p </strong>- See changes of each commit.</li>\r\n<li><strong>git log -3</strong> - Show 3 most recent commits.</li>\r\n<li><strong>git log --after=\"2014-7-1\" </strong>- Show commit after or before a certain date.</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-branches\">Branches</h3>\r\n<ul id=\"bkmrk-git-branch---show-cu\"><li><strong>git branch --show-current</strong> - Show current branch.</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with Changes</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -fd </strong>- Deletes all untracked files.</li>\r\n<li><strong>git cherry-pick <em>commit </em></strong>- Get changes from a specific commit.</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit clone - Clones a repository into a newly created directory.Use --depth to create a shallow clone with a history truncated to the specified number of commits. Using --depth 1 to clone a repository will be a lot faster than cloning it normally.\r\nUse --single-branch to pull only the latest (master) branch from the repository.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nLog\r\ngit log - Returns a log of commits\r\ngit log --oneline - Returns commits condensed in one line. Useful for getting a high-level overview of your project.\r\ngit log --graph --oneline - Show log in a graph format\r\ngit log -p - See changes of each commit.\r\ngit log -3 - Show 3 most recent commits.\r\ngit log --after=\"2014-7-1\" - Show commit after or before a certain date.\r\n\r\nBranches\r\ngit branch --show-current - Show current branch.\r\nWorking with Changes\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -fd - Deletes all untracked files.\r\ngit cherry-pick commit - Get changes from a specific commit.\r\n', 1, '2021-12-18 16:50:00', '2021-12-18 16:50:00', 'common-git-commands', 'git', 'version', '', '', 16),
(222, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git pull).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n<li><strong>git clone - </strong>Clones a repository into a newly created directory.<br><ul id=\"bkmrk-use%C2%A0--depth-to-creat\"><li>Use <strong>--depth <em>count</em> </strong>to create a shallow clone with a history truncated to the specified number of commits. This means that using <strong>--depth 1 </strong>to clone a repository will be a lot faster than cloning it normally.</li>\r\n<li>Use <strong>--single-branch </strong>to pull only the latest (master) branch from the repository.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-log\">Log</h3>\r\n<ul id=\"bkmrk-git-log---returns-a-\"><li><strong>git log</strong> - Returns a log of commits\r\n<ul><li><strong>git log --oneline </strong>- Returns commits condensed in one line. Useful for getting a high-level overview of your project.</li>\r\n<li><strong>git log --graph --oneline </strong>- Show log in a graph format</li>\r\n<li><strong>git log -p </strong>- See changes of each commit.</li>\r\n<li><strong>git log -3</strong> - Show 3 most recent commits.</li>\r\n<li><strong>git log --after=\"2014-7-1\" </strong>- Show commit after or before a certain date.</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-branches\">Branches</h3>\r\n<ul id=\"bkmrk-git-branch---show-cu\"><li><strong>git branch --show-current</strong> - Show current branch.</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with Changes</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -fd </strong>- Deletes all untracked files.</li>\r\n<li><strong>git cherry-pick <em>commit </em></strong>- Get changes from a specific commit.</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git pull).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit clone - Clones a repository into a newly created directory.Use --depth count to create a shallow clone with a history truncated to the specified number of commits. This means that using --depth 1 to clone a repository will be a lot faster than cloning it normally.\r\nUse --single-branch to pull only the latest (master) branch from the repository.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nLog\r\ngit log - Returns a log of commits\r\ngit log --oneline - Returns commits condensed in one line. Useful for getting a high-level overview of your project.\r\ngit log --graph --oneline - Show log in a graph format\r\ngit log -p - See changes of each commit.\r\ngit log -3 - Show 3 most recent commits.\r\ngit log --after=\"2014-7-1\" - Show commit after or before a certain date.\r\n\r\nBranches\r\ngit branch --show-current - Show current branch.\r\nWorking with Changes\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -fd - Deletes all untracked files.\r\ngit cherry-pick commit - Get changes from a specific commit.\r\n', 1, '2021-12-18 16:50:34', '2021-12-18 16:50:34', 'common-git-commands', 'git', 'version', '', '', 17),
(223, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container Actions</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\n<ul><li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. \r\n<p><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</p>\r\n</li>\r\n</ul><ul><li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec -it</strong> - Run a command in the existing container.</p>\r\n</li>\r\n<li>\r\n<p><em><strong>docker container stop container</strong> -</em> Stop a docker container.</p>\r\n</li>\r\n<li>\r\n<p><strong>docker container rm <em>container</em></strong> - Remove a container</p>\r\n<ul><li>Use <strong>-f</strong> to force remove</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container start <em>container</em></strong> - Start docker container</p>\r\n<ul><li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</p>\r\n<ul><li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n</ul></li>\r\n</ul><h4 id=\"bkmrk-all-container-info\">Container info</h4>\r\n<ul id=\"bkmrk-docker-container-ls-\"><li><strong>docker container ls</strong> - list all started containers.\r\n<ul><li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n</ul></li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n</ul><h4 id=\"bkmrk-single-container-inf\">Single container info</h4>\r\n<ul id=\"bkmrk-docker-container-log\"><li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config\r\n<ul><li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker specific formatting language.</li>\r\n</ul></li>\r\n<li><em>docker container port container -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<ul id=\"bkmrk-docker-image-ls---sh\"><li><strong>docker image ls</strong> - Show info about all images</li>\r\n<li><em>docker image inspect image -</em> Show info about an image</li>\r\n<li><strong>docker image history <em>image</em></strong> - Show image layer history</li>\r\n<li><em>docker image tag source_image target_image -</em> Create a new image based on an existing image. It is possible to specify tag, by default it will be <strong>latest</strong></li>\r\n<li><strong>docker image push <em>image</em></strong> - Push the image to your docker hub repository.</li>\r\n<li><em>docker image build image -</em> Build a image from dockerfile</li>\r\n</ul><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<ul id=\"bkmrk-docker-network-ls---\"><li><strong>docker network ls</strong> - Show all networks</li>\r\n<li><strong>docker network inspect <em>network</em></strong> - Inspect a network</li>\r\n<li><strong>docker network create <em>network</em></strong> - Create a network</li>\r\n<li><strong>docker network connect <em>network container</em></strong> - Attach a network to a container</li>\r\n<li><strong>docker network disconnect <em>network container</em></strong> - Detach a network from a container</li>\r\n</ul><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<ul id=\"bkmrk-docker-volume-ls---l\"><li><strong>docker volume ls</strong> - List all volumes</li>\r\n</ul><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<ul id=\"bkmrk-docker-compose-up---\"><li><strong>docker-compose up</strong> - Start docker compose file</li>\r\n<li><strong>docker-compose down</strong> - Stop docker compose file</li>\r\n<li><strong>docker-compose ps</strong> - List all containers\r\n<ul><li><strong>docker-compose tops</strong> - List all services running inside containers</li>\r\n</ul></li>\r\n<li><strong>docker-compose logs</strong> - Show logs</li>\r\n<li><strong>docker compose ls</strong> - List running compose projects</li>\r\n</ul><h4 id=\"bkmrk-misc.%C2%A0\">Misc. </h4>\r\n<p id=\"bkmrk-%C2%A0docker-cp-container\"> <strong>docker cp <em>container:src_path dest_path </em></strong><em>- </em>Copy files/folders between a container and the local filesystem<em>.</em></p>', 'Container Actions\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\n\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\n\r\n\r\ndocker container exec -it - Run a command in the existing container.\r\n\r\n\r\ndocker container stop container - Stop a docker container.\r\n\r\n\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\n\r\n\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\n\r\n\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\n\r\nContainer info\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\n\r\ndocker container stats - Performance stats for all containers\r\nSingle container info\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker specific formatting language.\r\n\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image ls - Show info about all images\r\ndocker image inspect image - Show info about an image\r\ndocker image history image - Show image layer history\r\ndocker image tag source_image target_image - Create a new image based on an existing image. It is possible to specify tag, by default it will be latest\r\ndocker image push image - Push the image to your docker hub repository.\r\ndocker image build image - Build a image from dockerfile\r\nNetworks\r\ndocker network ls - Show all networks\r\ndocker network inspect network - Inspect a network\r\ndocker network create network - Create a network\r\ndocker network connect network container - Attach a network to a container\r\ndocker network disconnect network container - Detach a network from a container\r\nVolumes\r\ndocker volume ls - List all volumes\r\nDocker Compose\r\ndocker-compose up - Start docker compose file\r\ndocker-compose down - Stop docker compose file\r\ndocker-compose ps - List all containers\r\ndocker-compose tops - List all services running inside containers\r\n\r\ndocker-compose logs - Show logs\r\ndocker compose ls - List running compose projects\r\nMisc. \r\n docker cp container:src_path dest_path - Copy files/folders between a container and the local filesystem.', 1, '2021-12-18 17:25:50', '2021-12-18 17:25:50', 'common-docker-commands', 'docker', 'version', '', '', 8),
(225, 33, 'Building Docker Projects', '', '', 1, '2021-12-18 17:27:42', '2021-12-18 17:27:42', 'building-docker-projects', 'docker', 'version', '', '', 2),
(227, 33, 'Building Docker Projects', '<p id=\"bkmrk-a-dockerfile-is-a-si\">A Dockerfile is a simple text file that contains the commands a user could call to assemble an image. </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639848497835.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639848497835.png\" alt=\"image-1639848497835.png\" width=\"242\" height=\"92\"></a></p>', 'A Dockerfile is a simple text file that contains the commands a user could call to assemble an image. \r\n', 1, '2021-12-18 17:29:09', '2021-12-18 17:29:09', 'building-docker-projects', 'docker', 'version', '', '', 3);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(229, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container Actions</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\n<ul><li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. \r\n<p><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</p>\r\n</li>\r\n</ul><ul><li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec -it</strong> - Run a command in the existing container.</p>\r\n</li>\r\n<li>\r\n<p><em><strong>docker container stop container</strong> -</em> Stop a docker container.</p>\r\n</li>\r\n<li>\r\n<p><strong>docker container rm <em>container</em></strong> - Remove a container</p>\r\n<ul><li>Use <strong>-f</strong> to force remove</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container start <em>container</em></strong> - Start docker container</p>\r\n<ul><li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</p>\r\n<ul><li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n</ul></li>\r\n</ul><h4 id=\"bkmrk-all-container-info\">Container info</h4>\r\n<ul id=\"bkmrk-docker-container-ls-\"><li><strong>docker container ls</strong> - list all started containers.\r\n<ul><li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n</ul></li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n</ul><h4 id=\"bkmrk-single-container-inf\">Single container info</h4>\r\n<ul id=\"bkmrk-docker-container-log\"><li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config\r\n<ul><li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker specific formatting language.</li>\r\n</ul></li>\r\n<li><em><strong>docker container port container</strong> -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<ul id=\"bkmrk-docker-image-ls---sh\"><li><strong>docker image ls</strong> - Show info about all images</li>\r\n<li><em><strong>docker image inspect image</strong> -</em> Show info about an image</li>\r\n<li><strong>docker image history <em>image</em></strong> - Show image layer history</li>\r\n<li><em><strong>docker image tag source_image target_image</strong> -</em> Create a new image based on an existing image. It is possible to specify tag, by default it will be latest</li>\r\n<li><strong>docker image push <em>image</em></strong> - Push the image to your docker hub repository.</li>\r\n<li><em><strong>docker image build image</strong> -</em> Build a image from a Dockerfile</li>\r\n</ul><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<ul id=\"bkmrk-docker-network-ls---\"><li><strong>docker network ls</strong> - Show all networks</li>\r\n<li><strong>docker network inspect <em>network</em></strong> - Inspect a network</li>\r\n<li><strong>docker network create <em>network</em></strong> - Create a network</li>\r\n<li><strong>docker network connect <em>network container</em></strong> - Attach a network to a container</li>\r\n<li><strong>docker network disconnect <em>network container</em></strong> - Detach a network from a container</li>\r\n</ul><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<ul id=\"bkmrk-docker-volume-ls---l\"><li><strong>docker volume ls</strong> - List all volumes</li>\r\n</ul><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<ul id=\"bkmrk-docker-compose-up---\"><li><strong>docker-compose up</strong> - Start docker compose file</li>\r\n<li><strong>docker-compose down</strong> - Stop docker compose file</li>\r\n<li><strong>docker-compose ps</strong> - List all containers\r\n<ul><li><strong>docker-compose tops</strong> - List all services running inside containers</li>\r\n</ul></li>\r\n<li><strong>docker-compose logs</strong> - Show logs</li>\r\n<li><strong>docker compose ls</strong> - List running compose projects</li>\r\n</ul><h4 id=\"bkmrk-misc.%C2%A0\">Misc. </h4>\r\n<p id=\"bkmrk-%C2%A0docker-cp-container\"> <strong>docker cp <em>container:src_path dest_path </em></strong><em>- </em>Copy files/folders between a container and the local filesystem<em>.</em></p>', 'Container Actions\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\n\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\n\r\n\r\ndocker container exec -it - Run a command in the existing container.\r\n\r\n\r\ndocker container stop container - Stop a docker container.\r\n\r\n\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\n\r\n\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\n\r\n\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\n\r\nContainer info\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\n\r\ndocker container stats - Performance stats for all containers\r\nSingle container info\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker specific formatting language.\r\n\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image ls - Show info about all images\r\ndocker image inspect image - Show info about an image\r\ndocker image history image - Show image layer history\r\ndocker image tag source_image target_image - Create a new image based on an existing image. It is possible to specify tag, by default it will be latest\r\ndocker image push image - Push the image to your docker hub repository.\r\ndocker image build image - Build a image from a Dockerfile\r\nNetworks\r\ndocker network ls - Show all networks\r\ndocker network inspect network - Inspect a network\r\ndocker network create network - Create a network\r\ndocker network connect network container - Attach a network to a container\r\ndocker network disconnect network container - Detach a network from a container\r\nVolumes\r\ndocker volume ls - List all volumes\r\nDocker Compose\r\ndocker-compose up - Start docker compose file\r\ndocker-compose down - Stop docker compose file\r\ndocker-compose ps - List all containers\r\ndocker-compose tops - List all services running inside containers\r\n\r\ndocker-compose logs - Show logs\r\ndocker compose ls - List running compose projects\r\nMisc. \r\n docker cp container:src_path dest_path - Copy files/folders between a container and the local filesystem.', 1, '2021-12-18 17:30:14', '2021-12-18 17:30:14', 'common-docker-commands', 'docker', 'version', '', '', 9),
(231, 33, 'Building Docker Projects', '<h3 id=\"bkmrk-dockerfile\">Dockerfile</h3>\r\n<p id=\"bkmrk-a-dockerfile-is-a-si\">A Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. Users can create an automated build that executes several command-line instructions in succession.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639848497835.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639848497835.png\" alt=\"image-1639848497835.png\" width=\"242\" height=\"92\"></a></p>\r\n<p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-from-drupal%3A8.6-run-\"><code class=\"language-shell\">FROM drupal:8.6\r\n\r\nRUN apt-get update &amp;&amp; apt-get install -y git \\\r\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\r\n\r\nWORKDIR /var/www/html/themes\r\n\r\nRUN git clone --single-branch --depth 1 http://git.drupal.org/project/drupal.git\r\n\r\nWORKDIR /var/www/html</code></pre>\r\n<h3 id=\"bkmrk-docker-compose\">Docker Compose</h3>\r\n<p id=\"bkmrk-docker-compose%C2%A0is-a-\">Docker Compose is a tool that was developed to help define and share multi-container applications. With Compose, we can create a YAML file to define the services and with a single command, can spin everything up or tear it all down.</p>\r\n<p id=\"bkmrk-example%3A-0\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-version%3A-%223%22-service\"><code class=\"language-shell\">version: \"3\"\r\nservices:\r\n  drupal:\r\n    image: custom-drupal\r\n    build:\r\n      context: .\r\n      dockerfile: custom-drupal.Dockerfile\r\n    ports:\r\n      - \"8080:80\"\r\n    volumes:\r\n      - drupal-modules:/var/www/html/modules\r\n      - drupal-profiles:/var/www/html/profiles\r\n      - drupal-sites:/var/www/html/sites\r\n      - drupal-themes:/var/www/html/themes\r\n  postgres:\r\n    image: postgres\r\n    environment:\r\n      - POSTGRES_PASSWORD=mypass\r\n    volumes:\r\n      - drupal-data:/var/lib/postgresql/data\r\n\r\nvolumes:\r\n  drupal-data:\r\n  drupal-modules:\r\n  drupal-profiles:\r\n  drupal-sites:\r\n  drupal-themes:</code></pre>', 'Dockerfile\r\nA Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. Users can create an automated build that executes several command-line instructions in succession.\r\n\r\nExample:\r\nFROM drupal:8.6\r\n\r\nRUN apt-get update && apt-get install -y git \\\r\n    && rm -rf /var/lib/apt/lists/*\r\n\r\nWORKDIR /var/www/html/themes\r\n\r\nRUN git clone --single-branch --depth 1 http://git.drupal.org/project/drupal.git\r\n\r\nWORKDIR /var/www/html\r\nDocker Compose\r\nDocker Compose is a tool that was developed to help define and share multi-container applications. With Compose, we can create a YAML file to define the services and with a single command, can spin everything up or tear it all down.\r\nExample:\r\nversion: \"3\"\r\nservices:\r\n  drupal:\r\n    image: custom-drupal\r\n    build:\r\n      context: .\r\n      dockerfile: custom-drupal.Dockerfile\r\n    ports:\r\n      - \"8080:80\"\r\n    volumes:\r\n      - drupal-modules:/var/www/html/modules\r\n      - drupal-profiles:/var/www/html/profiles\r\n      - drupal-sites:/var/www/html/sites\r\n      - drupal-themes:/var/www/html/themes\r\n  postgres:\r\n    image: postgres\r\n    environment:\r\n      - POSTGRES_PASSWORD=mypass\r\n    volumes:\r\n      - drupal-data:/var/lib/postgresql/data\r\n\r\nvolumes:\r\n  drupal-data:\r\n  drupal-modules:\r\n  drupal-profiles:\r\n  drupal-sites:\r\n  drupal-themes:', 1, '2021-12-18 17:34:40', '2021-12-18 17:34:40', 'building-docker-projects', 'docker', 'version', '', '', 4),
(234, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container Actions</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\n<ul><li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. \r\n<p><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</p>\r\n</li>\r\n</ul><ul><li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec -it</strong> - Run a command in the existing container.</p>\r\n</li>\r\n<li>\r\n<p><em><strong>docker container stop container</strong> -</em> Stop a docker container.</p>\r\n</li>\r\n<li>\r\n<p><strong>docker container rm <em>container</em></strong> - Remove a container</p>\r\n<ul><li>Use <strong>-f</strong> to force remove</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container start <em>container</em></strong> - Start docker container</p>\r\n<ul><li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</p>\r\n<ul><li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n</ul></li>\r\n<li><strong>docker update <em>container </em></strong>- Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.</li>\r\n</ul><h4 id=\"bkmrk-all-container-info\">Container info</h4>\r\n<ul id=\"bkmrk-docker-container-ls-\"><li><strong>docker container ls</strong> - list all started containers.\r\n<ul><li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n</ul></li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n</ul><h4 id=\"bkmrk-single-container-inf\">Single container info</h4>\r\n<ul id=\"bkmrk-docker-container-log\"><li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config\r\n<ul><li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker specific formatting language.</li>\r\n</ul></li>\r\n<li><em><strong>docker container port container</strong> -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<ul id=\"bkmrk-docker-image-ls---sh\"><li><strong>docker image ls</strong> - Show info about all images</li>\r\n<li><em><strong>docker image inspect image</strong> -</em> Show info about an image</li>\r\n<li><strong>docker image history <em>image</em></strong> - Show image layer history</li>\r\n<li><em><strong>docker image tag source_image target_image</strong> -</em> Create a new image based on an existing image. It is possible to specify tag, by default it will be latest</li>\r\n<li><strong>docker image push <em>image</em></strong> - Push the image to your docker hub repository.</li>\r\n<li><em><strong>docker image build image</strong> -</em> Build a image from a Dockerfile</li>\r\n</ul><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<ul id=\"bkmrk-docker-network-ls---\"><li><strong>docker network ls</strong> - Show all networks</li>\r\n<li><strong>docker network inspect <em>network</em></strong> - Inspect a network</li>\r\n<li><strong>docker network create <em>network</em></strong> - Create a network</li>\r\n<li><strong>docker network connect <em>network container</em></strong> - Attach a network to a container</li>\r\n<li><strong>docker network disconnect <em>network container</em></strong> - Detach a network from a container</li>\r\n</ul><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<ul id=\"bkmrk-docker-volume-ls---l\"><li><strong>docker volume ls</strong> - List all volumes</li>\r\n</ul><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<ul id=\"bkmrk-docker-compose-up---\"><li><strong>docker-compose up</strong> - Start docker compose file</li>\r\n<li><strong>docker-compose down</strong> - Stop docker compose file</li>\r\n<li><strong>docker-compose ps</strong> - List all containers\r\n<ul><li><strong>docker-compose tops</strong> - List all services running inside containers</li>\r\n</ul></li>\r\n<li><strong>docker-compose logs</strong> - Show logs</li>\r\n<li><strong>docker compose ls</strong> - List running compose projects</li>\r\n</ul><h4 id=\"bkmrk-misc.%C2%A0\">Misc. </h4>\r\n<p id=\"bkmrk-%C2%A0docker-cp-container\"> <strong>docker cp <em>container:src_path dest_path </em></strong><em>- </em>Copy files/folders between a container and the local filesystem<em>.</em></p>\r\n<h3 id=\"bkmrk-swarm\">Swarm</h3>\r\n<h4 id=\"bkmrk-nodes\">Nodes</h4>\r\n<ul id=\"bkmrk-docker-node-ls---lis\"><li><strong>docker node ls</strong> - List all nodes</li>\r\n</ul><h4 id=\"bkmrk-services\">Services</h4>\r\n<ul id=\"bkmrk-docker-service-ls%C2%A0--\"><li><strong>docker service ls </strong>- List all services</li>\r\n<li><strong>docker service update <em>service </em></strong>- Update service\r\n<ul><li>Use <strong>--replicas <em>count </em></strong>to create new replicas</li>\r\n</ul></li>\r\n</ul>', 'Container Actions\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\n\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\n\r\n\r\ndocker container exec -it - Run a command in the existing container.\r\n\r\n\r\ndocker container stop container - Stop a docker container.\r\n\r\n\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\n\r\n\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\n\r\n\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\n\r\ndocker update container - Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.\r\nContainer info\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\n\r\ndocker container stats - Performance stats for all containers\r\nSingle container info\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker specific formatting language.\r\n\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image ls - Show info about all images\r\ndocker image inspect image - Show info about an image\r\ndocker image history image - Show image layer history\r\ndocker image tag source_image target_image - Create a new image based on an existing image. It is possible to specify tag, by default it will be latest\r\ndocker image push image - Push the image to your docker hub repository.\r\ndocker image build image - Build a image from a Dockerfile\r\nNetworks\r\ndocker network ls - Show all networks\r\ndocker network inspect network - Inspect a network\r\ndocker network create network - Create a network\r\ndocker network connect network container - Attach a network to a container\r\ndocker network disconnect network container - Detach a network from a container\r\nVolumes\r\ndocker volume ls - List all volumes\r\nDocker Compose\r\ndocker-compose up - Start docker compose file\r\ndocker-compose down - Stop docker compose file\r\ndocker-compose ps - List all containers\r\ndocker-compose tops - List all services running inside containers\r\n\r\ndocker-compose logs - Show logs\r\ndocker compose ls - List running compose projects\r\nMisc. \r\n docker cp container:src_path dest_path - Copy files/folders between a container and the local filesystem.\r\nSwarm\r\nNodes\r\ndocker node ls - List all nodes\r\nServices\r\ndocker service ls - List all services\r\ndocker service update service - Update service\r\nUse --replicas count to create new replicas\r\n\r\n', 1, '2021-12-19 11:13:22', '2021-12-19 11:13:22', 'common-docker-commands', 'docker', 'version', '', '', 10),
(236, 30, 'Terminology', '<ul id=\"bkmrk-data-persistence---t\"><li><strong>Data Persistence</strong> - The data survives after the process with which it was created has ended.</li>\r\n<li><strong>Redundancy</strong> - The duplication of critical components or functions of a system with the intention of increasing reliability of the system.</li>\r\n</ul>', 'Data Persistence - The data survives after the process with which it was created has ended.\r\nRedundancy - The duplication of critical components or functions of a system with the intention of increasing reliability of the system.\r\n', 1, '2021-12-19 11:39:02', '2021-12-19 11:39:02', 'terminology', 'misc', 'version', '', '', 2),
(237, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container Actions</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\n<ul><li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. \r\n<p><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</p>\r\n</li>\r\n</ul><ul><li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec -it</strong> - Run a command in the existing container.</p>\r\n</li>\r\n<li>\r\n<p><em><strong>docker container stop container</strong> -</em> Stop a docker container.</p>\r\n</li>\r\n<li>\r\n<p><strong>docker container rm <em>container</em></strong> - Remove a container</p>\r\n<ul><li>Use <strong>-f</strong> to force remove</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container start <em>container</em></strong> - Start docker container</p>\r\n<ul><li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</p>\r\n<ul><li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n</ul></li>\r\n<li><strong>docker update <em>container </em></strong>- Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.</li>\r\n</ul><h4 id=\"bkmrk-all-container-info\">Container info</h4>\r\n<ul id=\"bkmrk-docker-container-ls-\"><li><strong>docker container ls</strong> - list all started containers.\r\n<ul><li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n</ul></li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n</ul><h4 id=\"bkmrk-single-container-inf\">Single container info</h4>\r\n<ul id=\"bkmrk-docker-container-log\"><li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config\r\n<ul><li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker specific formatting language.</li>\r\n</ul></li>\r\n<li><em><strong>docker container port container</strong> -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<ul id=\"bkmrk-docker-image-ls---sh\"><li><strong>docker image ls</strong> - Show info about all images</li>\r\n<li><em><strong>docker image inspect image</strong> -</em> Show info about an image</li>\r\n<li><strong>docker image history <em>image</em></strong> - Show image layer history</li>\r\n<li><em><strong>docker image tag source_image target_image</strong> -</em> Create a new image based on an existing image. It is possible to specify tag, by default it will be latest</li>\r\n<li><strong>docker image push <em>image</em></strong> - Push the image to your docker hub repository.</li>\r\n<li><em><strong>docker image build image</strong> -</em> Build a image from a Dockerfile</li>\r\n</ul><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<ul id=\"bkmrk-docker-network-ls---\"><li><strong>docker network ls</strong> - Show all networks</li>\r\n<li><strong>docker network inspect <em>network</em></strong> - Inspect a network</li>\r\n<li><strong>docker network create <em>network</em></strong> - Create a network</li>\r\n<li><strong>docker network connect <em>network container</em></strong> - Attach a network to a container</li>\r\n<li><strong>docker network disconnect <em>network container</em></strong> - Detach a network from a container</li>\r\n</ul><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<ul id=\"bkmrk-docker-volume-ls---l\"><li><strong>docker volume ls</strong> - List all volumes</li>\r\n</ul><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<ul id=\"bkmrk-docker-compose-up---\"><li><strong>docker-compose up</strong> - Start docker compose file</li>\r\n<li><strong>docker-compose down</strong> - Stop docker compose file</li>\r\n<li><strong>docker-compose ps</strong> - List all containers\r\n<ul><li><strong>docker-compose tops</strong> - List all services running inside containers</li>\r\n</ul></li>\r\n<li><strong>docker-compose logs</strong> - Show logs</li>\r\n<li><strong>docker compose ls</strong> - List running compose projects</li>\r\n</ul><h4 id=\"bkmrk-misc.%C2%A0\">Misc. </h4>\r\n<p id=\"bkmrk-%C2%A0docker-cp-container\"> <strong>docker cp <em>container:src_path dest_path </em></strong><em>- </em>Copy files/folders between a container and the local filesystem<em>.</em></p>\r\n<h3 id=\"bkmrk-swarm\">Swarm</h3>\r\n<h4 id=\"bkmrk-nodes\">Nodes</h4>\r\n<ul id=\"bkmrk-docker-node-ls---lis\"><li><strong>docker node ls</strong> - List all nodes</li>\r\n</ul><h4 id=\"bkmrk-services\">Services</h4>\r\n<ul id=\"bkmrk-docker-service-ls%C2%A0--\"><li><strong>docker service ls </strong>- List all services</li>\r\n<li><strong>docker service update <em>service </em></strong>- Update service\r\n<ul><li>Use <strong>--replicas <em>count </em></strong>to create new replicas</li>\r\n</ul></li>\r\n</ul>', 'Container Actions\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\n\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\n\r\n\r\ndocker container exec -it - Run a command in the existing container.\r\n\r\n\r\ndocker container stop container - Stop a docker container.\r\n\r\n\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\n\r\n\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\n\r\n\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\n\r\ndocker update container - Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.\r\nContainer info\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\n\r\ndocker container stats - Performance stats for all containers\r\nSingle container info\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker specific formatting language.\r\n\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image ls - Show info about all images\r\ndocker image inspect image - Show info about an image\r\ndocker image history image - Show image layer history\r\ndocker image tag source_image target_image - Create a new image based on an existing image. It is possible to specify tag, by default it will be latest\r\ndocker image push image - Push the image to your docker hub repository.\r\ndocker image build image - Build a image from a Dockerfile\r\nNetworks\r\ndocker network ls - Show all networks\r\ndocker network inspect network - Inspect a network\r\ndocker network create network - Create a network\r\ndocker network connect network container - Attach a network to a container\r\ndocker network disconnect network container - Detach a network from a container\r\nVolumes\r\ndocker volume ls - List all volumes\r\nDocker Compose\r\ndocker-compose up - Start docker compose file\r\ndocker-compose down - Stop docker compose file\r\ndocker-compose ps - List all containers\r\ndocker-compose tops - List all services running inside containers\r\n\r\ndocker-compose logs - Show logs\r\ndocker compose ls - List running compose projects\r\nMisc. \r\n docker cp container:src_path dest_path - Copy files/folders between a container and the local filesystem.\r\nSwarm\r\nNodes\r\ndocker node ls - List all nodes\r\nServices\r\ndocker service ls - List all services\r\ndocker service update service - Update service\r\nUse --replicas count to create new replicas\r\n\r\n', 1, '2021-12-19 11:39:27', '2021-12-19 11:39:27', 'common-docker-commands', 'docker', 'version', '', '', 11),
(238, 30, 'Terminology', '<ul id=\"bkmrk-data-persistence---t\"><li><strong>Data Persistence</strong> - The data survives after the process with which it was created has ended.</li>\r\n<li><strong>Redundancy</strong> - The duplication of critical components or functions of a system with the intention of increasing reliability of the system.\r\n<ul id=\"bkmrk-something-that-is-re\"><li>Something that is redundant is no longer needed because its job is being done by something else or because its job is no longer necessary or useful.</li>\r\n</ul></li>\r\n</ul>', 'Data Persistence - The data survives after the process with which it was created has ended.\r\nRedundancy - The duplication of critical components or functions of a system with the intention of increasing reliability of the system.\r\nSomething that is redundant is no longer needed because its job is being done by something else or because its job is no longer necessary or useful.\r\n\r\n', 1, '2021-12-19 11:41:19', '2021-12-19 11:41:19', 'terminology', 'misc', 'version', '', '', 3),
(240, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git merge).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n<li><strong>git clone - </strong>Clones a repository into a newly created directory.<br><ul id=\"bkmrk-use%C2%A0--depth-to-creat\"><li>Use <strong>--depth <em>count</em> </strong>to create a shallow clone with a history truncated to the specified number of commits. This means that using <strong>--depth 1 </strong>to clone a repository will be a lot faster than cloning it normally.</li>\r\n<li>Use <strong>--single-branch </strong>to pull only the latest (master) branch from the repository.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-log\">Log</h3>\r\n<ul id=\"bkmrk-git-log---returns-a-\"><li><strong>git log</strong> - Returns a log of commits\r\n<ul><li><strong>git log --oneline </strong>- Returns commits condensed in one line. Useful for getting a high-level overview of your project.</li>\r\n<li><strong>git log --graph --oneline </strong>- Show log in a graph format</li>\r\n<li><strong>git log -p </strong>- See changes of each commit.</li>\r\n<li><strong>git log -3</strong> - Show 3 most recent commits.</li>\r\n<li><strong>git log --after=\"2014-7-1\" </strong>- Show commit after or before a certain date.</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-branches\">Branches</h3>\r\n<ul id=\"bkmrk-git-branch---show-cu\"><li><strong>git branch --show-current</strong> - Show current branch.</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with Changes</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -fd </strong>- Deletes all untracked files.</li>\r\n<li><strong>git cherry-pick <em>commit </em></strong>- Get changes from a specific commit.</li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git merge).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit clone - Clones a repository into a newly created directory.Use --depth count to create a shallow clone with a history truncated to the specified number of commits. This means that using --depth 1 to clone a repository will be a lot faster than cloning it normally.\r\nUse --single-branch to pull only the latest (master) branch from the repository.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nLog\r\ngit log - Returns a log of commits\r\ngit log --oneline - Returns commits condensed in one line. Useful for getting a high-level overview of your project.\r\ngit log --graph --oneline - Show log in a graph format\r\ngit log -p - See changes of each commit.\r\ngit log -3 - Show 3 most recent commits.\r\ngit log --after=\"2014-7-1\" - Show commit after or before a certain date.\r\n\r\nBranches\r\ngit branch --show-current - Show current branch.\r\nWorking with Changes\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -fd - Deletes all untracked files.\r\ngit cherry-pick commit - Get changes from a specific commit.\r\n', 1, '2021-12-19 17:59:06', '2021-12-19 17:59:06', 'common-git-commands', 'git', 'version', '', '', 18),
(241, 37, 'References', '', '', 1, '2021-12-19 18:08:48', '2021-12-19 18:08:48', 'references', 'git', 'version', '', 'Initial publish', 1),
(243, 37, 'References', '<p id=\"bkmrk-to-save-you-from-hav\">To save you from having to memorise these hashes, Git has references, or refs. A reference is simply a file stored somewhere in <em>.git/refs</em>, containing the hash of a commit object.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639937341204.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639937341204.png\" alt=\"image-1639937341204.png\" width=\"380\" height=\"201\"></a></p>\r\n<p id=\"bkmrk-when-you-create-a-ne\">When you create a new branch, all that happens is that a new reference is created pointing to a commit</p>', 'To save you from having to memorise these hashes, Git has references, or refs. A reference is simply a file stored somewhere in .git/refs, containing the hash of a commit object.\r\n\r\nWhen you create a new branch, all that happens is that a new reference is created pointing to a commit', 1, '2021-12-19 18:13:29', '2021-12-19 18:13:29', 'references', 'git', 'version', '', '', 2);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(245, 21, 'Merge vs Rebase', '<p id=\"bkmrk-there-are-two-option\">There are two options for integrating your feature into the main branch:</p>\r\n<ul id=\"bkmrk-merging-directly.-re\"><li>merging directly.</li>\r\n<li>rebasing and then merging.</li>\r\n</ul><h3 id=\"bkmrk-how-does-git-merge-w\">How does Git Merge work?</h3>\r\n<p id=\"bkmrk-git-merge%C2%A0will-combi\">Git merge will combine multiple sequences of commits into one unified history. </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639058986917.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639058986917.png\" alt=\"image-1639058986917.png\" width=\"406\" height=\"209\"></a></p>\r\n<p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-otherbranch-%7C-x-%3C--y\"><code class=\"language-\">                    otherbranch\r\n                        |\r\n              X &lt;- Y &lt;- Z\r\n             /\r\n  A &lt;- B &lt;- C &lt;- D &lt;- E &lt;- F &lt;- G\r\n                                |\r\n                              master\r\n                                |\r\n                              HEAD</code></pre>\r\n<p id=\"bkmrk-you-are-on%C2%A0master%C2%A0an\">You are on <code>master</code> and you said <code>git merge otherbranch</code>. Then:</p>\r\n<ol id=\"bkmrk-git-first-figures-ou\"><li>\r\n<p>Git first figures out that the merge base is commit <code>C</code>.</p>\r\n</li>\r\n<li>\r\n<p>Git then calculates the diff from <code>C</code> to <code>G</code> and the diff from <code>C</code> to <code>Z</code>.</p>\r\n</li>\r\n<li>\r\n<p>Git then applies both of those diffs to <code>C</code> simultaneously — and commits the result on <code>master</code>. That is the merge commit.</p>\r\n</li>\r\n</ol><h4 id=\"bkmrk-squash-merge\">Squash Merge</h4>\r\n<p id=\"bkmrk-a-squash-merge---squ\">A squash merge <code>--squash</code> is a merge option in Git that will produce a merge commit with only one parent. The files are merged exactly as they would be in a normal merge, but the commit metadata is changed to show only one of the parent commits.</p>\r\n<h3 id=\"bkmrk-how-does-git-rebase-\">How does Git Rebase work?</h3>\r\n<p id=\"bkmrk-rebasing-is-the-proc\">Rebasing is the process of moving or combining a sequence of commits to a new base commit. Rebase compresses all the changes into a single “patch.” Then it integrates the patch onto the target branch.</p>\r\n<p id=\"bkmrk-unlike-merging%2C-reba\">Unlike merging, rebasing flattens the history because it transfers the completed work from one branch to another. In the process, unwanted history is eliminated.</p>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639043929091.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639043929091.png\" alt=\"image-1639043929091.png\" width=\"289\" height=\"150\"></a></p>\r\n<h4 id=\"bkmrk-interactive-rebase\">Interactive Rebase</h4>\r\n<p id=\"bkmrk-interactive-rebasing\">Interactive rebasing can be used for changing commits in many ways such as editing, deleting, and squashing.</p>\r\n<ul id=\"bkmrk-to-tell-git-where-to\"><li>To tell Git where to start the interactive rebase, use the SHA-1 or index of the commit that immediately precedes the commit you want to modify.</li>\r\n<li>Interactive rebasing will create new SHA-1’s therefore it is best to use interactive rebasing on commits you have not pushed to a remote branch.</li>\r\n</ul><pre id=\"bkmrk-git-rebase--i-528f82\"><code class=\"language-shell\">git rebase -i 528f82e # Specific commit\r\n# Or\r\ngit rebase -i HEAD~3 # 3 Commits ago from latest commit</code></pre>', 'There are two options for integrating your feature into the main branch:\r\nmerging directly.\r\nrebasing and then merging.\r\nHow does Git Merge work?\r\nGit merge will combine multiple sequences of commits into one unified history. \r\n\r\nExample:\r\n                    otherbranch\r\n                        |\r\n              X <- Y <- Z\r\n             /\r\n  A <- B <- C <- D <- E <- F <- G\r\n                                |\r\n                              master\r\n                                |\r\n                              HEAD\r\nYou are on master and you said git merge otherbranch. Then:\r\n\r\nGit first figures out that the merge base is commit C.\r\n\r\n\r\nGit then calculates the diff from C to G and the diff from C to Z.\r\n\r\n\r\nGit then applies both of those diffs to C simultaneously — and commits the result on master. That is the merge commit.\r\n\r\nSquash Merge\r\nA squash merge --squash is a merge option in Git that will produce a merge commit with only one parent. The files are merged exactly as they would be in a normal merge, but the commit metadata is changed to show only one of the parent commits.\r\nHow does Git Rebase work?\r\nRebasing is the process of moving or combining a sequence of commits to a new base commit. Rebase compresses all the changes into a single “patch.” Then it integrates the patch onto the target branch.\r\nUnlike merging, rebasing flattens the history because it transfers the completed work from one branch to another. In the process, unwanted history is eliminated.\r\n \r\n\r\nInteractive Rebase\r\nInteractive rebasing can be used for changing commits in many ways such as editing, deleting, and squashing.\r\nTo tell Git where to start the interactive rebase, use the SHA-1 or index of the commit that immediately precedes the commit you want to modify.\r\nInteractive rebasing will create new SHA-1’s therefore it is best to use interactive rebasing on commits you have not pushed to a remote branch.\r\ngit rebase -i 528f82e # Specific commit\r\n# Or\r\ngit rebase -i HEAD~3 # 3 Commits ago from latest commit', 1, '2021-12-19 18:33:58', '2021-12-19 18:33:58', 'merge-vs-rebase', 'git', 'version', '', '', 7),
(247, 20, 'Common Git Commands', '<h3 id=\"bkmrk-actions\">Actions</h3>\r\n<ul id=\"bkmrk-git-fetch---download\"><li><strong>git fetch</strong> - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.</li>\r\n</ul><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<p id=\"bkmrk-when%C2%A0you%C2%A0run%C2%A0git-fet\">When <em>you</em> run <code>git fetch</code>, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to <em>her</em> <code>master</code> since commit <code>C</code>. She does—she has her new commits <code>E</code> and <code>F</code>. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  </p>\r\n<pre id=\"bkmrk-e--f-%3C---sally%2Fmaste\"><code class=\"language-\">        E--F   &lt;-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   &lt;-- master (HEAD)</code></pre>\r\n<ul id=\"bkmrk-git-pull---this-upda\"><li><strong>git pull</strong> - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch &amp;&amp; git merge).\r\n<ul id=\"bkmrk-since-git-pull-tries\"><li>Since git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.</li>\r\n<li>It\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>\r\n</ul></li>\r\n<li><strong>git merge</strong> - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\n<ul id=\"bkmrk-a-fast-forward-merge\"><li>A <em>fast-forward merge</em> can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.</li>\r\n</ul></li>\r\n<li><strong>git clone - </strong>Clones a repository into a newly created directory.<br><ul id=\"bkmrk-use%C2%A0--depth-to-creat\"><li>Use <strong>--depth <em>count</em> </strong>to create a shallow clone with a history truncated to the specified number of commits. This means that using <strong>--depth 1 </strong>to clone a repository will be a lot faster than cloning it normally.</li>\r\n<li>Use <strong>--single-branch </strong>to pull only the latest (master) branch from the repository.</li>\r\n</ul></li>\r\n</ul><pre id=\"bkmrk-git-merge-topic-a---\"><code class=\"language-\">git merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master</code></pre>\r\n<h3 id=\"bkmrk-stashes\">Stashes</h3>\r\n<ul id=\"bkmrk-git-stash%C2%A0--stash-ch\"><li><strong>git stash </strong>- Stash changes</li>\r\n<li><strong>git stash pop </strong>- Retrieve and apply changes from the top of the stack</li>\r\n<li><strong>git stash list </strong>- Get a list of stashes.</li>\r\n<li><strong>git stash show stash@{0} </strong>- Show particular stash, use <strong>-p </strong>to see the stash as an patch.</li>\r\n<li><strong>git stash apply stash@{2}</strong> - Apply particular stash.</li>\r\n<li><strong>git stash clear</strong> - Clear all stashes</li>\r\n</ul><h3 id=\"bkmrk-log\">Log</h3>\r\n<ul id=\"bkmrk-git-log---returns-a-\"><li><strong>git log</strong> - Returns a log of commits\r\n<ul><li><strong>git log --oneline </strong>- Returns commits condensed in one line. Useful for getting a high-level overview of your project.</li>\r\n<li><strong>git log --graph --oneline </strong>- Show log in a graph format</li>\r\n<li><strong>git log -p </strong>- See changes of each commit.</li>\r\n<li><strong>git log -3</strong> - Show 3 most recent commits.</li>\r\n<li><strong>git log --after=\"2014-7-1\" </strong>- Show commit after or before a certain date.</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-branches\">Branches</h3>\r\n<ul id=\"bkmrk-git-branch---show-cu\"><li><strong>git branch --show-current</strong> - Show current branch.</li>\r\n</ul><h3 id=\"bkmrk-working-with-files\">Working with Changes</h3>\r\n<ul id=\"bkmrk-git-checkout-.%C2%A0--dis\"><li><strong>git checkout . </strong>- Discard all changes to files. Use <strong>-p </strong>to see the changes before discarding.</li>\r\n<li><strong>git clean -fd </strong>- Deletes all untracked files.</li>\r\n<li><strong>git cherry-pick <em>commit </em></strong>- Get changes from a specific commit.</li>\r\n<li><strong>git bisect</strong> - Use binary search to find the commit that introduced a bug.\r\n<ul id=\"bkmrk-git-bisect-start%C2%A0--s\"><li><strong>git bisect start </strong>- Start git bisect process.</li>\r\n<li><strong>git bisect reset </strong>- Stop git bisect process.</li>\r\n<li><strong>git bisect run <em>script </em></strong>- Let git bisect run script on each iteration</li>\r\n</ul></li>\r\n</ul>', 'Actions\r\ngit fetch - Downloads new data from a remote repository, but it doesn\'t integrate any of this new data into your working files. Fetch will never manipulate, destroy, or screw up anything.\r\nExample:\r\nWhen you run git fetch, you connect your Git to Sally\'s Git, and ask her if she has any new commits added to her master since commit C. She does—she has her new commits E and F. So your Git gets those commits from her, along with everything needed to complete the snapshots for those commits.  \r\n        E--F   <-- sally/master\r\n       /\r\nA--B--C\r\n       \\\r\n        D   <-- master (HEAD)\r\ngit pull - This updates your current HEAD branch with the latest changes from the remote server. This means that pull not only fetches new data, it also integrates them into your current working copy files (git fetch && git merge).\r\nSince git pull tries to merge remote changes with your local ones, a \"merge conflict\" can occur.\r\nIt\'s recommended to start a \"git pull\" only with a clean working copy. This means that you should not have any uncommitted local changes before you pull.\r\n\r\ngit merge - Incorporates changes from the named commits into the current branch. Except in a fast-forward merge, the branches to be merged must be tied together by a merge commit that has both of them as its parents.\r\nA fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip.\r\n\r\ngit clone - Clones a repository into a newly created directory.Use --depth count to create a shallow clone with a history truncated to the specified number of commits. This means that using --depth 1 to clone a repository will be a lot faster than cloning it normally.\r\nUse --single-branch to pull only the latest (master) branch from the repository.\r\n\r\ngit merge topic\r\n\r\n	 A---B---C topic\r\n    /\r\nD---E---F---G master\r\n    \r\n    	  \r\n	 A---B---C topic\r\n	/         \\\r\nD---E---F---G---H master\r\nStashes\r\ngit stash - Stash changes\r\ngit stash pop - Retrieve and apply changes from the top of the stack\r\ngit stash list - Get a list of stashes.\r\ngit stash show stash@{0} - Show particular stash, use -p to see the stash as an patch.\r\ngit stash apply stash@{2} - Apply particular stash.\r\ngit stash clear - Clear all stashes\r\nLog\r\ngit log - Returns a log of commits\r\ngit log --oneline - Returns commits condensed in one line. Useful for getting a high-level overview of your project.\r\ngit log --graph --oneline - Show log in a graph format\r\ngit log -p - See changes of each commit.\r\ngit log -3 - Show 3 most recent commits.\r\ngit log --after=\"2014-7-1\" - Show commit after or before a certain date.\r\n\r\nBranches\r\ngit branch --show-current - Show current branch.\r\nWorking with Changes\r\ngit checkout . - Discard all changes to files. Use -p to see the changes before discarding.\r\ngit clean -fd - Deletes all untracked files.\r\ngit cherry-pick commit - Get changes from a specific commit.\r\ngit bisect - Use binary search to find the commit that introduced a bug.\r\ngit bisect start - Start git bisect process.\r\ngit bisect reset - Stop git bisect process.\r\ngit bisect run script - Let git bisect run script on each iteration\r\n\r\n', 1, '2021-12-19 18:52:54', '2021-12-19 18:52:54', 'common-git-commands', 'git', 'version', '', '', 19),
(255, 40, 'Learning Roadmap', '', '', 1, '2021-12-20 15:09:09', '2021-12-20 15:09:09', 'learning-roadmap', 'misc', 'version', '', 'Initial publish', 1),
(257, 40, 'Learning Roadmap', '<h4 id=\"bkmrk-current-roadmap\">Current Roadmap</h4>\r\n<ol id=\"bkmrk-docker-webpack-php-m\"><li>Docker</li>\r\n<li>Webpack</li>\r\n<li>PHP MVC</li>\r\n<li>Design Patterns</li>\r\n</ol><h4 id=\"bkmrk-future-certificates%C2%A0\">Future Certificates </h4>\r\n<ol id=\"bkmrk-network%2B-linux%2B-secu\"><li>Network+</li>\r\n<li>Linux+</li>\r\n<li>\r\n<p>Security+</p>\r\n</li>\r\n<li>\r\n<p class=\"udlite-heading-xl clp-lead__title clp-lead__title--small\" data-purpose=\"lead-title\">AWS Certified Cloud Practitioner</p>\r\n</li>\r\n</ol>', 'Current Roadmap\r\nDocker\r\nWebpack\r\nPHP MVC\r\nDesign Patterns\r\nFuture Certificates \r\nNetwork+\r\nLinux+\r\n\r\nSecurity+\r\n\r\n\r\nAWS Certified Cloud Practitioner\r\n\r\n', 1, '2021-12-20 15:14:09', '2021-12-20 15:14:09', 'learning-roadmap', 'misc', 'version', '', '', 2),
(258, 40, 'Learning Roadmap', '<h4 id=\"bkmrk-current-roadmap\">Current Roadmap</h4>\r\n<ol id=\"bkmrk-docker-webpack-php-m\"><li>Docker</li>\r\n<li>Webpack</li>\r\n<li>PHP MVC</li>\r\n<li>Vanilla JS</li>\r\n<li>Design Patterns</li>\r\n</ol><h4 id=\"bkmrk-future-certificates%C2%A0\">Future Certificates </h4>\r\n<ol id=\"bkmrk-network%2B-linux%2B-secu\"><li>Network+</li>\r\n<li>Linux+</li>\r\n<li>\r\n<p>Security+</p>\r\n</li>\r\n<li>\r\n<p class=\"udlite-heading-xl clp-lead__title clp-lead__title--small\" data-purpose=\"lead-title\">AWS Certified Cloud Practitioner</p>\r\n</li>\r\n</ol>', 'Current Roadmap\r\nDocker\r\nWebpack\r\nPHP MVC\r\nVanilla JS\r\nDesign Patterns\r\nFuture Certificates \r\nNetwork+\r\nLinux+\r\n\r\nSecurity+\r\n\r\n\r\nAWS Certified Cloud Practitioner\r\n\r\n', 1, '2021-12-20 15:15:05', '2021-12-20 15:15:05', 'learning-roadmap', 'misc', 'version', '', '', 3),
(259, 40, 'Learning Roadmap', '<h4 id=\"bkmrk-current-roadmap\">Current Roadmap</h4>\r\n<ol id=\"bkmrk-docker-webpack-php-m\"><li>Docker</li>\r\n<li>Webpack</li>\r\n<li>PHP MVC</li>\r\n<li>Vanilla JS</li>\r\n<li>Design Patterns</li>\r\n<li>Read SQL docs</li>\r\n</ol><h4 id=\"bkmrk-future-certificates%C2%A0\">Future Certificates </h4>\r\n<ol id=\"bkmrk-network%2B-linux%2B-secu\"><li>Network+</li>\r\n<li>Linux+</li>\r\n<li>\r\n<p>Security+</p>\r\n</li>\r\n<li>\r\n<p class=\"udlite-heading-xl clp-lead__title clp-lead__title--small\" data-purpose=\"lead-title\">AWS Certified Cloud Practitioner</p>\r\n</li>\r\n</ol>', 'Current Roadmap\r\nDocker\r\nWebpack\r\nPHP MVC\r\nVanilla JS\r\nDesign Patterns\r\nRead SQL docs\r\nFuture Certificates \r\nNetwork+\r\nLinux+\r\n\r\nSecurity+\r\n\r\n\r\nAWS Certified Cloud Practitioner\r\n\r\n', 1, '2021-12-21 07:45:34', '2021-12-21 07:45:34', 'learning-roadmap', 'misc', 'version', '', '', 4),
(260, 40, 'Learning Roadmap', '<h4 id=\"bkmrk-current-roadmap\">Current Roadmap</h4>\r\n<ol id=\"bkmrk-docker-webpack-php-m\"><li>Docker</li>\r\n<li>Webpack</li>\r\n<li>PHP MVC</li>\r\n<li>Vanilla JS</li>\r\n<li>Design Patterns</li>\r\n<li>Read SQL docs -&gt; https://dev.mysql.com/doc/refman/8.0/en/</li>\r\n</ol><h4 id=\"bkmrk-future-certificates%C2%A0\">Future Certificates </h4>\r\n<ol id=\"bkmrk-network%2B-linux%2B-secu\"><li>Network+</li>\r\n<li>Linux+</li>\r\n<li>\r\n<p>Security+</p>\r\n</li>\r\n<li>\r\n<p class=\"udlite-heading-xl clp-lead__title clp-lead__title--small\" data-purpose=\"lead-title\">AWS Certified Cloud Practitioner</p>\r\n</li>\r\n</ol>', 'Current Roadmap\r\nDocker\r\nWebpack\r\nPHP MVC\r\nVanilla JS\r\nDesign Patterns\r\nRead SQL docs -> https://dev.mysql.com/doc/refman/8.0/en/\r\nFuture Certificates \r\nNetwork+\r\nLinux+\r\n\r\nSecurity+\r\n\r\n\r\nAWS Certified Cloud Practitioner\r\n\r\n', 1, '2021-12-21 07:48:10', '2021-12-21 07:48:10', 'learning-roadmap', 'misc', 'version', '', '', 5),
(261, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container Actions</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\n<ul><li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. \r\n<p><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</p>\r\n</li>\r\n</ul><ul><li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec -it</strong> - Run a command in the existing container.</p>\r\n</li>\r\n<li>\r\n<p><em><strong>docker container stop container</strong> -</em> Stop a docker container.</p>\r\n</li>\r\n<li>\r\n<p><strong>docker container rm <em>container</em></strong> - Remove a container</p>\r\n<ul><li>Use <strong>-f</strong> to force remove</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container start <em>container</em></strong> - Start docker container</p>\r\n<ul><li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</p>\r\n<ul><li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n</ul></li>\r\n<li><strong>docker update <em>container </em></strong>- Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.</li>\r\n</ul><h4 id=\"bkmrk-all-container-info\">Container info</h4>\r\n<ul id=\"bkmrk-docker-container-ls-\"><li><strong>docker container ls</strong> - list all started containers.\r\n<ul><li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n</ul></li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n</ul><h4 id=\"bkmrk-single-container-inf\">Single container info</h4>\r\n<ul id=\"bkmrk-docker-container-log\"><li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config\r\n<ul><li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker specific formatting language.</li>\r\n</ul></li>\r\n<li><em><strong>docker container port container</strong> -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<ul id=\"bkmrk-docker-image-ls---sh\"><li><strong>docker image ls</strong> - Show info about all images</li>\r\n<li><em><strong>docker image inspect image</strong> -</em> Show info about an image</li>\r\n<li><strong>docker image history <em>image</em></strong> - Show image layer history</li>\r\n<li><em><strong>docker image tag source_image target_image</strong> -</em> Create a new image based on an existing image. It is possible to specify tag, by default it will be latest</li>\r\n<li><strong>docker image push <em>image</em></strong> - Push the image to your docker hub repository.</li>\r\n<li><em><strong>docker image build image</strong> -</em> Build a image from a Dockerfile</li>\r\n</ul><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<ul id=\"bkmrk-docker-network-ls---\"><li><strong>docker network ls</strong> - Show all networks</li>\r\n<li><strong>docker network inspect <em>network</em></strong> - Inspect a network</li>\r\n<li><strong>docker network create <em>network</em></strong> - Create a network</li>\r\n<li><strong>docker network connect <em>network container</em></strong> - Attach a network to a container</li>\r\n<li><strong>docker network disconnect <em>network container</em></strong> - Detach a network from a container</li>\r\n</ul><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<ul id=\"bkmrk-docker-volume-ls---l\"><li><strong>docker volume ls</strong> - List all volumes</li>\r\n</ul><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<ul id=\"bkmrk-docker-compose-up---\"><li><strong>docker-compose up</strong> - Start docker compose file</li>\r\n<li><strong>docker-compose down</strong> - Stop docker compose file</li>\r\n<li><strong>docker-compose ps</strong> - List all containers\r\n<ul><li><strong>docker-compose tops</strong> - List all services running inside containers</li>\r\n</ul></li>\r\n<li><strong>docker-compose logs</strong> - Show logs</li>\r\n<li><strong>docker compose ls</strong> - List running compose projects</li>\r\n</ul><h4 id=\"bkmrk-misc.%C2%A0\">Misc. </h4>\r\n<p id=\"bkmrk-%C2%A0docker-cp-container\"><strong>docker cp <em>container:src_path dest_path </em></strong><em>- </em>Copy files/folders between a container and the local filesystem<em>.</em></p>\r\n<h3 id=\"bkmrk-swarm\">Swarm</h3>\r\n<h4 id=\"bkmrk-nodes\">Nodes</h4>\r\n<ul id=\"bkmrk-docker-node-ls---lis\"><li><strong>docker node ls</strong> - List all nodes</li>\r\n</ul><h4 id=\"bkmrk-services\">Services</h4>\r\n<ul id=\"bkmrk-docker-service-ls%C2%A0--\"><li><strong>docker service ls </strong>- List all services</li>\r\n<li><strong>docker service update <em>service </em></strong>- Update service\r\n<ul><li>Use <strong>--replicas <em>count </em></strong>to create new replicas</li>\r\n</ul></li>\r\n</ul>', 'Container Actions\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\n\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\n\r\n\r\ndocker container exec -it - Run a command in the existing container.\r\n\r\n\r\ndocker container stop container - Stop a docker container.\r\n\r\n\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\n\r\n\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\n\r\n\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\n\r\ndocker update container - Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.\r\nContainer info\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\n\r\ndocker container stats - Performance stats for all containers\r\nSingle container info\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker specific formatting language.\r\n\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image ls - Show info about all images\r\ndocker image inspect image - Show info about an image\r\ndocker image history image - Show image layer history\r\ndocker image tag source_image target_image - Create a new image based on an existing image. It is possible to specify tag, by default it will be latest\r\ndocker image push image - Push the image to your docker hub repository.\r\ndocker image build image - Build a image from a Dockerfile\r\nNetworks\r\ndocker network ls - Show all networks\r\ndocker network inspect network - Inspect a network\r\ndocker network create network - Create a network\r\ndocker network connect network container - Attach a network to a container\r\ndocker network disconnect network container - Detach a network from a container\r\nVolumes\r\ndocker volume ls - List all volumes\r\nDocker Compose\r\ndocker-compose up - Start docker compose file\r\ndocker-compose down - Stop docker compose file\r\ndocker-compose ps - List all containers\r\ndocker-compose tops - List all services running inside containers\r\n\r\ndocker-compose logs - Show logs\r\ndocker compose ls - List running compose projects\r\nMisc. \r\ndocker cp container:src_path dest_path - Copy files/folders between a container and the local filesystem.\r\nSwarm\r\nNodes\r\ndocker node ls - List all nodes\r\nServices\r\ndocker service ls - List all services\r\ndocker service update service - Update service\r\nUse --replicas count to create new replicas\r\n\r\n', 1, '2021-12-21 08:22:25', '2021-12-21 08:22:25', 'common-docker-commands', 'docker', 'version', '', '', 12),
(263, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\n<ul><li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. \r\n<p><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</p>\r\n</li>\r\n</ul><ul><li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec -it</strong> - Run a command in the existing container.</p>\r\n</li>\r\n<li>\r\n<p><em><strong>docker container stop container</strong> -</em> Stop a docker container.</p>\r\n</li>\r\n<li>\r\n<p><strong>docker container rm <em>container</em></strong> - Remove a container</p>\r\n<ul><li>Use <strong>-f</strong> to force remove</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container start <em>container</em></strong> - Start docker container</p>\r\n<ul><li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</p>\r\n<ul><li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n</ul></li>\r\n<li><strong>docker update <em>container </em></strong>- Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.</li>\r\n<li><strong>docker container ls</strong> - list all started containers.\r\n<ul><li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n</ul></li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n<li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config\r\n<ul><li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker specific formatting language.</li>\r\n</ul></li>\r\n<li><em><strong>docker container port container</strong> -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<ul id=\"bkmrk-docker-image-ls---sh\"><li><strong>docker image ls</strong> - Show info about all images</li>\r\n<li><em><strong>docker image inspect image</strong> -</em> Show info about an image</li>\r\n<li><strong>docker image history <em>image</em></strong> - Show image layer history</li>\r\n<li><em><strong>docker image tag source_image target_image</strong> -</em> Create a new image based on an existing image. It is possible to specify tag, by default it will be latest</li>\r\n<li><strong>docker image push <em>image</em></strong> - Push the image to your docker hub repository.</li>\r\n<li><em><strong>docker image build image</strong> -</em> Build a image from a Dockerfile.</li>\r\n</ul><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<table style=\"border-style: solid;\" id=\"bkmrk-docker-network-conne\"><tbody><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/network_connect/\">docker network connect</a></td>\r\n<td>Connect a container to a network</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/network_create/\">docker network create</a></td>\r\n<td>Create a network</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/network_disconnect/\">docker network disconnect</a></td>\r\n<td>Disconnect a container from a network</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/network_inspect/\">docker network inspect</a></td>\r\n<td>Display detailed information on one or more networks</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/network_ls/\">docker network ls</a></td>\r\n<td>List networks</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/network_prune/\">docker network prune</a></td>\r\n<td>Remove all unused networks</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/network_rm/\">docker network rm</a></td>\r\n<td>Remove one or more networks</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<ul id=\"bkmrk-docker-volume-ls---l\"><li><strong>docker volume ls</strong> - List all volumes</li>\r\n</ul><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<ul id=\"bkmrk-docker-compose-up---\"><li><strong>docker-compose up</strong> - Start docker compose file</li>\r\n<li><strong>docker-compose down</strong> - Stop docker compose file</li>\r\n<li><strong>docker-compose ps</strong> - List all containers\r\n<ul><li><strong>docker-compose tops</strong> - List all services running inside containers</li>\r\n</ul></li>\r\n<li><strong>docker-compose logs</strong> - Show logs</li>\r\n<li><strong>docker compose ls</strong> - List running compose projects</li>\r\n</ul><h4 id=\"bkmrk-misc.%C2%A0\">Misc. </h4>\r\n<p id=\"bkmrk-%C2%A0docker-cp-container\"><strong>docker cp <em>container:src_path dest_path </em></strong><em>- </em>Copy files/folders between a container and the local filesystem<em>.</em></p>\r\n<h3 id=\"bkmrk-swarm\">Swarm</h3>\r\n<h4 id=\"bkmrk-nodes\">Nodes</h4>\r\n<ul id=\"bkmrk-docker-node-ls---lis\"><li><strong>docker node ls</strong> - List all nodes</li>\r\n</ul><h4 id=\"bkmrk-services\">Services</h4>\r\n<ul id=\"bkmrk-docker-service-ls%C2%A0--\"><li><strong>docker service ls </strong>- List all services</li>\r\n<li><strong>docker service update <em>service </em></strong>- Update service\r\n<ul><li>Use <strong>--replicas <em>count </em></strong>to create new replicas</li>\r\n</ul></li>\r\n</ul>', 'Container\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\n\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\n\r\n\r\ndocker container exec -it - Run a command in the existing container.\r\n\r\n\r\ndocker container stop container - Stop a docker container.\r\n\r\n\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\n\r\n\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\n\r\n\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\n\r\ndocker update container - Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\n\r\ndocker container stats - Performance stats for all containers\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker specific formatting language.\r\n\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image ls - Show info about all images\r\ndocker image inspect image - Show info about an image\r\ndocker image history image - Show image layer history\r\ndocker image tag source_image target_image - Create a new image based on an existing image. It is possible to specify tag, by default it will be latest\r\ndocker image push image - Push the image to your docker hub repository.\r\ndocker image build image - Build a image from a Dockerfile.\r\nNetworks\r\ndocker network connect\r\nConnect a container to a network\r\ndocker network create\r\nCreate a network\r\ndocker network disconnect\r\nDisconnect a container from a network\r\ndocker network inspect\r\nDisplay detailed information on one or more networks\r\ndocker network ls\r\nList networks\r\ndocker network prune\r\nRemove all unused networks\r\ndocker network rm\r\nRemove one or more networks\r\nVolumes\r\ndocker volume ls - List all volumes\r\nDocker Compose\r\ndocker-compose up - Start docker compose file\r\ndocker-compose down - Stop docker compose file\r\ndocker-compose ps - List all containers\r\ndocker-compose tops - List all services running inside containers\r\n\r\ndocker-compose logs - Show logs\r\ndocker compose ls - List running compose projects\r\nMisc. \r\ndocker cp container:src_path dest_path - Copy files/folders between a container and the local filesystem.\r\nSwarm\r\nNodes\r\ndocker node ls - List all nodes\r\nServices\r\ndocker service ls - List all services\r\ndocker service update service - Update service\r\nUse --replicas count to create new replicas\r\n\r\n', 1, '2021-12-21 08:34:58', '2021-12-21 08:34:58', 'common-docker-commands', 'docker', 'version', '', '', 13);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(265, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.</li>\r\n<li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. </li>\r\n<li><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</li>\r\n<li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n<li><strong>docker container exec -it</strong> - Run a command in the existing container.</li>\r\n<li><em><strong>docker container stop container</strong> -</em> Stop a docker container.</li>\r\n<li><strong>docker container rm <em>container</em></strong> - Remove a container</li>\r\n<li>Use <strong>-f</strong> to force remove</li>\r\n<li><strong>docker container start <em>container</em></strong> - Start docker container</li>\r\n<li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n<li><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</li>\r\n<li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n<li><strong>docker update <em>container </em></strong>- Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.</li>\r\n<li><strong>docker container ls</strong> - list all started containers.</li>\r\n<li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n<li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config</li>\r\n<li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker specific formatting language.</li>\r\n<li><em><strong>docker container port container</strong> -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<table id=\"bkmrk-docker-image-build-b\"><tbody><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/image_build/\">docker image build</a></td>\r\n<td>Build an image from a Dockerfile</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/image_history/\">docker image history</a></td>\r\n<td>Show the history of an image</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/image_inspect/\">docker image inspect</a></td>\r\n<td>Display detailed information on one or more images</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/image_ls/\">docker image ls</a></td>\r\n<td>List images</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/image_prune/\">docker image prune</a></td>\r\n<td>Remove unused images</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/image_pull/\">docker image pull</a></td>\r\n<td>Pull an image or a repository from a registry</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/image_push/\">docker image push</a></td>\r\n<td>Push an image or a repository to a registry</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/image_rm/\">docker image rm</a></td>\r\n<td>Remove one or more images</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/image_tag/\">docker image tag</a></td>\r\n<td>Create a tag</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<table id=\"bkmrk-docker-network-conne\" style=\"border-style: solid;\"><tbody><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/network_connect/\">docker network connect</a></td>\r\n<td>Connect a container to a network</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/network_create/\">docker network create</a></td>\r\n<td>Create a network</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/network_disconnect/\">docker network disconnect</a></td>\r\n<td>Disconnect a container from a network</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/network_inspect/\">docker network inspect</a></td>\r\n<td>Display detailed information on one or more networks</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/network_ls/\">docker network ls</a></td>\r\n<td>List networks</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/network_prune/\">docker network prune</a></td>\r\n<td>Remove all unused networks</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/network_rm/\">docker network rm</a></td>\r\n<td>Remove one or more networks</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<table id=\"bkmrk-docker-volume-create\"><tbody><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/volume_create/\">docker volume create</a></td>\r\n<td>Create a volume</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/volume_inspect/\">docker volume inspect</a></td>\r\n<td>Display detailed information on one or more volumes</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/volume_ls/\">docker volume ls</a></td>\r\n<td>List volumes</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/volume_prune/\">docker volume prune</a></td>\r\n<td>Remove all unused local volumes</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/volume_rm/\">docker volume rm</a></td>\r\n<td>Remove one or more volumes</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<ul id=\"bkmrk-docker-compose-up---\"><li><strong>docker-compose up</strong> - Start docker compose file</li>\r\n<li><strong>docker-compose down</strong> - Stop docker compose file</li>\r\n<li><strong>docker-compose ps</strong> - List all containers\r\n<ul><li><strong>docker-compose tops</strong> - List all services running inside containers</li>\r\n</ul></li>\r\n<li><strong>docker-compose logs</strong> - Show logs</li>\r\n<li><strong>docker compose ls</strong> - List running compose projects</li>\r\n</ul><h4 id=\"bkmrk-misc.%C2%A0\">Misc. </h4>\r\n<p id=\"bkmrk-%C2%A0docker-cp-container\"><strong>docker cp <em>container:src_path dest_path </em></strong><em>- </em>Copy files/folders between a container and the local filesystem<em>.</em></p>\r\n<h3 id=\"bkmrk-swarm\">Swarm</h3>\r\n<h4 id=\"bkmrk-nodes\">Nodes</h4>\r\n<ul id=\"bkmrk-docker-node-ls---lis\"><li><strong>docker node ls</strong> - List all nodes</li>\r\n</ul><h4 id=\"bkmrk-services\">Services</h4>\r\n<ul id=\"bkmrk-docker-service-ls%C2%A0--\"><li><strong>docker service ls </strong>- List all services</li>\r\n<li><strong>docker service update <em>service </em></strong>- Update service\r\n<ul><li>Use <strong>--replicas <em>count </em></strong>to create new replicas</li>\r\n</ul></li>\r\n</ul>', 'Container\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\ndocker container exec -it - Run a command in the existing container.\r\ndocker container stop container - Stop a docker container.\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\ndocker update container - Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\ndocker container stats - Performance stats for all containers\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker specific formatting language.\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image build\r\nBuild an image from a Dockerfile\r\ndocker image history\r\nShow the history of an image\r\ndocker image inspect\r\nDisplay detailed information on one or more images\r\ndocker image ls\r\nList images\r\ndocker image prune\r\nRemove unused images\r\ndocker image pull\r\nPull an image or a repository from a registry\r\ndocker image push\r\nPush an image or a repository to a registry\r\ndocker image rm\r\nRemove one or more images\r\ndocker image tag\r\nCreate a tag\r\nNetworks\r\ndocker network connect\r\nConnect a container to a network\r\ndocker network create\r\nCreate a network\r\ndocker network disconnect\r\nDisconnect a container from a network\r\ndocker network inspect\r\nDisplay detailed information on one or more networks\r\ndocker network ls\r\nList networks\r\ndocker network prune\r\nRemove all unused networks\r\ndocker network rm\r\nRemove one or more networks\r\nVolumes\r\ndocker volume create\r\nCreate a volume\r\ndocker volume inspect\r\nDisplay detailed information on one or more volumes\r\ndocker volume ls\r\nList volumes\r\ndocker volume prune\r\nRemove all unused local volumes\r\ndocker volume rm\r\nRemove one or more volumes\r\nDocker Compose\r\ndocker-compose up - Start docker compose file\r\ndocker-compose down - Stop docker compose file\r\ndocker-compose ps - List all containers\r\ndocker-compose tops - List all services running inside containers\r\n\r\ndocker-compose logs - Show logs\r\ndocker compose ls - List running compose projects\r\nMisc. \r\ndocker cp container:src_path dest_path - Copy files/folders between a container and the local filesystem.\r\nSwarm\r\nNodes\r\ndocker node ls - List all nodes\r\nServices\r\ndocker service ls - List all services\r\ndocker service update service - Update service\r\nUse --replicas count to create new replicas\r\n\r\n', 1, '2021-12-21 08:46:48', '2021-12-21 08:46:48', 'common-docker-commands', 'docker', 'version', '', '', 14),
(266, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.</li>\r\n<li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. </li>\r\n<li><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</li>\r\n<li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n<li><strong>docker container exec -it</strong> - Run a command in the existing container.</li>\r\n<li><em><strong>docker container stop container</strong> -</em> Stop a docker container.</li>\r\n<li><strong>docker container rm <em>container</em></strong> - Remove a container</li>\r\n<li>Use <strong>-f</strong> to force remove</li>\r\n<li><strong>docker container start <em>container</em></strong> - Start docker container</li>\r\n<li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n<li><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</li>\r\n<li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n<li><strong>docker update <em>container </em></strong>- Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.</li>\r\n<li><strong>docker container ls</strong> - list all started containers.</li>\r\n<li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n<li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config</li>\r\n<li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker specific formatting language.</li>\r\n<li><em><strong>docker container port container</strong> -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<table id=\"bkmrk-docker-image-build-b\"><tbody><tr><td>docker image build</td>\r\n<td>Build an image from a Dockerfile</td>\r\n</tr><tr><td>docker image history</td>\r\n<td>Show the history of an image</td>\r\n</tr><tr><td>docker image inspect</td>\r\n<td>Display detailed information on one or more images</td>\r\n</tr><tr><td>docker image ls</td>\r\n<td>List images</td>\r\n</tr><tr><td>docker image prune</td>\r\n<td>Remove unused images</td>\r\n</tr><tr><td>docker image pull</td>\r\n<td>Pull an image or a repository from a registry</td>\r\n</tr><tr><td>docker image push</td>\r\n<td>Push an image or a repository to a registry</td>\r\n</tr><tr><td>docker image rm</td>\r\n<td>Remove one or more images</td>\r\n</tr><tr><td>docker image tag</td>\r\n<td>Create a tag</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<table id=\"bkmrk-docker-network-conne\" style=\"border-style: solid;\"><tbody><tr><td>docker network connect</td>\r\n<td>Connect a container to a network</td>\r\n</tr><tr><td>docker network create</td>\r\n<td>Create a network</td>\r\n</tr><tr><td>docker network disconnect</td>\r\n<td>Disconnect a container from a network</td>\r\n</tr><tr><td>docker network inspect</td>\r\n<td>Display detailed information on one or more networks</td>\r\n</tr><tr><td>docker network ls</td>\r\n<td>List networks</td>\r\n</tr><tr><td>docker network prune</td>\r\n<td>Remove all unused networks</td>\r\n</tr><tr><td>docker network rm</td>\r\n<td>Remove one or more networks</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<table id=\"bkmrk-docker-volume-create\"><tbody><tr><td>docker volume create</td>\r\n<td>Create a volume</td>\r\n</tr><tr><td>docker volume inspect</td>\r\n<td>Display detailed information on one or more volumes</td>\r\n</tr><tr><td>docker volume ls</td>\r\n<td>List volumes</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/volume_prune/\">docker volume prune</a></td>\r\n<td>Remove all unused local volumes</td>\r\n</tr><tr><td><a href=\"https://docs.docker.com/engine/reference/commandline/volume_rm/\">docker volume rm</a></td>\r\n<td>Remove one or more volumes</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<ul id=\"bkmrk-docker-compose-up---\"><li><strong>docker-compose up</strong> - Start docker compose file</li>\r\n<li><strong>docker-compose down</strong> - Stop docker compose file</li>\r\n<li><strong>docker-compose ps</strong> - List all containers\r\n<ul><li><strong>docker-compose tops</strong> - List all services running inside containers</li>\r\n</ul></li>\r\n<li><strong>docker-compose logs</strong> - Show logs</li>\r\n<li><strong>docker compose ls</strong> - List running compose projects</li>\r\n</ul><h4 id=\"bkmrk-misc.%C2%A0\">Misc. </h4>\r\n<p id=\"bkmrk-%C2%A0docker-cp-container\"><strong>docker cp <em>container:src_path dest_path </em></strong><em>- </em>Copy files/folders between a container and the local filesystem<em>.</em></p>\r\n<h3 id=\"bkmrk-swarm\">Swarm</h3>\r\n<h4 id=\"bkmrk-nodes\">Nodes</h4>\r\n<ul id=\"bkmrk-docker-node-ls---lis\"><li><strong>docker node ls</strong> - List all nodes</li>\r\n</ul><h4 id=\"bkmrk-services\">Services</h4>\r\n<ul id=\"bkmrk-docker-service-ls%C2%A0--\"><li><strong>docker service ls </strong>- List all services</li>\r\n<li><strong>docker service update <em>service </em></strong>- Update service\r\n<ul><li>Use <strong>--replicas <em>count </em></strong>to create new replicas</li>\r\n</ul></li>\r\n</ul>', 'Container\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\ndocker container exec -it - Run a command in the existing container.\r\ndocker container stop container - Stop a docker container.\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\ndocker update container - Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\ndocker container stats - Performance stats for all containers\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker specific formatting language.\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image build\r\nBuild an image from a Dockerfile\r\ndocker image history\r\nShow the history of an image\r\ndocker image inspect\r\nDisplay detailed information on one or more images\r\ndocker image ls\r\nList images\r\ndocker image prune\r\nRemove unused images\r\ndocker image pull\r\nPull an image or a repository from a registry\r\ndocker image push\r\nPush an image or a repository to a registry\r\ndocker image rm\r\nRemove one or more images\r\ndocker image tag\r\nCreate a tag\r\nNetworks\r\ndocker network connect\r\nConnect a container to a network\r\ndocker network create\r\nCreate a network\r\ndocker network disconnect\r\nDisconnect a container from a network\r\ndocker network inspect\r\nDisplay detailed information on one or more networks\r\ndocker network ls\r\nList networks\r\ndocker network prune\r\nRemove all unused networks\r\ndocker network rm\r\nRemove one or more networks\r\nVolumes\r\ndocker volume create\r\nCreate a volume\r\ndocker volume inspect\r\nDisplay detailed information on one or more volumes\r\ndocker volume ls\r\nList volumes\r\ndocker volume prune\r\nRemove all unused local volumes\r\ndocker volume rm\r\nRemove one or more volumes\r\nDocker Compose\r\ndocker-compose up - Start docker compose file\r\ndocker-compose down - Stop docker compose file\r\ndocker-compose ps - List all containers\r\ndocker-compose tops - List all services running inside containers\r\n\r\ndocker-compose logs - Show logs\r\ndocker compose ls - List running compose projects\r\nMisc. \r\ndocker cp container:src_path dest_path - Copy files/folders between a container and the local filesystem.\r\nSwarm\r\nNodes\r\ndocker node ls - List all nodes\r\nServices\r\ndocker service ls - List all services\r\ndocker service update service - Update service\r\nUse --replicas count to create new replicas\r\n\r\n', 1, '2021-12-21 08:47:04', '2021-12-21 08:47:04', 'common-docker-commands', 'docker', 'version', '', '', 15),
(267, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.</li>\r\n<li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. </li>\r\n<li><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</li>\r\n<li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n<li><strong>docker container exec -it</strong> - Run a command in the existing container.</li>\r\n<li><em><strong>docker container stop container</strong> -</em> Stop a docker container.</li>\r\n<li><strong>docker container rm <em>container</em></strong> - Remove a container</li>\r\n<li>Use <strong>-f</strong> to force remove</li>\r\n<li><strong>docker container start <em>container</em></strong> - Start docker container</li>\r\n<li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n<li><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</li>\r\n<li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n<li><strong>docker update <em>container </em></strong>- Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.</li>\r\n<li><strong>docker container ls</strong> - list all started containers.</li>\r\n<li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n<li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config</li>\r\n<li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker specific formatting language.</li>\r\n<li><em><strong>docker container port container</strong> -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<table id=\"bkmrk-docker-image-build-b\"><tbody><tr><td>docker image build</td>\r\n<td>Build an image from a Dockerfile</td>\r\n</tr><tr><td>docker image history</td>\r\n<td>Show the history of an image</td>\r\n</tr><tr><td>docker image inspect</td>\r\n<td>Display detailed information on one or more images</td>\r\n</tr><tr><td>docker image ls</td>\r\n<td>List images</td>\r\n</tr><tr><td>docker image prune</td>\r\n<td>Remove unused images</td>\r\n</tr><tr><td>docker image pull</td>\r\n<td>Pull an image or a repository from a registry</td>\r\n</tr><tr><td>docker image push</td>\r\n<td>Push an image or a repository to a registry</td>\r\n</tr><tr><td>docker image rm</td>\r\n<td>Remove one or more images</td>\r\n</tr><tr><td>docker image tag</td>\r\n<td>Create a tag</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<table id=\"bkmrk-docker-network-conne\" style=\"border-style: solid; height: 203px;\"><tbody><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\">docker network connect</td>\r\n<td style=\"height: 29px; width: 361.016px;\">Connect a container to a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\">docker network create</td>\r\n<td style=\"height: 29px; width: 361.016px;\">Create a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\">docker network disconnect</td>\r\n<td style=\"height: 29px; width: 361.016px;\">Disconnect a container from a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\">docker network inspect</td>\r\n<td style=\"height: 29px; width: 361.016px;\">Display detailed information on one or more networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\">docker network ls</td>\r\n<td style=\"height: 29px; width: 361.016px;\">List networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\">docker network prune</td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove all unused networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\">docker network rm</td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove one or more networks</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<table id=\"bkmrk-docker-volume-create\"><tbody><tr><td>docker volume create</td>\r\n<td>Create a volume</td>\r\n</tr><tr><td>docker volume inspect</td>\r\n<td>Display detailed information on one or more volumes</td>\r\n</tr><tr><td>docker volume ls</td>\r\n<td>List volumes</td>\r\n</tr><tr><td>docker volume prune</td>\r\n<td>Remove all unused local volumes</td>\r\n</tr><tr><td>docker volume rm</td>\r\n<td>Remove one or more volumes</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<ul id=\"bkmrk-docker-compose-up---\"><li><strong>docker-compose up</strong> - Start docker compose file</li>\r\n<li><strong>docker-compose down</strong> - Stop docker compose file</li>\r\n<li><strong>docker-compose ps</strong> - List all containers\r\n<ul><li><strong>docker-compose tops</strong> - List all services running inside containers</li>\r\n</ul></li>\r\n<li><strong>docker-compose logs</strong> - Show logs</li>\r\n<li><strong>docker compose ls</strong> - List running compose projects</li>\r\n</ul><h4 id=\"bkmrk-misc.%C2%A0\">Misc. </h4>\r\n<p id=\"bkmrk-%C2%A0docker-cp-container\"><strong>docker cp <em>container:src_path dest_path </em></strong><em>- </em>Copy files/folders between a container and the local filesystem<em>.</em></p>\r\n<h3 id=\"bkmrk-swarm\">Swarm</h3>\r\n<h4 id=\"bkmrk-nodes\">Nodes</h4>\r\n<ul id=\"bkmrk-docker-node-ls---lis\"><li><strong>docker node ls</strong> - List all nodes</li>\r\n</ul><h4 id=\"bkmrk-services\">Services</h4>\r\n<ul id=\"bkmrk-docker-service-ls%C2%A0--\"><li><strong>docker service ls </strong>- List all services</li>\r\n<li><strong>docker service update <em>service </em></strong>- Update service\r\n<ul><li>Use <strong>--replicas <em>count </em></strong>to create new replicas</li>\r\n</ul></li>\r\n</ul>', 'Container\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\ndocker container exec -it - Run a command in the existing container.\r\ndocker container stop container - Stop a docker container.\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\ndocker update container - Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\ndocker container stats - Performance stats for all containers\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker specific formatting language.\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image build\r\nBuild an image from a Dockerfile\r\ndocker image history\r\nShow the history of an image\r\ndocker image inspect\r\nDisplay detailed information on one or more images\r\ndocker image ls\r\nList images\r\ndocker image prune\r\nRemove unused images\r\ndocker image pull\r\nPull an image or a repository from a registry\r\ndocker image push\r\nPush an image or a repository to a registry\r\ndocker image rm\r\nRemove one or more images\r\ndocker image tag\r\nCreate a tag\r\nNetworks\r\ndocker network connect\r\nConnect a container to a network\r\ndocker network create\r\nCreate a network\r\ndocker network disconnect\r\nDisconnect a container from a network\r\ndocker network inspect\r\nDisplay detailed information on one or more networks\r\ndocker network ls\r\nList networks\r\ndocker network prune\r\nRemove all unused networks\r\ndocker network rm\r\nRemove one or more networks\r\nVolumes\r\ndocker volume create\r\nCreate a volume\r\ndocker volume inspect\r\nDisplay detailed information on one or more volumes\r\ndocker volume ls\r\nList volumes\r\ndocker volume prune\r\nRemove all unused local volumes\r\ndocker volume rm\r\nRemove one or more volumes\r\nDocker Compose\r\ndocker-compose up - Start docker compose file\r\ndocker-compose down - Stop docker compose file\r\ndocker-compose ps - List all containers\r\ndocker-compose tops - List all services running inside containers\r\n\r\ndocker-compose logs - Show logs\r\ndocker compose ls - List running compose projects\r\nMisc. \r\ndocker cp container:src_path dest_path - Copy files/folders between a container and the local filesystem.\r\nSwarm\r\nNodes\r\ndocker node ls - List all nodes\r\nServices\r\ndocker service ls - List all services\r\ndocker service update service - Update service\r\nUse --replicas count to create new replicas\r\n\r\n', 1, '2021-12-21 08:47:35', '2021-12-21 08:47:35', 'common-docker-commands', 'docker', 'version', '', '', 16);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(268, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container</h4>\r\n<ul id=\"bkmrk-docker-container-run\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.</li>\r\n<li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. </li>\r\n<li><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</li>\r\n<li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n<li><strong>docker container exec -it</strong> - Run a command in the existing container.</li>\r\n<li><em><strong>docker container stop container</strong> -</em> Stop a docker container.</li>\r\n<li><strong>docker container rm <em>container</em></strong> - Remove a container</li>\r\n<li>Use <strong>-f</strong> to force remove</li>\r\n<li><strong>docker container start <em>container</em></strong> - Start docker container</li>\r\n<li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n<li><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</li>\r\n<li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n<li><strong>docker update <em>container </em></strong>- Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.</li>\r\n<li><strong>docker container ls</strong> - list all started containers.</li>\r\n<li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n<li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config</li>\r\n<li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker specific formatting language.</li>\r\n<li><em><strong>docker container port container</strong> -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<table id=\"bkmrk-docker-image-build-b\"><tbody><tr><td><strong>docker image build</strong></td>\r\n<td>Build an image from a Dockerfile</td>\r\n</tr><tr><td><strong>docker image history</strong></td>\r\n<td>Show the history of an image</td>\r\n</tr><tr><td><strong>docker image inspect</strong></td>\r\n<td>Display detailed information on one or more images</td>\r\n</tr><tr><td><strong>docker image ls</strong></td>\r\n<td>List images</td>\r\n</tr><tr><td><strong>docker image prune</strong></td>\r\n<td>Remove unused images</td>\r\n</tr><tr><td><strong>docker image pull</strong></td>\r\n<td>Pull an image or a repository from a registry</td>\r\n</tr><tr><td><strong>docker image push</strong></td>\r\n<td>Push an image or a repository to a registry</td>\r\n</tr><tr><td><strong>docker image rm</strong></td>\r\n<td>Remove one or more images</td>\r\n</tr><tr><td><strong>docker image tag</strong></td>\r\n<td>Create a tag</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<table id=\"bkmrk-docker-network-conne\" style=\"border-style: solid; height: 203px;\"><tbody><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network connect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Connect a container to a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network create</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Create a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network disconnect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Disconnect a container from a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network inspect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Display detailed information on one or more networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network ls</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">List networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network prune</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove all unused networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network rm</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove one or more networks</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<table id=\"bkmrk-docker-volume-create\"><tbody><tr><td><strong>docker volume create</strong></td>\r\n<td>Create a volume</td>\r\n</tr><tr><td><strong>docker volume inspect</strong></td>\r\n<td>Display detailed information on one or more volumes</td>\r\n</tr><tr><td><strong>docker volume ls</strong></td>\r\n<td>List volumes</td>\r\n</tr><tr><td><strong>docker volume prune</strong></td>\r\n<td>Remove all unused local volumes</td>\r\n</tr><tr><td><strong>docker volume rm</strong></td>\r\n<td>Remove one or more volumes</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<ul id=\"bkmrk-docker-compose-up---\"><li><strong>docker-compose up</strong> - Start docker compose file</li>\r\n<li><strong>docker-compose down</strong> - Stop docker compose file</li>\r\n<li><strong>docker-compose ps</strong> - List all containers\r\n<ul><li><strong>docker-compose tops</strong> - List all services running inside containers</li>\r\n</ul></li>\r\n<li><strong>docker-compose logs</strong> - Show logs</li>\r\n<li><strong>docker compose ls</strong> - List running compose projects</li>\r\n</ul><h4 id=\"bkmrk-misc.%C2%A0\">Misc. </h4>\r\n<p id=\"bkmrk-%C2%A0docker-cp-container\"><strong>docker cp <em>container:src_path dest_path </em></strong><em>- </em>Copy files/folders between a container and the local filesystem<em>.</em></p>\r\n<h3 id=\"bkmrk-swarm\">Swarm</h3>\r\n<h4 id=\"bkmrk-nodes\">Nodes</h4>\r\n<ul id=\"bkmrk-docker-node-ls---lis\"><li><strong>docker node ls</strong> - List all nodes</li>\r\n</ul><h4 id=\"bkmrk-services\">Services</h4>\r\n<ul id=\"bkmrk-docker-service-ls%C2%A0--\"><li><strong>docker service ls </strong>- List all services</li>\r\n<li><strong>docker service update <em>service </em></strong>- Update service\r\n<ul><li>Use <strong>--replicas <em>count </em></strong>to create new replicas</li>\r\n</ul></li>\r\n</ul>', 'Container\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\ndocker container exec -it - Run a command in the existing container.\r\ndocker container stop container - Stop a docker container.\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\ndocker update container - Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\ndocker container stats - Performance stats for all containers\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker specific formatting language.\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image build\r\nBuild an image from a Dockerfile\r\ndocker image history\r\nShow the history of an image\r\ndocker image inspect\r\nDisplay detailed information on one or more images\r\ndocker image ls\r\nList images\r\ndocker image prune\r\nRemove unused images\r\ndocker image pull\r\nPull an image or a repository from a registry\r\ndocker image push\r\nPush an image or a repository to a registry\r\ndocker image rm\r\nRemove one or more images\r\ndocker image tag\r\nCreate a tag\r\nNetworks\r\ndocker network connect\r\nConnect a container to a network\r\ndocker network create\r\nCreate a network\r\ndocker network disconnect\r\nDisconnect a container from a network\r\ndocker network inspect\r\nDisplay detailed information on one or more networks\r\ndocker network ls\r\nList networks\r\ndocker network prune\r\nRemove all unused networks\r\ndocker network rm\r\nRemove one or more networks\r\nVolumes\r\ndocker volume create\r\nCreate a volume\r\ndocker volume inspect\r\nDisplay detailed information on one or more volumes\r\ndocker volume ls\r\nList volumes\r\ndocker volume prune\r\nRemove all unused local volumes\r\ndocker volume rm\r\nRemove one or more volumes\r\nDocker Compose\r\ndocker-compose up - Start docker compose file\r\ndocker-compose down - Stop docker compose file\r\ndocker-compose ps - List all containers\r\ndocker-compose tops - List all services running inside containers\r\n\r\ndocker-compose logs - Show logs\r\ndocker compose ls - List running compose projects\r\nMisc. \r\ndocker cp container:src_path dest_path - Copy files/folders between a container and the local filesystem.\r\nSwarm\r\nNodes\r\ndocker node ls - List all nodes\r\nServices\r\ndocker service ls - List all services\r\ndocker service update service - Update service\r\nUse --replicas count to create new replicas\r\n\r\n', 1, '2021-12-21 08:47:50', '2021-12-21 08:47:50', 'common-docker-commands', 'docker', 'version', '', '', 17),
(270, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container</h4>\r\n<table style=\"border-collapse: collapse; width: 100%; height: 191px;\" border=\"1\" id=\"bkmrk-docker-container-run\"><tbody><tr style=\"height: 46px;\"><td style=\"width: 50%; height: 46px;\"><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run</strong></span></td>\r\n<td style=\"width: 50%; height: 46px;\">Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>—detach (-d)</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">Run the container in the background</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>—name</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">Specify a name for the container</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>—publish (-p) <em>host_port:container_port</em></strong></td>\r\n<td style=\"width: 50%; height: 29px;\">Make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">\r\n<p><strong>-e</strong> </p>\r\n</td>\r\n<td style=\"width: 50%; height: 29px;\">Set environment variables</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"> </td>\r\n<td style=\"width: 50%; height: 29px;\"> </td>\r\n</tr></tbody></table><ul id=\"bkmrk-docker-container-run-0\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.</li>\r\n<li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. </li>\r\n<li><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</li>\r\n<li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n<li><strong>docker container exec -it</strong> - Run a command in the existing container.</li>\r\n<li><em><strong>docker container stop container</strong> -</em> Stop a docker container.</li>\r\n<li><strong>docker container rm <em>container</em></strong> - Remove a container</li>\r\n<li>Use <strong>-f</strong> to force remove</li>\r\n<li><strong>docker container start <em>container</em></strong> - Start docker container</li>\r\n<li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n<li><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</li>\r\n<li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n<li><strong>docker update <em>container </em></strong>- Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.</li>\r\n<li><strong>docker container ls</strong> - list all started containers.</li>\r\n<li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n<li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config</li>\r\n<li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker specific formatting language.</li>\r\n<li><em><strong>docker container port container</strong> -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<table id=\"bkmrk-docker-image-build-b\"><tbody><tr><td><strong>docker image build</strong></td>\r\n<td>Build an image from a Dockerfile</td>\r\n</tr><tr><td><strong>docker image history</strong></td>\r\n<td>Show the history of an image</td>\r\n</tr><tr><td><strong>docker image inspect</strong></td>\r\n<td>Display detailed information on one or more images</td>\r\n</tr><tr><td><strong>docker image ls</strong></td>\r\n<td>List images</td>\r\n</tr><tr><td><strong>docker image prune</strong></td>\r\n<td>Remove unused images</td>\r\n</tr><tr><td><strong>docker image pull</strong></td>\r\n<td>Pull an image or a repository from a registry</td>\r\n</tr><tr><td><strong>docker image push</strong></td>\r\n<td>Push an image or a repository to a registry</td>\r\n</tr><tr><td><strong>docker image rm</strong></td>\r\n<td>Remove one or more images</td>\r\n</tr><tr><td><strong>docker image tag</strong></td>\r\n<td>Create a tag</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<table id=\"bkmrk-docker-network-conne\" style=\"border-style: solid; height: 203px;\"><tbody><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network connect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Connect a container to a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network create</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Create a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network disconnect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Disconnect a container from a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network inspect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Display detailed information on one or more networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network ls</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">List networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network prune</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove all unused networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network rm</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove one or more networks</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<table id=\"bkmrk-docker-volume-create\"><tbody><tr><td><strong>docker volume create</strong></td>\r\n<td>Create a volume</td>\r\n</tr><tr><td><strong>docker volume inspect</strong></td>\r\n<td>Display detailed information on one or more volumes</td>\r\n</tr><tr><td><strong>docker volume ls</strong></td>\r\n<td>List volumes</td>\r\n</tr><tr><td><strong>docker volume prune</strong></td>\r\n<td>Remove all unused local volumes</td>\r\n</tr><tr><td><strong>docker volume rm</strong></td>\r\n<td>Remove one or more volumes</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<ul id=\"bkmrk-docker-compose-up---\"><li><strong>docker-compose up</strong> - Start docker compose file</li>\r\n<li><strong>docker-compose down</strong> - Stop docker compose file</li>\r\n<li><strong>docker-compose ps</strong> - List all containers\r\n<ul><li><strong>docker-compose tops</strong> - List all services running inside containers</li>\r\n</ul></li>\r\n<li><strong>docker-compose logs</strong> - Show logs</li>\r\n<li><strong>docker compose ls</strong> - List running compose projects</li>\r\n</ul><h4 id=\"bkmrk-misc.%C2%A0\">Misc. </h4>\r\n<p id=\"bkmrk-%C2%A0docker-cp-container\"><strong>docker cp <em>container:src_path dest_path </em></strong><em>- </em>Copy files/folders between a container and the local filesystem<em>.</em></p>\r\n<h3 id=\"bkmrk-swarm\">Swarm</h3>\r\n<h4 id=\"bkmrk-nodes\">Nodes</h4>\r\n<ul id=\"bkmrk-docker-node-ls---lis\"><li><strong>docker node ls</strong> - List all nodes</li>\r\n</ul><h4 id=\"bkmrk-services\">Services</h4>\r\n<ul id=\"bkmrk-docker-service-ls%C2%A0--\"><li><strong>docker service ls </strong>- List all services</li>\r\n<li><strong>docker service update <em>service </em></strong>- Update service\r\n<ul><li>Use <strong>--replicas <em>count </em></strong>to create new replicas</li>\r\n</ul></li>\r\n</ul>', 'Container\r\ndocker container run\r\nStarts a container from an image. If the image is not found locally, it will download one from the Docker Hub\r\n—detach (-d)\r\nRun the container in the background\r\n—name\r\nSpecify a name for the container\r\n—publish (-p) host_port:container_port\r\nMake a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world\r\n\r\n-e \r\n\r\nSet environment variables\r\n \r\n \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\ndocker container exec -it - Run a command in the existing container.\r\ndocker container stop container - Stop a docker container.\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\ndocker update container - Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\ndocker container stats - Performance stats for all containers\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker specific formatting language.\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image build\r\nBuild an image from a Dockerfile\r\ndocker image history\r\nShow the history of an image\r\ndocker image inspect\r\nDisplay detailed information on one or more images\r\ndocker image ls\r\nList images\r\ndocker image prune\r\nRemove unused images\r\ndocker image pull\r\nPull an image or a repository from a registry\r\ndocker image push\r\nPush an image or a repository to a registry\r\ndocker image rm\r\nRemove one or more images\r\ndocker image tag\r\nCreate a tag\r\nNetworks\r\ndocker network connect\r\nConnect a container to a network\r\ndocker network create\r\nCreate a network\r\ndocker network disconnect\r\nDisconnect a container from a network\r\ndocker network inspect\r\nDisplay detailed information on one or more networks\r\ndocker network ls\r\nList networks\r\ndocker network prune\r\nRemove all unused networks\r\ndocker network rm\r\nRemove one or more networks\r\nVolumes\r\ndocker volume create\r\nCreate a volume\r\ndocker volume inspect\r\nDisplay detailed information on one or more volumes\r\ndocker volume ls\r\nList volumes\r\ndocker volume prune\r\nRemove all unused local volumes\r\ndocker volume rm\r\nRemove one or more volumes\r\nDocker Compose\r\ndocker-compose up - Start docker compose file\r\ndocker-compose down - Stop docker compose file\r\ndocker-compose ps - List all containers\r\ndocker-compose tops - List all services running inside containers\r\n\r\ndocker-compose logs - Show logs\r\ndocker compose ls - List running compose projects\r\nMisc. \r\ndocker cp container:src_path dest_path - Copy files/folders between a container and the local filesystem.\r\nSwarm\r\nNodes\r\ndocker node ls - List all nodes\r\nServices\r\ndocker service ls - List all services\r\ndocker service update service - Update service\r\nUse --replicas count to create new replicas\r\n\r\n', 1, '2021-12-21 08:49:45', '2021-12-21 08:49:45', 'common-docker-commands', 'docker', 'version', '', '', 18),
(272, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container</h4>\r\n<table id=\"bkmrk-docker-container-run\" style=\"border-collapse: collapse; width: 100%; height: 468px;\" border=\"1\"><tbody><tr style=\"height: 46px;\"><td style=\"width: 50%; height: 46px;\"><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run</strong></span></td>\r\n<td style=\"width: 50%; height: 46px;\">Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--detach (-d)</td>\r\n<td style=\"width: 50%; height: 29px;\">Run the container in the background</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--name</td>\r\n<td style=\"width: 50%; height: 29px;\">Specify a name for the container</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--publish (-p) <em>host_port:container_port</em></td>\r\n<td style=\"width: 50%; height: 29px;\">Make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">\r\n<p>-e </p>\r\n</td>\r\n<td style=\"width: 50%; height: 29px;\">Set environment variables</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">-it</td>\r\n<td style=\"width: 50%; height: 29px;\">\r\n<p>Start a new container interactively</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">--network</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Specify a network</p>\r\n</td>\r\n</tr><tr style=\"height: 102px;\"><td style=\"width: 50%; height: 102px;\">--net-alias</td>\r\n<td style=\"width: 50%; height: 102px;\">\r\n<p>Create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">--rm</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Delete the container when quitting</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">-v</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Specify a volume</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container exec</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Run a command in a running container</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">-it</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Run a command interactively</p>\r\n</td>\r\n</tr></tbody></table><ul id=\"bkmrk-docker-container-run-0\"><li><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run —publish 80:80 <em>image</em></strong></span> - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.</li>\r\n<li>Use <strong>—detach (-d)</strong> to run in the container in the background.</li>\r\n<li>Use <strong>—name</strong> to pass a name for the docker container.</li>\r\n<li>Use <strong>—publish (-p) <em>host_port:container_port</em></strong> to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.</li>\r\n<li>Use <strong>-e</strong> to set environment variables.</li>\r\n<li>Use <strong>-it</strong> to start a new container interactively. </li>\r\n<li><strong>docker container run —publish 80:80 <em>image</em></strong> - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.</li>\r\n<li>Use <strong>--network</strong> to specify a network</li>\r\n<li>Use <strong>--net-alias</strong> to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.</li>\r\n<li>Use <strong>--rm</strong> to delete the container when quitting.</li>\r\n<li>Use <strong>-v volume_name:volume</strong> to specify a volume.</li>\r\n<li><strong>docker container exec -it</strong> - Run a command in the existing container.</li>\r\n<li><em><strong>docker container stop container</strong> -</em> Stop a docker container.</li>\r\n<li><strong>docker container rm <em>container</em></strong> - Remove a container</li>\r\n<li>Use <strong>-f</strong> to force remove</li>\r\n<li><strong>docker container start <em>container</em></strong> - Start docker container</li>\r\n<li>Use <strong>-ai</strong> to start the container interactively.</li>\r\n<li><strong>docker container exec</strong> <strong><em>container command</em></strong> - Runs a command in a running container</li>\r\n<li>Use <strong>-it</strong> to run the command interactively. To open the shell, specify <strong>bash</strong> as the command.</li>\r\n<li><strong>docker update <em>container </em></strong>- Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.</li>\r\n<li><strong>docker container ls</strong> - list all started containers.</li>\r\n<li>Use <strong>-a</strong> to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)</li>\r\n<li><strong>docker container stats</strong> - Performance stats for all containers</li>\r\n<li><strong>docker container logs <em>container</em></strong> - Get logs of a container</li>\r\n<li><strong>docker container top <em>container</em></strong> - Get processes that are running inside a specific container</li>\r\n<li><strong>docker container inspect <em>container</em></strong> - Details of one container config</li>\r\n<li><strong>docker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" <em>container</em></strong> - Get IP address based on a docker specific formatting language.</li>\r\n<li><em><strong>docker container port container</strong> -</em> List port mappings</li>\r\n</ul><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<table id=\"bkmrk-docker-image-build-b\"><tbody><tr><td><strong>docker image build</strong></td>\r\n<td>Build an image from a Dockerfile</td>\r\n</tr><tr><td><strong>docker image history</strong></td>\r\n<td>Show the history of an image</td>\r\n</tr><tr><td><strong>docker image inspect</strong></td>\r\n<td>Display detailed information on one or more images</td>\r\n</tr><tr><td><strong>docker image ls</strong></td>\r\n<td>List images</td>\r\n</tr><tr><td><strong>docker image prune</strong></td>\r\n<td>Remove unused images</td>\r\n</tr><tr><td><strong>docker image pull</strong></td>\r\n<td>Pull an image or a repository from a registry</td>\r\n</tr><tr><td><strong>docker image push</strong></td>\r\n<td>Push an image or a repository to a registry</td>\r\n</tr><tr><td><strong>docker image rm</strong></td>\r\n<td>Remove one or more images</td>\r\n</tr><tr><td><strong>docker image tag</strong></td>\r\n<td>Create a tag</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<table id=\"bkmrk-docker-network-conne\" style=\"border-style: solid; height: 203px;\"><tbody><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network connect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Connect a container to a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network create</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Create a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network disconnect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Disconnect a container from a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network inspect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Display detailed information on one or more networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network ls</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">List networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network prune</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove all unused networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network rm</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove one or more networks</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<table id=\"bkmrk-docker-volume-create\"><tbody><tr><td><strong>docker volume create</strong></td>\r\n<td>Create a volume</td>\r\n</tr><tr><td><strong>docker volume inspect</strong></td>\r\n<td>Display detailed information on one or more volumes</td>\r\n</tr><tr><td><strong>docker volume ls</strong></td>\r\n<td>List volumes</td>\r\n</tr><tr><td><strong>docker volume prune</strong></td>\r\n<td>Remove all unused local volumes</td>\r\n</tr><tr><td><strong>docker volume rm</strong></td>\r\n<td>Remove one or more volumes</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<ul id=\"bkmrk-docker-compose-up---\"><li><strong>docker-compose up</strong> - Start docker compose file</li>\r\n<li><strong>docker-compose down</strong> - Stop docker compose file</li>\r\n<li><strong>docker-compose ps</strong> - List all containers\r\n<ul><li><strong>docker-compose tops</strong> - List all services running inside containers</li>\r\n</ul></li>\r\n<li><strong>docker-compose logs</strong> - Show logs</li>\r\n<li><strong>docker compose ls</strong> - List running compose projects</li>\r\n</ul><h4 id=\"bkmrk-misc.%C2%A0\">Misc. </h4>\r\n<p id=\"bkmrk-%C2%A0docker-cp-container\"><strong>docker cp <em>container:src_path dest_path </em></strong><em>- </em>Copy files/folders between a container and the local filesystem<em>.</em></p>\r\n<h3 id=\"bkmrk-swarm\">Swarm</h3>\r\n<h4 id=\"bkmrk-nodes\">Nodes</h4>\r\n<ul id=\"bkmrk-docker-node-ls---lis\"><li><strong>docker node ls</strong> - List all nodes</li>\r\n</ul><h4 id=\"bkmrk-services\">Services</h4>\r\n<ul id=\"bkmrk-docker-service-ls%C2%A0--\"><li><strong>docker service ls </strong>- List all services</li>\r\n<li><strong>docker service update <em>service </em></strong>- Update service\r\n<ul><li>Use <strong>--replicas <em>count </em></strong>to create new replicas</li>\r\n</ul></li>\r\n</ul>', 'Container\r\ndocker container run\r\nStarts a container from an image. If the image is not found locally, it will download one from the Docker Hub\r\n--detach (-d)\r\nRun the container in the background\r\n--name\r\nSpecify a name for the container\r\n--publish (-p) host_port:container_port\r\nMake a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world\r\n\r\n-e \r\n\r\nSet environment variables\r\n-it\r\n\r\nStart a new container interactively\r\n\r\n--network\r\n\r\nSpecify a network\r\n\r\n--net-alias\r\n\r\nCreate a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work\r\n\r\n--rm\r\n\r\nDelete the container when quitting\r\n\r\n-v\r\n\r\nSpecify a volume\r\n\r\ndocker container exec\r\n\r\nRun a command in a running container\r\n\r\n-it\r\n\r\nRun a command interactively\r\n\r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will download one from the Docker Hub.\r\nUse —detach (-d) to run in the container in the background.\r\nUse —name to pass a name for the docker container.\r\nUse —publish (-p) host_port:container_port to make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world.\r\nUse -e to set environment variables.\r\nUse -it to start a new container interactively. \r\ndocker container run —publish 80:80 image - Starts a container from an image. If the image is not found locally, it will try to search the Docker Hub and will pull the public one.\r\nUse --network to specify a network\r\nUse --net-alias to create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work.\r\nUse --rm to delete the container when quitting.\r\nUse -v volume_name:volume to specify a volume.\r\ndocker container exec -it - Run a command in the existing container.\r\ndocker container stop container - Stop a docker container.\r\ndocker container rm container - Remove a container\r\nUse -f to force remove\r\ndocker container start container - Start docker container\r\nUse -ai to start the container interactively.\r\ndocker container exec container command - Runs a command in a running container\r\nUse -it to run the command interactively. To open the shell, specify bash as the command.\r\ndocker update container - Update configuration of one or more containers. You can use this command to prevent containers from consuming too many resources from their Docker host.\r\ndocker container ls - list all started containers.\r\nUse -a to see all containers (by default it shows only started). All docker containers have not only unique id but name as well (if it is not passed, it will be auto-generated)\r\ndocker container stats - Performance stats for all containers\r\ndocker container logs container - Get logs of a container\r\ndocker container top container - Get processes that are running inside a specific container\r\ndocker container inspect container - Details of one container config\r\ndocker container inspect --format \"{{ .NetworkSettings.IPAddress }}\" container - Get IP address based on a docker specific formatting language.\r\ndocker container port container - List port mappings\r\nImages\r\ndocker image build\r\nBuild an image from a Dockerfile\r\ndocker image history\r\nShow the history of an image\r\ndocker image inspect\r\nDisplay detailed information on one or more images\r\ndocker image ls\r\nList images\r\ndocker image prune\r\nRemove unused images\r\ndocker image pull\r\nPull an image or a repository from a registry\r\ndocker image push\r\nPush an image or a repository to a registry\r\ndocker image rm\r\nRemove one or more images\r\ndocker image tag\r\nCreate a tag\r\nNetworks\r\ndocker network connect\r\nConnect a container to a network\r\ndocker network create\r\nCreate a network\r\ndocker network disconnect\r\nDisconnect a container from a network\r\ndocker network inspect\r\nDisplay detailed information on one or more networks\r\ndocker network ls\r\nList networks\r\ndocker network prune\r\nRemove all unused networks\r\ndocker network rm\r\nRemove one or more networks\r\nVolumes\r\ndocker volume create\r\nCreate a volume\r\ndocker volume inspect\r\nDisplay detailed information on one or more volumes\r\ndocker volume ls\r\nList volumes\r\ndocker volume prune\r\nRemove all unused local volumes\r\ndocker volume rm\r\nRemove one or more volumes\r\nDocker Compose\r\ndocker-compose up - Start docker compose file\r\ndocker-compose down - Stop docker compose file\r\ndocker-compose ps - List all containers\r\ndocker-compose tops - List all services running inside containers\r\n\r\ndocker-compose logs - Show logs\r\ndocker compose ls - List running compose projects\r\nMisc. \r\ndocker cp container:src_path dest_path - Copy files/folders between a container and the local filesystem.\r\nSwarm\r\nNodes\r\ndocker node ls - List all nodes\r\nServices\r\ndocker service ls - List all services\r\ndocker service update service - Update service\r\nUse --replicas count to create new replicas\r\n\r\n', 1, '2021-12-21 08:53:30', '2021-12-21 08:53:30', 'common-docker-commands', 'docker', 'version', '', '', 19);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(274, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container</h4>\r\n<table id=\"bkmrk-docker-container-run\" style=\"border-collapse: collapse; width: 100%; height: 1448px;\" border=\"1\"><tbody><tr style=\"height: 46px;\"><td style=\"width: 50%; height: 46px;\"><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run</strong></span></td>\r\n<td style=\"width: 50%; height: 46px;\">Create and start a container from an image</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--detach (-d)</td>\r\n<td style=\"width: 50%; height: 29px;\">Run the container in the background</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--name</td>\r\n<td style=\"width: 50%; height: 29px;\">Specify a name for the container</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--publish (-p) <em>host_port:container_port</em></td>\r\n<td style=\"width: 50%; height: 29px;\">Make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">\r\n<p>-e </p>\r\n</td>\r\n<td style=\"width: 50%; height: 29px;\">Set environment variables</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">-it</td>\r\n<td style=\"width: 50%; height: 29px;\">\r\n<p>Start a new container interactively</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">--network</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Specify a network</p>\r\n</td>\r\n</tr><tr style=\"height: 102px;\"><td style=\"width: 50%; height: 102px;\">--net-alias</td>\r\n<td style=\"width: 50%; height: 102px;\">\r\n<p>Create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">--rm</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Delete the container when quitting</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">-v</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Specify a volume</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container exec</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Run a command in a running container</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">-it</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Run a command interactively</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><em><strong>docker container stop </strong></em></td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Stop a docker container</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container commit</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Create a new image from a container’s changes</td>\r\n</tr><tr style=\"height: 49px;\"><td style=\"width: 50%; height: 49px;\"><strong>docker container cp</strong></td>\r\n<td style=\"width: 50%; height: 49px;\">Copy files/folders between a container and the local filesystem</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container create</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Create a new container</td>\r\n</tr><tr style=\"height: 49px;\"><td style=\"width: 50%; height: 49px;\"><strong>docker container diff</strong></td>\r\n<td style=\"width: 50%; height: 49px;\">Inspect changes to files or directories on a container’s filesystem</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container export</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Export a container’s filesystem as a tar archive</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container inspect</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Display detailed information on one or more containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container kill</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Kill one or more running containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container logs</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Fetch the logs of a container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container ls</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">List containers</td>\r\n</tr><tr><td style=\"width: 50%;\">-a</td>\r\n<td style=\"width: 50%;\">List all containers (including stopped ones)</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container port</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">List port mappings or a specific mapping for the container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container prune</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Remove all stopped containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container rename</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Rename a container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container restart</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Restart one or more containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container rm</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Remove one or more containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container start</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Start one or more stopped containers</td>\r\n</tr><tr style=\"height: 49px;\"><td style=\"width: 50%; height: 49px;\"><strong>docker container stats</strong></td>\r\n<td style=\"width: 50%; height: 49px;\">Display a live stream of container(s) resource usage statistics</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container stop</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Stop one or more running containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container top</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Display the running processes of a container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container update</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Update configuration of one or more containers</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<table id=\"bkmrk-docker-image-build-b\"><tbody><tr><td><strong>docker image build</strong></td>\r\n<td>Build an image from a Dockerfile</td>\r\n</tr><tr><td><strong>docker image history</strong></td>\r\n<td>Show the history of an image</td>\r\n</tr><tr><td><strong>docker image inspect</strong></td>\r\n<td>Display detailed information on one or more images</td>\r\n</tr><tr><td><strong>docker image ls</strong></td>\r\n<td>List images</td>\r\n</tr><tr><td><strong>docker image prune</strong></td>\r\n<td>Remove unused images</td>\r\n</tr><tr><td><strong>docker image pull</strong></td>\r\n<td>Pull an image or a repository from a registry</td>\r\n</tr><tr><td><strong>docker image push</strong></td>\r\n<td>Push an image or a repository to a registry</td>\r\n</tr><tr><td><strong>docker image rm</strong></td>\r\n<td>Remove one or more images</td>\r\n</tr><tr><td><strong>docker image tag</strong></td>\r\n<td>Create a tag</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<table id=\"bkmrk-docker-network-conne\" style=\"border-style: solid; height: 203px;\"><tbody><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network connect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Connect a container to a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network create</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Create a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network disconnect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Disconnect a container from a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network inspect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Display detailed information on one or more networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network ls</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">List networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network prune</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove all unused networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network rm</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove one or more networks</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<table id=\"bkmrk-docker-volume-create\"><tbody><tr><td><strong>docker volume create</strong></td>\r\n<td>Create a volume</td>\r\n</tr><tr><td><strong>docker volume inspect</strong></td>\r\n<td>Display detailed information on one or more volumes</td>\r\n</tr><tr><td><strong>docker volume ls</strong></td>\r\n<td>List volumes</td>\r\n</tr><tr><td><strong>docker volume prune</strong></td>\r\n<td>Remove all unused local volumes</td>\r\n</tr><tr><td><strong>docker volume rm</strong></td>\r\n<td>Remove one or more volumes</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<ul id=\"bkmrk-docker-compose-up---\"><li><strong>docker-compose up</strong> - Start docker compose file</li>\r\n<li><strong>docker-compose down</strong> - Stop docker compose file</li>\r\n<li><strong>docker-compose ps</strong> - List all containers\r\n<ul><li><strong>docker-compose tops</strong> - List all services running inside containers</li>\r\n</ul></li>\r\n<li><strong>docker-compose logs</strong> - Show logs</li>\r\n<li><strong>docker compose ls</strong> - List running compose projects</li>\r\n</ul><h4 id=\"bkmrk-misc.%C2%A0\">Misc. </h4>\r\n<p id=\"bkmrk-%C2%A0docker-cp-container\"><strong>docker cp <em>container:src_path dest_path </em></strong><em>- </em>Copy files/folders between a container and the local filesystem<em>.</em></p>\r\n<h3 id=\"bkmrk-swarm\">Swarm</h3>\r\n<h4 id=\"bkmrk-nodes\">Nodes</h4>\r\n<ul id=\"bkmrk-docker-node-ls---lis\"><li><strong>docker node ls</strong> - List all nodes</li>\r\n</ul><h4 id=\"bkmrk-services\">Services</h4>\r\n<ul id=\"bkmrk-docker-service-ls%C2%A0--\"><li><strong>docker service ls </strong>- List all services</li>\r\n<li><strong>docker service update <em>service </em></strong>- Update service\r\n<ul><li>Use <strong>--replicas <em>count </em></strong>to create new replicas</li>\r\n</ul></li>\r\n</ul>', 'Container\r\ndocker container run\r\nCreate and start a container from an image\r\n--detach (-d)\r\nRun the container in the background\r\n--name\r\nSpecify a name for the container\r\n--publish (-p) host_port:container_port\r\nMake a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world\r\n\r\n-e \r\n\r\nSet environment variables\r\n-it\r\n\r\nStart a new container interactively\r\n\r\n--network\r\n\r\nSpecify a network\r\n\r\n--net-alias\r\n\r\nCreate a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work\r\n\r\n--rm\r\n\r\nDelete the container when quitting\r\n\r\n-v\r\n\r\nSpecify a volume\r\n\r\ndocker container exec\r\n\r\nRun a command in a running container\r\n\r\n-it\r\n\r\nRun a command interactively\r\n\r\ndocker container stop \r\n\r\nStop a docker container\r\n\r\ndocker container commit\r\nCreate a new image from a container’s changes\r\ndocker container cp\r\nCopy files/folders between a container and the local filesystem\r\ndocker container create\r\nCreate a new container\r\ndocker container diff\r\nInspect changes to files or directories on a container’s filesystem\r\ndocker container export\r\nExport a container’s filesystem as a tar archive\r\ndocker container inspect\r\nDisplay detailed information on one or more containers\r\ndocker container kill\r\nKill one or more running containers\r\ndocker container logs\r\nFetch the logs of a container\r\ndocker container ls\r\nList containers\r\n-a\r\nList all containers (including stopped ones)\r\ndocker container port\r\nList port mappings or a specific mapping for the container\r\ndocker container prune\r\nRemove all stopped containers\r\ndocker container rename\r\nRename a container\r\ndocker container restart\r\nRestart one or more containers\r\ndocker container rm\r\nRemove one or more containers\r\ndocker container start\r\nStart one or more stopped containers\r\ndocker container stats\r\nDisplay a live stream of container(s) resource usage statistics\r\ndocker container stop\r\nStop one or more running containers\r\ndocker container top\r\nDisplay the running processes of a container\r\ndocker container update\r\nUpdate configuration of one or more containers\r\nImages\r\ndocker image build\r\nBuild an image from a Dockerfile\r\ndocker image history\r\nShow the history of an image\r\ndocker image inspect\r\nDisplay detailed information on one or more images\r\ndocker image ls\r\nList images\r\ndocker image prune\r\nRemove unused images\r\ndocker image pull\r\nPull an image or a repository from a registry\r\ndocker image push\r\nPush an image or a repository to a registry\r\ndocker image rm\r\nRemove one or more images\r\ndocker image tag\r\nCreate a tag\r\nNetworks\r\ndocker network connect\r\nConnect a container to a network\r\ndocker network create\r\nCreate a network\r\ndocker network disconnect\r\nDisconnect a container from a network\r\ndocker network inspect\r\nDisplay detailed information on one or more networks\r\ndocker network ls\r\nList networks\r\ndocker network prune\r\nRemove all unused networks\r\ndocker network rm\r\nRemove one or more networks\r\nVolumes\r\ndocker volume create\r\nCreate a volume\r\ndocker volume inspect\r\nDisplay detailed information on one or more volumes\r\ndocker volume ls\r\nList volumes\r\ndocker volume prune\r\nRemove all unused local volumes\r\ndocker volume rm\r\nRemove one or more volumes\r\nDocker Compose\r\ndocker-compose up - Start docker compose file\r\ndocker-compose down - Stop docker compose file\r\ndocker-compose ps - List all containers\r\ndocker-compose tops - List all services running inside containers\r\n\r\ndocker-compose logs - Show logs\r\ndocker compose ls - List running compose projects\r\nMisc. \r\ndocker cp container:src_path dest_path - Copy files/folders between a container and the local filesystem.\r\nSwarm\r\nNodes\r\ndocker node ls - List all nodes\r\nServices\r\ndocker service ls - List all services\r\ndocker service update service - Update service\r\nUse --replicas count to create new replicas\r\n\r\n', 1, '2021-12-21 09:01:10', '2021-12-21 09:01:10', 'common-docker-commands', 'docker', 'version', '', '', 20),
(276, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container</h4>\r\n<table id=\"bkmrk-docker-container-run\" style=\"border-collapse: collapse; width: 100%; height: 1448px;\" border=\"1\"><tbody><tr style=\"height: 46px;\"><td style=\"width: 50%; height: 46px;\"><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run</strong></span></td>\r\n<td style=\"width: 50%; height: 46px;\">Create and start a container from an image</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--detach (-d)</td>\r\n<td style=\"width: 50%; height: 29px;\">Run the container in the background</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--name</td>\r\n<td style=\"width: 50%; height: 29px;\">Specify a name for the container</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--publish (-p) <em>host_port:container_port</em></td>\r\n<td style=\"width: 50%; height: 29px;\">Make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">\r\n<p>-e </p>\r\n</td>\r\n<td style=\"width: 50%; height: 29px;\">Set environment variables</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">-it</td>\r\n<td style=\"width: 50%; height: 29px;\">\r\n<p>Start a new container interactively</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">--network</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Specify a network</p>\r\n</td>\r\n</tr><tr style=\"height: 102px;\"><td style=\"width: 50%; height: 102px;\">--net-alias</td>\r\n<td style=\"width: 50%; height: 102px;\">\r\n<p>Create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">--rm</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Delete the container when quitting</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">-v</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Specify a volume</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container exec</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Run a command in a running container</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">-it</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Run a command interactively</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><em><strong>docker container stop </strong></em></td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Stop a docker container</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container commit</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Create a new image from a container’s changes</td>\r\n</tr><tr style=\"height: 49px;\"><td style=\"width: 50%; height: 49px;\"><strong>docker container cp</strong></td>\r\n<td style=\"width: 50%; height: 49px;\">Copy files/folders between a container and the local filesystem</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container create</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Create a new container</td>\r\n</tr><tr style=\"height: 49px;\"><td style=\"width: 50%; height: 49px;\"><strong>docker container diff</strong></td>\r\n<td style=\"width: 50%; height: 49px;\">Inspect changes to files or directories on a container’s filesystem</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container export</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Export a container’s filesystem as a tar archive</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container inspect</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Display detailed information on one or more containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container kill</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Kill one or more running containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container logs</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Fetch the logs of a container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container ls</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">List containers</td>\r\n</tr><tr><td style=\"width: 50%;\">-a</td>\r\n<td style=\"width: 50%;\">List all containers (including stopped ones)</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container port</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">List port mappings or a specific mapping for the container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container prune</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Remove all stopped containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container rename</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Rename a container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container restart</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Restart one or more containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container rm</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Remove one or more containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container start</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Start one or more stopped containers</td>\r\n</tr><tr style=\"height: 49px;\"><td style=\"width: 50%; height: 49px;\"><strong>docker container stats</strong></td>\r\n<td style=\"width: 50%; height: 49px;\">Display a live stream of container(s) resource usage statistics</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container stop</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Stop one or more running containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container top</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Display the running processes of a container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container update</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Update configuration of one or more containers</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<table id=\"bkmrk-docker-image-build-b\"><tbody><tr><td><strong>docker image build</strong></td>\r\n<td>Build an image from a Dockerfile</td>\r\n</tr><tr><td><strong>docker image history</strong></td>\r\n<td>Show the history of an image</td>\r\n</tr><tr><td><strong>docker image inspect</strong></td>\r\n<td>Display detailed information on one or more images</td>\r\n</tr><tr><td><strong>docker image ls</strong></td>\r\n<td>List images</td>\r\n</tr><tr><td><strong>docker image prune</strong></td>\r\n<td>Remove unused images</td>\r\n</tr><tr><td><strong>docker image pull</strong></td>\r\n<td>Pull an image or a repository from a registry</td>\r\n</tr><tr><td><strong>docker image push</strong></td>\r\n<td>Push an image or a repository to a registry</td>\r\n</tr><tr><td><strong>docker image rm</strong></td>\r\n<td>Remove one or more images</td>\r\n</tr><tr><td><strong>docker image tag</strong></td>\r\n<td>Create a tag</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<table id=\"bkmrk-docker-network-conne\" style=\"border-style: solid; height: 203px;\"><tbody><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network connect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Connect a container to a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network create</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Create a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network disconnect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Disconnect a container from a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network inspect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Display detailed information on one or more networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network ls</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">List networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network prune</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove all unused networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network rm</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove one or more networks</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<table id=\"bkmrk-docker-volume-create\"><tbody><tr><td><strong>docker volume create</strong></td>\r\n<td>Create a volume</td>\r\n</tr><tr><td><strong>docker volume inspect</strong></td>\r\n<td>Display detailed information on one or more volumes</td>\r\n</tr><tr><td><strong>docker volume ls</strong></td>\r\n<td>List volumes</td>\r\n</tr><tr><td><strong>docker volume prune</strong></td>\r\n<td>Remove all unused local volumes</td>\r\n</tr><tr><td><strong>docker volume rm</strong></td>\r\n<td>Remove one or more volumes</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<table style=\"border-collapse: collapse; width: 100%; height: 174px;\" border=\"1\" id=\"bkmrk-docker-compose-up-st\"><tbody><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose up</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">Start services</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose down</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">Stop services</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose ps</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">List containers</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose tops</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">Display the running processes</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker compose ls</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">List running compose projects</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose logs</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">View output from containers</td>\r\n</tr></tbody></table><h2 id=\"bkmrk-swarm\">Swarm</h2>\r\n<h4 id=\"bkmrk-nodes\">Nodes</h4>\r\n<ul id=\"bkmrk-docker-node-ls---lis\"><li><strong>docker node ls</strong> - List all nodes</li>\r\n</ul><h4 id=\"bkmrk-services\">Services</h4>\r\n<ul id=\"bkmrk-docker-service-ls%C2%A0--\"><li><strong>docker service ls </strong>- List all services</li>\r\n<li><strong>docker service update <em>service </em></strong>- Update service\r\n<ul><li>Use <strong>--replicas <em>count </em></strong>to create new replicas</li>\r\n</ul></li>\r\n</ul>', 'Container\r\ndocker container run\r\nCreate and start a container from an image\r\n--detach (-d)\r\nRun the container in the background\r\n--name\r\nSpecify a name for the container\r\n--publish (-p) host_port:container_port\r\nMake a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world\r\n\r\n-e \r\n\r\nSet environment variables\r\n-it\r\n\r\nStart a new container interactively\r\n\r\n--network\r\n\r\nSpecify a network\r\n\r\n--net-alias\r\n\r\nCreate a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work\r\n\r\n--rm\r\n\r\nDelete the container when quitting\r\n\r\n-v\r\n\r\nSpecify a volume\r\n\r\ndocker container exec\r\n\r\nRun a command in a running container\r\n\r\n-it\r\n\r\nRun a command interactively\r\n\r\ndocker container stop \r\n\r\nStop a docker container\r\n\r\ndocker container commit\r\nCreate a new image from a container’s changes\r\ndocker container cp\r\nCopy files/folders between a container and the local filesystem\r\ndocker container create\r\nCreate a new container\r\ndocker container diff\r\nInspect changes to files or directories on a container’s filesystem\r\ndocker container export\r\nExport a container’s filesystem as a tar archive\r\ndocker container inspect\r\nDisplay detailed information on one or more containers\r\ndocker container kill\r\nKill one or more running containers\r\ndocker container logs\r\nFetch the logs of a container\r\ndocker container ls\r\nList containers\r\n-a\r\nList all containers (including stopped ones)\r\ndocker container port\r\nList port mappings or a specific mapping for the container\r\ndocker container prune\r\nRemove all stopped containers\r\ndocker container rename\r\nRename a container\r\ndocker container restart\r\nRestart one or more containers\r\ndocker container rm\r\nRemove one or more containers\r\ndocker container start\r\nStart one or more stopped containers\r\ndocker container stats\r\nDisplay a live stream of container(s) resource usage statistics\r\ndocker container stop\r\nStop one or more running containers\r\ndocker container top\r\nDisplay the running processes of a container\r\ndocker container update\r\nUpdate configuration of one or more containers\r\nImages\r\ndocker image build\r\nBuild an image from a Dockerfile\r\ndocker image history\r\nShow the history of an image\r\ndocker image inspect\r\nDisplay detailed information on one or more images\r\ndocker image ls\r\nList images\r\ndocker image prune\r\nRemove unused images\r\ndocker image pull\r\nPull an image or a repository from a registry\r\ndocker image push\r\nPush an image or a repository to a registry\r\ndocker image rm\r\nRemove one or more images\r\ndocker image tag\r\nCreate a tag\r\nNetworks\r\ndocker network connect\r\nConnect a container to a network\r\ndocker network create\r\nCreate a network\r\ndocker network disconnect\r\nDisconnect a container from a network\r\ndocker network inspect\r\nDisplay detailed information on one or more networks\r\ndocker network ls\r\nList networks\r\ndocker network prune\r\nRemove all unused networks\r\ndocker network rm\r\nRemove one or more networks\r\nVolumes\r\ndocker volume create\r\nCreate a volume\r\ndocker volume inspect\r\nDisplay detailed information on one or more volumes\r\ndocker volume ls\r\nList volumes\r\ndocker volume prune\r\nRemove all unused local volumes\r\ndocker volume rm\r\nRemove one or more volumes\r\nDocker Compose\r\ndocker-compose up\r\nStart services\r\ndocker-compose down\r\nStop services\r\ndocker-compose ps\r\nList containers\r\ndocker-compose tops\r\nDisplay the running processes\r\ndocker compose ls\r\nList running compose projects\r\ndocker-compose logs\r\nView output from containers\r\nSwarm\r\nNodes\r\ndocker node ls - List all nodes\r\nServices\r\ndocker service ls - List all services\r\ndocker service update service - Update service\r\nUse --replicas count to create new replicas\r\n\r\n', 1, '2021-12-21 09:05:07', '2021-12-21 09:05:07', 'common-docker-commands', 'docker', 'version', '', '', 21);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(278, 29, 'Common Docker Commands', '<h4 id=\"bkmrk-container-actions\">Container</h4>\r\n<table id=\"bkmrk-docker-container-run\" style=\"border-collapse: collapse; width: 100%; height: 1448px;\" border=\"1\"><tbody><tr style=\"height: 46px;\"><td style=\"width: 50%; height: 46px;\"><span class=\"notion-enable-hover\" data-token-index=\"0\" data-reactroot=\"\"><strong>docker container run</strong></span></td>\r\n<td style=\"width: 50%; height: 46px;\">Create and start a container from an image</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--detach (-d)</td>\r\n<td style=\"width: 50%; height: 29px;\">Run the container in the background</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--name</td>\r\n<td style=\"width: 50%; height: 29px;\">Specify a name for the container</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">--publish (-p) <em>host_port:container_port</em></td>\r\n<td style=\"width: 50%; height: 29px;\">Make a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">\r\n<p>-e </p>\r\n</td>\r\n<td style=\"width: 50%; height: 29px;\">Set environment variables</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\">-it</td>\r\n<td style=\"width: 50%; height: 29px;\">\r\n<p>Start a new container interactively</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">--network</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Specify a network</p>\r\n</td>\r\n</tr><tr style=\"height: 102px;\"><td style=\"width: 50%; height: 102px;\">--net-alias</td>\r\n<td style=\"width: 50%; height: 102px;\">\r\n<p>Create a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">--rm</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Delete the container when quitting</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">-v</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Specify a volume</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container exec</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Run a command in a running container</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\">-it</td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Run a command interactively</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><em><strong>docker container stop </strong></em></td>\r\n<td style=\"width: 50%; height: 35px;\">\r\n<p>Stop a docker container</p>\r\n</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container commit</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Create a new image from a container’s changes</td>\r\n</tr><tr style=\"height: 49px;\"><td style=\"width: 50%; height: 49px;\"><strong>docker container cp</strong></td>\r\n<td style=\"width: 50%; height: 49px;\">Copy files/folders between a container and the local filesystem</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container create</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Create a new container</td>\r\n</tr><tr style=\"height: 49px;\"><td style=\"width: 50%; height: 49px;\"><strong>docker container diff</strong></td>\r\n<td style=\"width: 50%; height: 49px;\">Inspect changes to files or directories on a container’s filesystem</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container export</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Export a container’s filesystem as a tar archive</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container inspect</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Display detailed information on one or more containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container kill</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Kill one or more running containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container logs</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Fetch the logs of a container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container ls</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">List containers</td>\r\n</tr><tr><td style=\"width: 50%;\">-a</td>\r\n<td style=\"width: 50%;\">List all containers (including stopped ones)</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container port</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">List port mappings or a specific mapping for the container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container prune</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Remove all stopped containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container rename</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Rename a container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container restart</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Restart one or more containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container rm</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Remove one or more containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container start</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Start one or more stopped containers</td>\r\n</tr><tr style=\"height: 49px;\"><td style=\"width: 50%; height: 49px;\"><strong>docker container stats</strong></td>\r\n<td style=\"width: 50%; height: 49px;\">Display a live stream of container(s) resource usage statistics</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container stop</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Stop one or more running containers</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container top</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Display the running processes of a container</td>\r\n</tr><tr style=\"height: 35px;\"><td style=\"width: 50%; height: 35px;\"><strong>docker container update</strong></td>\r\n<td style=\"width: 50%; height: 35px;\">Update configuration of one or more containers</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-image-info\">Images</h4>\r\n<table id=\"bkmrk-docker-image-build-b\"><tbody><tr><td><strong>docker image build</strong></td>\r\n<td>Build an image from a Dockerfile</td>\r\n</tr><tr><td><strong>docker image history</strong></td>\r\n<td>Show the history of an image</td>\r\n</tr><tr><td><strong>docker image inspect</strong></td>\r\n<td>Display detailed information on one or more images</td>\r\n</tr><tr><td><strong>docker image ls</strong></td>\r\n<td>List images</td>\r\n</tr><tr><td><strong>docker image prune</strong></td>\r\n<td>Remove unused images</td>\r\n</tr><tr><td><strong>docker image pull</strong></td>\r\n<td>Pull an image or a repository from a registry</td>\r\n</tr><tr><td><strong>docker image push</strong></td>\r\n<td>Push an image or a repository to a registry</td>\r\n</tr><tr><td><strong>docker image rm</strong></td>\r\n<td>Remove one or more images</td>\r\n</tr><tr><td><strong>docker image tag</strong></td>\r\n<td>Create a tag</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-networks\">Networks</h4>\r\n<table id=\"bkmrk-docker-network-conne\" style=\"border-style: solid; height: 203px;\"><tbody><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network connect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Connect a container to a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network create</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Create a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network disconnect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Disconnect a container from a network</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network inspect</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Display detailed information on one or more networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network ls</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">List networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network prune</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove all unused networks</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"height: 29px; width: 192.328px;\"><strong>docker network rm</strong></td>\r\n<td style=\"height: 29px; width: 361.016px;\">Remove one or more networks</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-volumes\">Volumes</h4>\r\n<table id=\"bkmrk-docker-volume-create\"><tbody><tr><td><strong>docker volume create</strong></td>\r\n<td>Create a volume</td>\r\n</tr><tr><td><strong>docker volume inspect</strong></td>\r\n<td>Display detailed information on one or more volumes</td>\r\n</tr><tr><td><strong>docker volume ls</strong></td>\r\n<td>List volumes</td>\r\n</tr><tr><td><strong>docker volume prune</strong></td>\r\n<td>Remove all unused local volumes</td>\r\n</tr><tr><td><strong>docker volume rm</strong></td>\r\n<td>Remove one or more volumes</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-docker-compose\">Docker Compose</h4>\r\n<table id=\"bkmrk-docker-compose-up-st\" style=\"border-collapse: collapse; width: 100%; height: 174px;\" border=\"1\"><tbody><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose up</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">Start services</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose down</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">Stop services</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose ps</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">List containers</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose tops</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">Display the running processes</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker compose ls</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">List running compose projects</td>\r\n</tr><tr style=\"height: 29px;\"><td style=\"width: 50%; height: 29px;\"><strong>docker-compose logs</strong></td>\r\n<td style=\"width: 50%; height: 29px;\">View output from containers</td>\r\n</tr></tbody></table><h2 id=\"bkmrk-swarm\">Swarm</h2>\r\n<h4 id=\"bkmrk-nodes\">Nodes</h4>\r\n<table id=\"bkmrk-docker-node-demote-d\"><tbody><tr><td><strong>docker node demote</strong></td>\r\n<td>Demote one or more nodes from manager in the swarm</td>\r\n</tr><tr><td><strong>docker node inspect</strong></td>\r\n<td>Display detailed information on one or more nodes</td>\r\n</tr><tr><td><strong>docker node ls</strong></td>\r\n<td>List nodes in the swarm</td>\r\n</tr><tr><td><strong>docker node promote</strong></td>\r\n<td>Promote one or more nodes to manager in the swarm</td>\r\n</tr><tr><td><strong>docker node ps</strong></td>\r\n<td>List tasks running on one or more nodes, defaults to current node</td>\r\n</tr><tr><td><strong>docker node rm</strong></td>\r\n<td>Remove one or more nodes from the swarm</td>\r\n</tr><tr><td><strong>docker node update</strong></td>\r\n<td>Update a node</td>\r\n</tr></tbody></table><h4 id=\"bkmrk-services\">Services</h4>\r\n<table style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Oxygen, Ubuntu, Roboto, Cantarell, \'Fira Sans\', \'Droid Sans\', \'Helvetica Neue\', sans-serif; font-size: 14px;\" id=\"bkmrk-docker-service-creat\"><tbody><tr><td><strong>docker service create</strong></td>\r\n<td>Create a new service</td>\r\n</tr><tr><td><strong>docker service inspect</strong></td>\r\n<td>Display detailed information on one or more services</td>\r\n</tr><tr><td><strong>docker service logs</strong></td>\r\n<td>Fetch the logs of a service or task</td>\r\n</tr><tr><td><strong>docker service ls</strong></td>\r\n<td>List services</td>\r\n</tr><tr><td><strong>docker service ps</strong></td>\r\n<td>List the tasks of one or more services</td>\r\n</tr><tr><td><strong>docker service rm</strong></td>\r\n<td>Remove one or more services</td>\r\n</tr><tr><td><strong>docker service rollback</strong></td>\r\n<td>Revert changes to a service’s configuration</td>\r\n</tr><tr><td><strong>docker service scale</strong></td>\r\n<td>Scale one or multiple replicated services</td>\r\n</tr><tr><td><strong>docker service update</strong></td>\r\n<td>Update a service</td>\r\n</tr></tbody></table>', 'Container\r\ndocker container run\r\nCreate and start a container from an image\r\n--detach (-d)\r\nRun the container in the background\r\n--name\r\nSpecify a name for the container\r\n--publish (-p) host_port:container_port\r\nMake a port available to services outside of Docker. This creates a firewall rule which maps a container port to a port on the Docker host to the outside world\r\n\r\n-e \r\n\r\nSet environment variables\r\n-it\r\n\r\nStart a new container interactively\r\n\r\n--network\r\n\r\nSpecify a network\r\n\r\n--net-alias\r\n\r\nCreate a network scoped alias. This can be used for round robin load balancing. It works by giving the same DNS to multiple containers, so that if one fails, there are other instances that will still hopefully work\r\n\r\n--rm\r\n\r\nDelete the container when quitting\r\n\r\n-v\r\n\r\nSpecify a volume\r\n\r\ndocker container exec\r\n\r\nRun a command in a running container\r\n\r\n-it\r\n\r\nRun a command interactively\r\n\r\ndocker container stop \r\n\r\nStop a docker container\r\n\r\ndocker container commit\r\nCreate a new image from a container’s changes\r\ndocker container cp\r\nCopy files/folders between a container and the local filesystem\r\ndocker container create\r\nCreate a new container\r\ndocker container diff\r\nInspect changes to files or directories on a container’s filesystem\r\ndocker container export\r\nExport a container’s filesystem as a tar archive\r\ndocker container inspect\r\nDisplay detailed information on one or more containers\r\ndocker container kill\r\nKill one or more running containers\r\ndocker container logs\r\nFetch the logs of a container\r\ndocker container ls\r\nList containers\r\n-a\r\nList all containers (including stopped ones)\r\ndocker container port\r\nList port mappings or a specific mapping for the container\r\ndocker container prune\r\nRemove all stopped containers\r\ndocker container rename\r\nRename a container\r\ndocker container restart\r\nRestart one or more containers\r\ndocker container rm\r\nRemove one or more containers\r\ndocker container start\r\nStart one or more stopped containers\r\ndocker container stats\r\nDisplay a live stream of container(s) resource usage statistics\r\ndocker container stop\r\nStop one or more running containers\r\ndocker container top\r\nDisplay the running processes of a container\r\ndocker container update\r\nUpdate configuration of one or more containers\r\nImages\r\ndocker image build\r\nBuild an image from a Dockerfile\r\ndocker image history\r\nShow the history of an image\r\ndocker image inspect\r\nDisplay detailed information on one or more images\r\ndocker image ls\r\nList images\r\ndocker image prune\r\nRemove unused images\r\ndocker image pull\r\nPull an image or a repository from a registry\r\ndocker image push\r\nPush an image or a repository to a registry\r\ndocker image rm\r\nRemove one or more images\r\ndocker image tag\r\nCreate a tag\r\nNetworks\r\ndocker network connect\r\nConnect a container to a network\r\ndocker network create\r\nCreate a network\r\ndocker network disconnect\r\nDisconnect a container from a network\r\ndocker network inspect\r\nDisplay detailed information on one or more networks\r\ndocker network ls\r\nList networks\r\ndocker network prune\r\nRemove all unused networks\r\ndocker network rm\r\nRemove one or more networks\r\nVolumes\r\ndocker volume create\r\nCreate a volume\r\ndocker volume inspect\r\nDisplay detailed information on one or more volumes\r\ndocker volume ls\r\nList volumes\r\ndocker volume prune\r\nRemove all unused local volumes\r\ndocker volume rm\r\nRemove one or more volumes\r\nDocker Compose\r\ndocker-compose up\r\nStart services\r\ndocker-compose down\r\nStop services\r\ndocker-compose ps\r\nList containers\r\ndocker-compose tops\r\nDisplay the running processes\r\ndocker compose ls\r\nList running compose projects\r\ndocker-compose logs\r\nView output from containers\r\nSwarm\r\nNodes\r\ndocker node demote\r\nDemote one or more nodes from manager in the swarm\r\ndocker node inspect\r\nDisplay detailed information on one or more nodes\r\ndocker node ls\r\nList nodes in the swarm\r\ndocker node promote\r\nPromote one or more nodes to manager in the swarm\r\ndocker node ps\r\nList tasks running on one or more nodes, defaults to current node\r\ndocker node rm\r\nRemove one or more nodes from the swarm\r\ndocker node update\r\nUpdate a node\r\nServices\r\ndocker service create\r\nCreate a new service\r\ndocker service inspect\r\nDisplay detailed information on one or more services\r\ndocker service logs\r\nFetch the logs of a service or task\r\ndocker service ls\r\nList services\r\ndocker service ps\r\nList the tasks of one or more services\r\ndocker service rm\r\nRemove one or more services\r\ndocker service rollback\r\nRevert changes to a service’s configuration\r\ndocker service scale\r\nScale one or multiple replicated services\r\ndocker service update\r\nUpdate a service\r\n', 1, '2021-12-21 09:14:08', '2021-12-21 09:14:08', 'common-docker-commands', 'docker', 'version', '', '', 22),
(280, 33, 'Building Docker Projects', '<h3 id=\"bkmrk-dockerfile\">Dockerfile</h3>\r\n<p id=\"bkmrk-a-dockerfile-is-a-si\">A Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. Users can create an automated build that executes several command-line instructions in succession.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639848497835.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639848497835.png\" alt=\"image-1639848497835.png\" width=\"242\" height=\"92\"></a></p>\r\n<h5 id=\"bkmrk-examples%3A\"><strong>Examples:</strong></h5>\r\n<p id=\"bkmrk-backend\"><strong>Backend</strong></p>\r\n<pre id=\"bkmrk-from-php%3A7.3-run-apt\"><code class=\"language-shell\">FROM php:7.3\r\n\r\nRUN apt-get update -y &amp;&amp; apt-get install -y openssl zip unzip git\r\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\r\nRUN docker-php-ext-install pdo mbstring pdo_mysql\r\n\r\nWORKDIR /app/backend\r\nCOPY . .\r\nRUN composer install\r\n\r\nEXPOSE 8000\r\nCMD php artisan serve --host=0.0.0.0</code></pre>\r\n<p id=\"bkmrk-frontend\"><strong>Frontend</strong></p>\r\n<pre id=\"bkmrk-from-node%3Aalpine-wor\"><code class=\"language-shell\">FROM node:alpine\r\nWORKDIR /app/frontend\r\n\r\nCOPY . .\r\nRUN npm install\r\n\r\nEXPOSE 3000\r\nCMD npm start</code></pre>\r\n<h3 id=\"bkmrk-docker-compose\">Docker Compose</h3>\r\n<p id=\"bkmrk-docker-compose%C2%A0is-a-\">Docker Compose is a tool that was developed to help define and share multi-container applications. With Compose, we can create a YAML file to define the services and with a single command, can spin everything up or tear it all down.</p>\r\n<p id=\"bkmrk-example%3A-0\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-version%3A-%223.9%22-servi\"><code class=\"language-shell\">version: \"3.9\"\r\nservices:\r\n	backend:\r\n    	image: app-backend # build docker image named \"app-backend\" from Dockerfile instead of pulling it from Docker Hub\r\n    	build:\r\n        	context: ./backend/development\r\n            dockerfile: Dockerfile\r\n		environment:\r\n        	DB_HOST: db # since it is on the same network, it can resolve localhost as db\r\n            DB_DATABASE: auth\r\n            DB_USERNAME: root\r\n            DB_PASSWORD: root\r\n		ports:\r\n        	- 8000:8000\r\n		depends_on: # service will start only when db is started successfully\r\n       		- db\r\n		volumes:\r\n        	- ./backend/development:/app/backend\r\n    	networks:\r\n        	- app\r\n	frontend:\r\n    	build:\r\n        	context: ./frontend/resources\r\n            dockerfile: Dockerfile\r\n		tty: true # keep connection live while frontend is running\r\n		ports:\r\n        	- 3000:3000\r\n		volumes:\r\n        	- ./frontend/resources:/app/frontend\r\n			- mysql-data:/var/lib/mysql\r\n		depends_on: \r\n       		- db\r\n    	networks:\r\n        	- app\r\n	db:\r\n    	image: mysql:5.7\r\n        environment: \r\n        	MYSQL_DATABASE: \'auth\'\r\n            MYSQL_USER: \'root\'\r\n			MYSQL_PASSWORD: \'root\'\r\n            MYSQL_ROOT_PASSWORD: \'root\'\r\n		networks:\r\n        	- app\r\n\r\nnetworks:\r\n	app:\r\n		driver: bridge\r\n        \r\nvolumes:\r\n	mysql-data:</code></pre>', 'Dockerfile\r\nA Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. Users can create an automated build that executes several command-line instructions in succession.\r\n\r\nExamples:\r\nBackend\r\nFROM php:7.3\r\n\r\nRUN apt-get update -y && apt-get install -y openssl zip unzip git\r\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\r\nRUN docker-php-ext-install pdo mbstring pdo_mysql\r\n\r\nWORKDIR /app/backend\r\nCOPY . .\r\nRUN composer install\r\n\r\nEXPOSE 8000\r\nCMD php artisan serve --host=0.0.0.0\r\nFrontend\r\nFROM node:alpine\r\nWORKDIR /app/frontend\r\n\r\nCOPY . .\r\nRUN npm install\r\n\r\nEXPOSE 3000\r\nCMD npm start\r\nDocker Compose\r\nDocker Compose is a tool that was developed to help define and share multi-container applications. With Compose, we can create a YAML file to define the services and with a single command, can spin everything up or tear it all down.\r\nExample:\r\nversion: \"3.9\"\r\nservices:\r\n	backend:\r\n    	image: app-backend # build docker image named \"app-backend\" from Dockerfile instead of pulling it from Docker Hub\r\n    	build:\r\n        	context: ./backend/development\r\n            dockerfile: Dockerfile\r\n		environment:\r\n        	DB_HOST: db # since it is on the same network, it can resolve localhost as db\r\n            DB_DATABASE: auth\r\n            DB_USERNAME: root\r\n            DB_PASSWORD: root\r\n		ports:\r\n        	- 8000:8000\r\n		depends_on: # service will start only when db is started successfully\r\n       		- db\r\n		volumes:\r\n        	- ./backend/development:/app/backend\r\n    	networks:\r\n        	- app\r\n	frontend:\r\n    	build:\r\n        	context: ./frontend/resources\r\n            dockerfile: Dockerfile\r\n		tty: true # keep connection live while frontend is running\r\n		ports:\r\n        	- 3000:3000\r\n		volumes:\r\n        	- ./frontend/resources:/app/frontend\r\n			- mysql-data:/var/lib/mysql\r\n		depends_on: \r\n       		- db\r\n    	networks:\r\n        	- app\r\n	db:\r\n    	image: mysql:5.7\r\n        environment: \r\n        	MYSQL_DATABASE: \'auth\'\r\n            MYSQL_USER: \'root\'\r\n			MYSQL_PASSWORD: \'root\'\r\n            MYSQL_ROOT_PASSWORD: \'root\'\r\n		networks:\r\n        	- app\r\n\r\nnetworks:\r\n	app:\r\n		driver: bridge\r\n        \r\nvolumes:\r\n	mysql-data:', 1, '2021-12-21 11:22:39', '2021-12-21 11:22:39', 'building-docker-projects', 'docker', 'version', '', '', 5),
(281, 40, 'Learning Roadmap', '<h4 id=\"bkmrk-current-roadmap\">Current Roadmap</h4>\r\n<ol id=\"bkmrk-docker-webpack-php-m\"><li>Docker</li>\r\n<li>Webpack and JS modules</li>\r\n<li>PHP MVC</li>\r\n<li>Vanilla JS</li>\r\n<li>Design Patterns</li>\r\n<li>Read SQL docs -&gt; https://dev.mysql.com/doc/refman/8.0/en/</li>\r\n</ol><h4 id=\"bkmrk-future-certificates%C2%A0\">Future Certificates </h4>\r\n<ol id=\"bkmrk-network%2B-linux%2B-secu\"><li>Network+</li>\r\n<li>Linux+</li>\r\n<li>\r\n<p>Security+</p>\r\n</li>\r\n<li>\r\n<p class=\"udlite-heading-xl clp-lead__title clp-lead__title--small\" data-purpose=\"lead-title\">AWS Certified Cloud Practitioner</p>\r\n</li>\r\n</ol>', 'Current Roadmap\r\nDocker\r\nWebpack and JS modules\r\nPHP MVC\r\nVanilla JS\r\nDesign Patterns\r\nRead SQL docs -> https://dev.mysql.com/doc/refman/8.0/en/\r\nFuture Certificates \r\nNetwork+\r\nLinux+\r\n\r\nSecurity+\r\n\r\n\r\nAWS Certified Cloud Practitioner\r\n\r\n', 1, '2021-12-21 11:38:13', '2021-12-21 11:38:13', 'learning-roadmap', 'misc', 'version', '', '', 6),
(299, 43, 'Webpack Config', '', '', 1, '2021-12-23 10:33:25', '2021-12-23 10:33:25', 'webpack-config', 'webpack', 'version', '', 'Initial publish', 1),
(301, 43, 'Webpack Config', '<p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1640255643311.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1640255643311.png\" alt=\"image-1640255643311.png\" width=\"445\" height=\"275\"></a></p>', ' \r\n', 1, '2021-12-23 10:43:41', '2021-12-23 10:43:41', 'webpack-config', 'webpack', 'version', '', '', 2),
(302, 43, 'Project Config', '<p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1640255643311.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1640255643311.png\" alt=\"image-1640255643311.png\" width=\"445\" height=\"275\"></a></p>', ' \r\n', 1, '2021-12-23 10:44:00', '2021-12-23 10:44:00', 'project-config', 'webpack', 'version', '', '', 3),
(303, 44, 'Loaders', '', '', 1, '2021-12-23 10:44:09', '2021-12-23 10:44:09', 'loaders', 'webpack', 'version', '', 'Initial publish', 1),
(304, 43, 'Configuration', '<p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1640255643311.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1640255643311.png\" alt=\"image-1640255643311.png\" width=\"445\" height=\"275\"></a></p>', ' \r\n', 1, '2021-12-23 10:44:20', '2021-12-23 10:44:20', 'configuration', 'webpack', 'version', '', '', 4),
(306, 44, 'Loaders', '<p id=\"bkmrk-out-of-the-box%2C-webp\">Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.</p>\r\n<ol class=\"\" id=\"bkmrk-the%C2%A0test%C2%A0property-id\"><li id=\"bkmrk-the%C2%A0test%C2%A0property-id-0\" class=\"hy hz fy ia b ib ic id ie if ig ih ii ij ik il im in io ip iq ir is it iu iv lu kb kc gv\" data-selectable-paragraph=\"\">The <code class=\"ll lm ln lo kr b\">test</code> property identifies which file or files should be transformed.</li>\r\n<li id=\"bkmrk-the%C2%A0use%C2%A0property-ind\" class=\"hy hz fy ia b ib kd id ie if ke ih ii ij kf il im in kg ip iq ir kh it iu iv lu kb kc gv\" data-selectable-paragraph=\"\">The <code class=\"ll lm ln lo kr b\">use</code> property indicates which loader should be used to do the transforming.</li>\r\n</ol><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-module.exports-%3D-%7B-m\"><code class=\"language-JavaScript\">module.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n}</code></pre>\r\n<ul id=\"bkmrk-css-loader%C2%A0--handles\"><li>\r\n<p><code>css-loader</code> - Handles resolving the <code>import .css</code> syntax in JS</p>\r\n</li>\r\n<li>\r\n<p><code>style-loader</code> - Handles injecting those loaded CSS styles into the DOM</p>\r\n</li>\r\n</ul>', 'Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.\r\nThe test property identifies which file or files should be transformed.\r\nThe use property indicates which loader should be used to do the transforming.\r\nExample:\r\nmodule.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\ncss-loader - Handles resolving the import .css syntax in JS\r\n\r\n\r\nstyle-loader - Handles injecting those loaded CSS styles into the DOM\r\n\r\n', 1, '2021-12-23 12:12:28', '2021-12-23 12:12:28', 'loaders', 'webpack', 'version', '', '', 2),
(308, 44, 'Loaders', '<p id=\"bkmrk-out-of-the-box%2C-webp\">Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.</p>\r\n<ol id=\"bkmrk-the%C2%A0test%C2%A0property-id\" class=\"\"><li id=\"bkmrk-the%C2%A0test%C2%A0property-id-0\" class=\"hy hz fy ia b ib ic id ie if ig ih ii ij ik il im in io ip iq ir is it iu iv lu kb kc gv\" data-selectable-paragraph=\"\">The <code class=\"ll lm ln lo kr b\">test</code> property identifies which file or files should be transformed.</li>\r\n<li id=\"bkmrk-the%C2%A0use%C2%A0property-ind\" class=\"hy hz fy ia b ib kd id ie if ke ih ii ij kf il im in kg ip iq ir kh it iu iv lu kb kc gv\" data-selectable-paragraph=\"\">The <code class=\"ll lm ln lo kr b\">use</code> property indicates which loader should be used to do the transforming.</li>\r\n</ol><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-module.exports-%3D-%7B-m\"><code class=\"language-JavaScript\">module.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n}</code></pre>\r\n<ul id=\"bkmrk-css-loader%C2%A0--handles\"><li>\r\n<p><code>css-loader</code> - Handles resolving the <code>import .css</code> syntax in JS</p>\r\n</li>\r\n<li>\r\n<p><code>style-loader</code> - Handles injecting those loaded CSS styles into the DOM</p>\r\n</li>\r\n</ul><h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code class=\"ll lm ln lo kr b\">require()</code> it and add it to the <code class=\"ll lm ln lo kr b\">plugins</code> array.</p>\r\n<h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-var-htmlwebpackplugi\"><code class=\"language-JavaScript\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');module.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code class=\"ll lm ln lo kr b\">dist/index.html</code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>', 'Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.\r\nThe test property identifies which file or files should be transformed.\r\nThe use property indicates which loader should be used to do the transforming.\r\nExample:\r\nmodule.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\ncss-loader - Handles resolving the import .css syntax in JS\r\n\r\n\r\nstyle-loader - Handles injecting those loaded CSS styles into the DOM\r\n\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');module.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>', 1, '2021-12-23 12:16:30', '2021-12-23 12:16:30', 'loaders', 'webpack', 'version', '', '', 3),
(310, 44, 'Loaders', '<p id=\"bkmrk-out-of-the-box%2C-webp\">Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.</p>\r\n<ol id=\"bkmrk-the%C2%A0test%C2%A0property-id\" class=\"\"><li id=\"bkmrk-the%C2%A0test%C2%A0property-id-0\" class=\"hy hz fy ia b ib ic id ie if ig ih ii ij ik il im in io ip iq ir is it iu iv lu kb kc gv\" data-selectable-paragraph=\"\">The <code class=\"ll lm ln lo kr b\">test</code> property identifies which file or files should be transformed.</li>\r\n<li id=\"bkmrk-the%C2%A0use%C2%A0property-ind\" class=\"hy hz fy ia b ib kd id ie if ke ih ii ij kf il im in kg ip iq ir kh it iu iv lu kb kc gv\" data-selectable-paragraph=\"\">The <code class=\"ll lm ln lo kr b\">use</code> property indicates which loader should be used to do the transforming.</li>\r\n</ol><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-module.exports-%3D-%7B-m\"><code class=\"language-JavaScript\">module.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n}</code></pre>\r\n<ul id=\"bkmrk-css-loader%C2%A0--handles\"><li>\r\n<p><code>css-loader</code> - Handles resolving the <code>import .css</code> syntax in JS</p>\r\n</li>\r\n<li>\r\n<p><code>style-loader</code> - Handles injecting those loaded CSS styles into the DOM</p>\r\n</li>\r\n</ul><h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code class=\"ll lm ln lo kr b\">require()</code> it and add it to the <code class=\"ll lm ln lo kr b\">plugins</code> array.</p>\r\n<h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-var-htmlwebpackplugi\"><code class=\"language-JavaScript\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');module.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code class=\"ll lm ln lo kr b\">dist/index.html</code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n<p id=\"bkmrk-if-you-have-multiple\">If you have multiple webpack entry points, they will all be included with <code class=\"ll lm ln lo kr b\">script</code> tags in the generated HTML.</p>\r\n<h5 id=\"bkmrk-minicssextractplugin\" class=\"kq jb fy bb da kv kw kx je ky kz la jh lb lc ld jl le lf lg jp lh li lj jt lk gv\">MiniCssExtractPlugin</h5>\r\n<p id=\"bkmrk-this-plugin-extracts\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" data-selectable-paragraph=\"\">This plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.</p>\r\n<h5 id=\"bkmrk-uglifyjswebpackplugi\" class=\"kq jb fy bb da kv kw kx je ky kz la jh lb lc ld jl le lf lg jp lh li lj jt lk gv\">UglifyjsWebpackPlugin</h5>\r\n<p id=\"bkmrk-this-plugin-uses%C2%A0ugl\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" data-selectable-paragraph=\"\">This plugin uses uglify-js to minify your JavaScript.</p>', 'Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.\r\nThe test property identifies which file or files should be transformed.\r\nThe use property indicates which loader should be used to do the transforming.\r\nExample:\r\nmodule.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\ncss-loader - Handles resolving the import .css syntax in JS\r\n\r\n\r\nstyle-loader - Handles injecting those loaded CSS styles into the DOM\r\n\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');module.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\nIf you have multiple webpack entry points, they will all be included with script tags in the generated HTML.\r\nMiniCssExtractPlugin\r\nThis plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.\r\nUglifyjsWebpackPlugin\r\nThis plugin uses uglify-js to minify your JavaScript.', 1, '2021-12-23 12:19:02', '2021-12-23 12:19:02', 'loaders', 'webpack', 'version', '', '', 4);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(312, 44, 'Loaders', '<p id=\"bkmrk-out-of-the-box%2C-webp\">Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.</p><ol id=\"bkmrk-the%C2%A0test%C2%A0property-id\" class=\"\"><li id=\"bkmrk-the%C2%A0test%C2%A0property-id-0\" class=\"hy hz fy ia b ib ic id ie if ig ih ii ij ik il im in io ip iq ir is it iu iv lu kb kc gv\" data-selectable-paragraph=\"\">The <code class=\"ll lm ln lo kr b\">test</code> property identifies which file or files should be transformed.</li><li id=\"bkmrk-the%C2%A0use%C2%A0property-ind\" class=\"hy hz fy ia b ib kd id ie if ke ih ii ij kf il im in kg ip iq ir kh it iu iv lu kb kc gv\" data-selectable-paragraph=\"\">The <code class=\"ll lm ln lo kr b\">use</code> property indicates which loader should be used to do the transforming.</li></ol><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p><div class=\"CodeMirrorContainer\" data-lang=\"JavaScript\" dir=\"ltr\" contenteditable=\"false\" id=\"bkmrk-module.exports-%3D-%7B-m\"><textarea style=\"display: none;\">module.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n}</textarea><div class=\"CodeMirror cm-s-default\" translate=\"no\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 5px; left: 35px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" readonly tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; min-height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-vscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"min-width: 1px; height: 0px;\"></div></div><div class=\"CodeMirror-hscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"height: 100%; min-height: 1px; width: 0px;\"></div></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 30px; margin-bottom: -15px; border-right-width: 35px; min-height: 200px; min-width: 331.094px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre class=\"CodeMirror-line-like\"><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-cursors\"><div class=\"CodeMirror-cursor\" style=\"left: 4px; top: 0px; height: 19.1875px;\"> </div></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">1</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">module</span>.<span class=\"cm-property\">exports</span> <span class=\"cm-operator\">=</span> {</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">2</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-property\">module</span>: {</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">3</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">    <span class=\"cm-property\">rules</span>: [</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">4</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">      {</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">5</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">        <span class=\"cm-property\">test</span>: <span class=\"cm-string-2\">/\\.css$/</span>,</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">6</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">        <span class=\"cm-property\">use</span>: [ <span class=\"cm-string\">\'style-loader\'</span>, <span class=\"cm-string\">\'css-loader\'</span> ]</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">7</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">      }</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">8</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">    ]</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">9</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  }</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">10</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div></div><div style=\"position: absolute; height: 35px; width: 1px; border-bottom: 0px solid transparent; top: 200px;\"></div><div class=\"CodeMirror-gutters\" style=\"height: 235px;\"><div class=\"CodeMirror-gutter CodeMirror-linenumbers\" style=\"width: 29px;\"></div></div></div></div></div><ul id=\"bkmrk-css-loader%C2%A0--handles\"><li><p><code>css-loader</code> - Handles resolving the <code>import .css</code> syntax in JS</p></li><li><p><code>style-loader</code> - Handles injecting those loaded CSS styles into the DOM</p></li></ul><h3 id=\"bkmrk-plugins\">Plugins</h3><p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code class=\"ll lm ln lo kr b\">require()</code> it and add it to the <code class=\"ll lm ln lo kr b\">plugins</code> array.</p><h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5><p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p><div class=\"CodeMirrorContainer\" data-lang=\"JavaScript\" dir=\"ltr\" contenteditable=\"false\" id=\"bkmrk-var-htmlwebpackplugi\"><textarea style=\"display: none;\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');module.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};</textarea><div class=\"CodeMirror cm-s-default\" translate=\"no\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 5px; left: 35px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" readonly tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; min-height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-vscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"min-width: 1px; height: 0px;\"></div></div><div class=\"CodeMirror-hscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"height: 100%; min-height: 1px; width: 0px;\"></div></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 30px; margin-bottom: -15px; border-right-width: 35px; min-height: 181px; min-width: 403.109px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre class=\"CodeMirror-line-like\"><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-cursors\"><div class=\"CodeMirror-cursor\" style=\"left: 4px; top: 0px; height: 19.1875px;\"> </div></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">1</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">var</span> <span class=\"cm-def\">HtmlWebpackPlugin</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">\'html-webpack-plugin\'</span>);</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">2</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">var</span> <span class=\"cm-def\">path</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">\'path\'</span>);<span class=\"cm-variable\">module</span>.<span class=\"cm-property\">exports</span> <span class=\"cm-operator\">=</span> {</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">3</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-property\">entry</span>: <span class=\"cm-string\">\'index.js\'</span>,</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">4</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-property\">output</span>: {</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">5</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">    <span class=\"cm-property\">path</span>: <span class=\"cm-variable\">path</span>.<span class=\"cm-property\">resolve</span>(<span class=\"cm-variable\">__dirname</span>, <span class=\"cm-string\">\'./dist\'</span>),</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">6</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">    <span class=\"cm-property\">filename</span>: <span class=\"cm-string\">\'index_bundle.js\'</span></span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">7</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  },</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">8</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-property\">plugins</span>: [<span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">HtmlWebpackPlugin</span>()]</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">9</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">};</span></pre></div></div></div></div></div></div><div style=\"position: absolute; height: 35px; width: 1px; border-bottom: 0px solid transparent; top: 181px;\"></div><div class=\"CodeMirror-gutters\" style=\"height: 216px;\"><div class=\"CodeMirror-gutter CodeMirror-linenumbers\" style=\"width: 29px;\"></div></div></div></div></div><p id=\"bkmrk-this-will-generate-a\">This will generate a file <code class=\"ll lm ln lo kr b\">dist/index.html</code> containing the following:</p><div class=\"CodeMirrorContainer\" data-lang=\"HTML\" dir=\"ltr\" contenteditable=\"false\" id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><textarea style=\"display: none;\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</textarea><div class=\"CodeMirror cm-s-default\" translate=\"no\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 5px; left: 35px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" readonly tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; min-height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-vscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"min-width: 1px; height: 0px;\"></div></div><div class=\"CodeMirror-hscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"height: 100%; min-height: 1px; width: 0px;\"></div></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 30px; margin-bottom: -15px; border-right-width: 35px; min-height: 200px; min-width: 316.703px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre class=\"CodeMirror-line-like\"><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-cursors\"><div class=\"CodeMirror-cursor\" style=\"left: 4px; top: 0px; height: 19.1875px;\"> </div></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">1</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">&lt;!DOCTYPE html&gt;</span></span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">2</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">html</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">3</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">head</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">4</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">    <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">meta</span> <span class=\"cm-attribute\">charset</span>=<span class=\"cm-string\">\"UTF-8\"</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">5</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">    <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">title</span><span class=\"cm-tag cm-bracket\">&gt;</span>webpack App<span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">title</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">6</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">head</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">7</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">body</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">8</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">    <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">script</span> <span class=\"cm-attribute\">src</span>=<span class=\"cm-string\">\"index_bundle.js\"</span><span class=\"cm-tag cm-bracket\">&gt;&lt;/</span><span class=\"cm-tag\">script</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">9</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  <span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">body</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">10</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">html</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre></div></div></div></div></div></div><div style=\"position: absolute; height: 35px; width: 1px; border-bottom: 0px solid transparent; top: 200px;\"></div><div class=\"CodeMirror-gutters\" style=\"height: 235px;\"><div class=\"CodeMirror-gutter CodeMirror-linenumbers\" style=\"width: 29px;\"></div></div></div></div></div><p id=\"bkmrk-if-you-have-multiple\">If you have multiple webpack entry points, they will all be included with <code class=\"ll lm ln lo kr b\">script</code> tags in the generated HTML.</p><h5 id=\"bkmrk-minicssextractplugin\" class=\"kq jb fy bb da kv kw kx je ky kz la jh lb lc ld jl le lf lg jp lh li lj jt lk gv\">MiniCssExtractPlugin</h5><p id=\"bkmrk-this-plugin-extracts\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" data-selectable-paragraph=\"\">This plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.</p><h5 id=\"bkmrk-uglifyjswebpackplugi\" class=\"kq jb fy bb da kv kw kx je ky kz la jh lb lc ld jl le lf lg jp lh li lj jt lk gv\">UglifyjsWebpackPlugin</h5><p id=\"bkmrk-this-plugin-uses%C2%A0ugl\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" data-selectable-paragraph=\"\">This plugin uses uglify-js to minify your JavaScript.</p><h3 class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" id=\"bkmrk-mode\">Mode</h3><p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code class=\"ll lm ln lo kr b\">mode</code> parameter to either <code class=\"ll lm ln lo kr b\">development</code>, <code class=\"ll lm ln lo kr b\">production</code> or <code class=\"ll lm ln lo kr b\">none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code class=\"ll lm ln lo kr b\">production</code>.</p><p id=\"bkmrk-the-goals-of%C2%A0develop\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" data-selectable-paragraph=\"\">The goals of <em class=\"iz\">development</em> and <em class=\"iz\">production</em> builds differ greatly. In <em class=\"iz\">development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em class=\"iz\">production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p><p class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" data-selectable-paragraph=\"\" id=\"bkmrk-in-order-to-merge-th\">In order to merge these configurations together, we’ll use a utility called <code class=\"ll lm ln lo kr b\">webpack-merge</code>.</p><div class=\"CodeMirrorContainer\" data-lang=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" dir=\"ltr\" contenteditable=\"false\" id=\"bkmrk-const-merge-%3D-requir\"><textarea style=\"display: none;\">const merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});</textarea><div class=\"CodeMirror cm-s-default\" translate=\"no\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 5px; left: 35px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" readonly tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; min-height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-vscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"min-width: 1px; height: 0px;\"></div></div><div class=\"CodeMirror-hscrollbar\" tabindex=\"-1\" cm-not-content=\"true\"><div style=\"height: 100%; min-height: 1px; width: 0px;\"></div></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 30px; margin-bottom: -15px; border-right-width: 35px; min-height: 123px; min-width: 338.266px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre class=\"CodeMirror-line-like\"><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-cursors\"><div class=\"CodeMirror-cursor\" style=\"left: 4px; top: 0px; height: 19.1875px;\"> </div></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">1</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">const merge = require(\'webpack-merge\');</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">2</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">const common = require(\'./webpack.common.js\');</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">3</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\">​</span></span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">4</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">module.exports = merge(common, {</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">5</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">  mode: \'production\',</span></pre></div><div style=\"position: relative;\"><div class=\"CodeMirror-gutter-wrapper\" aria-hidden=\"true\" style=\"left: -30px;\"><div class=\"CodeMirror-linenumber CodeMirror-gutter-elt\" style=\"left: 0px; width: 21px;\">6</div></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">});</span></pre></div></div></div></div></div></div><div style=\"position: absolute; height: 35px; width: 1px; border-bottom: 0px solid transparent; top: 123px;\"></div><div class=\"CodeMirror-gutters\" style=\"height: 158px;\"><div class=\"CodeMirror-gutter CodeMirror-linenumbers\" style=\"width: 29px;\"></div></div></div></div></div>', 'Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.The test property identifies which file or files should be transformed.The use property indicates which loader should be used to do the transforming.Example:module.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n}xxxxxxxxxx 1module.exports = {2  module: {3    rules: [4      {5        test: /\\.css$/,6        use: [ \'style-loader\', \'css-loader\' ]7      }8    ]9  }10}css-loader - Handles resolving the import .css syntax in JSstyle-loader - Handles injecting those loaded CSS styles into the DOMPluginsWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.HtmlWebpackPluginThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');module.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};xxxxxxxxxx 1var HtmlWebpackPlugin = require(\'html-webpack-plugin\');2var path = require(\'path\');module.exports = {3  entry: \'index.js\',4  output: {5    path: path.resolve(__dirname, \'./dist\'),6    filename: \'index_bundle.js\'7  },8  plugins: [new HtmlWebpackPlugin()]9};This will generate a file dist/index.html containing the following:<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>xxxxxxxxxx 1<!DOCTYPE html>2<html>3  <head>4    <meta charset=\"UTF-8\">5    <title>webpack App</title>6  </head>7  <body>8    <script src=\"index_bundle.js\"></script>9  </body>10</html>If you have multiple webpack entry points, they will all be included with script tags in the generated HTML.MiniCssExtractPluginThis plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.UglifyjsWebpackPluginThis plugin uses uglify-js to minify your JavaScript.ModeBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.The goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.In order to merge these configurations together, we’ll use a utility called webpack-merge.const merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});xxxxxxxxxx 1const merge = require(\'webpack-merge\');2const common = require(\'./webpack.common.js\');3​4module.exports = merge(common, {5  mode: \'production\',6});', 1, '2021-12-23 12:22:11', '2021-12-23 12:22:11', 'loaders', 'webpack', 'version', '', '', 5);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(314, 44, 'Loaders', '<p id=\"bkmrk-out-of-the-box%2C-webp\">Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.</p>\r\n<ol id=\"bkmrk-the%C2%A0test%C2%A0property-id\" class=\"\"><li id=\"bkmrk-the%C2%A0test%C2%A0property-id-0\" class=\"hy hz fy ia b ib ic id ie if ig ih ii ij ik il im in io ip iq ir is it iu iv lu kb kc gv\" data-selectable-paragraph=\"\">The <code class=\"ll lm ln lo kr b\">test</code> property identifies which file or files should be transformed.</li>\r\n<li id=\"bkmrk-the%C2%A0use%C2%A0property-ind\" class=\"hy hz fy ia b ib kd id ie if ke ih ii ij kf il im in kg ip iq ir kh it iu iv lu kb kc gv\" data-selectable-paragraph=\"\">The <code class=\"ll lm ln lo kr b\">use</code> property indicates which loader should be used to do the transforming.</li>\r\n</ol><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-module.exports-%3D-%7B-m\"><code class=\"language-JavaScript\">module.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }</code></pre>\r\n<div data-lang=\"JavaScript\" id=\"bkmrk-module.exports-%3D-%7B-m-0\"><textarea style=\"display: none;\">module.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n}</textarea><div>\r\n<div><textarea style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; min-height: 1em; outline: none;\" tabindex=\"0\" spellcheck=\"false\" readonly></textarea></div>\r\n</div>\r\n</div>\r\n<ul id=\"bkmrk-css-loader%C2%A0--handles\"><li>\r\n<p><code>css-loader</code> - Handles resolving the <code>import .css</code> syntax in JS</p>\r\n</li>\r\n<li>\r\n<p><code>style-loader</code> - Handles injecting those loaded CSS styles into the DOM</p>\r\n</li>\r\n</ul><h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code class=\"ll lm ln lo kr b\">require()</code> it and add it to the <code class=\"ll lm ln lo kr b\">plugins</code> array.</p>\r\n<h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<div data-lang=\"JavaScript\" id=\"bkmrk-var-htmlwebpackplugi\"><textarea style=\"display: none;\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');module.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};</textarea><div>\r\n<div><textarea style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; min-height: 1em; outline: none;\" tabindex=\"0\" spellcheck=\"false\" readonly></textarea></div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<pre class=\"CodeMirror-line-like\">xxxxxxxxxx</pre>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div> </div>\r\n</div>\r\n<div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>1</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\"><span class=\"cm-keyword\">var</span> <span class=\"cm-def\">HtmlWebpackPlugin</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">\'html-webpack-plugin\'</span>);</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>2</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\"><span class=\"cm-keyword\">var</span> <span class=\"cm-def\">path</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">\'path\'</span>);<span class=\"cm-variable\">module</span>.<span class=\"cm-property\">exports</span> <span class=\"cm-operator\">=</span> {</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>3</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">  <span class=\"cm-property\">entry</span>: <span class=\"cm-string\">\'index.js\'</span>,</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>4</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">  <span class=\"cm-property\">output</span>: {</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>5</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">    <span class=\"cm-property\">path</span>: <span class=\"cm-variable\">path</span>.<span class=\"cm-property\">resolve</span>(<span class=\"cm-variable\">__dirname</span>, <span class=\"cm-string\">\'./dist\'</span>),</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>6</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">    <span class=\"cm-property\">filename</span>: <span class=\"cm-string\">\'index_bundle.js\'</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>7</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">  },</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>8</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">  <span class=\"cm-property\">plugins</span>: [<span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">HtmlWebpackPlugin</span>()]</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>9</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">};</span></pre>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<div></div>\r\n<div>\r\n<div></div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code class=\"ll lm ln lo kr b\">dist/index.html</code> containing the following:</p>\r\n<div data-lang=\"HTML\" id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><textarea style=\"display: none;\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</textarea><div>\r\n<div><textarea style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; min-height: 1em; outline: none;\" tabindex=\"0\" spellcheck=\"false\" readonly></textarea></div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<pre class=\"CodeMirror-line-like\">xxxxxxxxxx</pre>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div> </div>\r\n</div>\r\n<div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>1</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\"><span class=\"cm-meta\">&lt;!DOCTYPE html&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>2</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\"><span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">html</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>3</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">  <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">head</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>4</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">    <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">meta</span> <span class=\"cm-attribute\">charset</span>=<span class=\"cm-string\">\"UTF-8\"</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>5</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">    <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">title</span><span class=\"cm-tag cm-bracket\">&gt;</span>webpack App<span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">title</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>6</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">  <span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">head</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>7</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">  <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">body</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>8</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">    <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">script</span> <span class=\"cm-attribute\">src</span>=<span class=\"cm-string\">\"index_bundle.js\"</span><span class=\"cm-tag cm-bracket\">&gt;&lt;/</span><span class=\"cm-tag\">script</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>9</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">  <span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">body</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>10</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\"><span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">html</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<div></div>\r\n<div>\r\n<div></div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<p id=\"bkmrk-if-you-have-multiple\">If you have multiple webpack entry points, they will all be included with <code class=\"ll lm ln lo kr b\">script</code> tags in the generated HTML.</p>\r\n<h5 id=\"bkmrk-minicssextractplugin\" class=\"kq jb fy bb da kv kw kx je ky kz la jh lb lc ld jl le lf lg jp lh li lj jt lk gv\">MiniCssExtractPlugin</h5>\r\n<p id=\"bkmrk-this-plugin-extracts\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" data-selectable-paragraph=\"\">This plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.</p>\r\n<h5 id=\"bkmrk-uglifyjswebpackplugi\" class=\"kq jb fy bb da kv kw kx je ky kz la jh lb lc ld jl le lf lg jp lh li lj jt lk gv\">UglifyjsWebpackPlugin</h5>\r\n<p id=\"bkmrk-this-plugin-uses%C2%A0ugl\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" data-selectable-paragraph=\"\">This plugin uses uglify-js to minify your JavaScript.</p>\r\n<h3 id=\"bkmrk-mode\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code class=\"ll lm ln lo kr b\">mode</code> parameter to either <code class=\"ll lm ln lo kr b\">development</code>, <code class=\"ll lm ln lo kr b\">production</code> or <code class=\"ll lm ln lo kr b\">none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code class=\"ll lm ln lo kr b\">production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" data-selectable-paragraph=\"\">The goals of <em class=\"iz\">development</em> and <em class=\"iz\">production</em> builds differ greatly. In <em class=\"iz\">development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em class=\"iz\">production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" data-selectable-paragraph=\"\">In order to merge these configurations together, we’ll use a utility called <code class=\"ll lm ln lo kr b\">webpack-merge</code>.</p>\r\n<div data-lang=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" id=\"bkmrk-const-merge-%3D-requir\"><textarea style=\"display: none;\">const merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});</textarea><div>\r\n<div><textarea style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; min-height: 1em; outline: none;\" tabindex=\"0\" spellcheck=\"false\" readonly></textarea></div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<pre class=\"CodeMirror-line-like\">xxxxxxxxxx</pre>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div> </div>\r\n</div>\r\n<div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>1</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">const merge = require(\'webpack-merge\');</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>2</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">const common = require(\'./webpack.common.js\');</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>3</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">​</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>4</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">module.exports = merge(common, {</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>5</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">  mode: \'production\',</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>6</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">});</span></pre>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<div></div>\r\n<div>\r\n<div></div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>', 'Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.\r\nThe test property identifies which file or files should be transformed.\r\nThe use property indicates which loader should be used to do the transforming.\r\nExample:\r\nmodule.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\nmodule.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\ncss-loader - Handles resolving the import .css syntax in JS\r\n\r\n\r\nstyle-loader - Handles injecting those loaded CSS styles into the DOM\r\n\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');module.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nxxxxxxxxxx\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n1\r\n\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\n\r\n\r\n2\r\n\r\nvar path = require(\'path\');module.exports = {\r\n\r\n\r\n\r\n3\r\n\r\n  entry: \'index.js\',\r\n\r\n\r\n\r\n4\r\n\r\n  output: {\r\n\r\n\r\n\r\n5\r\n\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n\r\n\r\n\r\n6\r\n\r\n    filename: \'index_bundle.js\'\r\n\r\n\r\n\r\n7\r\n\r\n  },\r\n\r\n\r\n\r\n8\r\n\r\n  plugins: [new HtmlWebpackPlugin()]\r\n\r\n\r\n\r\n9\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nxxxxxxxxxx\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n1\r\n\r\n<!DOCTYPE html>\r\n\r\n\r\n\r\n2\r\n\r\n<html>\r\n\r\n\r\n\r\n3\r\n\r\n  <head>\r\n\r\n\r\n\r\n4\r\n\r\n    <meta charset=\"UTF-8\">\r\n\r\n\r\n\r\n5\r\n\r\n    <title>webpack App</title>\r\n\r\n\r\n\r\n6\r\n\r\n  </head>\r\n\r\n\r\n\r\n7\r\n\r\n  <body>\r\n\r\n\r\n\r\n8\r\n\r\n    <script src=\"index_bundle.js\"></script>\r\n\r\n\r\n\r\n9\r\n\r\n  </body>\r\n\r\n\r\n\r\n10\r\n\r\n</html>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nIf you have multiple webpack entry points, they will all be included with script tags in the generated HTML.\r\nMiniCssExtractPlugin\r\nThis plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.\r\nUglifyjsWebpackPlugin\r\nThis plugin uses uglify-js to minify your JavaScript.\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\nconst merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nxxxxxxxxxx\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n1\r\n\r\nconst merge = require(\'webpack-merge\');\r\n\r\n\r\n\r\n2\r\n\r\nconst common = require(\'./webpack.common.js\');\r\n\r\n\r\n\r\n3\r\n\r\n​\r\n\r\n\r\n\r\n4\r\n\r\nmodule.exports = merge(common, {\r\n\r\n\r\n\r\n5\r\n\r\n  mode: \'production\',\r\n\r\n\r\n\r\n6\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n', 1, '2021-12-23 12:23:37', '2021-12-23 12:23:37', 'loaders', 'webpack', 'version', '', '', 6),
(316, 44, 'Loaders', '<p id=\"bkmrk-out-of-the-box%2C-webp\">Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.</p>\r\n<ol id=\"bkmrk-the%C2%A0test%C2%A0property-id\" class=\"\"><li id=\"bkmrk-the%C2%A0test%C2%A0property-id-0\" class=\"hy hz fy ia b ib ic id ie if ig ih ii ij ik il im in io ip iq ir is it iu iv lu kb kc gv\" data-selectable-paragraph=\"\">The <code class=\"ll lm ln lo kr b\">test</code> property identifies which file or files should be transformed.</li>\r\n<li id=\"bkmrk-the%C2%A0use%C2%A0property-ind\" class=\"hy hz fy ia b ib kd id ie if ke ih ii ij kf il im in kg ip iq ir kh it iu iv lu kb kc gv\" data-selectable-paragraph=\"\">The <code class=\"ll lm ln lo kr b\">use</code> property indicates which loader should be used to do the transforming.</li>\r\n</ol><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-module.exports-%3D-%7B-m\"><code class=\"language-JavaScript\">module.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }</code></pre>\r\n<div data-lang=\"JavaScript\" id=\"bkmrk-module.exports-%3D-%7B-m-0\"><textarea style=\"display: none;\">module.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n}</textarea><div>\r\n<div><textarea style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; min-height: 1em; outline: none;\" tabindex=\"0\" spellcheck=\"false\" readonly></textarea></div>\r\n</div>\r\n</div>\r\n<ul id=\"bkmrk-css-loader%C2%A0--handles\"><li>\r\n<p><code>css-loader</code> - Handles resolving the <code>import .css</code> syntax in JS</p>\r\n</li>\r\n<li>\r\n<p><code>style-loader</code> - Handles injecting those loaded CSS styles into the DOM</p>\r\n</li>\r\n</ul><h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code class=\"ll lm ln lo kr b\">require()</code> it and add it to the <code class=\"ll lm ln lo kr b\">plugins</code> array.</p>\r\n<h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-var-htmlwebpackplugi\"><code class=\"language-JavaScript\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};</code></pre>\r\n<div data-lang=\"JavaScript\" id=\"bkmrk-this-will-generate-a\">\r\n<div>\r\n<div>This will generate a file <code class=\"ll lm ln lo kr b\">dist/index.html</code> containing the following:</div>\r\n</div>\r\n</div>\r\n<div data-lang=\"HTML\" id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><textarea style=\"display: none;\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</textarea><div>\r\n<div><textarea style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; min-height: 1em; outline: none;\" tabindex=\"0\" spellcheck=\"false\" readonly></textarea></div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<pre class=\"CodeMirror-line-like\">xxxxxxxxxx</pre>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div> </div>\r\n</div>\r\n<div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>1</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\"><span class=\"cm-meta\">&lt;!DOCTYPE html&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>2</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\"><span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">html</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>3</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">  <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">head</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>4</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">    <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">meta</span> <span class=\"cm-attribute\">charset</span>=<span class=\"cm-string\">\"UTF-8\"</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>5</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">    <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">title</span><span class=\"cm-tag cm-bracket\">&gt;</span>webpack App<span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">title</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>6</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">  <span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">head</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>7</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">  <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">body</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>8</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">    <span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">script</span> <span class=\"cm-attribute\">src</span>=<span class=\"cm-string\">\"index_bundle.js\"</span><span class=\"cm-tag cm-bracket\">&gt;&lt;/</span><span class=\"cm-tag\">script</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>9</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">  <span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">body</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>10</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\"><span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">html</span><span class=\"cm-tag cm-bracket\">&gt;</span></span></pre>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<div></div>\r\n<div>\r\n<div></div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<p id=\"bkmrk-if-you-have-multiple\">If you have multiple webpack entry points, they will all be included with <code class=\"ll lm ln lo kr b\">script</code> tags in the generated HTML.</p>\r\n<h5 id=\"bkmrk-minicssextractplugin\" class=\"kq jb fy bb da kv kw kx je ky kz la jh lb lc ld jl le lf lg jp lh li lj jt lk gv\">MiniCssExtractPlugin</h5>\r\n<p id=\"bkmrk-this-plugin-extracts\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" data-selectable-paragraph=\"\">This plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.</p>\r\n<h5 id=\"bkmrk-uglifyjswebpackplugi\" class=\"kq jb fy bb da kv kw kx je ky kz la jh lb lc ld jl le lf lg jp lh li lj jt lk gv\">UglifyjsWebpackPlugin</h5>\r\n<p id=\"bkmrk-this-plugin-uses%C2%A0ugl\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" data-selectable-paragraph=\"\">This plugin uses uglify-js to minify your JavaScript.</p>\r\n<h3 id=\"bkmrk-mode\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code class=\"ll lm ln lo kr b\">mode</code> parameter to either <code class=\"ll lm ln lo kr b\">development</code>, <code class=\"ll lm ln lo kr b\">production</code> or <code class=\"ll lm ln lo kr b\">none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code class=\"ll lm ln lo kr b\">production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" data-selectable-paragraph=\"\">The goals of <em class=\"iz\">development</em> and <em class=\"iz\">production</em> builds differ greatly. In <em class=\"iz\">development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em class=\"iz\">production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\" class=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" data-selectable-paragraph=\"\">In order to merge these configurations together, we’ll use a utility called <code class=\"ll lm ln lo kr b\">webpack-merge</code>.</p>\r\n<div data-lang=\"hy hz fy ia b ib jv id ie if jw ih ii ij jx il im in jy ip iq ir jz it iu iv dn gv\" id=\"bkmrk-const-merge-%3D-requir\"><textarea style=\"display: none;\">const merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});</textarea><div>\r\n<div><textarea style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; min-height: 1em; outline: none;\" tabindex=\"0\" spellcheck=\"false\" readonly></textarea></div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<pre class=\"CodeMirror-line-like\">xxxxxxxxxx</pre>\r\n</div>\r\n<div></div>\r\n<div></div>\r\n<div>\r\n<div> </div>\r\n</div>\r\n<div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>1</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">const merge = require(\'webpack-merge\');</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>2</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">const common = require(\'./webpack.common.js\');</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>3</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">​</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>4</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">module.exports = merge(common, {</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>5</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">  mode: \'production\',</span></pre>\r\n</div>\r\n<div>\r\n<div aria-hidden=\"true\">\r\n<div>6</div>\r\n</div>\r\n<pre class=\" CodeMirror-line \" role=\"presentation\"><span style=\"padding-right: 0.1px;\" role=\"presentation\">});</span></pre>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<div></div>\r\n<div>\r\n<div></div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>', 'Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.\r\nThe test property identifies which file or files should be transformed.\r\nThe use property indicates which loader should be used to do the transforming.\r\nExample:\r\nmodule.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\nmodule.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\ncss-loader - Handles resolving the import .css syntax in JS\r\n\r\n\r\nstyle-loader - Handles injecting those loaded CSS styles into the DOM\r\n\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nxxxxxxxxxx\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n1\r\n\r\n<!DOCTYPE html>\r\n\r\n\r\n\r\n2\r\n\r\n<html>\r\n\r\n\r\n\r\n3\r\n\r\n  <head>\r\n\r\n\r\n\r\n4\r\n\r\n    <meta charset=\"UTF-8\">\r\n\r\n\r\n\r\n5\r\n\r\n    <title>webpack App</title>\r\n\r\n\r\n\r\n6\r\n\r\n  </head>\r\n\r\n\r\n\r\n7\r\n\r\n  <body>\r\n\r\n\r\n\r\n8\r\n\r\n    <script src=\"index_bundle.js\"></script>\r\n\r\n\r\n\r\n9\r\n\r\n  </body>\r\n\r\n\r\n\r\n10\r\n\r\n</html>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nIf you have multiple webpack entry points, they will all be included with script tags in the generated HTML.\r\nMiniCssExtractPlugin\r\nThis plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.\r\nUglifyjsWebpackPlugin\r\nThis plugin uses uglify-js to minify your JavaScript.\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\nconst merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nxxxxxxxxxx\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n1\r\n\r\nconst merge = require(\'webpack-merge\');\r\n\r\n\r\n\r\n2\r\n\r\nconst common = require(\'./webpack.common.js\');\r\n\r\n\r\n\r\n3\r\n\r\n​\r\n\r\n\r\n\r\n4\r\n\r\nmodule.exports = merge(common, {\r\n\r\n\r\n\r\n5\r\n\r\n  mode: \'production\',\r\n\r\n\r\n\r\n6\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n', 1, '2021-12-23 12:25:27', '2021-12-23 12:25:27', 'loaders', 'webpack', 'version', '', '', 7),
(318, 44, 'Loaders', '<p id=\"bkmrk-out-of-the-box%2C-webp\">Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.</p>\r\n<ol id=\"bkmrk-the%C2%A0test%C2%A0property-id\"><li>The <code>test</code> property identifies which file or files should be transformed.</li>\r\n<li>The <code>use</code> property indicates which loader should be used to do the transforming.</li>\r\n</ol><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-module.exports-%3D-%7B-m\"><code class=\"language-JavaScript\">module.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n</code></pre>\r\n<p id=\"bkmrk-module.exports-%3D-%7B-m-0\">module.exports = { module: { rules: [ { test: /\\.css$/, use: [ \'style-loader\', \'css-loader\' ] } ] } }</p>\r\n<ul id=\"bkmrk-css-loader%C2%A0--handles\"><li><code>css-loader</code> - Handles resolving the <code>import .css</code> syntax in JS</li>\r\n<li><code>style-loader</code> - Handles injecting those loaded CSS styles into the DOM</li>\r\n</ul><h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code>require()</code> it and add it to the <code>plugins</code> array.</p>\r\n<h3 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h3>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-var-htmlwebpackplugi\"><code class=\"language-JavaScript\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code><span class=\"notion-enable-hover\" spellcheck=\"false\" data-token-index=\"1\" data-reactroot=\"\">dist/index.html</span></code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n<h3 id=\"bkmrk-minicssextractplugin\">MiniCssExtractPlugin</h3>\r\n<p id=\"bkmrk-this-plugin-extracts\">This plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.</p>\r\n<h3 id=\"bkmrk-uglifyjswebpackplugi\">UglifyjsWebpackPlugin</h3>\r\n<p id=\"bkmrk-this-plugin-uses%C2%A0ugl\">This plugin uses uglify-js to minify your JavaScript.</p>\r\n<h3 id=\"bkmrk-mode\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code>mode</code> parameter to either <code>development</code>, <code>production</code> or <code>none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code>production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\">The goals of <em>development</em> and <em>production</em> builds differ greatly. In <em>development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em>production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\">In order to merge these configurations together, we’ll use a utility called <code>webpack-merge</code>.</p>\r\n<pre id=\"bkmrk-const-merge-%3D-requir\"><code class=\"language-JavaScript\">const merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});</code></pre>', 'Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.\r\nThe test property identifies which file or files should be transformed.\r\nThe use property indicates which loader should be used to do the transforming.\r\nExample:\r\nmodule.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n\r\nmodule.exports = { module: { rules: [ { test: /\\.css$/, use: [ \'style-loader\', \'css-loader\' ] } ] } }\r\ncss-loader - Handles resolving the import .css syntax in JS\r\nstyle-loader - Handles injecting those loaded CSS styles into the DOM\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\nMiniCssExtractPlugin\r\nThis plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.\r\nUglifyjsWebpackPlugin\r\nThis plugin uses uglify-js to minify your JavaScript.\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\nconst merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});', 1, '2021-12-23 12:28:20', '2021-12-23 12:28:20', 'loaders', 'webpack', 'version', '', '', 8);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(320, 44, 'Loaders', '<p id=\"bkmrk-out-of-the-box%2C-webp\">Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.</p>\r\n<ol id=\"bkmrk-the%C2%A0test%C2%A0property-id\"><li>The <code>test</code> property identifies which file or files should be transformed.</li>\r\n<li>The <code>use</code> property indicates which loader should be used to do the transforming.</li>\r\n</ol><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-module.exports-%3D-%7B-m\"><code class=\"language-JavaScript\">module.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n</code></pre>\r\n<p id=\"bkmrk-module.exports-%3D-%7B-m-0\">module.exports = { module: { rules: [ { test: /\\.css$/, use: [ \'style-loader\', \'css-loader\' ] } ] } }</p>\r\n<ul id=\"bkmrk-css-loader%C2%A0--handles\"><li><code>css-loader</code> - Handles resolving the <code>import .css</code> syntax in JS</li>\r\n<li><code>style-loader</code> - Handles injecting those loaded CSS styles into the DOM</li>\r\n</ul><h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code>require()</code> it and add it to the <code>plugins</code> array.</p>\r\n<h3 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h3>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-var-htmlwebpackplugi\"><code class=\"language-JavaScript\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code><span class=\"notion-enable-hover\" spellcheck=\"false\" data-token-index=\"1\" data-reactroot=\"\">dist/index.html</span></code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n<h3 id=\"bkmrk-minicssextractplugin\">MiniCssExtractPlugin</h3>\r\n<p id=\"bkmrk-this-plugin-extracts\">This plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.</p>\r\n<h3 id=\"bkmrk-uglifyjswebpackplugi\">UglifyjsWebpackPlugin</h3>\r\n<p id=\"bkmrk-this-plugin-uses%C2%A0ugl\">This plugin uses uglify-js to minify your JavaScript.</p>\r\n<h3 id=\"bkmrk-mode\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code>mode</code> parameter to either <code>development</code>, <code>production</code> or <code>none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code>production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\">The goals of <em>development</em> and <em>production</em> builds differ greatly. In <em>development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em>production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\">In order to merge these configurations together, we’ll use a utility called <code>webpack-merge</code>.</p>\r\n<pre id=\"bkmrk-const-merge-%3D-requir\"><code class=\"language-JavaScript\">const merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});</code></pre>\r\n<p id=\"bkmrk-now-let%E2%80%99s-repoint-ou\">Now let’s repoint our <code class=\"ll lm ln lo kr b\">scripts</code> to the new configurations. We\'ll use the <em class=\"iz\">development</em> one for our <code class=\"ll lm ln lo kr b\">webpack-dev-server</code>, <code class=\"ll lm ln lo kr b\">npm start</code>, script and the <em class=\"iz\">production</em> one for our <code class=\"ll lm ln lo kr b\">npm run build</code> script:</p>\r\n<pre id=\"bkmrk-%7B-...-%22scripts%22%3A-%7B-%22\"><code class=\"language-JavaScript\">{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}</code></pre>', 'Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.\r\nThe test property identifies which file or files should be transformed.\r\nThe use property indicates which loader should be used to do the transforming.\r\nExample:\r\nmodule.exports = {\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\\\.css$/,\r\n        use: [ \'style-loader\', \'css-loader\' ]\r\n      }\r\n    ]\r\n  }\r\n\r\nmodule.exports = { module: { rules: [ { test: /\\.css$/, use: [ \'style-loader\', \'css-loader\' ] } ] } }\r\ncss-loader - Handles resolving the import .css syntax in JS\r\nstyle-loader - Handles injecting those loaded CSS styles into the DOM\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\nMiniCssExtractPlugin\r\nThis plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.\r\nUglifyjsWebpackPlugin\r\nThis plugin uses uglify-js to minify your JavaScript.\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\nconst merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});\r\nNow let’s repoint our scripts to the new configurations. We\'ll use the development one for our webpack-dev-server, npm start, script and the production one for our npm run build script:\r\n{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}', 1, '2021-12-23 12:29:12', '2021-12-23 12:29:12', 'loaders', 'webpack', 'version', '', '', 9),
(322, 44, 'Loaders', '<p id=\"bkmrk-out-of-the-box%2C-webp\">Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.</p>\r\n<ol id=\"bkmrk-the%C2%A0test%C2%A0property-id\"><li>The <code>test</code> property identifies which file or files should be transformed.</li>\r\n<li>The <code>use</code> property indicates which loader should be used to do the transforming.</li>\r\n</ol><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-module.exports-%3D-%7B-m\"><code class=\"language-JavaScript\">module.exports = {\r\n  module: {\r\n          rules: [\r\n              {\r\n                  test: /\\.scss$/,\r\n                  use: [\r\n                      \"style-loader\", /* 3. Inject styles into DOM    */\r\n                      \"css-loader\",   /* 2. Turn css into CommonJS. This allows us to import CSS files    */\r\n                      \"sass-loader\"   /* 1. Turn sass into css        */\r\n                  ]\r\n              }\r\n          ]\r\n      }\r\n }\r\n</code></pre>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code>require()</code> it and add it to the <code>plugins</code> array.</p>\r\n<h3 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h3>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-var-htmlwebpackplugi\"><code class=\"language-JavaScript\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code><span class=\"notion-enable-hover\" spellcheck=\"false\" data-token-index=\"1\" data-reactroot=\"\">dist/index.html</span></code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n<h3 id=\"bkmrk-minicssextractplugin\">MiniCssExtractPlugin</h3>\r\n<p id=\"bkmrk-this-plugin-extracts\">This plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.</p>\r\n<h3 id=\"bkmrk-uglifyjswebpackplugi\">UglifyjsWebpackPlugin</h3>\r\n<p id=\"bkmrk-this-plugin-uses%C2%A0ugl\">This plugin uses uglify-js to minify your JavaScript.</p>\r\n<h3 id=\"bkmrk-mode\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code>mode</code> parameter to either <code>development</code>, <code>production</code> or <code>none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code>production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\">The goals of <em>development</em> and <em>production</em> builds differ greatly. In <em>development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em>production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\">In order to merge these configurations together, we’ll use a utility called <code>webpack-merge</code>.</p>\r\n<pre id=\"bkmrk-const-merge-%3D-requir\"><code class=\"language-JavaScript\">const merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});</code></pre>\r\n<p id=\"bkmrk-now-let%E2%80%99s-repoint-ou\">Now let’s repoint our <code class=\"ll lm ln lo kr b\">scripts</code> to the new configurations. We\'ll use the <em class=\"iz\">development</em> one for our <code class=\"ll lm ln lo kr b\">webpack-dev-server</code>, <code class=\"ll lm ln lo kr b\">npm start</code>, script and the <em class=\"iz\">production</em> one for our <code class=\"ll lm ln lo kr b\">npm run build</code> script:</p>\r\n<pre id=\"bkmrk-%7B-...-%22scripts%22%3A-%7B-%22\"><code class=\"language-JavaScript\">{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}</code></pre>', 'Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.\r\nThe test property identifies which file or files should be transformed.\r\nThe use property indicates which loader should be used to do the transforming.\r\nExample:\r\nmodule.exports = {\r\n  module: {\r\n          rules: [\r\n              {\r\n                  test: /\\.scss$/,\r\n                  use: [\r\n                      \"style-loader\", /* 3. Inject styles into DOM    */\r\n                      \"css-loader\",   /* 2. Turn css into CommonJS. This allows us to import CSS files    */\r\n                      \"sass-loader\"   /* 1. Turn sass into css        */\r\n                  ]\r\n              }\r\n          ]\r\n      }\r\n }\r\n\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\nMiniCssExtractPlugin\r\nThis plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.\r\nUglifyjsWebpackPlugin\r\nThis plugin uses uglify-js to minify your JavaScript.\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\nconst merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});\r\nNow let’s repoint our scripts to the new configurations. We\'ll use the development one for our webpack-dev-server, npm start, script and the production one for our npm run build script:\r\n{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}', 1, '2021-12-23 12:34:02', '2021-12-23 12:34:02', 'loaders', 'webpack', 'version', '', '', 10),
(324, 44, 'Loaders', '<p id=\"bkmrk-out-of-the-box%2C-webp\">Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.</p>\r\n<ol id=\"bkmrk-the%C2%A0test%C2%A0property-id\"><li>The <code>test</code> property identifies which file or files should be transformed.</li>\r\n<li>The <code>use</code> property indicates which loader should be used to do the transforming.</li>\r\n</ol><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-module.exports-%3D-%7B-m\"><code class=\"language-JavaScript\">module.exports = {\r\n  module: {\r\n          rules: [\r\n              {\r\n                  test: /\\.scss$/,\r\n                  use: [\r\n                      \"style-loader\", /* 3. Inject styles into DOM    */\r\n                      \"css-loader\",   /* 2. Turn css into CommonJS. This allows us to import CSS files    */\r\n                      \"sass-loader\"   /* 1. Turn sass into css        */\r\n                  ]\r\n              }\r\n          ]\r\n      }\r\n }\r\n</code></pre>\r\n<h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code>require()</code> it and add it to the <code>plugins</code> array.</p>\r\n<h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-var-htmlwebpackplugi\"><code class=\"language-JavaScript\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code><span class=\"notion-enable-hover\" spellcheck=\"false\" data-token-index=\"1\" data-reactroot=\"\">dist/index.html</span></code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n<h3 id=\"bkmrk-mode\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code>mode</code> parameter to either <code>development</code>, <code>production</code> or <code>none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code>production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\">The goals of <em>development</em> and <em>production</em> builds differ greatly. In <em>development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em>production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\">In order to merge these configurations together, we’ll use a utility called <code>webpack-merge</code>.</p>\r\n<pre id=\"bkmrk-const-merge-%3D-requir\"><code class=\"language-JavaScript\">const merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});</code></pre>\r\n<p id=\"bkmrk-now-let%E2%80%99s-repoint-ou\">Now let’s repoint our <code class=\"ll lm ln lo kr b\">scripts</code> to the new configurations. We\'ll use the <em class=\"iz\">development</em> one for our <code class=\"ll lm ln lo kr b\">webpack-dev-server</code>, <code class=\"ll lm ln lo kr b\">npm start</code>, script and the <em class=\"iz\">production</em> one for our <code class=\"ll lm ln lo kr b\">npm run build</code> script:</p>\r\n<pre id=\"bkmrk-%7B-...-%22scripts%22%3A-%7B-%22\"><code class=\"language-JavaScript\">{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}</code></pre>', 'Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.\r\nThe test property identifies which file or files should be transformed.\r\nThe use property indicates which loader should be used to do the transforming.\r\nExample:\r\nmodule.exports = {\r\n  module: {\r\n          rules: [\r\n              {\r\n                  test: /\\.scss$/,\r\n                  use: [\r\n                      \"style-loader\", /* 3. Inject styles into DOM    */\r\n                      \"css-loader\",   /* 2. Turn css into CommonJS. This allows us to import CSS files    */\r\n                      \"sass-loader\"   /* 1. Turn sass into css        */\r\n                  ]\r\n              }\r\n          ]\r\n      }\r\n }\r\n\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\nconst merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});\r\nNow let’s repoint our scripts to the new configurations. We\'ll use the development one for our webpack-dev-server, npm start, script and the production one for our npm run build script:\r\n{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}', 1, '2021-12-23 12:35:04', '2021-12-23 12:35:04', 'loaders', 'webpack', 'version', '', '', 11),
(325, 44, 'Loaders', '<p id=\"bkmrk-out-of-the-box%2C-webp\">Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.</p>\r\n<ol id=\"bkmrk-the%C2%A0test%C2%A0property-id\"><li>The <code>test</code> property identifies which file or files should be transformed.</li>\r\n<li>The <code>use</code> property indicates which loader should be used to do the transforming.</li>\r\n</ol><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-module.exports-%3D-%7B-m\"><code class=\"language-JavaScript\">module.exports = {\r\n  module: {\r\n          rules: [\r\n              {\r\n                  test: /\\.scss$/,\r\n                  use: [\r\n                      \"style-loader\", /* 3. Inject styles into DOM    										*/\r\n                      \"css-loader\",   /* 2. Turn css into CommonJS. This allows us to import CSS files    	*/\r\n                      \"sass-loader\"   /* 1. Turn sass into css        										*/\r\n                  ]\r\n              }\r\n          ]\r\n      }\r\n }\r\n</code></pre>\r\n<h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code>require()</code> it and add it to the <code>plugins</code> array.</p>\r\n<h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-var-htmlwebpackplugi\"><code class=\"language-JavaScript\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code><span class=\"notion-enable-hover\" spellcheck=\"false\" data-token-index=\"1\" data-reactroot=\"\">dist/index.html</span></code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n<h3 id=\"bkmrk-mode\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code>mode</code> parameter to either <code>development</code>, <code>production</code> or <code>none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code>production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\">The goals of <em>development</em> and <em>production</em> builds differ greatly. In <em>development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em>production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\">In order to merge these configurations together, we’ll use a utility called <code>webpack-merge</code>.</p>\r\n<pre id=\"bkmrk-const-merge-%3D-requir\"><code class=\"language-JavaScript\">const merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});</code></pre>\r\n<p id=\"bkmrk-now-let%E2%80%99s-repoint-ou\">Now let’s repoint our <code class=\"ll lm ln lo kr b\">scripts</code> to the new configurations. We\'ll use the <em class=\"iz\">development</em> one for our <code class=\"ll lm ln lo kr b\">webpack-dev-server</code>, <code class=\"ll lm ln lo kr b\">npm start</code>, script and the <em class=\"iz\">production</em> one for our <code class=\"ll lm ln lo kr b\">npm run build</code> script:</p>\r\n<pre id=\"bkmrk-%7B-...-%22scripts%22%3A-%7B-%22\"><code class=\"language-JavaScript\">{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}</code></pre>', 'Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.\r\nThe test property identifies which file or files should be transformed.\r\nThe use property indicates which loader should be used to do the transforming.\r\nExample:\r\nmodule.exports = {\r\n  module: {\r\n          rules: [\r\n              {\r\n                  test: /\\.scss$/,\r\n                  use: [\r\n                      \"style-loader\", /* 3. Inject styles into DOM    										*/\r\n                      \"css-loader\",   /* 2. Turn css into CommonJS. This allows us to import CSS files    	*/\r\n                      \"sass-loader\"   /* 1. Turn sass into css        										*/\r\n                  ]\r\n              }\r\n          ]\r\n      }\r\n }\r\n\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\nconst merge = require(\'webpack-merge\');\r\nconst common = require(\'./webpack.common.js\');\r\n\r\nmodule.exports = merge(common, {\r\n  mode: \'production\',\r\n});\r\nNow let’s repoint our scripts to the new configurations. We\'ll use the development one for our webpack-dev-server, npm start, script and the production one for our npm run build script:\r\n{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}', 1, '2021-12-23 12:35:31', '2021-12-23 12:35:31', 'loaders', 'webpack', 'version', '', '', 12),
(327, 43, 'Configuration', '<h4 id=\"bkmrk-%C2%A0\">Cache busting</h4>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1640255643311.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1640255643311.png\" alt=\"image-1640255643311.png\" width=\"445\" height=\"275\"></a></p>\r\n<h3 id=\"bkmrk-%C2%A0-0\"> </h3>\r\n<h3 id=\"bkmrk-cache-busting\">Cache busting</h3>\r\n<p id=\"bkmrk-cache-busting-means%C2%A0\">Cache busting means making sure the users browser loads the newest version of our app, if it has been updated, instead of using a cached version. Using a fixed filename for the bundle is problematic because the browser will cache the file and use the cached version even when the file has changed. What we want to do is to add a suffix to our filename and change it every time the code changes.</p>\r\n<pre id=\"bkmrk-const-path-%3D-require\"><code class=\"language-JavaScript\">const path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    output: {\r\n        filename: \'main.[contenthash].js\', /* We assign a unique hash to the filename, to prevent the browser from caching it */\r\n        path: path.resolve(__dirname, \"build\")\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}</code></pre>', 'Cache busting\r\n\r\n \r\nCache busting\r\nCache busting means making sure the users browser loads the newest version of our app, if it has been updated, instead of using a cached version. Using a fixed filename for the bundle is problematic because the browser will cache the file and use the cached version even when the file has changed. What we want to do is to add a suffix to our filename and change it every time the code changes.\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    output: {\r\n        filename: \'main.[contenthash].js\', /* We assign a unique hash to the filename, to prevent the browser from caching it */\r\n        path: path.resolve(__dirname, \"build\")\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}', 1, '2021-12-23 12:51:48', '2021-12-23 12:51:48', 'configuration', 'webpack', 'version', '', '', 5),
(328, 43, 'Configuration', '<h4 id=\"bkmrk-%C2%A0\">Cache busting</h4>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1640255643311.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1640255643311.png\" alt=\"image-1640255643311.png\" width=\"445\" height=\"275\"></a></p>\r\n<h3 id=\"bkmrk-%C2%A0-0\"> </h3>\r\n<h3 id=\"bkmrk-cache-busting\">Cache busting</h3>\r\n<p id=\"bkmrk-cache-busting-means%C2%A0\">Cache busting means making sure the users browser loads the newest version of our app, if it has been updated, instead of using a cached version. Using a fixed filename for the bundle is problematic because the browser will cache the file and use the cached version even when the file has changed. What we want to do is to add a suffix to our filename and change it every time the code changes.</p>\r\n<pre id=\"bkmrk-const-path-%3D-require\"><code class=\"language-JavaScript\">const path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    output: {\r\n        filename: \'main.[contenthash].js\', /* We assign a unique hash to the filename, to prevent the browser from caching it */\r\n        path: path.resolve(__dirname, \"build\")\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}</code></pre>\r\n<p id=\"bkmrk-%C2%A0-1\"> </p>\r\n<p id=\"bkmrk-%C2%A0-2\"> </p>\r\n<p id=\"bkmrk-%C2%A0-3\"> </p>', 'Cache busting\r\n\r\n \r\nCache busting\r\nCache busting means making sure the users browser loads the newest version of our app, if it has been updated, instead of using a cached version. Using a fixed filename for the bundle is problematic because the browser will cache the file and use the cached version even when the file has changed. What we want to do is to add a suffix to our filename and change it every time the code changes.\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    output: {\r\n        filename: \'main.[contenthash].js\', /* We assign a unique hash to the filename, to prevent the browser from caching it */\r\n        path: path.resolve(__dirname, \"build\")\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}\r\n \r\n \r\n ', 1, '2021-12-23 13:07:35', '2021-12-23 13:07:35', 'configuration', 'webpack', 'version', '', '', 6);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(330, 44, 'Loaders', '<p id=\"bkmrk-out-of-the-box%2C-webp\">Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.</p>\r\n<ol id=\"bkmrk-the%C2%A0test%C2%A0property-id\"><li>The <code>test</code> property identifies which file or files should be transformed.</li>\r\n<li>The <code>use</code> property indicates which loader should be used to do the transforming.</li>\r\n</ol><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-module.exports-%3D-%7B-m\"><code class=\"language-JavaScript\">module.exports = {\r\n  module: {\r\n          rules: [\r\n              {\r\n                  test: /\\.scss$/,\r\n                  use: [\r\n                      \"style-loader\", /* 3. Inject styles into DOM    										*/\r\n                      \"css-loader\",   /* 2. Turn css into CommonJS. This allows us to import CSS files    	*/\r\n                      \"sass-loader\"   /* 1. Turn sass into css        										*/\r\n                  ]\r\n              }\r\n          ]\r\n      }\r\n }\r\n</code></pre>\r\n<h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code>require()</code> it and add it to the <code>plugins</code> array.</p>\r\n<h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-var-htmlwebpackplugi\"><code class=\"language-JavaScript\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code><span class=\"notion-enable-hover\" spellcheck=\"false\" data-token-index=\"1\" data-reactroot=\"\">dist/index.html</span></code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n<h3 id=\"bkmrk-mode\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code>mode</code> parameter to either <code>development</code>, <code>production</code> or <code>none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code>production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\">The goals of <em>development</em> and <em>production</em> builds differ greatly. In <em>development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em>production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\">In order to merge these configurations together, we’ll use a utility called <code>webpack-merge</code>.</p>\r\n<pre id=\"bkmrk-%2F%2A-webpack.dev.js-%2A%2F\"><code class=\"language-JavaScript\">/* webpack.dev.js */\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}</code></pre>\r\n<p id=\"bkmrk-now-let%E2%80%99s-repoint-ou\">Now let’s repoint our <code class=\"ll lm ln lo kr b\">scripts</code> to the new configurations. We\'ll use the <em class=\"iz\">development</em> one for our <code class=\"ll lm ln lo kr b\">webpack-dev-server</code>, <code class=\"ll lm ln lo kr b\">npm start</code>, script and the <em class=\"iz\">production</em> one for our <code class=\"ll lm ln lo kr b\">npm run build</code> script:</p>\r\n<pre id=\"bkmrk-%7B-...-%22scripts%22%3A-%7B-%22\"><code class=\"language-JavaScript\">{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}</code></pre>', 'Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.\r\nThe test property identifies which file or files should be transformed.\r\nThe use property indicates which loader should be used to do the transforming.\r\nExample:\r\nmodule.exports = {\r\n  module: {\r\n          rules: [\r\n              {\r\n                  test: /\\.scss$/,\r\n                  use: [\r\n                      \"style-loader\", /* 3. Inject styles into DOM    										*/\r\n                      \"css-loader\",   /* 2. Turn css into CommonJS. This allows us to import CSS files    	*/\r\n                      \"sass-loader\"   /* 1. Turn sass into css        										*/\r\n                  ]\r\n              }\r\n          ]\r\n      }\r\n }\r\n\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\n/* webpack.dev.js */\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}\r\nNow let’s repoint our scripts to the new configurations. We\'ll use the development one for our webpack-dev-server, npm start, script and the production one for our npm run build script:\r\n{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}', 1, '2021-12-23 13:09:26', '2021-12-23 13:09:26', 'loaders', 'webpack', 'version', '', '', 13),
(331, 43, 'Configuration', '<h4 id=\"bkmrk-%C2%A0\">Cache busting</h4>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1640255643311.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1640255643311.png\" alt=\"image-1640255643311.png\" width=\"445\" height=\"275\"></a></p>\r\n<h3 id=\"bkmrk-%C2%A0-0\"> </h3>\r\n<h3 id=\"bkmrk-cache-busting\">Cache busting</h3>\r\n<p id=\"bkmrk-cache-busting-means%C2%A0\">Cache busting means making sure the users browser loads the newest version of our app, if it has been updated, instead of using a cached version. Using a fixed filename for the bundle is problematic because the browser will cache the file and use the cached version even when the file has changed. What we want to do is to add a suffix to our filename and change it every time the code changes.</p>\r\n<pre id=\"bkmrk-const-path-%3D-require\"><code class=\"language-JavaScript\">const path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    output: {\r\n        filename: \'main.[contenthash].js\', /* We assign a unique hash to the filename, to prevent the browser from caching it */\r\n        path: path.resolve(__dirname, \"build\")\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}</code></pre>\r\n<p id=\"bkmrk-%C2%A0-1\"> </p>\r\n<p id=\"bkmrk-%C2%A0-2\"> </p>\r\n<p id=\"bkmrk-%C2%A0-3\"> </p>', 'Cache busting\r\n\r\n \r\nCache busting\r\nCache busting means making sure the users browser loads the newest version of our app, if it has been updated, instead of using a cached version. Using a fixed filename for the bundle is problematic because the browser will cache the file and use the cached version even when the file has changed. What we want to do is to add a suffix to our filename and change it every time the code changes.\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    output: {\r\n        filename: \'main.[contenthash].js\', /* We assign a unique hash to the filename, to prevent the browser from caching it */\r\n        path: path.resolve(__dirname, \"build\")\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}\r\n \r\n \r\n ', 1, '2021-12-23 13:09:31', '2021-12-23 13:09:31', 'configuration', 'webpack', 'version', '', '', 7),
(333, 43, 'Configuration', '<p id=\"bkmrk-%C2%A0\">Webpack is a static module bundler for JavaScript applications/ it takes all the code from your application and makes it usable in a web browser. </p>\r\n<p id=\"bkmrk-the-entry-object-is-\">The entry object is where webpack looks to start building the bundle.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1640255643311.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1640255643311.png\" alt=\"image-1640255643311.png\" width=\"445\" height=\"275\"></a></p>\r\n<h3 id=\"bkmrk-%C2%A0-0\"> </h3>\r\n<h3 id=\"bkmrk-cache-busting\">Cache busting</h3>\r\n<p id=\"bkmrk-cache-busting-means%C2%A0\">Cache busting means making sure the users browser loads the newest version of our app, if it has been updated, instead of using a cached version. Using a fixed filename for the bundle is problematic because the browser will cache the file and use the cached version even when the file has changed. What we want to do is to add a suffix to our filename and change it every time the code changes.</p>\r\n<pre id=\"bkmrk-const-path-%3D-require\"><code class=\"language-JavaScript\">const path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    output: {\r\n        filename: \'main.[contenthash].js\', /* We assign a unique hash to the filename, to prevent the browser from caching it */\r\n        path: path.resolve(__dirname, \"build\")\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}</code></pre>\r\n<p id=\"bkmrk-%C2%A0-1\"> </p>\r\n<p id=\"bkmrk-%C2%A0-2\"> </p>\r\n<p id=\"bkmrk-%C2%A0-3\"> </p>', 'Webpack is a static module bundler for JavaScript applications/ it takes all the code from your application and makes it usable in a web browser. \r\nThe entry object is where webpack looks to start building the bundle.\r\n\r\n \r\nCache busting\r\nCache busting means making sure the users browser loads the newest version of our app, if it has been updated, instead of using a cached version. Using a fixed filename for the bundle is problematic because the browser will cache the file and use the cached version even when the file has changed. What we want to do is to add a suffix to our filename and change it every time the code changes.\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    output: {\r\n        filename: \'main.[contenthash].js\', /* We assign a unique hash to the filename, to prevent the browser from caching it */\r\n        path: path.resolve(__dirname, \"build\")\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}\r\n \r\n \r\n ', 1, '2021-12-23 13:10:56', '2021-12-23 13:10:56', 'configuration', 'webpack', 'version', '', '', 8),
(335, 44, 'LoadersB', '<p id=\"bkmrk-out-of-the-box%2C-webp\">Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.</p>\r\n<ol id=\"bkmrk-the%C2%A0test%C2%A0property-id\"><li>The <code>test</code> property identifies which file or files should be transformed.</li>\r\n<li>The <code>use</code> property indicates which loader should be used to do the transforming.</li>\r\n</ol><p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-module.exports-%3D-%7B-m\"><code class=\"language-JavaScript\">module.exports = {\r\n  module: {\r\n          rules: [\r\n              {\r\n                  test: /\\.scss$/,\r\n                  use: [\r\n                      \"style-loader\", /* 3. Inject styles into DOM    										*/\r\n                      \"css-loader\",   /* 2. Turn css into CommonJS. This allows us to import CSS files    	*/\r\n                      \"sass-loader\"   /* 1. Turn sass into css        										*/\r\n                  ]\r\n              }\r\n          ]\r\n      }\r\n }\r\n</code></pre>\r\n<p id=\"bkmrk-%C2%A0\"> </p>\r\n<h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code>require()</code> it and add it to the <code>plugins</code> array.</p>\r\n<h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-var-htmlwebpackplugi\"><code class=\"language-JavaScript\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code><span class=\"notion-enable-hover\" spellcheck=\"false\" data-token-index=\"1\" data-reactroot=\"\">dist/index.html</span></code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n<h3 id=\"bkmrk-mode\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code>mode</code> parameter to either <code>development</code>, <code>production</code> or <code>none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code>production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\">The goals of <em>development</em> and <em>production</em> builds differ greatly. In <em>development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em>production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\">In order to merge these configurations together, we’ll use a utility called <code>webpack-merge</code>.</p>\r\n<pre id=\"bkmrk-%2F%2A-webpack.dev.js-%2A%2F\"><code class=\"language-JavaScript\">/* webpack.dev.js */\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}</code></pre>\r\n<p id=\"bkmrk-now-let%E2%80%99s-repoint-ou\">Now let’s repoint our <code class=\"ll lm ln lo kr b\">scripts</code> to the new configurations. We\'ll use the <em class=\"iz\">development</em> one for our <code class=\"ll lm ln lo kr b\">webpack-dev-server</code>, <code class=\"ll lm ln lo kr b\">npm start</code>, script and the <em class=\"iz\">production</em> one for our <code class=\"ll lm ln lo kr b\">npm run build</code> script:</p>\r\n<pre id=\"bkmrk-%7B-...-%22scripts%22%3A-%7B-%22\"><code class=\"language-JavaScript\">{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}</code></pre>', 'Out of the box, webpack only understands JavaScript and JSON files. Loaders allow webpack to process other types of files and convert them into valid modules.\r\nThe test property identifies which file or files should be transformed.\r\nThe use property indicates which loader should be used to do the transforming.\r\nExample:\r\nmodule.exports = {\r\n  module: {\r\n          rules: [\r\n              {\r\n                  test: /\\.scss$/,\r\n                  use: [\r\n                      \"style-loader\", /* 3. Inject styles into DOM    										*/\r\n                      \"css-loader\",   /* 2. Turn css into CommonJS. This allows us to import CSS files    	*/\r\n                      \"sass-loader\"   /* 1. Turn sass into css        										*/\r\n                  ]\r\n              }\r\n          ]\r\n      }\r\n }\r\n\r\n \r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\n/* webpack.dev.js */\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}\r\nNow let’s repoint our scripts to the new configurations. We\'ll use the development one for our webpack-dev-server, npm start, script and the production one for our npm run build script:\r\n{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}', 1, '2021-12-23 15:11:38', '2021-12-23 15:11:38', 'loadersb', 'webpack', 'version', '', '', 14),
(344, 44, 'LoadersB', '<p id=\"bkmrk-the-loader-is-respon\">The loader is responsible for parsing/processing the resource, which might do any of the following:</p>\r\n<ul id=\"bkmrk-transpile-it-into-an\"><li>Transpile it into another language (e.g. babel-loader)</li>\r\n<li>Copy the resource to a specified location and provide the new location as the imported value (e.g. file-loader)</li>\r\n<li>Ignore the resource entirely (e.g. ignore-loader)</li>\r\n</ul><p id=\"bkmrk-one-thing-that-makes\">One thing that makes Webpack so powerful is that these loaders can find more dependent resources inside the resource they\'re processing, and hand off to other loaders. So it\'s plausible to import an HTML file within your javascript, and that HTML file could reference another javascript file, which could then be loaded too.</p>\r\n<p id=\"bkmrk-module-loaders-can-b\">Module loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result to the next one, and so forth. Finally, Webpack expects JavaScript to be returned by the last loader in the chain.</p>\r\n<p id=\"bkmrk-webpack-loaders-esse\">Webpack loaders essentially create a processing pipeline for your code which gets evaluated in the reverse order that it is listed. For example, if our loader is listed after <code class=\"ir is it iu iv b\">babel-loader</code>, our loader will pass its results on to <code class=\"ir is it iu iv b\">babel-loader</code>.</p>\r\n<h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code>require()</code> it and add it to the <code>plugins</code> array.</p>\r\n<h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-var-htmlwebpackplugi\"><code class=\"language-JavaScript\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code><span class=\"notion-enable-hover\" spellcheck=\"false\" data-token-index=\"1\" data-reactroot=\"\">dist/index.html</span></code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n<h3 id=\"bkmrk-mode\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code>mode</code> parameter to either <code>development</code>, <code>production</code> or <code>none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code>production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\">The goals of <em>development</em> and <em>production</em> builds differ greatly. In <em>development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em>production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\">In order to merge these configurations together, we’ll use a utility called <code>webpack-merge</code>.</p>\r\n<pre id=\"bkmrk-%2F%2A-webpack.dev.js-%2A%2F\"><code class=\"language-JavaScript\">/* webpack.dev.js */\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}</code></pre>\r\n<p id=\"bkmrk-now-let%E2%80%99s-repoint-ou\">Now let’s repoint our <code class=\"ll lm ln lo kr b\">scripts</code> to the new configurations. We\'ll use the <em class=\"iz\">development</em> one for our <code class=\"ll lm ln lo kr b\">webpack-dev-server</code>, <code class=\"ll lm ln lo kr b\">npm start</code>, script and the <em class=\"iz\">production</em> one for our <code class=\"ll lm ln lo kr b\">npm run build</code> script:</p>\r\n<pre id=\"bkmrk-%7B-...-%22scripts%22%3A-%7B-%22\"><code class=\"language-JavaScript\">{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}</code></pre>', 'The loader is responsible for parsing/processing the resource, which might do any of the following:\r\nTranspile it into another language (e.g. babel-loader)\r\nCopy the resource to a specified location and provide the new location as the imported value (e.g. file-loader)\r\nIgnore the resource entirely (e.g. ignore-loader)\r\nOne thing that makes Webpack so powerful is that these loaders can find more dependent resources inside the resource they\'re processing, and hand off to other loaders. So it\'s plausible to import an HTML file within your javascript, and that HTML file could reference another javascript file, which could then be loaded too.\r\nModule loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result to the next one, and so forth. Finally, Webpack expects JavaScript to be returned by the last loader in the chain.\r\nWebpack loaders essentially create a processing pipeline for your code which gets evaluated in the reverse order that it is listed. For example, if our loader is listed after babel-loader, our loader will pass its results on to babel-loader.\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\n/* webpack.dev.js */\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}\r\nNow let’s repoint our scripts to the new configurations. We\'ll use the development one for our webpack-dev-server, npm start, script and the production one for our npm run build script:\r\n{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}', 1, '2021-12-27 15:28:01', '2021-12-27 15:28:01', 'loadersb', 'webpack', 'version', '', '', 15);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(345, 44, 'Loaders', '<p id=\"bkmrk-the-loader-is-respon\">The loader is responsible for parsing/processing the resource, which might do any of the following:</p>\r\n<ul id=\"bkmrk-transpile-it-into-an\"><li>Transpile it into another language (e.g. babel-loader)</li>\r\n<li>Copy the resource to a specified location and provide the new location as the imported value (e.g. file-loader)</li>\r\n<li>Ignore the resource entirely (e.g. ignore-loader)</li>\r\n</ul><p id=\"bkmrk-one-thing-that-makes\">One thing that makes Webpack so powerful is that these loaders can find more dependent resources inside the resource they\'re processing, and hand off to other loaders. So it\'s plausible to import an HTML file within your javascript, and that HTML file could reference another javascript file, which could then be loaded too.</p>\r\n<p id=\"bkmrk-module-loaders-can-b\">Module loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result to the next one, and so forth. Finally, Webpack expects JavaScript to be returned by the last loader in the chain.</p>\r\n<p id=\"bkmrk-webpack-loaders-esse\">Webpack loaders essentially create a processing pipeline for your code which gets evaluated in the reverse order that it is listed. For example, if our loader is listed after <code class=\"ir is it iu iv b\">babel-loader</code>, our loader will pass its results on to <code class=\"ir is it iu iv b\">babel-loader</code>.</p>\r\n<h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code>require()</code> it and add it to the <code>plugins</code> array.</p>\r\n<h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-var-htmlwebpackplugi\"><code class=\"language-JavaScript\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code><span class=\"notion-enable-hover\" spellcheck=\"false\" data-token-index=\"1\" data-reactroot=\"\">dist/index.html</span></code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n<h3 id=\"bkmrk-mode\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code>mode</code> parameter to either <code>development</code>, <code>production</code> or <code>none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code>production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\">The goals of <em>development</em> and <em>production</em> builds differ greatly. In <em>development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em>production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\">In order to merge these configurations together, we’ll use a utility called <code>webpack-merge</code>.</p>\r\n<pre id=\"bkmrk-%2F%2A-webpack.dev.js-%2A%2F\"><code class=\"language-JavaScript\">/* webpack.dev.js */\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}</code></pre>\r\n<p id=\"bkmrk-now-let%E2%80%99s-repoint-ou\">Now let’s repoint our <code class=\"ll lm ln lo kr b\">scripts</code> to the new configurations. We\'ll use the <em class=\"iz\">development</em> one for our <code class=\"ll lm ln lo kr b\">webpack-dev-server</code>, <code class=\"ll lm ln lo kr b\">npm start</code>, script and the <em class=\"iz\">production</em> one for our <code class=\"ll lm ln lo kr b\">npm run build</code> script:</p>\r\n<pre id=\"bkmrk-%7B-...-%22scripts%22%3A-%7B-%22\"><code class=\"language-JavaScript\">{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}</code></pre>', 'The loader is responsible for parsing/processing the resource, which might do any of the following:\r\nTranspile it into another language (e.g. babel-loader)\r\nCopy the resource to a specified location and provide the new location as the imported value (e.g. file-loader)\r\nIgnore the resource entirely (e.g. ignore-loader)\r\nOne thing that makes Webpack so powerful is that these loaders can find more dependent resources inside the resource they\'re processing, and hand off to other loaders. So it\'s plausible to import an HTML file within your javascript, and that HTML file could reference another javascript file, which could then be loaded too.\r\nModule loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result to the next one, and so forth. Finally, Webpack expects JavaScript to be returned by the last loader in the chain.\r\nWebpack loaders essentially create a processing pipeline for your code which gets evaluated in the reverse order that it is listed. For example, if our loader is listed after babel-loader, our loader will pass its results on to babel-loader.\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\n/* webpack.dev.js */\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}\r\nNow let’s repoint our scripts to the new configurations. We\'ll use the development one for our webpack-dev-server, npm start, script and the production one for our npm run build script:\r\n{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}', 1, '2021-12-27 15:28:20', '2021-12-27 15:28:20', 'loaders', 'webpack', 'version', '', '', 16),
(346, 44, 'Loaders', '<p id=\"bkmrk-the-loader-is-respon\">The loader is responsible for parsing/processing the resource, which might do any of the following:</p>\r\n<ul id=\"bkmrk-transpile-it-into-an\"><li>Transpile it into another language (e.g. babel-loader)</li>\r\n<li>Copy the resource to a specified location and provide the new location as the imported value (e.g. file-loader)</li>\r\n<li>Ignore the resource entirely (e.g. ignore-loader)</li>\r\n</ul><p id=\"bkmrk-one-thing-that-makes\">One thing that makes Webpack so powerful is that these loaders can find more dependent resources inside the resource they\'re processing, and hand off to other loaders. So it\'s plausible to import an HTML file within your javascript, and that HTML file could reference another javascript file, which could then be loaded too.</p>\r\n<p id=\"bkmrk-module-loaders-can-b\">Module loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result to the next one, and so forth. Finally, Webpack expects JavaScript to be returned by the last loader in the chain.</p>\r\n<p id=\"bkmrk-webpack-loaders-esse\">Webpack loaders essentially create a processing pipeline for your code which gets evaluated in the reverse order that it is listed. For example, if our loader is listed after <code class=\"ir is it iu iv b\">babel-loader</code>, our loader will pass its results on to <code class=\"ir is it iu iv b\">babel-loader</code>. You can look at loaders as a function that gets some input data, usually a file or the output of another loader, and returns something.</p>\r\n<h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code>require()</code> it and add it to the <code>plugins</code> array.</p>\r\n<h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-var-htmlwebpackplugi\"><code class=\"language-JavaScript\">var HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code><span class=\"notion-enable-hover\" spellcheck=\"false\" data-token-index=\"1\" data-reactroot=\"\">dist/index.html</span></code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n<h3 id=\"bkmrk-mode\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code>mode</code> parameter to either <code>development</code>, <code>production</code> or <code>none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code>production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\">The goals of <em>development</em> and <em>production</em> builds differ greatly. In <em>development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em>production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\">In order to merge these configurations together, we’ll use a utility called <code>webpack-merge</code>.</p>\r\n<pre id=\"bkmrk-%2F%2A-webpack.dev.js-%2A%2F\"><code class=\"language-JavaScript\">/* webpack.dev.js */\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}</code></pre>\r\n<p id=\"bkmrk-now-let%E2%80%99s-repoint-ou\">Now let’s repoint our <code class=\"ll lm ln lo kr b\">scripts</code> to the new configurations. We\'ll use the <em class=\"iz\">development</em> one for our <code class=\"ll lm ln lo kr b\">webpack-dev-server</code>, <code class=\"ll lm ln lo kr b\">npm start</code>, script and the <em class=\"iz\">production</em> one for our <code class=\"ll lm ln lo kr b\">npm run build</code> script:</p>\r\n<pre id=\"bkmrk-%7B-...-%22scripts%22%3A-%7B-%22\"><code class=\"language-JavaScript\">{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}</code></pre>', 'The loader is responsible for parsing/processing the resource, which might do any of the following:\r\nTranspile it into another language (e.g. babel-loader)\r\nCopy the resource to a specified location and provide the new location as the imported value (e.g. file-loader)\r\nIgnore the resource entirely (e.g. ignore-loader)\r\nOne thing that makes Webpack so powerful is that these loaders can find more dependent resources inside the resource they\'re processing, and hand off to other loaders. So it\'s plausible to import an HTML file within your javascript, and that HTML file could reference another javascript file, which could then be loaded too.\r\nModule loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result to the next one, and so forth. Finally, Webpack expects JavaScript to be returned by the last loader in the chain.\r\nWebpack loaders essentially create a processing pipeline for your code which gets evaluated in the reverse order that it is listed. For example, if our loader is listed after babel-loader, our loader will pass its results on to babel-loader. You can look at loaders as a function that gets some input data, usually a file or the output of another loader, and returns something.\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\n/* webpack.dev.js */\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}\r\nNow let’s repoint our scripts to the new configurations. We\'ll use the development one for our webpack-dev-server, npm start, script and the production one for our npm run build script:\r\n{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}', 1, '2021-12-27 15:31:33', '2021-12-27 15:31:33', 'loaders', 'webpack', 'version', '', '', 17),
(347, 33, 'Building Docker Projects', '<h3 id=\"bkmrk-dockerfile\">Dockerfile</h3>\r\n<p id=\"bkmrk-a-dockerfile-is-a-si\">A Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. Users can create an automated build that executes several command-line instructions in succession. Every container is based on an OS image, e.g. Alpine, CentOS or Ubuntu.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639848497835.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639848497835.png\" alt=\"image-1639848497835.png\" width=\"242\" height=\"92\"></a></p>\r\n<h5 id=\"bkmrk-examples%3A\"><strong>Examples:</strong></h5>\r\n<p id=\"bkmrk-backend\"><strong>Backend</strong></p>\r\n<pre id=\"bkmrk-from-php%3A7.3-run-apt\"><code class=\"language-shell\">FROM php:7.3\r\n\r\nRUN apt-get update -y &amp;&amp; apt-get install -y openssl zip unzip git\r\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\r\nRUN docker-php-ext-install pdo mbstring pdo_mysql\r\n\r\nWORKDIR /app/backend\r\nCOPY . .\r\nRUN composer install\r\n\r\nEXPOSE 8000\r\nCMD php artisan serve --host=0.0.0.0</code></pre>\r\n<p id=\"bkmrk-frontend\"><strong>Frontend</strong></p>\r\n<pre id=\"bkmrk-from-node%3Aalpine-wor\"><code class=\"language-shell\">FROM node:alpine\r\nWORKDIR /app/frontend\r\n\r\nCOPY . .\r\nRUN npm install\r\n\r\nEXPOSE 3000\r\nCMD npm start</code></pre>\r\n<h3 id=\"bkmrk-docker-compose\">Docker Compose</h3>\r\n<p id=\"bkmrk-docker-compose%C2%A0is-a-\">Docker Compose is a tool that was developed to help define and share multi-container applications. With Compose, we can create a YAML file to define the services and with a single command, can spin everything up or tear it all down.</p>\r\n<p id=\"bkmrk-example%3A-0\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-version%3A-%223.9%22-servi\"><code class=\"language-shell\">version: \"3.9\"\r\nservices:\r\n	backend:\r\n    	image: app-backend # build docker image named \"app-backend\" from Dockerfile instead of pulling it from Docker Hub\r\n    	build:\r\n        	context: ./backend/development\r\n            dockerfile: Dockerfile\r\n		environment:\r\n        	DB_HOST: db # since it is on the same network, it can resolve localhost as db\r\n            DB_DATABASE: auth\r\n            DB_USERNAME: root\r\n            DB_PASSWORD: root\r\n		ports:\r\n        	- 8000:8000\r\n		depends_on: # service will start only when db is started successfully\r\n       		- db\r\n		volumes:\r\n        	- ./backend/development:/app/backend\r\n    	networks:\r\n        	- app\r\n	frontend:\r\n    	build:\r\n        	context: ./frontend/resources\r\n            dockerfile: Dockerfile\r\n		tty: true # keep connection live while frontend is running\r\n		ports:\r\n        	- 3000:3000\r\n		volumes:\r\n        	- ./frontend/resources:/app/frontend\r\n			- mysql-data:/var/lib/mysql\r\n		depends_on: \r\n       		- db\r\n    	networks:\r\n        	- app\r\n	db:\r\n    	image: mysql:5.7\r\n        environment: \r\n        	MYSQL_DATABASE: \'auth\'\r\n            MYSQL_USER: \'root\'\r\n			MYSQL_PASSWORD: \'root\'\r\n            MYSQL_ROOT_PASSWORD: \'root\'\r\n		networks:\r\n        	- app\r\n\r\nnetworks:\r\n	app:\r\n		driver: bridge\r\n        \r\nvolumes:\r\n	mysql-data:</code></pre>', 'Dockerfile\r\nA Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. Users can create an automated build that executes several command-line instructions in succession. Every container is based on an OS image, e.g. Alpine, CentOS or Ubuntu.\r\n\r\nExamples:\r\nBackend\r\nFROM php:7.3\r\n\r\nRUN apt-get update -y && apt-get install -y openssl zip unzip git\r\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\r\nRUN docker-php-ext-install pdo mbstring pdo_mysql\r\n\r\nWORKDIR /app/backend\r\nCOPY . .\r\nRUN composer install\r\n\r\nEXPOSE 8000\r\nCMD php artisan serve --host=0.0.0.0\r\nFrontend\r\nFROM node:alpine\r\nWORKDIR /app/frontend\r\n\r\nCOPY . .\r\nRUN npm install\r\n\r\nEXPOSE 3000\r\nCMD npm start\r\nDocker Compose\r\nDocker Compose is a tool that was developed to help define and share multi-container applications. With Compose, we can create a YAML file to define the services and with a single command, can spin everything up or tear it all down.\r\nExample:\r\nversion: \"3.9\"\r\nservices:\r\n	backend:\r\n    	image: app-backend # build docker image named \"app-backend\" from Dockerfile instead of pulling it from Docker Hub\r\n    	build:\r\n        	context: ./backend/development\r\n            dockerfile: Dockerfile\r\n		environment:\r\n        	DB_HOST: db # since it is on the same network, it can resolve localhost as db\r\n            DB_DATABASE: auth\r\n            DB_USERNAME: root\r\n            DB_PASSWORD: root\r\n		ports:\r\n        	- 8000:8000\r\n		depends_on: # service will start only when db is started successfully\r\n       		- db\r\n		volumes:\r\n        	- ./backend/development:/app/backend\r\n    	networks:\r\n        	- app\r\n	frontend:\r\n    	build:\r\n        	context: ./frontend/resources\r\n            dockerfile: Dockerfile\r\n		tty: true # keep connection live while frontend is running\r\n		ports:\r\n        	- 3000:3000\r\n		volumes:\r\n        	- ./frontend/resources:/app/frontend\r\n			- mysql-data:/var/lib/mysql\r\n		depends_on: \r\n       		- db\r\n    	networks:\r\n        	- app\r\n	db:\r\n    	image: mysql:5.7\r\n        environment: \r\n        	MYSQL_DATABASE: \'auth\'\r\n            MYSQL_USER: \'root\'\r\n			MYSQL_PASSWORD: \'root\'\r\n            MYSQL_ROOT_PASSWORD: \'root\'\r\n		networks:\r\n        	- app\r\n\r\nnetworks:\r\n	app:\r\n		driver: bridge\r\n        \r\nvolumes:\r\n	mysql-data:', 1, '2021-12-28 08:56:59', '2021-12-28 08:56:59', 'building-docker-projects', 'docker', 'version', '', '', 6),
(348, 33, 'Building Docker Projects', '<h3 id=\"bkmrk-dockerfile\">Dockerfile</h3>\r\n<p id=\"bkmrk-a-dockerfile-is-a-si\">A Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. Users can create an automated build that executes several command-line instructions in succession. Every container is based on an OS image, e.g. Alpine, CentOS or Ubuntu. They just share the host kernel, but run every user-space process in a separate name space specific for that container.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1639848497835.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1639848497835.png\" alt=\"image-1639848497835.png\" width=\"242\" height=\"92\"></a></p>\r\n<h5 id=\"bkmrk-examples%3A\"><strong>Examples:</strong></h5>\r\n<p id=\"bkmrk-backend\"><strong>Backend</strong></p>\r\n<pre id=\"bkmrk-from-php%3A7.3-run-apt\"><code class=\"language-shell\">FROM php:7.3\r\n\r\nRUN apt-get update -y &amp;&amp; apt-get install -y openssl zip unzip git\r\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\r\nRUN docker-php-ext-install pdo mbstring pdo_mysql\r\n\r\nWORKDIR /app/backend\r\nCOPY . .\r\nRUN composer install\r\n\r\nEXPOSE 8000\r\nCMD php artisan serve --host=0.0.0.0</code></pre>\r\n<p id=\"bkmrk-frontend\"><strong>Frontend</strong></p>\r\n<pre id=\"bkmrk-from-node%3Aalpine-wor\"><code class=\"language-shell\">FROM node:alpine\r\nWORKDIR /app/frontend\r\n\r\nCOPY . .\r\nRUN npm install\r\n\r\nEXPOSE 3000\r\nCMD npm start</code></pre>\r\n<h3 id=\"bkmrk-docker-compose\">Docker Compose</h3>\r\n<p id=\"bkmrk-docker-compose%C2%A0is-a-\">Docker Compose is a tool that was developed to help define and share multi-container applications. With Compose, we can create a YAML file to define the services and with a single command, can spin everything up or tear it all down.</p>\r\n<p id=\"bkmrk-example%3A-0\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-version%3A-%223.9%22-servi\"><code class=\"language-shell\">version: \"3.9\"\r\nservices:\r\n	backend:\r\n    	image: app-backend # build docker image named \"app-backend\" from Dockerfile instead of pulling it from Docker Hub\r\n    	build:\r\n        	context: ./backend/development\r\n            dockerfile: Dockerfile\r\n		environment:\r\n        	DB_HOST: db # since it is on the same network, it can resolve localhost as db\r\n            DB_DATABASE: auth\r\n            DB_USERNAME: root\r\n            DB_PASSWORD: root\r\n		ports:\r\n        	- 8000:8000\r\n		depends_on: # service will start only when db is started successfully\r\n       		- db\r\n		volumes:\r\n        	- ./backend/development:/app/backend\r\n    	networks:\r\n        	- app\r\n	frontend:\r\n    	build:\r\n        	context: ./frontend/resources\r\n            dockerfile: Dockerfile\r\n		tty: true # keep connection live while frontend is running\r\n		ports:\r\n        	- 3000:3000\r\n		volumes:\r\n        	- ./frontend/resources:/app/frontend\r\n			- mysql-data:/var/lib/mysql\r\n		depends_on: \r\n       		- db\r\n    	networks:\r\n        	- app\r\n	db:\r\n    	image: mysql:5.7\r\n        environment: \r\n        	MYSQL_DATABASE: \'auth\'\r\n            MYSQL_USER: \'root\'\r\n			MYSQL_PASSWORD: \'root\'\r\n            MYSQL_ROOT_PASSWORD: \'root\'\r\n		networks:\r\n        	- app\r\n\r\nnetworks:\r\n	app:\r\n		driver: bridge\r\n        \r\nvolumes:\r\n	mysql-data:</code></pre>', 'Dockerfile\r\nA Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. Users can create an automated build that executes several command-line instructions in succession. Every container is based on an OS image, e.g. Alpine, CentOS or Ubuntu. They just share the host kernel, but run every user-space process in a separate name space specific for that container.\r\n\r\nExamples:\r\nBackend\r\nFROM php:7.3\r\n\r\nRUN apt-get update -y && apt-get install -y openssl zip unzip git\r\nRUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\r\nRUN docker-php-ext-install pdo mbstring pdo_mysql\r\n\r\nWORKDIR /app/backend\r\nCOPY . .\r\nRUN composer install\r\n\r\nEXPOSE 8000\r\nCMD php artisan serve --host=0.0.0.0\r\nFrontend\r\nFROM node:alpine\r\nWORKDIR /app/frontend\r\n\r\nCOPY . .\r\nRUN npm install\r\n\r\nEXPOSE 3000\r\nCMD npm start\r\nDocker Compose\r\nDocker Compose is a tool that was developed to help define and share multi-container applications. With Compose, we can create a YAML file to define the services and with a single command, can spin everything up or tear it all down.\r\nExample:\r\nversion: \"3.9\"\r\nservices:\r\n	backend:\r\n    	image: app-backend # build docker image named \"app-backend\" from Dockerfile instead of pulling it from Docker Hub\r\n    	build:\r\n        	context: ./backend/development\r\n            dockerfile: Dockerfile\r\n		environment:\r\n        	DB_HOST: db # since it is on the same network, it can resolve localhost as db\r\n            DB_DATABASE: auth\r\n            DB_USERNAME: root\r\n            DB_PASSWORD: root\r\n		ports:\r\n        	- 8000:8000\r\n		depends_on: # service will start only when db is started successfully\r\n       		- db\r\n		volumes:\r\n        	- ./backend/development:/app/backend\r\n    	networks:\r\n        	- app\r\n	frontend:\r\n    	build:\r\n        	context: ./frontend/resources\r\n            dockerfile: Dockerfile\r\n		tty: true # keep connection live while frontend is running\r\n		ports:\r\n        	- 3000:3000\r\n		volumes:\r\n        	- ./frontend/resources:/app/frontend\r\n			- mysql-data:/var/lib/mysql\r\n		depends_on: \r\n       		- db\r\n    	networks:\r\n        	- app\r\n	db:\r\n    	image: mysql:5.7\r\n        environment: \r\n        	MYSQL_DATABASE: \'auth\'\r\n            MYSQL_USER: \'root\'\r\n			MYSQL_PASSWORD: \'root\'\r\n            MYSQL_ROOT_PASSWORD: \'root\'\r\n		networks:\r\n        	- app\r\n\r\nnetworks:\r\n	app:\r\n		driver: bridge\r\n        \r\nvolumes:\r\n	mysql-data:', 1, '2021-12-28 08:57:28', '2021-12-28 08:57:28', 'building-docker-projects', 'docker', 'version', '', '', 7),
(349, 44, 'Loaders', '<p id=\"bkmrk-the-loader-is-respon\">The loader is responsible for parsing/processing the resource, which might do any of the following:</p>\r\n<ul id=\"bkmrk-transpile-it-into-an\"><li>Transpile it into another language (e.g. babel-loader)</li>\r\n<li>Copy the resource to a specified location and provide the new location as the imported value (e.g. file-loader)</li>\r\n<li>Ignore the resource entirely (e.g. ignore-loader)</li>\r\n</ul><p id=\"bkmrk-one-thing-that-makes\">One thing that makes Webpack so powerful is that these loaders can find more dependent resources inside the resource they\'re processing, and hand off to other loaders. So it\'s plausible to import an HTML file within your javascript, and that HTML file could reference another javascript file, which could then be loaded too.</p>\r\n<p id=\"bkmrk-module-loaders-can-b\">Module loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result to the next one, and so forth. Finally, Webpack expects JavaScript to be returned by the last loader in the chain.</p>\r\n<p id=\"bkmrk-webpack-loaders-esse\">Webpack loaders essentially create a processing pipeline for your code which gets evaluated in the reverse order that it is listed. For example, if our loader is listed after <code class=\"ir is it iu iv b\">babel-loader</code>, our loader will pass its results on to <code class=\"ir is it iu iv b\">babel-loader</code>. You can look at loaders as a function that gets some input data, usually a file or the output of another loader, and returns something.</p>\r\n<h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code>require()</code> it and add it to the <code>plugins</code> array.</p>\r\n<h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-const-htmlwebpackplu\"><code class=\"language-JavaScript\">const HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nconst path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code><span class=\"notion-enable-hover\" spellcheck=\"false\" data-token-index=\"1\" data-reactroot=\"\">dist/index.html</span></code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n<h3 id=\"bkmrk-mode\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code>mode</code> parameter to either <code>development</code>, <code>production</code> or <code>none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code>production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\">The goals of <em>development</em> and <em>production</em> builds differ greatly. In <em>development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em>production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\">In order to merge these configurations together, we’ll use a utility called <code>webpack-merge</code>.</p>\r\n<pre id=\"bkmrk-%2F%2A-webpack.dev.js-%2A%2F\"><code class=\"language-JavaScript\">/* webpack.dev.js */\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}</code></pre>\r\n<p id=\"bkmrk-now-let%E2%80%99s-repoint-ou\">Now let’s repoint our <code class=\"ll lm ln lo kr b\">scripts</code> to the new configurations. We\'ll use the <em class=\"iz\">development</em> one for our <code class=\"ll lm ln lo kr b\">webpack-dev-server</code>, <code class=\"ll lm ln lo kr b\">npm start</code>, script and the <em class=\"iz\">production</em> one for our <code class=\"ll lm ln lo kr b\">npm run build</code> script:</p>\r\n<pre id=\"bkmrk-%7B-...-%22scripts%22%3A-%7B-%22\"><code class=\"language-JavaScript\">{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}</code></pre>', 'The loader is responsible for parsing/processing the resource, which might do any of the following:\r\nTranspile it into another language (e.g. babel-loader)\r\nCopy the resource to a specified location and provide the new location as the imported value (e.g. file-loader)\r\nIgnore the resource entirely (e.g. ignore-loader)\r\nOne thing that makes Webpack so powerful is that these loaders can find more dependent resources inside the resource they\'re processing, and hand off to other loaders. So it\'s plausible to import an HTML file within your javascript, and that HTML file could reference another javascript file, which could then be loaded too.\r\nModule loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result to the next one, and so forth. Finally, Webpack expects JavaScript to be returned by the last loader in the chain.\r\nWebpack loaders essentially create a processing pipeline for your code which gets evaluated in the reverse order that it is listed. For example, if our loader is listed after babel-loader, our loader will pass its results on to babel-loader. You can look at loaders as a function that gets some input data, usually a file or the output of another loader, and returns something.\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nconst path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\n/* webpack.dev.js */\r\nvar HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nvar path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    )],\r\n}\r\nNow let’s repoint our scripts to the new configurations. We\'ll use the development one for our webpack-dev-server, npm start, script and the production one for our npm run build script:\r\n{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}', 1, '2021-12-29 09:43:39', '2021-12-29 09:43:39', 'loaders', 'webpack', 'version', '', '', 18);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(350, 44, 'Loaders', '<p id=\"bkmrk-the-loader-is-respon\">The loader is responsible for parsing/processing the resource, which might do any of the following:</p>\r\n<ul id=\"bkmrk-transpile-it-into-an\"><li>Transpile it into another language (e.g. babel-loader)</li>\r\n<li>Copy the resource to a specified location and provide the new location as the imported value (e.g. file-loader)</li>\r\n<li>Ignore the resource entirely (e.g. ignore-loader)</li>\r\n</ul><p id=\"bkmrk-one-thing-that-makes\">One thing that makes Webpack so powerful is that these loaders can find more dependent resources inside the resource they\'re processing, and hand off to other loaders. So it\'s plausible to import an HTML file within your javascript, and that HTML file could reference another javascript file, which could then be loaded too.</p>\r\n<p id=\"bkmrk-module-loaders-can-b\">Module loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result to the next one, and so forth. Finally, Webpack expects JavaScript to be returned by the last loader in the chain.</p>\r\n<p id=\"bkmrk-webpack-loaders-esse\">Webpack loaders essentially create a processing pipeline for your code which gets evaluated in the reverse order that it is listed. For example, if our loader is listed after <code class=\"ir is it iu iv b\">babel-loader</code>, our loader will pass its results on to <code class=\"ir is it iu iv b\">babel-loader</code>. You can look at loaders as a function that gets some input data, usually a file or the output of another loader, and returns something.</p>\r\n<h3 id=\"bkmrk-plugins\">Plugins</h3>\r\n<p id=\"bkmrk-while-loaders-are-us\">While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to <code>require()</code> it and add it to the <code>plugins</code> array.</p>\r\n<h5 id=\"bkmrk-htmlwebpackplugin\">HtmlWebpackPlugin</h5>\r\n<p id=\"bkmrk-the-htmlwebpackplugi\">The HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.</p>\r\n<pre id=\"bkmrk-const-htmlwebpackplu\"><code class=\"language-JavaScript\">const HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nconst path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n</code></pre>\r\n<p id=\"bkmrk-this-will-generate-a\">This will generate a file <code><span class=\"notion-enable-hover\" spellcheck=\"false\" data-token-index=\"1\" data-reactroot=\"\">dist/index.html</span></code> containing the following:</p>\r\n<pre id=\"bkmrk-%3C%21doctype-html%3E-%3Chtm\"><code class=\"language-HTML\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;webpack App&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;script src=\"index_bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n<h3 id=\"bkmrk-mode\">Mode</h3>\r\n<p id=\"bkmrk-by-setting-the%C2%A0mode%C2%A0\">By setting the <code>mode</code> parameter to either <code>development</code>, <code>production</code> or <code>none</code>, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is <code>production</code>.</p>\r\n<p id=\"bkmrk-the-goals-of%C2%A0develop\">The goals of <em>development</em> and <em>production</em> builds differ greatly. In <em>development</em>, we want strong source mapping and a localhost server with live reloading or hot module replacement. In <em>production</em>, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.</p>\r\n<p id=\"bkmrk-in-order-to-merge-th\">In order to merge these configurations together, we’ll use a utility called <code>webpack-merge</code>.</p>\r\n<pre id=\"bkmrk-%2F%2A-webpack.dev.js-%2A%2F\"><code class=\"language-JavaScript\">/* webpack.dev.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"development\",\r\n    output: {\r\n        filename: \'main.js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\r\nconst { CleanWebpackPlugin } = require(\"clean-webpack-plugin\")\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            },\r\n            {\r\n                test: /\\.html$/,\r\n                use: [\"html-loader\"]\r\n            },\r\n            {\r\n                test: /\\.(svg|png|jpg|gif)$/,\r\n                use: {\r\n                    loader: \"file-loader\",\r\n                    options: {\r\n                        name: \"[name].[hash].[ext]\",\r\n                        outputPath: \"images\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    ), new CleanWebpackPlugin()],\r\n}</code></pre>\r\n<p id=\"bkmrk-now-let%E2%80%99s-repoint-ou\">Now let’s repoint our <code class=\"ll lm ln lo kr b\">scripts</code> to the new configurations. We\'ll use the <em class=\"iz\">development</em> one for our <code class=\"ll lm ln lo kr b\">webpack-dev-server</code>, <code class=\"ll lm ln lo kr b\">npm start</code>, script and the <em class=\"iz\">production</em> one for our <code class=\"ll lm ln lo kr b\">npm run build</code> script:</p>\r\n<pre id=\"bkmrk-%7B-...-%22scripts%22%3A-%7B-%22\"><code class=\"language-JavaScript\">{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}</code></pre>', 'The loader is responsible for parsing/processing the resource, which might do any of the following:\r\nTranspile it into another language (e.g. babel-loader)\r\nCopy the resource to a specified location and provide the new location as the imported value (e.g. file-loader)\r\nIgnore the resource entirely (e.g. ignore-loader)\r\nOne thing that makes Webpack so powerful is that these loaders can find more dependent resources inside the resource they\'re processing, and hand off to other loaders. So it\'s plausible to import an HTML file within your javascript, and that HTML file could reference another javascript file, which could then be loaded too.\r\nModule loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result to the next one, and so forth. Finally, Webpack expects JavaScript to be returned by the last loader in the chain.\r\nWebpack loaders essentially create a processing pipeline for your code which gets evaluated in the reverse order that it is listed. For example, if our loader is listed after babel-loader, our loader will pass its results on to babel-loader. You can look at loaders as a function that gets some input data, usually a file or the output of another loader, and returns something.\r\nPlugins\r\nWhile loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimisation, asset management and injection of environment variables. In order to use a plugin, you need to require() it and add it to the plugins array.\r\nHtmlWebpackPlugin\r\nThe HtmlWebpackPlugin simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation.\r\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\r\nconst path = require(\'path\');\r\nmodule.exports = {\r\n  entry: \'index.js\',\r\n  output: {\r\n    path: path.resolve(__dirname, \'./dist\'),\r\n    filename: \'index_bundle.js\'\r\n  },\r\n  plugins: [new HtmlWebpackPlugin()]\r\n};\r\n\r\nThis will generate a file dist/index.html containing the following:\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>webpack App</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"index_bundle.js\"></script>\r\n  </body>\r\n</html>\r\nMode\r\nBy setting the mode parameter to either development, production or none, you can enable webpack\'s built-in optimisations that correspond to each environment. The default value is production.\r\nThe goals of development and production builds differ greatly. In development, we want strong source mapping and a localhost server with live reloading or hot module replacement. In production, our goals shift to a focus on minified bundles, lighter weight source maps, and optimised assets to improve load time. With this logical separation at hand, we typically recommend writing separate webpack configurations for each environment.\r\nIn order to merge these configurations together, we’ll use a utility called webpack-merge.\r\n/* webpack.dev.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"development\",\r\n    output: {\r\n        filename: \'main.js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n/* webpack.prod.js */\r\nconst path = require(\"path\");\r\nconst common = require(\"./webpack.common\");\r\nconst { merge } = require(\'webpack-merge\');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: \"production\",\r\n    output: {\r\n        filename: \'main.[contenthash].js\',\r\n        path: path.resolve(__dirname, \"build\")\r\n    }\r\n});\r\n\r\n/* webpack.common.js */\r\nconst path = require(\"path\");\r\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\r\nconst { CleanWebpackPlugin } = require(\"clean-webpack-plugin\")\r\n\r\nmodule.exports = {\r\n    entry: \"./src/index.js\",\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.scss$/,\r\n                use: [\r\n                    \"style-loader\", /* 3. Inject styles into DOM    */\r\n                    \"css-loader\",   /* 2. Turn css into CommonJS    */\r\n                    \"sass-loader\"   /* 1. Turn sass into css        */\r\n                ]\r\n            },\r\n            {\r\n                test: /\\.html$/,\r\n                use: [\"html-loader\"]\r\n            },\r\n            {\r\n                test: /\\.(svg|png|jpg|gif)$/,\r\n                use: {\r\n                    loader: \"file-loader\",\r\n                    options: {\r\n                        name: \"[name].[hash].[ext]\",\r\n                        outputPath: \"images\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new HtmlWebpackPlugin(\r\n        {\r\n            template: path.resolve(__dirname, \"src/template.html\"),\r\n        }\r\n    ), new CleanWebpackPlugin()],\r\n}\r\nNow let’s repoint our scripts to the new configurations. We\'ll use the development one for our webpack-dev-server, npm start, script and the production one for our npm run build script:\r\n{\r\n...\r\n    \"scripts\": {\r\n      \"start\": \"webpack-dev-server --open --config webpack.dev.js\",\r\n      \"build\": \"webpack --config webpack.prod.js\"\r\n    },\r\n...\r\n}', 1, '2021-12-29 09:45:47', '2021-12-29 09:45:47', 'loaders', 'webpack', 'version', '', '', 19),
(365, 47, 'Modules', '', '', 1, '2022-01-03 14:26:14', '2022-01-03 14:26:14', 'modules-rWj', 'javascript', 'version', '', 'Initial publish', 1),
(367, 47, 'Modules', '<p id=\"bkmrk-without-module-syste\">Without module systems, dependancies had to be loaded in &lt;script&gt; tags in the header of an HTML file, OR all code had to be lumped together which is incredibly slow and inefficient for file loading. Not to mention, your app would completely crash if there was a bug in any part of the code!</p>\r\n<p id=\"bkmrk-javascript-was-desig\">JavaScript was designed to only run in the browser, with no access to the file system of the client’s computer (for security reasons). So for the longest time, organising JavaScript code in multiple files required you to load each file with variables shared globally.</p>\r\n<h4 id=\"bkmrk-self-executing-anony\">Self-executing Anonymous Functions</h4>\r\n<p id=\"bkmrk-the-first-step-on-th\">The first step on the journey to beautiful, modular JavaScript is to learn the art of the self-executing anonymous function. One of the major benefits of this pattern is that you can limit access to variables and functions within your closure, essentially making them private and only choosing to expose an API of your choice to the global scope.</p>\r\n<pre id=\"bkmrk-%28function%28%29%7B-var-foo\"><code class=\"language-JavaScript\">(function(){\r\n  var foo = \'Hello\';\r\n  var bar = \'World!\'\r\n  \r\n  function baz(){\r\n      return foo + \' \' + bar;\r\n  }\r\n\r\n  window.baz = baz; //Assign \'baz\' to the global variable \'baz\'...\r\n})();\r\n\r\nconsole.log(baz()); //...and now this works.\r\n\r\n//It\'s important to note that these still won\'t work: \r\nconsole.log(foo);\r\nconsole.log(bar);</code></pre>\r\n<h4 id=\"bkmrk-commonjs-modules\">CommonJS Modules</h4>\r\n<p id=\"bkmrk-the-commonjs-module-\" class=\"post-description\">The CommonJS module specification is the standard used in node.js for working with modules. CommonJS allows for code encapsulation, as modules with no global variables won’t conflict with each other when your application is run. To use CommonJS, the code must be packaged with a transpiler since browsers don\'t support CommonJS.</p>\r\n<pre id=\"bkmrk-%2F%2F-namemodule.js-con\"><code class=\"language-JavaScript\">// nameModule.js\r\nconst getFullName = (name, surname) =&gt; {\r\n	return name + \" \" + surname;\r\n};\r\n\r\nconst getSurname = (name, surname) =&gt; {\r\n	return surname;\r\n};\r\n\r\nmodule.exports = {\r\n  getFullName,\r\n  getSurname\r\n};\r\n\r\n// nameScript.js\r\nconst {getSurname, getFullName} = require(\"./nameModule\");\r\nconst surname = nameModule.getSurname(\"Howard\");</code></pre>\r\n<p id=\"bkmrk-again%2C-this-is-how-m\" class=\"hq hr dg hs b ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij ik il im in cz bq\" data-selectable-paragraph=\"\">Again, this is how module loading works in node.js, which works great since node.js is a server side language with access to the computer’s file system. Node.js also knows the location of each npm module path, so instead of having to write <code class=\"kh ki kj kk kl b\">require(\'./node_modules/moment/min/moment.min.js)</code>, you can simply write <code class=\"kh ki kj kk kl b\">require(\'moment\')</code>.</p>\r\n<h4 id=\"bkmrk-es6-modules\">ES6 modules</h4>\r\n<p id=\"bkmrk-es6-modules-are-not-\">ES6 modules are not supported in all browsers. For production applications, transpilers like Webpack and Babel are used to convert our code from ES6 to ES5 to ensure cross-browser compatibility</p>\r\n<ul id=\"bkmrk-everything-inside-an\" class=\"\"><li id=\"bkmrk-everything-inside-an-0\" class=\"hw hx dn hy b hz jv ib ic id jw if ig ih jx ij ik il jy in io ip jz ir is hv ka kb kc ek\" data-selectable-paragraph=\"\">Everything inside an ES6 module is private by default, and runs in strict mode (there’s no need for <code class=\"lb lc ld le kw b\">\'use strict\'</code>).</li>\r\n<li id=\"bkmrk-public-variables%2C-fu\" class=\"hw hx dn hy b hz kd ib ic id ke if ig ih kf ij ik il kg in io ip kh ir is hv ka kb kc ek\" data-selectable-paragraph=\"\">Public variables, functions and classes are exposed using <code class=\"lb lc ld le kw b\">export</code>.</li>\r\n<li id=\"bkmrk-exposed-modules-are-\" class=\"hw hx dn hy b hz kd ib ic id ke if ig ih kf ij ik il kg in io ip kh ir is hv ka kb kc ek\" data-selectable-paragraph=\"\">Exposed modules are called into other modules using <code class=\"lb lc ld le kw b\">import</code></li>\r\n<li id=\"bkmrk-modules-must-be-incl\" class=\"hw hx dn hy b hz kd ib ic id ke if ig ih kf ij ik il kg in io ip kh ir is hv ka kb kc ek\" data-selectable-paragraph=\"\">Modules must be included in your HTML with <code class=\"lb lc ld le kw b\">type=\"module\"</code>, which can be an inline or external script tag.</li>\r\n<li id=\"bkmrk-modules-are-deferred\" class=\"hw hx dn hy b hz iu ib ic id iv if ig ih iw ij ik il ix in io ip iy ir is hv ka kb kc ek\" data-selectable-paragraph=\"\">Modules are deferred, and only run after a document is loaded</li>\r\n</ul><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/image-1640091532468.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2021-12/scaled-1680-/image-1640091532468.png\" alt=\"image-1640091532468.png\" width=\"512\" height=\"143\"></a></p>\r\n<pre id=\"bkmrk-%2F%2F-math.js-let-sumal\"><code class=\"language-JavaScript\">// math.js\r\nlet sumAll = (a, b) =&gt; {return a + b;}\r\nlet subtractAll = (a, b) =&gt; {return a - b;}\r\nlet divideAll = (a, b) =&gt; {return a / b;}\r\nlet multiplyAll = (a, b) =&gt; {return a * b;}\r\nlet findModulus = (a, b) =&gt; {return a % b;}\r\nexport {sumAll, subtractAll, divideAll, multiplyAll, findModulus};\r\n\r\n//scripts.js\r\nimport {sumAll, subtractAll, divideAll} from \'./math.js\';))</code></pre>\r\n<p id=\"bkmrk-if-you-are-looking-a\">If you are looking at starting a new module or project, ES6 modules is the right way to go and CommonJS/Node remains the choice for the server.</p>', 'Without module systems, dependancies had to be loaded in <script> tags in the header of an HTML file, OR all code had to be lumped together which is incredibly slow and inefficient for file loading. Not to mention, your app would completely crash if there was a bug in any part of the code!\r\nJavaScript was designed to only run in the browser, with no access to the file system of the client’s computer (for security reasons). So for the longest time, organising JavaScript code in multiple files required you to load each file with variables shared globally.\r\nSelf-executing Anonymous Functions\r\nThe first step on the journey to beautiful, modular JavaScript is to learn the art of the self-executing anonymous function. One of the major benefits of this pattern is that you can limit access to variables and functions within your closure, essentially making them private and only choosing to expose an API of your choice to the global scope.\r\n(function(){\r\n  var foo = \'Hello\';\r\n  var bar = \'World!\'\r\n  \r\n  function baz(){\r\n      return foo + \' \' + bar;\r\n  }\r\n\r\n  window.baz = baz; //Assign \'baz\' to the global variable \'baz\'...\r\n})();\r\n\r\nconsole.log(baz()); //...and now this works.\r\n\r\n//It\'s important to note that these still won\'t work: \r\nconsole.log(foo);\r\nconsole.log(bar);\r\nCommonJS Modules\r\nThe CommonJS module specification is the standard used in node.js for working with modules. CommonJS allows for code encapsulation, as modules with no global variables won’t conflict with each other when your application is run. To use CommonJS, the code must be packaged with a transpiler since browsers don\'t support CommonJS.\r\n// nameModule.js\r\nconst getFullName = (name, surname) => {\r\n	return name + \" \" + surname;\r\n};\r\n\r\nconst getSurname = (name, surname) => {\r\n	return surname;\r\n};\r\n\r\nmodule.exports = {\r\n  getFullName,\r\n  getSurname\r\n};\r\n\r\n// nameScript.js\r\nconst {getSurname, getFullName} = require(\"./nameModule\");\r\nconst surname = nameModule.getSurname(\"Howard\");\r\nAgain, this is how module loading works in node.js, which works great since node.js is a server side language with access to the computer’s file system. Node.js also knows the location of each npm module path, so instead of having to write require(\'./node_modules/moment/min/moment.min.js), you can simply write require(\'moment\').\r\nES6 modules\r\nES6 modules are not supported in all browsers. For production applications, transpilers like Webpack and Babel are used to convert our code from ES6 to ES5 to ensure cross-browser compatibility\r\nEverything inside an ES6 module is private by default, and runs in strict mode (there’s no need for \'use strict\').\r\nPublic variables, functions and classes are exposed using export.\r\nExposed modules are called into other modules using import\r\nModules must be included in your HTML with type=\"module\", which can be an inline or external script tag.\r\nModules are deferred, and only run after a document is loaded\r\n\r\n// math.js\r\nlet sumAll = (a, b) => {return a + b;}\r\nlet subtractAll = (a, b) => {return a - b;}\r\nlet divideAll = (a, b) => {return a / b;}\r\nlet multiplyAll = (a, b) => {return a * b;}\r\nlet findModulus = (a, b) => {return a % b;}\r\nexport {sumAll, subtractAll, divideAll, multiplyAll, findModulus};\r\n\r\n//scripts.js\r\nimport {sumAll, subtractAll, divideAll} from \'./math.js\';))\r\nIf you are looking at starting a new module or project, ES6 modules is the right way to go and CommonJS/Node remains the choice for the server.', 1, '2022-01-03 14:27:10', '2022-01-03 14:27:10', 'modules-rWj', 'javascript', 'version', '', '', 2),
(370, 49, 'Memory Heap and Stack', '<h2 id=\"bkmrk-what-is-a-memory-hea\">What is a Memory Heap and Stack?</h2>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641220206144.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641220206144.png\" alt=\"image-1641220206144.png\" width=\"514\" height=\"272\"></a></p>\r\n<p id=\"bkmrk-javascript-stores-al\">Javascript stores all variables in two places. Which of these places will be used depends on what you are currently working with. Javascript is a single threaded language because it has one stack and one heap.</p>\r\n<ul id=\"bkmrk-stack-a-stack-is-a-d\"><li><strong>Stack</strong>\r\n<ul><li>\r\n<p>A stack is a data structure that JavaScript uses to store <em>static</em> data. Static data is data where the engine knows the size at compile time. This includes (<em>strings</em>, <em>numbers</em>, <em>booleans</em>, <em>undefined</em>, and <em>null)</em> and references, which point to objects and functions.</p>\r\n</li>\r\n<li>\r\n<p>Since the engine knows that the size won\'t change, it will allocate a fixed amount of memory for each value. The process of allocating memory right before execution is known as static memory allocation.</p>\r\n</li>\r\n<li>\r\n<p>Because the engine allocates a fixed amount of memory for these values, there is a limit to how large primitive values can be.</p>\r\n</li>\r\n</ul></li>\r\n<li><strong>Memory Heap</strong>\r\n<ul><li>The heap is a different space for storing data where JavaScript stores objects and functions.</li>\r\n<li>Unlike the stack, the engine doesn\'t allocate a fixed amount of memory for these objects. Instead, more space will be allocated as needed.</li>\r\n<li>\r\n<p>Allocating memory this way is also called dynamic memory allocation.</p>\r\n</li>\r\n<li>The memory of the heap is not ordered in any particular way, which is why we need to keep a reference to it in the stack. You can think of references as addresses and the objects in the heap as houses that these addresses belong to.</li>\r\n</ul></li>\r\n</ul>', 'What is a Memory Heap and Stack?\r\n\r\nJavascript stores all variables in two places. Which of these places will be used depends on what you are currently working with. Javascript is a single threaded language because it has one stack and one heap.\r\nStack\r\n\r\nA stack is a data structure that JavaScript uses to store static data. Static data is data where the engine knows the size at compile time. This includes (strings, numbers, booleans, undefined, and null) and references, which point to objects and functions.\r\n\r\n\r\nSince the engine knows that the size won\'t change, it will allocate a fixed amount of memory for each value. The process of allocating memory right before execution is known as static memory allocation.\r\n\r\n\r\nBecause the engine allocates a fixed amount of memory for these values, there is a limit to how large primitive values can be.\r\n\r\n\r\nMemory Heap\r\nThe heap is a different space for storing data where JavaScript stores objects and functions.\r\nUnlike the stack, the engine doesn\'t allocate a fixed amount of memory for these objects. Instead, more space will be allocated as needed.\r\n\r\nAllocating memory this way is also called dynamic memory allocation.\r\n\r\nThe memory of the heap is not ordered in any particular way, which is why we need to keep a reference to it in the stack. You can think of references as addresses and the objects in the heap as houses that these addresses belong to.\r\n\r\n', 1, '2022-01-03 14:36:06', '2022-01-03 14:36:06', 'memory-heap-and-stack', 'javascript', 'version', '', 'Initial publish', 1),
(371, 50, 'Javascript Engine', '<h2 id=\"bkmrk-what-is-an-javascrip\">What is an Javascript engine?</h2>\r\n<p id=\"bkmrk-a-javascript-engine-\">A JavaScript engine is a computer program that executes JavaScript code. It usually is written in C or C++.</p>\r\n<h5 id=\"bkmrk-v8-engine\">V8 Engine</h5>\r\n<p id=\"bkmrk-most-popular-javascr\">Most popular Javascript engine is V8 engine. It both interprets and compiles Javascript code. This is called JIT or <strong>Just-in-time</strong> compilation. Initially the code gets set to the interpreter. Then the profiler checks if the code is ran multiple times and if it is, then it gets compiled by the compiler. This means, that the more times the code gets ran, the faster it gets.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641220607380.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641220607380.png\" alt=\"image-1641220607380.png\" width=\"467\" height=\"174\"></a></p>', 'What is an Javascript engine?\r\nA JavaScript engine is a computer program that executes JavaScript code. It usually is written in C or C++.\r\nV8 Engine\r\nMost popular Javascript engine is V8 engine. It both interprets and compiles Javascript code. This is called JIT or Just-in-time compilation. Initially the code gets set to the interpreter. Then the profiler checks if the code is ran multiple times and if it is, then it gets compiled by the compiler. This means, that the more times the code gets ran, the faster it gets.\r\n', 1, '2022-01-03 14:37:08', '2022-01-03 14:37:08', 'javascript-engine', 'javascript', 'version', '', 'Initial publish', 1),
(372, 50, 'Javascript Engine', '<p id=\"bkmrk-a-javascript-engine-\">A JavaScript engine is a computer program that executes JavaScript code. It usually is written in C or C++.</p>\r\n<h5 id=\"bkmrk-v8-engine\">V8 Engine</h5>\r\n<p id=\"bkmrk-most-popular-javascr\">Most popular Javascript engine is V8 engine. It both interprets and compiles Javascript code. This is called JIT or <strong>Just-in-time</strong> compilation. Initially the code gets set to the interpreter. Then the profiler checks if the code is ran multiple times and if it is, then it gets compiled by the compiler. This means, that the more times the code gets ran, the faster it gets.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641220607380.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641220607380.png\" alt=\"image-1641220607380.png\" width=\"467\" height=\"174\"></a></p>', 'A JavaScript engine is a computer program that executes JavaScript code. It usually is written in C or C++.\r\nV8 Engine\r\nMost popular Javascript engine is V8 engine. It both interprets and compiles Javascript code. This is called JIT or Just-in-time compilation. Initially the code gets set to the interpreter. Then the profiler checks if the code is ran multiple times and if it is, then it gets compiled by the compiler. This means, that the more times the code gets ran, the faster it gets.\r\n', 1, '2022-01-03 14:37:16', '2022-01-03 14:37:16', 'javascript-engine', 'javascript', 'version', '', '', 2),
(374, 49, 'Memory Heap and Stack', '<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641220206144.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641220206144.png\" alt=\"image-1641220206144.png\" width=\"514\" height=\"272\"></a></p>\r\n<p id=\"bkmrk-javascript-stores-al\">Javascript stores all variables in two places. Which of these places will be used depends on what you are currently working with. Javascript is a single threaded language because it has one stack and one heap.</p>\r\n<h4 id=\"bkmrk-stack\">Stack</h4>\r\n<ul id=\"bkmrk-a-stack-is-a-data-st\"><li>A stack is a data structure that JavaScript uses to store <em>static</em> data. Static data is data where the engine knows the size at compile time. This includes (<em>strings</em>, <em>numbers</em>, <em>booleans</em>, <em>undefined</em>, and <em>null)</em> and references, which point to objects and functions.</li>\r\n<li>Since the engine knows that the size won\'t change, it will allocate a fixed amount of memory for each value. The process of allocating memory right before execution is known as static memory allocation.</li>\r\n<li>Because the engine allocates a fixed amount of memory for these values, there is a limit to how large primitive values can be.</li>\r\n</ul><h4 id=\"bkmrk-memory-heap%C2%A0\">Memory Heap </h4>\r\n<ul id=\"bkmrk-the-heap-is-a-differ\"><li>The heap is a different space for storing data where JavaScript stores objects and functions.</li>\r\n<li>Unlike the stack, the engine doesn\'t allocate a fixed amount of memory for these objects. Instead, more space will be allocated as needed.</li>\r\n<li>Allocating memory this way is also called dynamic memory allocation.</li>\r\n<li>The memory of the heap is not ordered in any particular way, which is why we need to keep a reference to it in the stack. You can think of references as addresses and the objects in the heap as houses that these addresses belong to.</li>\r\n<li style=\"list-style-type: none;\"> </li>\r\n</ul>', '\r\nJavascript stores all variables in two places. Which of these places will be used depends on what you are currently working with. Javascript is a single threaded language because it has one stack and one heap.\r\nStack\r\nA stack is a data structure that JavaScript uses to store static data. Static data is data where the engine knows the size at compile time. This includes (strings, numbers, booleans, undefined, and null) and references, which point to objects and functions.\r\nSince the engine knows that the size won\'t change, it will allocate a fixed amount of memory for each value. The process of allocating memory right before execution is known as static memory allocation.\r\nBecause the engine allocates a fixed amount of memory for these values, there is a limit to how large primitive values can be.\r\nMemory Heap \r\nThe heap is a different space for storing data where JavaScript stores objects and functions.\r\nUnlike the stack, the engine doesn\'t allocate a fixed amount of memory for these objects. Instead, more space will be allocated as needed.\r\nAllocating memory this way is also called dynamic memory allocation.\r\nThe memory of the heap is not ordered in any particular way, which is why we need to keep a reference to it in the stack. You can think of references as addresses and the objects in the heap as houses that these addresses belong to.\r\n \r\n', 1, '2022-01-03 14:38:20', '2022-01-03 14:38:20', 'memory-heap-and-stack', 'javascript', 'version', '', '', 2),
(375, 51, 'References', '<p id=\"bkmrk-%C2%A0\"> </p>\r\n<p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-%3C%3Fphp-%2F%2A-imagine-thi\"><code class=\"language-PHP\">&lt;?php\r\n/* Imagine this is memory map\r\n______________________________\r\n|pointer | value | variable              |\r\n-----------------------------------\r\n|   1     |  NULL  |         ---           |\r\n|   2     |  NULL  |         ---           |\r\n|   3     |  NULL  |         ---           |\r\n|   4     |  NULL  |         ---           |\r\n|   5     |  NULL  |         ---           |\r\n------------------------------------\r\nCreate some variables   */\r\n$a=10;\r\n$b=20;\r\n$c=array (\'one\'=&gt;array (1, 2, 3));\r\n/* Look at memory\r\n_______________________________\r\n|pointer | value |       variable\'s       |\r\n-----------------------------------\r\n|   1     |  10     |       $a               |\r\n|   2     |  20     |       $b               |\r\n|   3     |  1       |      $c[\'one\'][0]   |\r\n|   4     |  2       |      $c[\'one\'][1]   |\r\n|   5     |  3       |      $c[\'one\'][2]   |\r\n------------------------------------\r\ndo  */\r\n$a=&amp;$c[\'one\'][2];\r\n/* Look at memory\r\n_______________________________\r\n|pointer | value |       variable\'s       |\r\n-----------------------------------\r\n|   1     |  NULL  |       ---              |  //value of  $a is destroyed and pointer is free\r\n|   2     |  20     |       $b               |\r\n|   3     |  1       |      $c[\'one\'][0]   |\r\n|   4     |  2       |      $c[\'one\'][1]   |\r\n|   5     |  3       |  $c[\'one\'][2]  ,$a | // $a is now here\r\n------------------------------------\r\ndo  */\r\n$b=&amp;$a;  // or  $b=&amp;$c[\'one\'][2]; result is same as both \"$c[\'one\'][2]\" and \"$a\" is at same pointer.\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  |  //value of  $b is destroyed and pointer is free\r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |$c[\'one\'][2]  ,$a , $b |  // $b is now here\r\n---------------------------------------\r\nnext do */\r\nunset($c[\'one\'][2]);\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $a , $b              | // $c[\'one\'][2]  is  destroyed not in memory, not in array\r\n---------------------------------------\r\nnext do   */\r\n$c[\'one\'][2]=500;    //now it is in array\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  500    |      $c[\'one\'][2]       |  //created it lands on any(next) free pointer in memory\r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $a , $b              | //this pointer is in use\r\n---------------------------------------\r\nlets tray to return $c[\'one\'][2] at old pointer an remove reference $a,$b.  */\r\n$c[\'one\'][2]=&amp;$a;\r\nunset($a);\r\nunset($b);  \r\n/* look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $c[\'one\'][2]       | //$c[\'one\'][2] is returned, $a,$b is destroyed\r\n--------------------------------------- ?&gt;</code></pre>', ' \r\nExample:\r\n<?php\r\n/* Imagine this is memory map\r\n______________________________\r\n|pointer | value | variable              |\r\n-----------------------------------\r\n|   1     |  NULL  |         ---           |\r\n|   2     |  NULL  |         ---           |\r\n|   3     |  NULL  |         ---           |\r\n|   4     |  NULL  |         ---           |\r\n|   5     |  NULL  |         ---           |\r\n------------------------------------\r\nCreate some variables   */\r\n$a=10;\r\n$b=20;\r\n$c=array (\'one\'=>array (1, 2, 3));\r\n/* Look at memory\r\n_______________________________\r\n|pointer | value |       variable\'s       |\r\n-----------------------------------\r\n|   1     |  10     |       $a               |\r\n|   2     |  20     |       $b               |\r\n|   3     |  1       |      $c[\'one\'][0]   |\r\n|   4     |  2       |      $c[\'one\'][1]   |\r\n|   5     |  3       |      $c[\'one\'][2]   |\r\n------------------------------------\r\ndo  */\r\n$a=&$c[\'one\'][2];\r\n/* Look at memory\r\n_______________________________\r\n|pointer | value |       variable\'s       |\r\n-----------------------------------\r\n|   1     |  NULL  |       ---              |  //value of  $a is destroyed and pointer is free\r\n|   2     |  20     |       $b               |\r\n|   3     |  1       |      $c[\'one\'][0]   |\r\n|   4     |  2       |      $c[\'one\'][1]   |\r\n|   5     |  3       |  $c[\'one\'][2]  ,$a | // $a is now here\r\n------------------------------------\r\ndo  */\r\n$b=&$a;  // or  $b=&$c[\'one\'][2]; result is same as both \"$c[\'one\'][2]\" and \"$a\" is at same pointer.\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  |  //value of  $b is destroyed and pointer is free\r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |$c[\'one\'][2]  ,$a , $b |  // $b is now here\r\n---------------------------------------\r\nnext do */\r\nunset($c[\'one\'][2]);\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $a , $b              | // $c[\'one\'][2]  is  destroyed not in memory, not in array\r\n---------------------------------------\r\nnext do   */\r\n$c[\'one\'][2]=500;    //now it is in array\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  500    |      $c[\'one\'][2]       |  //created it lands on any(next) free pointer in memory\r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $a , $b              | //this pointer is in use\r\n---------------------------------------\r\nlets tray to return $c[\'one\'][2] at old pointer an remove reference $a,$b.  */\r\n$c[\'one\'][2]=&$a;\r\nunset($a);\r\nunset($b);  \r\n/* look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $c[\'one\'][2]       | //$c[\'one\'][2] is returned, $a,$b is destroyed\r\n--------------------------------------- ?>', 1, '2022-01-03 15:40:51', '2022-01-03 15:40:51', 'references', 'php', 'version', '', 'Initial publish', 1);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(377, 51, 'References', '<p id=\"bkmrk-php-reference-are-th\">PHP reference are the symbol table aliases by means of which content of one variable can be access by different names. The explicitly defined referenced variable needs to be preceded by ampersand (&amp;) symbol. The functionality of PHP references can be explained using the analogy of Window’s shortcut.</p>\r\n<p id=\"bkmrk-objects-are-passed-b\">Objects are passed by reference. Everything else is passed by value unless you explicitly use pass-by-reference with the &amp; operator.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641224912453.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641224912453.png\" alt=\"image-1641224912453.png\" width=\"379\" height=\"206\"></a></p>\r\n<p id=\"bkmrk-example%3A\"><strong>Example:</strong></p>\r\n<pre id=\"bkmrk-%3C%3Fphp-%2F%2A-imagine-thi\"><code class=\"language-PHP\">&lt;?php\r\n/* Imagine this is memory map\r\n______________________________\r\n|pointer | value | variable              |\r\n-----------------------------------\r\n|   1     |  NULL  |         ---           |\r\n|   2     |  NULL  |         ---           |\r\n|   3     |  NULL  |         ---           |\r\n|   4     |  NULL  |         ---           |\r\n|   5     |  NULL  |         ---           |\r\n------------------------------------\r\nCreate some variables   */\r\n$a=10;\r\n$b=20;\r\n$c=array (\'one\'=&gt;array (1, 2, 3));\r\n/* Look at memory\r\n_______________________________\r\n|pointer | value |       variable\'s       |\r\n-----------------------------------\r\n|   1     |  10     |       $a               |\r\n|   2     |  20     |       $b               |\r\n|   3     |  1       |      $c[\'one\'][0]   |\r\n|   4     |  2       |      $c[\'one\'][1]   |\r\n|   5     |  3       |      $c[\'one\'][2]   |\r\n------------------------------------\r\ndo  */\r\n$a=&amp;$c[\'one\'][2];\r\n/* Look at memory\r\n_______________________________\r\n|pointer | value |       variable\'s       |\r\n-----------------------------------\r\n|   1     |  NULL  |       ---              |  //value of  $a is destroyed and pointer is free\r\n|   2     |  20     |       $b               |\r\n|   3     |  1       |      $c[\'one\'][0]   |\r\n|   4     |  2       |      $c[\'one\'][1]   |\r\n|   5     |  3       |  $c[\'one\'][2]  ,$a | // $a is now here\r\n------------------------------------\r\ndo  */\r\n$b=&amp;$a;  // or  $b=&amp;$c[\'one\'][2]; result is same as both \"$c[\'one\'][2]\" and \"$a\" is at same pointer.\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  |  //value of  $b is destroyed and pointer is free\r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |$c[\'one\'][2]  ,$a , $b |  // $b is now here\r\n---------------------------------------\r\nnext do */\r\nunset($c[\'one\'][2]);\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $a , $b              | // $c[\'one\'][2]  is  destroyed not in memory, not in array\r\n---------------------------------------\r\nnext do   */\r\n$c[\'one\'][2]=500;    //now it is in array\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  500    |      $c[\'one\'][2]       |  //created it lands on any(next) free pointer in memory\r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $a , $b              | //this pointer is in use\r\n---------------------------------------\r\nlets tray to return $c[\'one\'][2] at old pointer an remove reference $a,$b.  */\r\n$c[\'one\'][2]=&amp;$a;\r\nunset($a);\r\nunset($b);  \r\n/* look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $c[\'one\'][2]       | //$c[\'one\'][2] is returned, $a,$b is destroyed\r\n--------------------------------------- ?&gt;</code></pre>', 'PHP reference are the symbol table aliases by means of which content of one variable can be access by different names. The explicitly defined referenced variable needs to be preceded by ampersand (&) symbol. The functionality of PHP references can be explained using the analogy of Window’s shortcut.\r\nObjects are passed by reference. Everything else is passed by value unless you explicitly use pass-by-reference with the & operator.\r\n\r\nExample:\r\n<?php\r\n/* Imagine this is memory map\r\n______________________________\r\n|pointer | value | variable              |\r\n-----------------------------------\r\n|   1     |  NULL  |         ---           |\r\n|   2     |  NULL  |         ---           |\r\n|   3     |  NULL  |         ---           |\r\n|   4     |  NULL  |         ---           |\r\n|   5     |  NULL  |         ---           |\r\n------------------------------------\r\nCreate some variables   */\r\n$a=10;\r\n$b=20;\r\n$c=array (\'one\'=>array (1, 2, 3));\r\n/* Look at memory\r\n_______________________________\r\n|pointer | value |       variable\'s       |\r\n-----------------------------------\r\n|   1     |  10     |       $a               |\r\n|   2     |  20     |       $b               |\r\n|   3     |  1       |      $c[\'one\'][0]   |\r\n|   4     |  2       |      $c[\'one\'][1]   |\r\n|   5     |  3       |      $c[\'one\'][2]   |\r\n------------------------------------\r\ndo  */\r\n$a=&$c[\'one\'][2];\r\n/* Look at memory\r\n_______________________________\r\n|pointer | value |       variable\'s       |\r\n-----------------------------------\r\n|   1     |  NULL  |       ---              |  //value of  $a is destroyed and pointer is free\r\n|   2     |  20     |       $b               |\r\n|   3     |  1       |      $c[\'one\'][0]   |\r\n|   4     |  2       |      $c[\'one\'][1]   |\r\n|   5     |  3       |  $c[\'one\'][2]  ,$a | // $a is now here\r\n------------------------------------\r\ndo  */\r\n$b=&$a;  // or  $b=&$c[\'one\'][2]; result is same as both \"$c[\'one\'][2]\" and \"$a\" is at same pointer.\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  |  //value of  $b is destroyed and pointer is free\r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |$c[\'one\'][2]  ,$a , $b |  // $b is now here\r\n---------------------------------------\r\nnext do */\r\nunset($c[\'one\'][2]);\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $a , $b              | // $c[\'one\'][2]  is  destroyed not in memory, not in array\r\n---------------------------------------\r\nnext do   */\r\n$c[\'one\'][2]=500;    //now it is in array\r\n/* Look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  500    |      $c[\'one\'][2]       |  //created it lands on any(next) free pointer in memory\r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $a , $b              | //this pointer is in use\r\n---------------------------------------\r\nlets tray to return $c[\'one\'][2] at old pointer an remove reference $a,$b.  */\r\n$c[\'one\'][2]=&$a;\r\nunset($a);\r\nunset($b);  \r\n/* look at memory\r\n_________________________________\r\n|pointer | value |       variable\'s           |\r\n--------------------------------------\r\n|   1     |  NULL  |       ---                  | \r\n|   2     |  NULL  |       ---                  | \r\n|   3     |  1       |      $c[\'one\'][0]       |\r\n|   4     |  2       |      $c[\'one\'][1]       |\r\n|   5     |  3       |      $c[\'one\'][2]       | //$c[\'one\'][2] is returned, $a,$b is destroyed\r\n--------------------------------------- ?>', 1, '2022-01-03 15:54:30', '2022-01-03 15:54:30', 'references', 'php', 'version', '', '', 2),
(378, 52, 'Closures', '', '', 1, '2022-01-04 11:38:02', '2022-01-04 11:38:02', 'closures', 'php', 'version', '', 'Initial publish', 1),
(380, 52, 'Closures', '<p id=\"bkmrk-%C2%A0a-closure-in-php-is\"> A closure in PHP is a function that can be created without a specified name, an anonymous function. Their most important use is for callback functions.</p>\r\n<p id=\"bkmrk-a-closure-encapsulat\">A closure encapsulates its scope, meaning that it has no access to the scope in which it is defined or executed. It is, however, possible to inherit variables from the parent scope (where the closure is defined) into the closure with the <code>use</code> keyword.</p>\r\n<p id=\"bkmrk-this-inherits-the-va\">This inherits the variables by value, that is, a copy is made available inside the closure using its original name.</p>\r\n<p id=\"bkmrk-important-notice%3A-th\"><strong>Important notice:</strong> The parent scope of a closure is the function in which the closure was declared (not necessarily the function it was called from).</p>\r\n<pre id=\"bkmrk-%3C%3Fphp-class-test-%7B-p\"><code class=\"language-PHP\">&lt;?php\r\n\r\nclass Test\r\n{\r\n    public function testing()\r\n    {\r\n        return function() {\r\n            var_dump($this);\r\n        };\r\n    }\r\n}\r\n\r\n$object = new Test;\r\n$function = $object-&gt;testing();\r\n$function();\r\n?&gt;\r\n\r\n// Output\r\nobject(Test)#1 (0) {\r\n}</code></pre>', ' A closure in PHP is a function that can be created without a specified name, an anonymous function. Their most important use is for callback functions.\r\nA closure encapsulates its scope, meaning that it has no access to the scope in which it is defined or executed. It is, however, possible to inherit variables from the parent scope (where the closure is defined) into the closure with the use keyword.\r\nThis inherits the variables by value, that is, a copy is made available inside the closure using its original name.\r\nImportant notice: The parent scope of a closure is the function in which the closure was declared (not necessarily the function it was called from).\r\n<?php\r\n\r\nclass Test\r\n{\r\n    public function testing()\r\n    {\r\n        return function() {\r\n            var_dump($this);\r\n        };\r\n    }\r\n}\r\n\r\n$object = new Test;\r\n$function = $object->testing();\r\n$function();\r\n?>\r\n\r\n// Output\r\nobject(Test)#1 (0) {\r\n}', 1, '2022-01-04 11:44:48', '2022-01-04 11:44:48', 'closures', 'php', 'version', '', '', 2),
(381, 53, 'Reflection', '<p id=\"bkmrk-reflection-is-an-api\">Reflection is an API which is used to examine or modify the behaviour of methods, classes, interfaces at runtime.</p>', 'Reflection is an API which is used to examine or modify the behaviour of methods, classes, interfaces at runtime.', 1, '2022-01-04 11:46:17', '2022-01-04 11:46:17', 'reflection', 'php', 'version', '', 'Initial publish', 1),
(382, 53, 'Reflection', '<p id=\"bkmrk-reflection-is-an-api\">Reflection is an API which is used to examine or modify the behaviour of methods, classes, interfaces at runtime.</p>\r\n<p id=\"bkmrk-php-comes-with-a-com\">PHP comes with a complete reflection API that adds the ability to introspect classes, interfaces, functions, methods and extensions. Additionally, the reflection API offers ways to retrieve doc comments for functions, classes and methods.</p>', 'Reflection is an API which is used to examine or modify the behaviour of methods, classes, interfaces at runtime.\r\nPHP comes with a complete reflection API that adds the ability to introspect classes, interfaces, functions, methods and extensions. Additionally, the reflection API offers ways to retrieve doc comments for functions, classes and methods.', 1, '2022-01-04 11:46:39', '2022-01-04 11:46:39', 'reflection', 'php', 'version', '', '', 2),
(384, 30, 'Terminology', '<ul id=\"bkmrk-data-persistence---t\"><li><strong>Data Persistence</strong> - The data survives after the process with which it was created has ended.</li>\r\n<li><strong>Redundancy</strong> - The duplication of critical components or functions of a system with the intention of increasing reliability of the system. Also, something that is redundant is no longer needed because its job is being done by something else or because its job is no longer necessary or useful.</li>\r\n<li><strong>Explicit</strong> - Describes something that is very clear and without vagueness or ambiguity.</li>\r\n<li><strong>Implicit </strong>- Not described clearly or directly, and often using implication or assumption.</li>\r\n</ul>', 'Data Persistence - The data survives after the process with which it was created has ended.\r\nRedundancy - The duplication of critical components or functions of a system with the intention of increasing reliability of the system. Also, something that is redundant is no longer needed because its job is being done by something else or because its job is no longer necessary or useful.\r\nExplicit - Describes something that is very clear and without vagueness or ambiguity.\r\nImplicit - Not described clearly or directly, and often using implication or assumption.\r\n', 1, '2022-01-04 12:06:33', '2022-01-04 12:06:33', 'terminology', 'misc', 'version', '', '', 4),
(388, 13, 'Common Linux Commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\"><li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>find <em>d</em><em>ir </em>-name <em>file </em></strong>- Find file</li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul><li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul></li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n</ul><h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\"><li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul><li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul></li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updated</strong></li>\r\n<li><strong>awk </strong>- Scripting language used for manipulating data\r\n<ul id=\"bkmrk-awk-%27%7Bprint-%241%2C%244%7D%27%C2%A0\"><li><strong>awk \'{print $1,$4}\' </strong>- Get first and 4th word</li>\r\n</ul></li>\r\n<li><strong>uniq </strong>- Filters or counts out the repeated lines in a file\r\n<ul id=\"bkmrk-uniq--c%C2%A0--counts-all\"><li><strong>uniq -c </strong>- Counts all unique values</li>\r\n</ul></li>\r\n<li><strong>sort </strong>- Sort a file, arranging the records in a particular order\r\n<ul id=\"bkmrk-sort--r%C2%A0--sorts-in-r\"><li><strong>sort -r </strong>- Sorts in reverse order</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\"><li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul><li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to a file</p>\r\n<p><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nfind dir -name file - Find file\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\nFile\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\nzcat - Read a compressed file\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updated\r\nawk - Scripting language used for manipulating data\r\nawk \'{print $1,$4}\' - Get first and 4th word\r\n\r\nuniq - Filters or counts out the repeated lines in a file\r\nuniq -c - Counts all unique values\r\n\r\nsort - Sort a file, arranging the records in a particular order\r\nsort -r - Sorts in reverse order\r\n\r\nPiping\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\nls -al > file - Redirect output to a file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 1, '2022-01-06 13:22:59', '2022-01-06 13:22:59', 'common-linux-commands', 'linux', 'version', '', '', 9),
(389, 55, 'Promises', '<p id=\"bkmrk-promises-are-javascr\">Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation. A key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.</p>\r\n<p id=\"bkmrk-callbacks%3A\">Callbacks:</p>\r\n<pre id=\"bkmrk-function-getmoneybac\"><code class=\"language-JavaScript\">function getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)</code></pre>\r\n<p id=\"bkmrk-promises%3A\">Promises:</p>\r\n<pre id=\"bkmrk-function-getmoneybac-0\"><code class=\"language-JavaScript\">function getMoneyBack(money) {\r\n  return new Promise((resolve, reject) =&gt; {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) =&gt; {\r\n  console.log(money)\r\n})</code></pre>', 'Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation. A key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.\r\nCallbacks:\r\nfunction getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)\r\nPromises:\r\nfunction getMoneyBack(money) {\r\n  return new Promise((resolve, reject) => {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) => {\r\n  console.log(money)\r\n})', 1, '2022-01-10 10:28:14', '2022-01-10 10:28:14', 'promises', 'javascript', 'version', '', 'Initial publish', 1),
(391, 55, 'Promises', '<p id=\"bkmrk-promises-are-javascr\">Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.</p>\r\n<ul id=\"bkmrk-the-output-returned-\"><li>The output returned from the promise is available only inside the resolved function. This means we always have to use either <code>.then()</code> or wrap the promise inside an <code>async</code> function and then prefix it with <code>await</code> to get the result.</li>\r\n</ul><p id=\"bkmrk-a-key-difference-bet\">A key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.</p>\r\n<p id=\"bkmrk-callbacks%3A\">Callbacks:</p>\r\n<pre id=\"bkmrk-function-getmoneybac\"><code class=\"language-JavaScript\">function getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)</code></pre>\r\n<p id=\"bkmrk-promises%3A\">Promises:</p>\r\n<pre id=\"bkmrk-function-getmoneybac-0\"><code class=\"language-JavaScript\">function getMoneyBack(money) {\r\n  return new Promise((resolve, reject) =&gt; {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) =&gt; {\r\n  console.log(money)\r\n})</code></pre>', 'Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.\r\nThe output returned from the promise is available only inside the resolved function. This means we always have to use either .then() or wrap the promise inside an async function and then prefix it with await to get the result.\r\nA key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.\r\nCallbacks:\r\nfunction getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)\r\nPromises:\r\nfunction getMoneyBack(money) {\r\n  return new Promise((resolve, reject) => {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) => {\r\n  console.log(money)\r\n})', 1, '2022-01-10 11:05:45', '2022-01-10 11:05:45', 'promises', 'javascript', 'version', '', '', 2),
(393, 55, 'Promises', '<p id=\"bkmrk-promises-are-javascr\">Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.</p>\r\n<ul id=\"bkmrk-the-output-returned-\"><li>The output returned from the promise is available only inside the resolved function. This means we always have to use either <code>.then()</code> or wrap the promise inside an <code>async</code> function and then prefix it with <code>await</code> to get the result.</li>\r\n</ul><pre id=\"bkmrk-function-resolveafte\"><code class=\"language-JavaScript\">function resolveAfter2Seconds(x) { \r\n    return new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x;\r\nlet promise = new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n    console.log(result) // 10\r\n});</code></pre>\r\n<p id=\"bkmrk-a-key-difference-bet\">A key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.</p>\r\n<p id=\"bkmrk-callbacks%3A\">Callbacks:</p>\r\n<pre id=\"bkmrk-function-getmoneybac\"><code class=\"language-JavaScript\">function getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)</code></pre>\r\n<p id=\"bkmrk-promises%3A\">Promises:</p>\r\n<pre id=\"bkmrk-function-getmoneybac-0\"><code class=\"language-JavaScript\">function getMoneyBack(money) {\r\n  return new Promise((resolve, reject) =&gt; {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) =&gt; {\r\n  console.log(money)\r\n})</code></pre>', 'Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.\r\nThe output returned from the promise is available only inside the resolved function. This means we always have to use either .then() or wrap the promise inside an async function and then prefix it with await to get the result.\r\nfunction resolveAfter2Seconds(x) { \r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x;\r\nlet promise = new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n    console.log(result) // 10\r\n});\r\nA key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.\r\nCallbacks:\r\nfunction getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)\r\nPromises:\r\nfunction getMoneyBack(money) {\r\n  return new Promise((resolve, reject) => {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) => {\r\n  console.log(money)\r\n})', 1, '2022-01-10 11:08:32', '2022-01-10 11:08:32', 'promises', 'javascript', 'version', '', '', 3),
(394, 55, 'Promises', '<p id=\"bkmrk-promises-are-javascr\">Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.</p>\r\n<ul id=\"bkmrk-the-output-returned-\"><li>The output returned from the promise is available only inside the resolved function. This means we always have to use either <code>.then()</code> or wrap the promise inside an <code>async</code> function and then prefix it with <code>await</code> to get the result.</li>\r\n</ul><pre id=\"bkmrk-function-resolveafte\"><code class=\"language-JavaScript\">function resolveAfter2Seconds(x) { \r\n    return new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x = 10;\r\nlet promise = new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n    console.log(result) // 10\r\n});</code></pre>\r\n<p id=\"bkmrk-a-key-difference-bet\">A key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.</p>\r\n<p id=\"bkmrk-callbacks%3A\">Callbacks:</p>\r\n<pre id=\"bkmrk-function-getmoneybac\"><code class=\"language-JavaScript\">function getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)</code></pre>\r\n<p id=\"bkmrk-promises%3A\">Promises:</p>\r\n<pre id=\"bkmrk-function-getmoneybac-0\"><code class=\"language-JavaScript\">function getMoneyBack(money) {\r\n  return new Promise((resolve, reject) =&gt; {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) =&gt; {\r\n  console.log(money)\r\n})</code></pre>', 'Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.\r\nThe output returned from the promise is available only inside the resolved function. This means we always have to use either .then() or wrap the promise inside an async function and then prefix it with await to get the result.\r\nfunction resolveAfter2Seconds(x) { \r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x = 10;\r\nlet promise = new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n    console.log(result) // 10\r\n});\r\nA key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.\r\nCallbacks:\r\nfunction getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)\r\nPromises:\r\nfunction getMoneyBack(money) {\r\n  return new Promise((resolve, reject) => {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) => {\r\n  console.log(money)\r\n})', 1, '2022-01-10 11:09:19', '2022-01-10 11:09:19', 'promises', 'javascript', 'version', '', '', 4),
(396, 55, 'Promises', '<p id=\"bkmrk-promises-are-javascr\">Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.</p>\r\n<ul id=\"bkmrk-the-output-returned-\"><li>The output returned from the promise is available only inside the resolved function. This means we always have to use either <code>.then()</code> or wrap the promise inside an <code>async</code> function and then prefix it with <code>await</code> to get the result.</li>\r\n</ul><pre id=\"bkmrk-function-resolveafte\"><code class=\"language-JavaScript\">function resolveAfter2Seconds(x) { \r\n    return new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x = 10;\r\nlet promise = new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n	// result is whatever we passed in the resolve(...) function above.\r\n    console.log(result) // 10\r\n});</code></pre>\r\n<ul id=\"bkmrk-%C2%A0\"><li> </li>\r\n</ul><p id=\"bkmrk-a-key-difference-bet\">A key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.</p>\r\n<p id=\"bkmrk-callbacks%3A\">Callbacks:</p>\r\n<pre id=\"bkmrk-function-getmoneybac\"><code class=\"language-JavaScript\">function getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)</code></pre>\r\n<p id=\"bkmrk-promises%3A\">Promises:</p>\r\n<pre id=\"bkmrk-function-getmoneybac-0\"><code class=\"language-JavaScript\">function getMoneyBack(money) {\r\n  return new Promise((resolve, reject) =&gt; {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) =&gt; {\r\n  console.log(money)\r\n})</code></pre>', 'Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.\r\nThe output returned from the promise is available only inside the resolved function. This means we always have to use either .then() or wrap the promise inside an async function and then prefix it with await to get the result.\r\nfunction resolveAfter2Seconds(x) { \r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x = 10;\r\nlet promise = new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n	// result is whatever we passed in the resolve(...) function above.\r\n    console.log(result) // 10\r\n});\r\n \r\nA key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.\r\nCallbacks:\r\nfunction getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)\r\nPromises:\r\nfunction getMoneyBack(money) {\r\n  return new Promise((resolve, reject) => {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) => {\r\n  console.log(money)\r\n})', 1, '2022-01-10 11:12:21', '2022-01-10 11:12:21', 'promises', 'javascript', 'version', '', '', 5),
(398, 55, 'Promises', '<p id=\"bkmrk-promises-are-javascr\">Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.</p>\r\n<ul id=\"bkmrk-the-output-returned-\"><li>The output returned from the promise is available only inside the resolved function. This means we always have to use either <code>.then()</code> or wrap the promise inside an <code>async</code> function and then prefix it with <code>await</code> to get the result.</li>\r\n</ul><pre id=\"bkmrk-function-resolveafte\"><code class=\"language-JavaScript\">function resolveAfter2Seconds(x) { \r\n    return new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x = 10;\r\nlet promise = new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n	// result is whatever we passed in the resolve(...) function above.\r\n    console.log(result) // 10\r\n});</code></pre>\r\n<ul id=\"bkmrk-%C2%A0\"><li> </li>\r\n</ul><p id=\"bkmrk-a-key-difference-bet\">A key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.</p>\r\n<p id=\"bkmrk-callbacks%3A\">Callbacks:</p>\r\n<pre id=\"bkmrk-function-getmoneybac\"><code class=\"language-JavaScript\">function getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)</code></pre>\r\n<p id=\"bkmrk-promises%3A\">Promises:</p>\r\n<pre id=\"bkmrk-function-getmoneybac-0\"><code class=\"language-JavaScript\">function getMoneyBack(money) {\r\n  return new Promise((resolve, reject) =&gt; {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) =&gt; {\r\n  console.log(money)\r\n})</code></pre>\r\n<h4 id=\"bkmrk-promise-chaining\">Promise Chaining</h4>\r\n<p id=\"bkmrk-promise-chaining-bec\">Promise chaining becomes absolutely useful when we need to execute a chain of asynchronous tasks. Each task that’s being chained can only start as soon as the previous task has completed, controlled by the <code class=\"pd pe pf pg ph b\">.then</code> of the chain.</p>\r\n<pre id=\"bkmrk-const-add-%3D-%28num1%2C-n\"><code class=\"language-JavaScript\">const add = (num1, num2) =&gt; new Promise((resolve) =&gt; resolve(num1 + num2))\r\n\r\nadd(2, 4)\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 6\r\n    return result + 10\r\n  })\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 16\r\n    return result\r\n  })\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 16\r\n  })</code></pre>', 'Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.\r\nThe output returned from the promise is available only inside the resolved function. This means we always have to use either .then() or wrap the promise inside an async function and then prefix it with await to get the result.\r\nfunction resolveAfter2Seconds(x) { \r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x = 10;\r\nlet promise = new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n	// result is whatever we passed in the resolve(...) function above.\r\n    console.log(result) // 10\r\n});\r\n \r\nA key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.\r\nCallbacks:\r\nfunction getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)\r\nPromises:\r\nfunction getMoneyBack(money) {\r\n  return new Promise((resolve, reject) => {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) => {\r\n  console.log(money)\r\n})\r\nPromise Chaining\r\nPromise chaining becomes absolutely useful when we need to execute a chain of asynchronous tasks. Each task that’s being chained can only start as soon as the previous task has completed, controlled by the .then of the chain.\r\nconst add = (num1, num2) => new Promise((resolve) => resolve(num1 + num2))\r\n\r\nadd(2, 4)\r\n  .then((result) => {\r\n    console.log(result) // result: 6\r\n    return result + 10\r\n  })\r\n  .then((result) => {\r\n    console.log(result) // result: 16\r\n    return result\r\n  })\r\n  .then((result) => {\r\n    console.log(result) // result: 16\r\n  })', 1, '2022-01-10 11:17:37', '2022-01-10 11:17:37', 'promises', 'javascript', 'version', '', '', 6);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(400, 55, 'Promises', '<p id=\"bkmrk-promises-are-javascr\">Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.</p>\r\n<ul id=\"bkmrk-the-output-returned-\"><li>The output returned from the promise is available only inside the resolved function. This means we always have to use either <code>.then()</code> or wrap the promise inside an <code>async</code> function and then prefix it with <code>await</code> to get the result.</li>\r\n</ul><pre id=\"bkmrk-function-resolveafte\"><code class=\"language-JavaScript\">function resolveAfter2Seconds(x) { \r\n    return new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x = 10;\r\nlet promise = new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n	// result is whatever we passed in the resolve(...) function above.\r\n    console.log(result) // 10\r\n});</code></pre>\r\n<ul id=\"bkmrk-%C2%A0\"><li> </li>\r\n</ul><p id=\"bkmrk-a-key-difference-bet\">A key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.</p>\r\n<p id=\"bkmrk-callbacks%3A\">Callbacks:</p>\r\n<pre id=\"bkmrk-function-getmoneybac\"><code class=\"language-JavaScript\">function getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)</code></pre>\r\n<p id=\"bkmrk-promises%3A\">Promises:</p>\r\n<pre id=\"bkmrk-function-getmoneybac-0\"><code class=\"language-JavaScript\">function getMoneyBack(money) {\r\n  return new Promise((resolve, reject) =&gt; {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) =&gt; {\r\n  console.log(money)\r\n})</code></pre>\r\n<h4 id=\"bkmrk-promise-chaining\">Promise Chaining</h4>\r\n<p id=\"bkmrk-promise-chaining-bec\">Promise chaining becomes absolutely useful when we need to execute a chain of asynchronous tasks. Each task that’s being chained can only start as soon as the previous task has completed, controlled by the <code class=\"pd pe pf pg ph b\">.then</code> of the chain.</p>\r\n<pre id=\"bkmrk-const-add-%3D-%28num1%2C-n\"><code class=\"language-JavaScript\">const add = (num1, num2) =&gt; new Promise((resolve) =&gt; resolve(num1 + num2))\r\n\r\nadd(2, 4)\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 6\r\n    return result + 10\r\n  })\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 16\r\n    return result\r\n  })\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 16\r\n  })</code></pre>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641816148186.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641816148186.png\" alt=\"image-1641816148186.png\" width=\"210\" height=\"268\"></a></p>\r\n<p id=\"bkmrk-technically-we-can-a\">Technically we can also add many <code>.then</code> to a single promise. This is not chaining.</p>\r\n<pre id=\"bkmrk-let-promise-%3D-new-pr\"><code class=\"language-JavaScript\">let promise = new Promise(function(resolve, reject) {\r\n  setTimeout(() =&gt; resolve(1), 1000);\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});</code></pre>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641816187301.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641816187301.png\" alt=\"image-1641816187301.png\" width=\"398\" height=\"148\"></a></p>', 'Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.\r\nThe output returned from the promise is available only inside the resolved function. This means we always have to use either .then() or wrap the promise inside an async function and then prefix it with await to get the result.\r\nfunction resolveAfter2Seconds(x) { \r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x = 10;\r\nlet promise = new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n	// result is whatever we passed in the resolve(...) function above.\r\n    console.log(result) // 10\r\n});\r\n \r\nA key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.\r\nCallbacks:\r\nfunction getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)\r\nPromises:\r\nfunction getMoneyBack(money) {\r\n  return new Promise((resolve, reject) => {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) => {\r\n  console.log(money)\r\n})\r\nPromise Chaining\r\nPromise chaining becomes absolutely useful when we need to execute a chain of asynchronous tasks. Each task that’s being chained can only start as soon as the previous task has completed, controlled by the .then of the chain.\r\nconst add = (num1, num2) => new Promise((resolve) => resolve(num1 + num2))\r\n\r\nadd(2, 4)\r\n  .then((result) => {\r\n    console.log(result) // result: 6\r\n    return result + 10\r\n  })\r\n  .then((result) => {\r\n    console.log(result) // result: 16\r\n    return result\r\n  })\r\n  .then((result) => {\r\n    console.log(result) // result: 16\r\n  })\r\n\r\nTechnically we can also add many .then to a single promise. This is not chaining.\r\nlet promise = new Promise(function(resolve, reject) {\r\n  setTimeout(() => resolve(1), 1000);\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n', 1, '2022-01-10 12:03:47', '2022-01-10 12:03:47', 'promises', 'javascript', 'version', '', '', 7),
(402, 55, 'Promises', '<p id=\"bkmrk-promises-are-javascr\">Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.</p>\r\n<ul id=\"bkmrk-the-output-returned-\"><li>The output returned from the promise is available only inside the resolved function. This means we always have to use either <code>.then()</code> or wrap the promise inside an <code>async</code> function and then prefix it with <code>await</code> to get the result.</li>\r\n</ul><pre id=\"bkmrk-function-resolveafte\"><code class=\"language-JavaScript\">function resolveAfter2Seconds(x) { \r\n    return new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x = 10;\r\nlet promise = new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n	// result is whatever we passed in the resolve(...) function above.\r\n    console.log(result) // 10\r\n});</code></pre>\r\n<ul id=\"bkmrk-%C2%A0\"><li> </li>\r\n</ul><p id=\"bkmrk-a-key-difference-bet\">A key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.</p>\r\n<p id=\"bkmrk-callbacks%3A\">Callbacks:</p>\r\n<pre id=\"bkmrk-function-getmoneybac\"><code class=\"language-JavaScript\">function getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)</code></pre>\r\n<p id=\"bkmrk-promises%3A\">Promises:</p>\r\n<pre id=\"bkmrk-function-getmoneybac-0\"><code class=\"language-JavaScript\">function getMoneyBack(money) {\r\n  return new Promise((resolve, reject) =&gt; {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) =&gt; {\r\n  console.log(money)\r\n})</code></pre>\r\n<h4 id=\"bkmrk-promise-chaining\">Promise Chaining</h4>\r\n<p id=\"bkmrk-promise-chaining-bec\">Promise chaining becomes absolutely useful when we need to execute a chain of asynchronous tasks. Each task that’s being chained can only start as soon as the previous task has completed, controlled by the <code class=\"pd pe pf pg ph b\">.then</code> of the chain.</p>\r\n<pre id=\"bkmrk-const-add-%3D-%28num1%2C-n\"><code class=\"language-JavaScript\">const add = (num1, num2) =&gt; new Promise((resolve) =&gt; resolve(num1 + num2))\r\n\r\nadd(2, 4)\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 6\r\n    return result + 10\r\n  })\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 16\r\n    return result\r\n  })\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 16\r\n  })</code></pre>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641816148186.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641816148186.png\" alt=\"image-1641816148186.png\" width=\"210\" height=\"268\"></a></p>\r\n<p id=\"bkmrk-technically-we-can-a\">Technically we can also add many <code>.then</code> to a single promise. This is not chaining.</p>\r\n<pre id=\"bkmrk-let-promise-%3D-new-pr\"><code class=\"language-JavaScript\">let promise = new Promise(function(resolve, reject) {\r\n  setTimeout(() =&gt; resolve(1), 1000);\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});</code></pre>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641816187301.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641816187301.png\" alt=\"image-1641816187301.png\" width=\"398\" height=\"148\"></a></p>\r\n<h4 id=\"bkmrk-promise-api\">Promise API</h4>\r\n<p id=\"bkmrk-apart-from-the-handl\">Apart from the handler methods (.then, .catch, and .finally), there are six static methods available in the Promise API. The first four methods accept an array of promises and run them in parallel.</p>\r\n<ol id=\"bkmrk-promise.all-promise.\"><li>Promise.all</li>\r\n<li>Promise.any</li>\r\n<li>Promise.allSettled</li>\r\n<li>Promise.race</li>\r\n<li>Promise.resolve</li>\r\n<li>Promise.reject</li>\r\n</ol>', 'Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.\r\nThe output returned from the promise is available only inside the resolved function. This means we always have to use either .then() or wrap the promise inside an async function and then prefix it with await to get the result.\r\nfunction resolveAfter2Seconds(x) { \r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x = 10;\r\nlet promise = new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n	// result is whatever we passed in the resolve(...) function above.\r\n    console.log(result) // 10\r\n});\r\n \r\nA key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.\r\nCallbacks:\r\nfunction getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)\r\nPromises:\r\nfunction getMoneyBack(money) {\r\n  return new Promise((resolve, reject) => {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) => {\r\n  console.log(money)\r\n})\r\nPromise Chaining\r\nPromise chaining becomes absolutely useful when we need to execute a chain of asynchronous tasks. Each task that’s being chained can only start as soon as the previous task has completed, controlled by the .then of the chain.\r\nconst add = (num1, num2) => new Promise((resolve) => resolve(num1 + num2))\r\n\r\nadd(2, 4)\r\n  .then((result) => {\r\n    console.log(result) // result: 6\r\n    return result + 10\r\n  })\r\n  .then((result) => {\r\n    console.log(result) // result: 16\r\n    return result\r\n  })\r\n  .then((result) => {\r\n    console.log(result) // result: 16\r\n  })\r\n\r\nTechnically we can also add many .then to a single promise. This is not chaining.\r\nlet promise = new Promise(function(resolve, reject) {\r\n  setTimeout(() => resolve(1), 1000);\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\nPromise API\r\nApart from the handler methods (.then, .catch, and .finally), there are six static methods available in the Promise API. The first four methods accept an array of promises and run them in parallel.\r\nPromise.all\r\nPromise.any\r\nPromise.allSettled\r\nPromise.race\r\nPromise.resolve\r\nPromise.reject\r\n', 1, '2022-01-10 12:04:34', '2022-01-10 12:04:34', 'promises', 'javascript', 'version', '', '', 8),
(405, 56, 'Callbacks', '', '', 1, '2022-01-10 12:11:32', '2022-01-10 12:11:32', 'callbacks', 'javascript', 'version', '', 'Initial publish', 1),
(406, 56, 'Callbacks', '<p id=\"bkmrk-in-javascript%2C-funct\">In JavaScript, functions are objects. So we can pass objects to functions as parameters. Callbacks that you call yourself are regular function calls, which are always synchronous.</p>\r\n<p id=\"bkmrk-we-can-also-pass-fun\">We can also pass functions as parameters to other functions and call them inside the outer functions. So callback is a function that is passed to another function. When the first function is done, it will run the second function.</p>\r\n<p id=\"bkmrk-synchronous-callback\"><strong>Synchronous callback</strong></p>\r\n<pre id=\"bkmrk-function-callbacktea\"><code class=\"language-JavaScript\">function CallBackTeaser(callback, param){\r\n 	console.log(\"Calling the callback function\");\r\n	callback(param);\r\n   	console.log(\"Callback called\");\r\n}\r\nfunction consoleMyDetails(person){\r\n	if(person){\r\n	console.log(`Hi, my name is ${person.name}, i am ${person.job} &amp; super exited about ${person.hobby}`);\r\n	}\r\n}\r\nCallBackTeaser(consoleMyDetails, {\'name\': \'Praveen\',\r\n\'job\':\'Developer\',\r\n\'hobby\':\'learning new technologies.\'\r\n});\r\n\r\n/*\r\nOutput:\r\n	Calling the callback function\r\n    Hi, my name is Praveen, i am Developer &amp; super exited about learning new technologies.\r\n    Callback called\r\n*/</code></pre>\r\n<p id=\"bkmrk-asynchronous-callbac\"><strong>Asynchronous callback</strong></p>\r\n<pre id=\"bkmrk-function-download%28ur\"><code class=\"language-JavaScript\">function download(url, callback) {\r\n    setTimeout(() =&gt; {\r\n        console.log(`Downloading ${url} ...`);\r\n        \r\n        callback(url);\r\n    }, 3000);\r\n}\r\n\r\nfunction process(picture) {\r\n    console.log(`Processing ${picture}`);\r\n}\r\n\r\nlet url = \'https://wwww.javascripttutorial.net/pic.jpg\';\r\ndownload(url, process);\r\n\r\n/*\r\nOutput:\r\n	Downloading https://www.javascripttutorial.net/pic.jpg ...\r\n	Processing https://www.javascripttutorial.net/pic.jpg\r\n*/</code></pre>\r\n<p id=\"bkmrk-the-problem-with-cal\">The problem with callbacks is it creates something called “Callback Hell.” Basically, you start nesting functions within functions within functions, and it starts to get really hard to read the code. So in this situation Promises came to handle the nested callback in a better way.</p>\r\n<pre id=\"bkmrk-fs.readdir%28source%2C-f\"><code class=\"language-JavaScript\">fs.readdir(source, function (err, files) {\r\n  if (err) {\r\n    console.log(\'Error finding files: \' + err)\r\n  } else {\r\n    files.forEach(function (filename, fileIndex) {\r\n      console.log(filename)\r\n      gm(source + filename).size(function (err, values) {\r\n        if (err) {\r\n          console.log(\'Error identifying file size: \' + err)\r\n        } else {\r\n          console.log(filename + \' : \' + values)\r\n          aspect = (values.width / values.height)\r\n          widths.forEach(function (width, widthIndex) {\r\n            height = Math.round(width / aspect)\r\n            console.log(\'resizing \' + filename + \'to \' + height + \'x\' + height)\r\n            this.resize(width, height).write(dest + \'w\' + width + \'_\' + filename, function(err) {\r\n              if (err) console.log(\'Error writing file: \' + err)\r\n            })\r\n          }.bind(this))\r\n        }\r\n      })\r\n    })\r\n  }\r\n})</code></pre>', 'In JavaScript, functions are objects. So we can pass objects to functions as parameters. Callbacks that you call yourself are regular function calls, which are always synchronous.\r\nWe can also pass functions as parameters to other functions and call them inside the outer functions. So callback is a function that is passed to another function. When the first function is done, it will run the second function.\r\nSynchronous callback\r\nfunction CallBackTeaser(callback, param){\r\n 	console.log(\"Calling the callback function\");\r\n	callback(param);\r\n   	console.log(\"Callback called\");\r\n}\r\nfunction consoleMyDetails(person){\r\n	if(person){\r\n	console.log(`Hi, my name is ${person.name}, i am ${person.job} & super exited about ${person.hobby}`);\r\n	}\r\n}\r\nCallBackTeaser(consoleMyDetails, {\'name\': \'Praveen\',\r\n\'job\':\'Developer\',\r\n\'hobby\':\'learning new technologies.\'\r\n});\r\n\r\n/*\r\nOutput:\r\n	Calling the callback function\r\n    Hi, my name is Praveen, i am Developer & super exited about learning new technologies.\r\n    Callback called\r\n*/\r\nAsynchronous callback\r\nfunction download(url, callback) {\r\n    setTimeout(() => {\r\n        console.log(`Downloading ${url} ...`);\r\n        \r\n        callback(url);\r\n    }, 3000);\r\n}\r\n\r\nfunction process(picture) {\r\n    console.log(`Processing ${picture}`);\r\n}\r\n\r\nlet url = \'https://wwww.javascripttutorial.net/pic.jpg\';\r\ndownload(url, process);\r\n\r\n/*\r\nOutput:\r\n	Downloading https://www.javascripttutorial.net/pic.jpg ...\r\n	Processing https://www.javascripttutorial.net/pic.jpg\r\n*/\r\nThe problem with callbacks is it creates something called “Callback Hell.” Basically, you start nesting functions within functions within functions, and it starts to get really hard to read the code. So in this situation Promises came to handle the nested callback in a better way.\r\nfs.readdir(source, function (err, files) {\r\n  if (err) {\r\n    console.log(\'Error finding files: \' + err)\r\n  } else {\r\n    files.forEach(function (filename, fileIndex) {\r\n      console.log(filename)\r\n      gm(source + filename).size(function (err, values) {\r\n        if (err) {\r\n          console.log(\'Error identifying file size: \' + err)\r\n        } else {\r\n          console.log(filename + \' : \' + values)\r\n          aspect = (values.width / values.height)\r\n          widths.forEach(function (width, widthIndex) {\r\n            height = Math.round(width / aspect)\r\n            console.log(\'resizing \' + filename + \'to \' + height + \'x\' + height)\r\n            this.resize(width, height).write(dest + \'w\' + width + \'_\' + filename, function(err) {\r\n              if (err) console.log(\'Error writing file: \' + err)\r\n            })\r\n          }.bind(this))\r\n        }\r\n      })\r\n    })\r\n  }\r\n})', 1, '2022-01-10 12:11:43', '2022-01-10 12:11:43', 'callbacks', 'javascript', 'version', '', '', 2),
(407, 57, 'Aysnc/Await', '', '', 1, '2022-01-10 12:12:00', '2022-01-10 12:12:00', 'aysncawait', 'javascript', 'version', '', 'Initial publish', 1),
(408, 57, 'Aysnc/Await', '<h3 id=\"bkmrk-async%2Fawait\">Async/Await</h3>\r\n<p id=\"bkmrk-await-is-basically-s\">Await is basically syntactic sugar for Promises. It makes your asynchronous code look more like synchronous/procedural code, which is easier for humans to understand.</p>\r\n<pre id=\"bkmrk-async-function-print\"><code class=\"language-JavaScript\">async function printMyAsync(){\r\n  await printString(\"one\")\r\n  await printString(\"two\")\r\n  await printString(\"three\")\r\n}</code></pre>\r\n<p id=\"bkmrk-%C2%A0\">You can see that we use the “async” keyword for the wrapper function printMyAsync. This lets JavaScript know that we are using async/await syntax, and is necessary if you want to use Await. This means you can’t use Await at the global level. It always needs a wrapper function. Or we can say await is only used with an async function.</p>\r\n<p id=\"bkmrk-the-await-keyword-is\">The await keyword is used in an async function to ensure that all promises returned in the async function are synchronised, ie. they wait for each other. Await eliminates the use of callbacks in .then() and .catch(). In using async and await, async is prepended when returning a promise, await is prepended when calling a promise. try and catch are also used to get the rejection value of an async function.</p>\r\n<p id=\"bkmrk-try-and-catch-are-us\">Try and catch are used to get the rejection value of an async function.</p>\r\n<pre id=\"bkmrk-const-hellopromise-%3D\"><code class=\"language-JavaScript\">const helloPromise = function() {\r\n  return new Promise(function(resolve, reject) {\r\n    const message = \"Hi, How are you!\";\r\n\r\n    resolve(message)\r\n  });\r\n}\r\n\r\n\r\nasync function demoPromise() {\r\n  try {\r\n    let message  = await helloPromise();\r\n    console.log(message);\r\n\r\n  }\r\n  catch(error){ \r\n      console.log(\"Error:\" + error.message);\r\n  }\r\n}\r\n\r\ndemoPromise();</code></pre>', 'Async/Await\r\nAwait is basically syntactic sugar for Promises. It makes your asynchronous code look more like synchronous/procedural code, which is easier for humans to understand.\r\nasync function printMyAsync(){\r\n  await printString(\"one\")\r\n  await printString(\"two\")\r\n  await printString(\"three\")\r\n}\r\nYou can see that we use the “async” keyword for the wrapper function printMyAsync. This lets JavaScript know that we are using async/await syntax, and is necessary if you want to use Await. This means you can’t use Await at the global level. It always needs a wrapper function. Or we can say await is only used with an async function.\r\nThe await keyword is used in an async function to ensure that all promises returned in the async function are synchronised, ie. they wait for each other. Await eliminates the use of callbacks in .then() and .catch(). In using async and await, async is prepended when returning a promise, await is prepended when calling a promise. try and catch are also used to get the rejection value of an async function.\r\nTry and catch are used to get the rejection value of an async function.\r\nconst helloPromise = function() {\r\n  return new Promise(function(resolve, reject) {\r\n    const message = \"Hi, How are you!\";\r\n\r\n    resolve(message)\r\n  });\r\n}\r\n\r\n\r\nasync function demoPromise() {\r\n  try {\r\n    let message  = await helloPromise();\r\n    console.log(message);\r\n\r\n  }\r\n  catch(error){ \r\n      console.log(\"Error:\" + error.message);\r\n  }\r\n}\r\n\r\ndemoPromise();', 1, '2022-01-10 12:12:16', '2022-01-10 12:12:16', 'aysncawait', 'javascript', 'version', '', '', 2),
(409, 57, 'Aysnc/Await', '<p id=\"bkmrk-await-is-basically-s\">Await is basically syntactic sugar for Promises. It makes your asynchronous code look more like synchronous/procedural code, which is easier for humans to understand.</p>\r\n<pre id=\"bkmrk-async-function-print\"><code class=\"language-JavaScript\">async function printMyAsync(){\r\n  await printString(\"one\")\r\n  await printString(\"two\")\r\n  await printString(\"three\")\r\n}</code></pre>\r\n<p id=\"bkmrk-%C2%A0\">You can see that we use the “async” keyword for the wrapper function printMyAsync. This lets JavaScript know that we are using async/await syntax, and is necessary if you want to use Await. This means you can’t use Await at the global level. It always needs a wrapper function. Or we can say await is only used with an async function.</p>\r\n<p id=\"bkmrk-the-await-keyword-is\">The await keyword is used in an async function to ensure that all promises returned in the async function are synchronised, ie. they wait for each other. Await eliminates the use of callbacks in .then() and .catch(). In using async and await, async is prepended when returning a promise, await is prepended when calling a promise. try and catch are also used to get the rejection value of an async function.</p>\r\n<p id=\"bkmrk-try-and-catch-are-us\">Try and catch are used to get the rejection value of an async function.</p>\r\n<pre id=\"bkmrk-const-hellopromise-%3D\"><code class=\"language-JavaScript\">const helloPromise = function() {\r\n  return new Promise(function(resolve, reject) {\r\n    const message = \"Hi, How are you!\";\r\n\r\n    resolve(message)\r\n  });\r\n}\r\n\r\n\r\nasync function demoPromise() {\r\n  try {\r\n    let message  = await helloPromise();\r\n    console.log(message);\r\n\r\n  }\r\n  catch(error){ \r\n      console.log(\"Error:\" + error.message);\r\n  }\r\n}\r\n\r\ndemoPromise();</code></pre>', 'Await is basically syntactic sugar for Promises. It makes your asynchronous code look more like synchronous/procedural code, which is easier for humans to understand.\r\nasync function printMyAsync(){\r\n  await printString(\"one\")\r\n  await printString(\"two\")\r\n  await printString(\"three\")\r\n}\r\nYou can see that we use the “async” keyword for the wrapper function printMyAsync. This lets JavaScript know that we are using async/await syntax, and is necessary if you want to use Await. This means you can’t use Await at the global level. It always needs a wrapper function. Or we can say await is only used with an async function.\r\nThe await keyword is used in an async function to ensure that all promises returned in the async function are synchronised, ie. they wait for each other. Await eliminates the use of callbacks in .then() and .catch(). In using async and await, async is prepended when returning a promise, await is prepended when calling a promise. try and catch are also used to get the rejection value of an async function.\r\nTry and catch are used to get the rejection value of an async function.\r\nconst helloPromise = function() {\r\n  return new Promise(function(resolve, reject) {\r\n    const message = \"Hi, How are you!\";\r\n\r\n    resolve(message)\r\n  });\r\n}\r\n\r\n\r\nasync function demoPromise() {\r\n  try {\r\n    let message  = await helloPromise();\r\n    console.log(message);\r\n\r\n  }\r\n  catch(error){ \r\n      console.log(\"Error:\" + error.message);\r\n  }\r\n}\r\n\r\ndemoPromise();', 1, '2022-01-10 12:12:21', '2022-01-10 12:12:21', 'aysncawait', 'javascript', 'version', '', '', 3),
(412, 57, 'Aysnc/Await', '<p id=\"bkmrk-%C2%A0\">The word “async” before a function means one simple thing: a function always returns a promise. Other values are wrapped in a resolved promise automatically.</p>\r\n<p id=\"bkmrk-the-await-keyword-is\">The await keyword is used in an async function to ensure that all promises returned in the async function are synchronised, ie. they wait for each other. Await eliminates the use of callbacks in .then() and .catch(). In using async and await, async is prepended when returning a promise, await is prepended when calling a promise. try and catch are also used to get the rejection value of an async function.</p>\r\n<p id=\"bkmrk-try-and-catch-are-us\">Try and catch are used to get the rejection value of an async function.</p>\r\n<pre id=\"bkmrk-const-hellopromise-%3D\"><code class=\"language-JavaScript\">const helloPromise = function() {\r\n  return new Promise(function(resolve, reject) {\r\n    const message = \"Hi, How are you!\";\r\n\r\n    resolve(message)\r\n  });\r\n}\r\n\r\n\r\nasync function demoPromise() {\r\n  try {\r\n    let message  = await helloPromise();\r\n    console.log(message);\r\n\r\n  }\r\n  catch(error){ \r\n      console.log(\"Error:\" + error.message);\r\n  }\r\n}\r\n\r\ndemoPromise();</code></pre>', 'The word “async” before a function means one simple thing: a function always returns a promise. Other values are wrapped in a resolved promise automatically.\r\nThe await keyword is used in an async function to ensure that all promises returned in the async function are synchronised, ie. they wait for each other. Await eliminates the use of callbacks in .then() and .catch(). In using async and await, async is prepended when returning a promise, await is prepended when calling a promise. try and catch are also used to get the rejection value of an async function.\r\nTry and catch are used to get the rejection value of an async function.\r\nconst helloPromise = function() {\r\n  return new Promise(function(resolve, reject) {\r\n    const message = \"Hi, How are you!\";\r\n\r\n    resolve(message)\r\n  });\r\n}\r\n\r\n\r\nasync function demoPromise() {\r\n  try {\r\n    let message  = await helloPromise();\r\n    console.log(message);\r\n\r\n  }\r\n  catch(error){ \r\n      console.log(\"Error:\" + error.message);\r\n  }\r\n}\r\n\r\ndemoPromise();', 1, '2022-01-10 12:53:50', '2022-01-10 12:53:50', 'aysncawait', 'javascript', 'version', '', '', 4),
(414, 57, 'Aysnc/Await', '<div id=\"bkmrk-\">\r\n<div data-post-id=\"48909047\"><button class=\"js-vote-down-btn flex--item s-btn s-btn__unset c-pointer \" data-controller=\"s-tooltip\" data-s-tooltip-placement=\"right\" aria-pressed=\"false\" aria-label=\"Down vote\" data-selected-classes=\"fc-theme-primary\" data-unselected-classes=\"\" aria-describedby=\"--stacks-s-tooltip-9dpogxma\"><svg aria-hidden=\"true\" class=\"svg-icon iconArrowDownLg\" width=\"36\" height=\"36\" viewbox=\"0 0 36 36\"></svg></button><svg aria-hidden=\"true\" class=\"mln2 mr0 svg-icon iconHistory\" width=\"19\" height=\"18\" viewbox=\"0 0 19 18\"></svg></div>\r\n</div>\r\n<p id=\"bkmrk-declaring-a-function\">Declaring a function <code>async</code> means that it will return the <code>Promise</code>. To turn the <code>Promise</code> into a value, you have two options.</p>\r\n<ul id=\"bkmrk-the-%22normal%22-option-\"><li>The \"normal\" option is to use <code>then()</code> on it:</li>\r\n</ul><pre id=\"bkmrk-getdogsfromapi%28%29.the\"><code class=\"language-JavaScript\">getDogsFromApi().then(value =&gt; console.log(value));</code></pre>\r\n<ul id=\"bkmrk-you-can-also-use%C2%A0awa\"><li>You can also use <code>await</code> on the function:</li>\r\n</ul><pre id=\"bkmrk-const-value-%3D-await-\"><code class=\"language-JavaScript\">const value = await getDogsFromApi();</code></pre>\r\n<p id=\"bkmrk-the-await-keyword-is\">The await keyword is used in an async function to ensure that all promises returned in the async function are synchronised, ie. they wait for each other. Await eliminates the use of callbacks in .then() and .catch(). In using async and await, async is prepended when returning a promise, await is prepended when calling a promise. try and catch are also used to get the rejection value of an async function.</p>\r\n<p id=\"bkmrk-try-and-catch-are-us\">Try and catch are used to get the rejection value of an async function.</p>\r\n<pre id=\"bkmrk-const-hellopromise-%3D\"><code class=\"language-JavaScript\">const helloPromise = function() {\r\n  return new Promise(function(resolve, reject) {\r\n    const message = \"Hi, How are you!\";\r\n\r\n    resolve(message)\r\n  });\r\n}\r\n\r\n\r\nasync function demoPromise() {\r\n  try {\r\n    let message  = await helloPromise();\r\n    console.log(message);\r\n\r\n  }\r\n  catch(error){ \r\n      console.log(\"Error:\" + error.message);\r\n  }\r\n}\r\n\r\ndemoPromise();</code></pre>', '\r\n\r\n\r\nDeclaring a function async means that it will return the Promise. To turn the Promise into a value, you have two options.\r\nThe \"normal\" option is to use then() on it:\r\ngetDogsFromApi().then(value => console.log(value));\r\nYou can also use await on the function:\r\nconst value = await getDogsFromApi();\r\nThe await keyword is used in an async function to ensure that all promises returned in the async function are synchronised, ie. they wait for each other. Await eliminates the use of callbacks in .then() and .catch(). In using async and await, async is prepended when returning a promise, await is prepended when calling a promise. try and catch are also used to get the rejection value of an async function.\r\nTry and catch are used to get the rejection value of an async function.\r\nconst helloPromise = function() {\r\n  return new Promise(function(resolve, reject) {\r\n    const message = \"Hi, How are you!\";\r\n\r\n    resolve(message)\r\n  });\r\n}\r\n\r\n\r\nasync function demoPromise() {\r\n  try {\r\n    let message  = await helloPromise();\r\n    console.log(message);\r\n\r\n  }\r\n  catch(error){ \r\n      console.log(\"Error:\" + error.message);\r\n  }\r\n}\r\n\r\ndemoPromise();', 1, '2022-01-10 12:58:07', '2022-01-10 12:58:07', 'aysncawait', 'javascript', 'version', '', '', 5),
(415, 58, 'Proxy', '', '', 1, '2022-01-10 13:31:40', '2022-01-10 13:31:40', 'proxy', 'javascript', 'version', '', 'Initial publish', 1),
(417, 58, 'Proxy', '<p id=\"bkmrk-the-proxy-object-ena\">The Proxy object enables you to create a proxy for another object, which can intercept and redefine fundamental operations for that object.</p>\r\n<p id=\"bkmrk-a%C2%A0proxy%C2%A0is-created-w\">A <code>Proxy</code> is created with two parameters:</p>\r\n<ul id=\"bkmrk-target%3A-the-original\"><li><code>target</code>: the original object which you want to proxy</li>\r\n<li><code>handler</code>: an object that defines which operations will be intercepted and how to redefine intercepted operations.</li>\r\n</ul><p id=\"bkmrk-with-the-help-of-the\">With the help of the Reflect class we can give some accessors the original behavior and redefine others:</p>\r\n<pre id=\"bkmrk-const-target-%3D-%7B-mes\"><code class=\"language-JavaScript\">const target = {\r\n  message1: \"hello\",\r\n  message2: \"everyone\"\r\n};\r\n\r\nconst handler3 = {\r\n  get: function (target, prop, receiver) {\r\n    if (prop === \"message2\") {\r\n      return \"world\";\r\n    }\r\n    return Reflect.get(...arguments);\r\n  },\r\n};\r\n\r\nconst proxy3 = new Proxy(target, handler3);\r\n\r\nconsole.log(proxy3.message1); // hello\r\nconsole.log(proxy3.message2); // world</code></pre>\r\n<p id=\"bkmrk-with-a-proxy%2C%C2%A0you-ca\">With a Proxy, you can easily validate the passed value for an object. This example uses the <code>set()</code> handler.</p>\r\n<pre id=\"bkmrk-let-validator-%3D-%7B-se\"><code class=\"language-JavaScript\">let validator = {\r\n  set: function(obj, prop, value) {\r\n    if (prop === \'age\') {\r\n      if (!Number.isInteger(value)) {\r\n        throw new TypeError(\'The age is not an integer\');\r\n      }\r\n      if (value &gt; 200) {\r\n        throw new RangeError(\'The age seems invalid\');\r\n      }\r\n    }\r\n\r\n    // The default behavior to store the value\r\n    obj[prop] = value;\r\n\r\n    // Indicate success\r\n    return true;\r\n  }\r\n};\r\n\r\nconst person = new Proxy({}, validator);\r\n\r\nperson.age = 100;\r\nconsole.log(person.age); // 100\r\nperson.age = \'young\';    // Throws an exception\r\nperson.age = 300;        // Throws an exception</code></pre>\r\n<p id=\"bkmrk-%C2%A0\"> </p>', 'The Proxy object enables you to create a proxy for another object, which can intercept and redefine fundamental operations for that object.\r\nA Proxy is created with two parameters:\r\ntarget: the original object which you want to proxy\r\nhandler: an object that defines which operations will be intercepted and how to redefine intercepted operations.\r\nWith the help of the Reflect class we can give some accessors the original behavior and redefine others:\r\nconst target = {\r\n  message1: \"hello\",\r\n  message2: \"everyone\"\r\n};\r\n\r\nconst handler3 = {\r\n  get: function (target, prop, receiver) {\r\n    if (prop === \"message2\") {\r\n      return \"world\";\r\n    }\r\n    return Reflect.get(...arguments);\r\n  },\r\n};\r\n\r\nconst proxy3 = new Proxy(target, handler3);\r\n\r\nconsole.log(proxy3.message1); // hello\r\nconsole.log(proxy3.message2); // world\r\nWith a Proxy, you can easily validate the passed value for an object. This example uses the set() handler.\r\nlet validator = {\r\n  set: function(obj, prop, value) {\r\n    if (prop === \'age\') {\r\n      if (!Number.isInteger(value)) {\r\n        throw new TypeError(\'The age is not an integer\');\r\n      }\r\n      if (value > 200) {\r\n        throw new RangeError(\'The age seems invalid\');\r\n      }\r\n    }\r\n\r\n    // The default behavior to store the value\r\n    obj[prop] = value;\r\n\r\n    // Indicate success\r\n    return true;\r\n  }\r\n};\r\n\r\nconst person = new Proxy({}, validator);\r\n\r\nperson.age = 100;\r\nconsole.log(person.age); // 100\r\nperson.age = \'young\';    // Throws an exception\r\nperson.age = 300;        // Throws an exception\r\n ', 1, '2022-01-10 13:39:38', '2022-01-10 13:39:38', 'proxy', 'javascript', 'version', '', '', 2),
(418, 58, 'Proxy', '<p>The Proxy object enables you to create a proxy for another object, which can intercept and redefine fundamental operations for that object.</p>\n<p>A&nbsp;<code>Proxy</code>&nbsp;is created with two parameters:</p>\n<ul>\n<li><code>target</code>: the original object which you want to proxy</li>\n<li><code>handler</code>: an object that defines which operations will be intercepted and how to redefine intercepted operations.</li>\n</ul>\n<p>With the help of the Reflect class we can give some accessors the original behavior and redefine others:</p>\n<pre><code class=\"language-JavaScript\">const target = {\n  message1: \"hello\",\n  message2: \"everyone\"\n};\n\nconst handler3 = {\n  get: function (target, prop, receiver) {\n    if (prop === \"message2\") {\n      return \"world\";\n    }\n    return Reflect.get(...arguments);\n  },\n};\n\nconst proxy3 = new Proxy(target, handler3);\n\nconsole.log(proxy3.message1); // hello\nconsole.log(proxy3.message2); // world</code></pre>\n<p>With a Proxy,&nbsp;you can easily validate the passed value for an object. This example uses the <code>set()</code> handler.</p>\n<pre><code class=\"language-JavaScript\">let validator = {\n  set: function(obj, prop, value) {\n    if (prop === \'age\') {\n      if (!Number.isInteger(value)) {\n        throw new TypeError(\'The age is not an integer\');\n      }\n      if (value &gt; 200) {\n        throw new RangeError(\'The age seems invalid\');\n      }\n    }\n\n    // The default behavior to store the value\n    obj[prop] = value;\n\n    // Indicate success\n    return true;\n  }\n};\n\nconst person = new Proxy({}, validator);\n\nperson.age = 100;\nconsole.log(person.age); // 100\nperson.age = \'young\';    // Throws an exception\nperson.age = 300;        // Throws an exception</code></pre>\n<p>&nbsp;</p>', '', 1, '2022-01-10 13:39:38', '2022-01-10 13:39:38', 'proxy', 'javascript', 'update_draft', '', NULL, 0);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(419, 55, 'Promises', '<p id=\"bkmrk-promises-are-javascr\">Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.</p>\r\n<ul id=\"bkmrk-the-output-returned-\"><li>The output returned from the promise is available only inside the resolved function. This means we always have to use either <code>.then()</code> or wrap the promise inside an <code>async</code> function and then prefix it with <code>await</code> to get the result.</li>\r\n</ul><pre id=\"bkmrk-function-resolveafte\"><code class=\"language-JavaScript\">function resolveAfter2Seconds(x) { \r\n    return new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x = 10;\r\nlet promise = new Promise(resolve =&gt; {\r\n        setTimeout(() =&gt; {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n	// result is whatever we passed in the resolve(...) function above.\r\n    console.log(result) // 10\r\n});</code></pre>\r\n<ul id=\"bkmrk-%C2%A0\"><li> </li>\r\n</ul><p id=\"bkmrk-a-key-difference-bet\">A key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.</p>\r\n<p id=\"bkmrk-callbacks%3A\">Callbacks:</p>\r\n<pre id=\"bkmrk-function-getmoneybac\"><code class=\"language-JavaScript\">function getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)</code></pre>\r\n<p id=\"bkmrk-promises%3A\">Promises:</p>\r\n<pre id=\"bkmrk-function-getmoneybac-0\"><code class=\"language-JavaScript\">function getMoneyBack(money) {\r\n  return new Promise((resolve, reject) =&gt; {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) =&gt; {\r\n  console.log(money)\r\n})</code></pre>\r\n<h4 id=\"bkmrk-promise-chaining\">Promise Chaining</h4>\r\n<p id=\"bkmrk-promise-chaining-bec\">Promise chaining becomes absolutely useful when we need to execute a chain of asynchronous tasks. Each task that’s being chained can only start as soon as the previous task has completed, controlled by the <code class=\"pd pe pf pg ph b\">.then</code> of the chain.</p>\r\n<pre id=\"bkmrk-const-add-%3D-%28num1%2C-n\"><code class=\"language-JavaScript\">const add = (num1, num2) =&gt; new Promise((resolve) =&gt; resolve(num1 + num2))\r\n\r\nadd(2, 4)\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 6\r\n    return result + 10\r\n  })\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 16\r\n    return result\r\n  })\r\n  .then((result) =&gt; {\r\n    console.log(result) // result: 16\r\n  })</code></pre>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641816148186.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641816148186.png\" alt=\"image-1641816148186.png\" width=\"210\" height=\"268\"></a></p>\r\n<p id=\"bkmrk-technically-we-can-a\">Technically we can also add many <code>.then</code> to a single promise. This is not chaining.</p>\r\n<pre id=\"bkmrk-let-promise-%3D-new-pr\"><code class=\"language-JavaScript\">let promise = new Promise(function(resolve, reject) {\r\n  setTimeout(() =&gt; resolve(1), 1000);\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});</code></pre>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641816187301.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641816187301.png\" alt=\"image-1641816187301.png\" width=\"398\" height=\"148\"></a></p>\r\n<h4 id=\"bkmrk-promise-api\">Promise API</h4>\r\n<p id=\"bkmrk-apart-from-the-handl\">Apart from the handler methods (.then, .catch, and .finally), there are six static methods available in the Promise API. The first four methods accept an array of promises and run them in parallel.</p>\r\n<ol id=\"bkmrk-promise.all-promise.\"><li>Promise.all</li>\r\n<li>Promise.any</li>\r\n<li>Promise.allSettled</li>\r\n<li>Promise.race</li>\r\n<li>Promise.resolve</li>\r\n<li>Promise.reject</li>\r\n</ol>', 'Promises are JavaScript objects that represent an eventual completion or failure of an asynchronous operation.\r\nThe output returned from the promise is available only inside the resolved function. This means we always have to use either .then() or wrap the promise inside an async function and then prefix it with await to get the result.\r\nfunction resolveAfter2Seconds(x) { \r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000);\r\n    });\r\n}\r\n\r\nasync function f1() {\r\n    let x = await resolveAfter2Seconds(10);\r\n    console.log(x); // 10\r\n}\r\n\r\nf1();\r\n\r\n// -----------------------------\r\n\r\nvar x = 10;\r\nlet promise = new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(x);\r\n        }, 2000)\r\n});\r\n\r\npromise.then(function(result){\r\n	// result is whatever we passed in the resolve(...) function above.\r\n    console.log(result) // 10\r\n});\r\n \r\nA key difference between the two is when using the callback approach, we’d normally just pass a callback into a function that would then get called upon completion in order to get the result of something. In promises, however, you attach callbacks on the returned promise object.\r\nCallbacks:\r\nfunction getMoneyBack(money, callback) {\r\n  if (typeof money !== \'number\') {\r\n    callback(null, new Error(\'money is not a number\'))\r\n  } else {\r\n    callback(money)\r\n  }\r\n}\r\n\r\nconst money = getMoneyBack(1200)\r\nconsole.log(money)\r\nPromises:\r\nfunction getMoneyBack(money) {\r\n  return new Promise((resolve, reject) => {\r\n    if (typeof money !== \'number\') {\r\n      reject(new Error(\'money is not a number\'))\r\n    } else {\r\n      resolve(money)\r\n    }\r\n  })\r\n}\r\n\r\ngetMoneyBack(1200).then((money) => {\r\n  console.log(money)\r\n})\r\nPromise Chaining\r\nPromise chaining becomes absolutely useful when we need to execute a chain of asynchronous tasks. Each task that’s being chained can only start as soon as the previous task has completed, controlled by the .then of the chain.\r\nconst add = (num1, num2) => new Promise((resolve) => resolve(num1 + num2))\r\n\r\nadd(2, 4)\r\n  .then((result) => {\r\n    console.log(result) // result: 6\r\n    return result + 10\r\n  })\r\n  .then((result) => {\r\n    console.log(result) // result: 16\r\n    return result\r\n  })\r\n  .then((result) => {\r\n    console.log(result) // result: 16\r\n  })\r\n\r\nTechnically we can also add many .then to a single promise. This is not chaining.\r\nlet promise = new Promise(function(resolve, reject) {\r\n  setTimeout(() => resolve(1), 1000);\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\npromise.then(function(result) {\r\n  alert(result); // 1\r\n  return result * 2;\r\n});\r\n\r\nPromise API\r\nApart from the handler methods (.then, .catch, and .finally), there are six static methods available in the Promise API. The first four methods accept an array of promises and run them in parallel.\r\nPromise.all\r\nPromise.any\r\nPromise.allSettled\r\nPromise.race\r\nPromise.resolve\r\nPromise.reject\r\n', 1, '2022-01-10 15:54:58', '2022-01-10 15:54:58', 'promises', 'javascript', 'version', '', '', 9),
(420, 59, 'Generators', '<p id=\"bkmrk-iterators-and-genera\">Iterators and Generators bring the concept of iteration directly into the core language and provide a mechanism for customising the behavior of loops.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641830556878.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641830556878.png\" alt=\"image-1641830556878.png\" width=\"459\" height=\"338\"></a></p>\r\n<pre id=\"bkmrk-function-%2A-generator\"><code class=\"language-JavaScript\">function * generatorFunction() { // Line 1\r\n  console.log(\'This will be executed first.\');\r\n  yield \'Hello, \';   // Line 2\r\n  console.log(\'I will be printed after the pause\');  \r\n  yield \'World!\';\r\n}\r\nconst generatorObject = generatorFunction(); // Line 3\r\nconsole.log(generatorObject.next().value); // Line 4\r\nconsole.log(generatorObject.next().value); // Line 5\r\nconsole.log(generatorObject.next().value); // Line 6\r\n// This will be executed first.\r\n// Hello, \r\n// I will be printed after the pause\r\n// World!\r\n// undefined</code></pre>', 'Iterators and Generators bring the concept of iteration directly into the core language and provide a mechanism for customising the behavior of loops.\r\n\r\nfunction * generatorFunction() { // Line 1\r\n  console.log(\'This will be executed first.\');\r\n  yield \'Hello, \';   // Line 2\r\n  console.log(\'I will be printed after the pause\');  \r\n  yield \'World!\';\r\n}\r\nconst generatorObject = generatorFunction(); // Line 3\r\nconsole.log(generatorObject.next().value); // Line 4\r\nconsole.log(generatorObject.next().value); // Line 5\r\nconsole.log(generatorObject.next().value); // Line 6\r\n// This will be executed first.\r\n// Hello, \r\n// I will be printed after the pause\r\n// World!\r\n// undefined', 1, '2022-01-10 16:03:01', '2022-01-10 16:03:01', 'generators', 'javascript', 'version', '', 'Initial publish', 1),
(421, 59, 'Generators', '<p id=\"bkmrk-iterators-and-genera\">Iterators and Generators bring the concept of iteration directly into the core language and provide a mechanism for customising the behavior of loops.</p>\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/image-1641830556878.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-01/scaled-1680-/image-1641830556878.png\" alt=\"image-1641830556878.png\" width=\"459\" height=\"338\" /></a></p>\n<pre><code class=\"language-JavaScript\">function * generatorFunction() { // Line 1\n  console.log(\'This will be executed first.\');\n  yield \'Hello, \';   // Line 2\n  console.log(\'I will be printed after the pause\');  \n  yield \'World!\';\n}\nconst generatorObject = generatorFunction(); // Line 3\nconsole.log(generatorObject.next().value); // Line 4\nconsole.log(generatorObject.next().value); // Line 5\nconsole.log(generatorObject.next().value); // Line 6\n// This will be executed first.\n// Hello, \n// I will be printed after the pause\n// World!\n// undefined</code></pre>\n<p>We can also return from a generator. However,&nbsp;<code class=\"je jf jg jh ji b\">return</code>&nbsp;sets the&nbsp;<code class=\"je jf jg jh ji b\">done</code>&nbsp;property to&nbsp;<code class=\"je jf jg jh ji b\">true</code>&nbsp;after which the generator cannot generate any more values.</p>\n<pre><code class=\"language-JavaScript\">function *  generatorFunc() {\n  yield \'a\';\n  return \'b\'; // Generator ends here.\n  yield \'a\'; // Will never be executed. \n}</code></pre>\n<h4>What are the use cases of Generators?</h4>\n<p>&nbsp;</p>', '', 1, '2022-01-10 16:03:49', '2022-01-10 16:05:49', 'generators', 'javascript', 'update_draft', '', NULL, 0),
(423, 40, 'Learning Roadmap', '<h4 id=\"bkmrk-current-roadmap\">Current Roadmap</h4>\r\n<ol id=\"bkmrk-docker-webpack-php-m\"><li>Docker</li>\r\n<li>Webpack and JS modules</li>\r\n<li>PHP MVC</li>\r\n<li>Vanilla JS</li>\r\n<li>Design Patterns</li>\r\n<li>Read SQL docs -&gt; <a href=\"https://dev.mysql.com/doc/refman/8.0/en/\">https://dev.mysql.com/doc/refman/8.0/en/</a></li>\r\n<li>PHP-FPM, PostgreSQL, Nginx, Apache</li>\r\n</ol><h4 id=\"bkmrk-future-certificates%C2%A0\">Future Certificates </h4>\r\n<ol id=\"bkmrk-network%2B-linux%2B-secu\"><li>Network+</li>\r\n<li>Linux+</li>\r\n<li>\r\n<p>Security+</p>\r\n</li>\r\n<li>\r\n<p class=\"udlite-heading-xl clp-lead__title clp-lead__title--small\" data-purpose=\"lead-title\">AWS Certified Cloud Practitioner</p>\r\n</li>\r\n</ol>', 'Current Roadmap\r\nDocker\r\nWebpack and JS modules\r\nPHP MVC\r\nVanilla JS\r\nDesign Patterns\r\nRead SQL docs -> https://dev.mysql.com/doc/refman/8.0/en/\r\nPHP-FPM, PostgreSQL, Nginx, Apache\r\nFuture Certificates \r\nNetwork+\r\nLinux+\r\n\r\nSecurity+\r\n\r\n\r\nAWS Certified Cloud Practitioner\r\n\r\n', 1, '2022-02-13 12:32:37', '2022-02-13 12:32:37', 'learning-roadmap', 'misc', 'version', '', '', 7),
(425, 40, 'Learning Roadmap', '<h4 id=\"bkmrk-current-roadmap\">Current Roadmap</h4>\r\n<ol id=\"bkmrk-docker-webpack-php-m\"><li>Docker</li>\r\n<li>Webpack and JS modules</li>\r\n<li>PHP MVC</li>\r\n<li>Vanilla JS</li>\r\n<li>Design Patterns</li>\r\n<li>Read SQL docs -&gt; <a href=\"https://dev.mysql.com/doc/refman/8.0/en/\">https://dev.mysql.com/doc/refman/8.0/en/</a></li>\r\n<li>PHP-FPM, PostgreSQL, Nginx, Apache</li>\r\n</ol><h4 id=\"bkmrk-future-certificates%C2%A0\">Future Certificates </h4>\r\n<ol id=\"bkmrk-network%2B-linux%2B-secu\"><li>Network+</li>\r\n<li>Linux+</li>\r\n<li>\r\n<p>Security+</p>\r\n</li>\r\n<li>\r\n<p class=\"udlite-heading-xl clp-lead__title clp-lead__title--small\" data-purpose=\"lead-title\">AWS Certified Cloud Practitioner</p>\r\n</li>\r\n</ol><h4 id=\"bkmrk-things-i-still-need-\">Things I still need to polish</h4>\r\n<ol id=\"bkmrk-docker-php-server-co\"><li>Docker</li>\r\n<li>PHP Server Configuration</li>\r\n<li>Complicated SQL queries</li>\r\n</ol>', 'Current Roadmap\r\nDocker\r\nWebpack and JS modules\r\nPHP MVC\r\nVanilla JS\r\nDesign Patterns\r\nRead SQL docs -> https://dev.mysql.com/doc/refman/8.0/en/\r\nPHP-FPM, PostgreSQL, Nginx, Apache\r\nFuture Certificates \r\nNetwork+\r\nLinux+\r\n\r\nSecurity+\r\n\r\n\r\nAWS Certified Cloud Practitioner\r\n\r\nThings I still need to polish\r\nDocker\r\nPHP Server Configuration\r\nComplicated SQL queries\r\n', 1, '2022-02-17 07:44:24', '2022-02-17 07:44:24', 'learning-roadmap', 'misc', 'version', '', '', 8),
(426, 40, 'Learning Roadmap', '<h4 id=\"bkmrk-current-roadmap\">Current Roadmap</h4>\r\n<ol id=\"bkmrk-docker-webpack-php-m\"><li>Docker</li>\r\n<li>Webpack and JS modules</li>\r\n<li>PHP MVC</li>\r\n<li>Vanilla JS</li>\r\n<li>Design Patterns</li>\r\n<li>Read SQL docs -&gt; <a href=\"https://dev.mysql.com/doc/refman/8.0/en/\">https://dev.mysql.com/doc/refman/8.0/en/</a></li>\r\n<li>PHP-FPM, PostgreSQL, Nginx, Apache</li>\r\n<li>SOLID</li>\r\n<li>DB Sharding</li>\r\n</ol><h4 id=\"bkmrk-future-certificates%C2%A0\">Future Certificates </h4>\r\n<ol id=\"bkmrk-network%2B-linux%2B-secu\"><li>Network+</li>\r\n<li>Linux+</li>\r\n<li>\r\n<p>Security+</p>\r\n</li>\r\n<li>\r\n<p class=\"udlite-heading-xl clp-lead__title clp-lead__title--small\" data-purpose=\"lead-title\">AWS Certified Cloud Practitioner</p>\r\n</li>\r\n</ol><h4 id=\"bkmrk-things-i-still-need-\">Things I still need to polish</h4>\r\n<ol id=\"bkmrk-docker-php-server-co\"><li>Docker</li>\r\n<li>PHP Server Configuration</li>\r\n<li>Complicated SQL queries</li>\r\n</ol>', 'Current Roadmap\r\nDocker\r\nWebpack and JS modules\r\nPHP MVC\r\nVanilla JS\r\nDesign Patterns\r\nRead SQL docs -> https://dev.mysql.com/doc/refman/8.0/en/\r\nPHP-FPM, PostgreSQL, Nginx, Apache\r\nSOLID\r\nDB Sharding\r\nFuture Certificates \r\nNetwork+\r\nLinux+\r\n\r\nSecurity+\r\n\r\n\r\nAWS Certified Cloud Practitioner\r\n\r\nThings I still need to polish\r\nDocker\r\nPHP Server Configuration\r\nComplicated SQL queries\r\n', 1, '2022-03-11 10:02:39', '2022-03-11 10:02:39', 'learning-roadmap', 'misc', 'version', '', '', 9),
(427, 60, 'Advice', '<ul id=\"bkmrk-a-common-mistake-i-s\"><li>A common mistake I see junior engineers make is that they dive head-first into coding. They stick with only the tools they know, and try to fit it for every situation. Using the right tool is the difference between laboring for weeks, and finishing a task in 10 minutes. That’s where the 10x difference accrues.</li>\r\n</ul>', 'A common mistake I see junior engineers make is that they dive head-first into coding. They stick with only the tools they know, and try to fit it for every situation. Using the right tool is the difference between laboring for weeks, and finishing a task in 10 minutes. That’s where the 10x difference accrues.\r\n', 1, '2022-03-11 10:14:01', '2022-03-11 10:14:01', 'advice', 'misc', 'version', '', 'Initial publish', 1),
(428, 61, 'Console commands', '', '', 1, '2022-03-17 08:01:50', '2022-03-17 08:01:50', 'console-commands', 'mysql', 'version', '', 'Initial publish', 1),
(430, 61, 'Console Commands', '<ul id=\"bkmrk-desc-table---list-al\"><li><strong>desc <em>table </em></strong>- List all columns of an table<br><ul><li><strong>desc mysql.user </strong>- Access all users of mysql</li>\r\n</ul></li>\r\n<li><strong>select user() / database()</strong> - Get current mysql user / database</li>\r\n<li><strong>use <em>database </em></strong>- Switch to database</li>\r\n<li><strong>status</strong> - Database and user status</li>\r\n</ul>', 'desc table - List all columns of an tabledesc mysql.user - Access all users of mysql\r\n\r\nselect user() / database() - Get current mysql user / database\r\nuse database - Switch to database\r\nstatus - Database and user status\r\n', 1, '2022-03-17 08:05:56', '2022-03-17 08:05:56', 'console-commands', 'mysql', 'version', '', '', 2),
(432, 61, 'Console Commands', '<ul id=\"bkmrk-desc-table---list-al\"><li><strong>DESC <em>table </em></strong>- List all columns of an table<br><ul><li><strong>DESC mysql.user </strong>- Access all users of mysql</li>\r\n</ul></li>\r\n<li><strong>SELECT user() / database()</strong> - Get current mysql user / database\r\n<ul id=\"bkmrk-select-%2A-from-mysql.\"><li><strong>SELECT * FROM mysql.user</strong></li>\r\n</ul></li>\r\n<li><strong>USE <em>database </em></strong>- Switch to database</li>\r\n<li><strong>status</strong> - Database and user status</li>\r\n</ul>', 'DESC table - List all columns of an tableDESC mysql.user - Access all users of mysql\r\n\r\nSELECT user() / database() - Get current mysql user / database\r\nSELECT * FROM mysql.user\r\n\r\nUSE database - Switch to database\r\nstatus - Database and user status\r\n', 1, '2022-03-17 08:06:54', '2022-03-17 08:06:54', 'console-commands', 'mysql', 'version', '', '', 3),
(433, 13, 'Common Linux Commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\"><li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>find <em>d</em><em>ir </em>-name <em>file </em></strong>- Find file</li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul><li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul></li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n<li><strong>ifconfig</strong> - Returns ip address / network configuration</li>\r\n</ul><h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\"><li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul><li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul></li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updated</strong></li>\r\n<li><strong>awk </strong>- Scripting language used for manipulating data\r\n<ul id=\"bkmrk-awk-%27%7Bprint-%241%2C%244%7D%27%C2%A0\"><li><strong>awk \'{print $1,$4}\' </strong>- Get first and 4th word</li>\r\n</ul></li>\r\n<li><strong>uniq </strong>- Filters or counts out the repeated lines in a file\r\n<ul id=\"bkmrk-uniq--c%C2%A0--counts-all\"><li><strong>uniq -c </strong>- Counts all unique values</li>\r\n</ul></li>\r\n<li><strong>sort </strong>- Sort a file, arranging the records in a particular order\r\n<ul id=\"bkmrk-sort--r%C2%A0--sorts-in-r\"><li><strong>sort -r </strong>- Sorts in reverse order</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\"><li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul><li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to a file</p>\r\n<p><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nfind dir -name file - Find file\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\nifconfig - Returns ip address / network configuration\r\nFile\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\nzcat - Read a compressed file\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updated\r\nawk - Scripting language used for manipulating data\r\nawk \'{print $1,$4}\' - Get first and 4th word\r\n\r\nuniq - Filters or counts out the repeated lines in a file\r\nuniq -c - Counts all unique values\r\n\r\nsort - Sort a file, arranging the records in a particular order\r\nsort -r - Sorts in reverse order\r\n\r\nPiping\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\nls -al > file - Redirect output to a file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 1, '2022-03-17 08:08:49', '2022-03-17 08:08:49', 'common-linux-commands', 'linux', 'version', '', '', 10),
(434, 13, 'Common Linux Commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\"><li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>find <em>d</em><em>ir </em>-name <em>file </em></strong>- Find file</li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul><li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul></li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n<li><strong>ifconfig</strong> - Returns IP address / network configuration</li>\r\n</ul><h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\"><li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul><li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul></li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updated</strong></li>\r\n<li><strong>awk </strong>- Scripting language used for manipulating data\r\n<ul id=\"bkmrk-awk-%27%7Bprint-%241%2C%244%7D%27%C2%A0\"><li><strong>awk \'{print $1,$4}\' </strong>- Get first and 4th word</li>\r\n</ul></li>\r\n<li><strong>uniq </strong>- Filters or counts out the repeated lines in a file\r\n<ul id=\"bkmrk-uniq--c%C2%A0--counts-all\"><li><strong>uniq -c </strong>- Counts all unique values</li>\r\n</ul></li>\r\n<li><strong>sort </strong>- Sort a file, arranging the records in a particular order\r\n<ul id=\"bkmrk-sort--r%C2%A0--sorts-in-r\"><li><strong>sort -r </strong>- Sorts in reverse order</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\"><li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul><li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to a file</p>\r\n<p><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nfind dir -name file - Find file\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\nifconfig - Returns IP address / network configuration\r\nFile\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\nzcat - Read a compressed file\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updated\r\nawk - Scripting language used for manipulating data\r\nawk \'{print $1,$4}\' - Get first and 4th word\r\n\r\nuniq - Filters or counts out the repeated lines in a file\r\nuniq -c - Counts all unique values\r\n\r\nsort - Sort a file, arranging the records in a particular order\r\nsort -r - Sorts in reverse order\r\n\r\nPiping\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\nls -al > file - Redirect output to a file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 1, '2022-03-17 08:09:05', '2022-03-17 08:09:05', 'common-linux-commands', 'linux', 'version', '', '', 11),
(435, 13, 'Common Linux Commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\"><li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>find <em>d</em><em>ir </em>-name <em>file </em></strong>- Find file</li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul><li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul></li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n<li><strong>ifconfig</strong> - Returns IP address / network configuration</li>\r\n<li><strong>ping <em>ipAddress </em></strong>- Test connection with another device</li>\r\n</ul><h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\"><li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul><li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul></li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updated</strong></li>\r\n<li><strong>awk </strong>- Scripting language used for manipulating data\r\n<ul id=\"bkmrk-awk-%27%7Bprint-%241%2C%244%7D%27%C2%A0\"><li><strong>awk \'{print $1,$4}\' </strong>- Get first and 4th word</li>\r\n</ul></li>\r\n<li><strong>uniq </strong>- Filters or counts out the repeated lines in a file\r\n<ul id=\"bkmrk-uniq--c%C2%A0--counts-all\"><li><strong>uniq -c </strong>- Counts all unique values</li>\r\n</ul></li>\r\n<li><strong>sort </strong>- Sort a file, arranging the records in a particular order\r\n<ul id=\"bkmrk-sort--r%C2%A0--sorts-in-r\"><li><strong>sort -r </strong>- Sorts in reverse order</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\"><li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul><li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to a file</p>\r\n<p><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nfind dir -name file - Find file\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\nifconfig - Returns IP address / network configuration\r\nping ipAddress - Test connection with another device\r\nFile\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\nzcat - Read a compressed file\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updated\r\nawk - Scripting language used for manipulating data\r\nawk \'{print $1,$4}\' - Get first and 4th word\r\n\r\nuniq - Filters or counts out the repeated lines in a file\r\nuniq -c - Counts all unique values\r\n\r\nsort - Sort a file, arranging the records in a particular order\r\nsort -r - Sorts in reverse order\r\n\r\nPiping\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\nls -al > file - Redirect output to a file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 1, '2022-03-17 08:09:33', '2022-03-17 08:09:33', 'common-linux-commands', 'linux', 'version', '', '', 12),
(437, 13, 'Common Linux Commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\"><li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>find <em>d</em><em>ir </em>-name <em>file </em></strong>- Find file</li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul><li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul></li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n<li><strong>ifconfig</strong> - Returns IP address / network configuration</li>\r\n<li><strong>ping <em>ipAddress </em></strong>- Test connection with another device</li>\r\n<li><strong>arp -a </strong>- List all active devices on a local network</li>\r\n<li><strong>lsof </strong>- View any running processes on your Mac that have active network connections</li>\r\n</ul><h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\"><li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul><li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul></li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updated</strong></li>\r\n<li><strong>awk </strong>- Scripting language used for manipulating data\r\n<ul id=\"bkmrk-awk-%27%7Bprint-%241%2C%244%7D%27%C2%A0\"><li><strong>awk \'{print $1,$4}\' </strong>- Get first and 4th word</li>\r\n</ul></li>\r\n<li><strong>uniq </strong>- Filters or counts out the repeated lines in a file\r\n<ul id=\"bkmrk-uniq--c%C2%A0--counts-all\"><li><strong>uniq -c </strong>- Counts all unique values</li>\r\n</ul></li>\r\n<li><strong>sort </strong>- Sort a file, arranging the records in a particular order\r\n<ul id=\"bkmrk-sort--r%C2%A0--sorts-in-r\"><li><strong>sort -r </strong>- Sorts in reverse order</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\"><li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul><li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to a file</p>\r\n<p><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nfind dir -name file - Find file\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\nifconfig - Returns IP address / network configuration\r\nping ipAddress - Test connection with another device\r\narp -a - List all active devices on a local network\r\nlsof - View any running processes on your Mac that have active network connections\r\nFile\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\nzcat - Read a compressed file\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updated\r\nawk - Scripting language used for manipulating data\r\nawk \'{print $1,$4}\' - Get first and 4th word\r\n\r\nuniq - Filters or counts out the repeated lines in a file\r\nuniq -c - Counts all unique values\r\n\r\nsort - Sort a file, arranging the records in a particular order\r\nsort -r - Sorts in reverse order\r\n\r\nPiping\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\nls -al > file - Redirect output to a file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 1, '2022-03-17 08:13:39', '2022-03-17 08:13:39', 'common-linux-commands', 'linux', 'version', '', '', 13);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(438, 13, 'Common Linux Commands', '<h3 id=\"bkmrk-general\">General</h3>\r\n<ul id=\"bkmrk-reset---reset-the-te\"><li><strong>reset</strong> - Reset the terminal to default state</li>\r\n<li><strong>uptime</strong> - Show up-time of the system</li>\r\n<li><strong>pwd</strong> - Print working directory</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updatedb</strong></li>\r\n<li><strong>find <em>d</em><em>ir </em>-name <em>file </em></strong>- Find file</li>\r\n<li><strong>which <em>command</em></strong> - Locate a command/binary</li>\r\n<li><strong>history</strong> - Print command history</li>\r\n<li><strong>man <em>command</em></strong> - Returns command references and manual</li>\r\n<li><strong>watch <em>command</em></strong> - Runs the command every 2 seconds</li>\r\n<li><strong>free</strong> - Get memory usage\r\n<ul><li><strong>watch free -h</strong> - Will watch free memory in a human readable way every 2 seconds</li>\r\n</ul></li>\r\n<li><strong>ps aux</strong> - Get a list of all running processes</li>\r\n<li><strong>killall <em>process</em></strong> - Kills all related processes</li>\r\n<li><strong>env</strong> - Returns all environment variables</li>\r\n</ul><h3 id=\"bkmrk-networking\">Networking</h3>\r\n<ul id=\"bkmrk-ifconfig---returns-i\"><li><strong>ifconfig</strong> - Returns IP address / network configuration</li>\r\n<li><strong>ping <em>ipAddress </em></strong>- Test connection with another device</li>\r\n<li><strong>arp -a </strong>- List all active devices on a local network</li>\r\n<li><strong>lsof </strong>- View any running processes on your Mac that have active network connections</li>\r\n</ul><h3 id=\"bkmrk-file\">File</h3>\r\n<ul id=\"bkmrk-touch-...files%C2%A0--cre\"><li><strong>touch <em>...files</em></strong> - Creates a file</li>\r\n<li><strong>mkdir <em>directory</em></strong> - Creates a directory</li>\r\n<li><strong>cp <em>file_to_copy</em> <em>file_destination</em></strong> - Copies files</li>\r\n<li><strong>mv <em>file_to_move file_destination</em></strong> - Moves or renames files</li>\r\n<li><strong>rm <em>...files</em></strong> - Deletes file/files or directory/directories</li>\r\n<li><strong>rmdir <em>...directories</em></strong> - Deletes directory/directories</li>\r\n<li><strong>cat <em>...files</em></strong> - Concatenates or view a file/files\r\n<ul><li><strong>zcat</strong> - Read a compressed file</li>\r\n</ul></li>\r\n<li><strong>less <em>file</em></strong> - Reads through a file. To exit, press Q</li>\r\n<li><strong>file <em>file</em></strong> - Outputs the type of the file</li>\r\n<li><strong>locate <em>file</em></strong> - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run <strong>updated</strong></li>\r\n<li><strong>awk </strong>- Scripting language used for manipulating data\r\n<ul id=\"bkmrk-awk-%27%7Bprint-%241%2C%244%7D%27%C2%A0\"><li><strong>awk \'{print $1,$4}\' </strong>- Get first and 4th word</li>\r\n</ul></li>\r\n<li><strong>uniq </strong>- Filters or counts out the repeated lines in a file\r\n<ul id=\"bkmrk-uniq--c%C2%A0--counts-all\"><li><strong>uniq -c </strong>- Counts all unique values</li>\r\n</ul></li>\r\n<li><strong>sort </strong>- Sort a file, arranging the records in a particular order\r\n<ul id=\"bkmrk-sort--r%C2%A0--sorts-in-r\"><li><strong>sort -r </strong>- Sorts in reverse order</li>\r\n</ul></li>\r\n</ul><h3 id=\"bkmrk-piping\">Piping</h3>\r\n<ul id=\"bkmrk-%7C---pipe-the-output-\"><li>\r\n<p><strong>|</strong> - Pipe the output of one program into an another</p>\r\n</li>\r\n<li>\r\n<p><strong>grep <em>string</em></strong> - Filters text based on a string argument</p>\r\n</li>\r\n<li>\r\n<p><strong>&gt;</strong> - Redirects output</p>\r\n<ul><li>\r\n<p><strong>ls -al &gt; <em>file</em></strong> - Redirect output to a file</p>\r\n<p><strong>Warning: </strong>If there is an existing file with the same name, it will be overwritten!</p>\r\n</li>\r\n</ul></li>\r\n<li>\r\n<p><strong>&gt;&gt;</strong> - Append the output to a file</p>\r\n</li>\r\n<li>\r\n<p><strong>strings <em>file </em></strong>- Returns all strings of an file</p>\r\n</li>\r\n</ul>', 'General\r\nreset - Reset the terminal to default state\r\nuptime - Show up-time of the system\r\npwd - Print working directory\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updatedb\r\nfind dir -name file - Find file\r\nwhich command - Locate a command/binary\r\nhistory - Print command history\r\nman command - Returns command references and manual\r\nwatch command - Runs the command every 2 seconds\r\nfree - Get memory usage\r\nwatch free -h - Will watch free memory in a human readable way every 2 seconds\r\n\r\nps aux - Get a list of all running processes\r\nkillall process - Kills all related processes\r\nenv - Returns all environment variables\r\nNetworking\r\nifconfig - Returns IP address / network configuration\r\nping ipAddress - Test connection with another device\r\narp -a - List all active devices on a local network\r\nlsof - View any running processes on your Mac that have active network connections\r\nFile\r\ntouch ...files - Creates a file\r\nmkdir directory - Creates a directory\r\ncp file_to_copy file_destination - Copies files\r\nmv file_to_move file_destination - Moves or renames files\r\nrm ...files - Deletes file/files or directory/directories\r\nrmdir ...directories - Deletes directory/directories\r\ncat ...files - Concatenates or view a file/files\r\nzcat - Read a compressed file\r\n\r\nless file - Reads through a file. To exit, press Q\r\nfile file - Outputs the type of the file\r\nlocate file - Find the the location of the file. File paths are stored in a database and they are updated once a day, to update them manually run updated\r\nawk - Scripting language used for manipulating data\r\nawk \'{print $1,$4}\' - Get first and 4th word\r\n\r\nuniq - Filters or counts out the repeated lines in a file\r\nuniq -c - Counts all unique values\r\n\r\nsort - Sort a file, arranging the records in a particular order\r\nsort -r - Sorts in reverse order\r\n\r\nPiping\r\n\r\n| - Pipe the output of one program into an another\r\n\r\n\r\ngrep string - Filters text based on a string argument\r\n\r\n\r\n> - Redirects output\r\n\r\nls -al > file - Redirect output to a file\r\nWarning: If there is an existing file with the same name, it will be overwritten!\r\n\r\n\r\n\r\n>> - Append the output to a file\r\n\r\n\r\nstrings file - Returns all strings of an file\r\n\r\n', 1, '2022-03-17 08:14:14', '2022-03-17 08:14:14', 'common-linux-commands', 'linux', 'version', '', '', 14),
(440, 61, 'Console Commands', '<ul id=\"bkmrk-desc-table---list-al\"><li><strong>DESC <em>table </em></strong>- List all columns of an table<br><ul><li><strong>DESC mysql.user </strong>- Access all users of mysql</li>\r\n</ul></li>\r\n<li><strong>SELECT user() / database()</strong> - Get current mysql user / database\r\n<ul id=\"bkmrk-select-%2A-from-mysql.\"><li><strong>SELECT * FROM mysql.user</strong></li>\r\n</ul></li>\r\n<li><strong>USE <em>database </em></strong>- Switch to database</li>\r\n<li><strong>status</strong> - Database and user status</li>\r\n<li><strong>CREATE</strong> <strong>USER</strong> \'username\'<strong> IDENTIFIED BY</strong> \'password\' - Create new MySql user</li>\r\n</ul>', 'DESC table - List all columns of an tableDESC mysql.user - Access all users of mysql\r\n\r\nSELECT user() / database() - Get current mysql user / database\r\nSELECT * FROM mysql.user\r\n\r\nUSE database - Switch to database\r\nstatus - Database and user status\r\nCREATE USER \'username\' IDENTIFIED BY \'password\' - Create new MySql user\r\n', 1, '2022-03-18 13:10:42', '2022-03-18 13:10:42', 'console-commands', 'mysql', 'version', '', '', 4),
(442, 61, 'Console Commands', '<ul id=\"bkmrk-desc-table---list-al\"><li><strong>DESC <em>table </em></strong>- List all columns of an table<br><ul><li><strong>DESC mysql.user </strong>- Access all users of mysql</li>\r\n</ul></li>\r\n<li><strong>SELECT user() / database()</strong> - Get current mysql user / database\r\n<ul id=\"bkmrk-select-%2A-from-mysql.\"><li><strong>SELECT * FROM mysql.user</strong></li>\r\n</ul></li>\r\n<li><strong>USE <em>database </em></strong>- Switch to database</li>\r\n<li><strong>status</strong> - Database and user status</li>\r\n<li><strong>CREATE</strong> <strong>USER</strong> username<strong> IDENTIFIED BY</strong> password - Create new DB server user</li>\r\n<li><strong>DROP USER </strong>username - Delete DB server user</li>\r\n</ul>', 'DESC table - List all columns of an tableDESC mysql.user - Access all users of mysql\r\n\r\nSELECT user() / database() - Get current mysql user / database\r\nSELECT * FROM mysql.user\r\n\r\nUSE database - Switch to database\r\nstatus - Database and user status\r\nCREATE USER username IDENTIFIED BY password - Create new DB server user\r\nDROP USER username - Delete DB server user\r\n', 1, '2022-03-18 13:11:49', '2022-03-18 13:11:49', 'console-commands', 'mysql', 'version', '', '', 5),
(443, 61, 'Console Commands', '<ul id=\"bkmrk-desc-table---list-al\"><li><strong>.my.cnf </strong>- MySQL default connection configuration</li>\r\n<li><strong>DESC <em>table </em></strong>- List all columns of an table<br><ul><li><strong>DESC mysql.user </strong>- Access all users of mysql</li>\r\n</ul></li>\r\n<li><strong>SELECT user() / database()</strong> - Get current mysql user / database\r\n<ul id=\"bkmrk-select-%2A-from-mysql.\"><li><strong>SELECT * FROM mysql.user</strong></li>\r\n</ul></li>\r\n<li><strong>USE <em>database </em></strong>- Switch to database</li>\r\n<li><strong>status</strong> - Database and user status</li>\r\n<li><strong>CREATE</strong> <strong>USER</strong> username<strong> IDENTIFIED BY</strong> password - Create new DB server user</li>\r\n<li><strong>DROP USER </strong>username - Delete DB server user</li>\r\n</ul>', '.my.cnf - MySQL default connection configuration\r\nDESC table - List all columns of an tableDESC mysql.user - Access all users of mysql\r\n\r\nSELECT user() / database() - Get current mysql user / database\r\nSELECT * FROM mysql.user\r\n\r\nUSE database - Switch to database\r\nstatus - Database and user status\r\nCREATE USER username IDENTIFIED BY password - Create new DB server user\r\nDROP USER username - Delete DB server user\r\n', 1, '2022-03-18 13:21:51', '2022-03-18 13:21:51', 'console-commands', 'mysql', 'version', '', '', 6),
(445, 61, 'Console Commands', '<ul id=\"bkmrk-desc-table---list-al\"><li><strong>DESC <em>table </em></strong>- List all columns of an table</li>\r\n<li style=\"list-style-type: none;\">\r\n<ul><li><strong>DESC mysql.user </strong>- Access all users of mysql</li>\r\n</ul></li>\r\n<li><strong>SELECT user() / database()</strong> - Get current mysql user / database\r\n<ul id=\"bkmrk-select-%2A-from-mysql.\"><li><strong>SELECT * FROM mysql.user</strong></li>\r\n</ul></li>\r\n<li><strong>USE <em>database </em></strong>- Switch to database</li>\r\n<li><strong>status</strong> - Database and user status</li>\r\n<li><strong>CREATE</strong> <strong>USER</strong> \'username\'<strong> IDENTIFIED BY</strong> \'password\' - Create new DB server user</li>\r\n<li><strong>DROP USER \'</strong>username\' - Delete DB server user</li>\r\n<li><strong>GRANT</strong> SELECT, CREATE, INSERT <strong>ON</strong> database <strong>TO</strong> \'username\'@\'%\' - Grant database privileges to user</li>\r\n<li><strong>.my.cnf </strong>- MySQL default connection configuration</li>\r\n</ul>', 'DESC table - List all columns of an table\r\n\r\nDESC mysql.user - Access all users of mysql\r\n\r\nSELECT user() / database() - Get current mysql user / database\r\nSELECT * FROM mysql.user\r\n\r\nUSE database - Switch to database\r\nstatus - Database and user status\r\nCREATE USER \'username\' IDENTIFIED BY \'password\' - Create new DB server user\r\nDROP USER \'username\' - Delete DB server user\r\nGRANT SELECT, CREATE, INSERT ON database TO \'username\'@\'%\' - Grant database privileges to user\r\n.my.cnf - MySQL default connection configuration\r\n', 1, '2022-03-18 13:42:34', '2022-03-18 13:42:34', 'console-commands', 'mysql', 'version', '', '', 7),
(446, 61, 'Console Commands', '<ul id=\"bkmrk-desc-table---list-al\"><li><strong>DESC <em>table </em></strong>- List all columns of an table</li>\r\n<li style=\"list-style-type: none;\">\r\n<ul><li><strong>DESC mysql.user </strong>- Access all users of mysql</li>\r\n</ul></li>\r\n<li><strong>SELECT user() / database()</strong> - Get current mysql user / database\r\n<ul id=\"bkmrk-select-%2A-from-mysql.\"><li><strong>SELECT * FROM mysql.user</strong></li>\r\n</ul></li>\r\n<li><strong>USE <em>database </em></strong>- Switch to database</li>\r\n<li><strong>status</strong> - Database and user status</li>\r\n<li><strong>CREATE</strong> <strong>USER</strong> \'username\'<strong> IDENTIFIED BY</strong> \'password\' - Create new DB server user</li>\r\n<li><strong>DROP USER \'</strong>username\' - Delete DB server user</li>\r\n<li><strong>GRANT</strong> SELECT, CREATE, INSERT <strong>ON</strong> database.* <strong>TO</strong> \'username\'@\'%\' - Grant database privileges to user</li>\r\n<li><strong>FLUSH PRIVILEGES</strong> - Clear priviliges cache</li>\r\n<li><strong>.my.cnf </strong>- MySQL default connection configuration</li>\r\n</ul>', 'DESC table - List all columns of an table\r\n\r\nDESC mysql.user - Access all users of mysql\r\n\r\nSELECT user() / database() - Get current mysql user / database\r\nSELECT * FROM mysql.user\r\n\r\nUSE database - Switch to database\r\nstatus - Database and user status\r\nCREATE USER \'username\' IDENTIFIED BY \'password\' - Create new DB server user\r\nDROP USER \'username\' - Delete DB server user\r\nGRANT SELECT, CREATE, INSERT ON database.* TO \'username\'@\'%\' - Grant database privileges to user\r\nFLUSH PRIVILEGES - Clear priviliges cache\r\n.my.cnf - MySQL default connection configuration\r\n', 1, '2022-03-18 13:45:34', '2022-03-18 13:45:34', 'console-commands', 'mysql', 'version', '', '', 8),
(447, 62, 'PHP server lifecycle', '', '', 1, '2022-03-22 14:07:49', '2022-03-22 14:07:49', 'php-server-lifecycle', 'servers', 'version', '', 'Initial publish', 1),
(448, 62, 'HTTP Request Life Cycle', '', '', 1, '2022-03-22 16:05:57', '2022-03-22 16:05:57', 'http-request-life-cycle', 'servers', 'version', '', '', 2),
(450, 62, 'HTTP Request Life Cycle', '<ol id=\"bkmrk-first%2C-the-browser-n\"><li>First, the browser needs to translate <a href=\"http://www.google.com/\" rel=\"noreferrer\">www.google.com</a> to an IP address. To do so it contacts a DNS server to resolve the name.</li>\r\n<li> </li>\r\n</ol>', 'First, the browser needs to translate www.google.com to an IP address. To do so it contacts a DNS server to resolve the name.\r\n \r\n', 1, '2022-03-22 16:22:19', '2022-03-22 16:22:19', 'http-request-life-cycle', 'servers', 'version', '', '', 3),
(451, 63, 'TCP Connection', '', '', 1, '2022-03-22 16:22:28', '2022-03-22 16:22:28', 'tcp-connection', 'servers', 'version', '', 'Initial publish', 1),
(453, 63, 'TCP Connection', '<ol id=\"bkmrk-open-a-tcp-connectio\"><li>Open a TCP connection: The TCP connection is used to send a request or several, and receive an answer. The client may open a new connection, reuse an existing connection, or open several TCP connections to the servers.</li>\r\n<li>Send an HTTP message: HTTP messages (before HTTP/2) are human-readable. With HTTP/2, these simple messages are encapsulated in frames, making them impossible to read directly, but the principle remains the same. For example:\r\n<div>\r\n<pre class=\"brush: http notranslate\"><code><span class=\"token request-line\"><span class=\"token method property\">GET</span> <span class=\"token request-target url\">/</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">developer.mozilla.org</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">fr</span></span>\r\n</code></pre>\r\n<button class=\"icon copy-icon\" type=\"button\"><span class=\"visually-hidden\">Copy to Clipboard</span></button></div>\r\n</li>\r\n<li>Read the response sent by the server, such as:\r\n<div>\r\n<pre class=\"brush: http notranslate\"><code><span class=\"token response-status\"><span class=\"token http-version property\">HTTP/1.1</span> <span class=\"token status-code number\">200</span> <span class=\"token reason-phrase string\">OK</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Date</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Sat, 09 Oct 2010 14:28:02 GMT</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Server</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Apache</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Last-Modified</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Tue, 01 Dec 2009 20:18:22 GMT</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">ETag</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">\"51142bc1-7449-479b075b2891b\"</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Ranges</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">bytes</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">29769</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html</span></span>\r\n<span class=\"token text-html\">\r\n&lt;!DOCTYPE html... (here come the 29769 bytes of the requested web page)\r\n</span></code></pre>\r\n<button class=\"icon copy-icon\" type=\"button\"><span class=\"visually-hidden\">Copy to Clipboard</span></button></div>\r\n</li>\r\n<li>Close or reuse the connection for further requests.</li>\r\n</ol><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647966530055.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647966530055.png\" alt=\"image-1647966530055.png\" width=\"501\" height=\"243\"></a></p>', 'Open a TCP connection: The TCP connection is used to send a request or several, and receive an answer. The client may open a new connection, reuse an existing connection, or open several TCP connections to the servers.\r\nSend an HTTP message: HTTP messages (before HTTP/2) are human-readable. With HTTP/2, these simple messages are encapsulated in frames, making them impossible to read directly, but the principle remains the same. For example:\r\n\r\nGET / HTTP/1.1\r\nHost: developer.mozilla.org\r\nAccept-Language: fr\r\n\r\nCopy to Clipboard\r\n\r\nRead the response sent by the server, such as:\r\n\r\nHTTP/1.1 200 OK\r\nDate: Sat, 09 Oct 2010 14:28:02 GMT\r\nServer: Apache\r\nLast-Modified: Tue, 01 Dec 2009 20:18:22 GMT\r\nETag: \"51142bc1-7449-479b075b2891b\"\r\nAccept-Ranges: bytes\r\nContent-Length: 29769\r\nContent-Type: text/html\r\n\r\n<!DOCTYPE html... (here come the 29769 bytes of the requested web page)\r\n\r\nCopy to Clipboard\r\n\r\nClose or reuse the connection for further requests.\r\n', 1, '2022-03-22 16:29:10', '2022-03-22 16:29:10', 'tcp-connection', 'servers', 'version', '', '', 2),
(454, 63, 'TCP Connection', '<ol id=\"bkmrk-open-a-tcp-connectio\"><li>Open a TCP connection: The TCP connection is used to send a request or several, and receive an answer. The client may open a new connection, reuse an existing connection, or open several TCP connections to the servers.</li>\r\n<li>Send an HTTP message: HTTP messages (before HTTP/2) are human-readable. With HTTP/2, these simple messages are encapsulated in frames, making them impossible to read directly, but the principle remains the same. For example:\r\n<div>\r\n<pre class=\"brush: http notranslate\"><code><span class=\"token request-line\"><span class=\"token method property\">GET</span> <span class=\"token request-target url\">/</span> <span class=\"token http-version property\">HTTP/1.1</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">developer.mozilla.org</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Language</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">fr</span></span>\r\n</code></pre>\r\n<button class=\"icon copy-icon\" type=\"button\"><span class=\"visually-hidden\">Copy to Clipboard</span></button></div>\r\n</li>\r\n<li>Read the response sent by the server, such as:\r\n<div>\r\n<pre class=\"brush: http notranslate\"><code><span class=\"token response-status\"><span class=\"token http-version property\">HTTP/1.1</span> <span class=\"token status-code number\">200</span> <span class=\"token reason-phrase string\">OK</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Date</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Sat, 09 Oct 2010 14:28:02 GMT</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Server</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Apache</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Last-Modified</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">Tue, 01 Dec 2009 20:18:22 GMT</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">ETag</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">\"51142bc1-7449-479b075b2891b\"</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Accept-Ranges</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">bytes</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">29769</span></span>\r\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">text/html</span></span>\r\n<span class=\"token text-html\">\r\n&lt;!DOCTYPE html... (here come the 29769 bytes of the requested web page)\r\n</span></code></pre>\r\n<button class=\"icon copy-icon\" type=\"button\"><span class=\"visually-hidden\">Copy to Clipboard</span></button></div>\r\n</li>\r\n<li>Close or reuse the connection for further requests.</li>\r\n</ol><p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647966530055.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647966530055.png\" alt=\"image-1647966530055.png\" width=\"501\" height=\"243\"></a></p>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647966575255.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647966575255.png\" alt=\"image-1647966575255.png\" width=\"577\" height=\"376\"></a></p>', 'Open a TCP connection: The TCP connection is used to send a request or several, and receive an answer. The client may open a new connection, reuse an existing connection, or open several TCP connections to the servers.\r\nSend an HTTP message: HTTP messages (before HTTP/2) are human-readable. With HTTP/2, these simple messages are encapsulated in frames, making them impossible to read directly, but the principle remains the same. For example:\r\n\r\nGET / HTTP/1.1\r\nHost: developer.mozilla.org\r\nAccept-Language: fr\r\n\r\nCopy to Clipboard\r\n\r\nRead the response sent by the server, such as:\r\n\r\nHTTP/1.1 200 OK\r\nDate: Sat, 09 Oct 2010 14:28:02 GMT\r\nServer: Apache\r\nLast-Modified: Tue, 01 Dec 2009 20:18:22 GMT\r\nETag: \"51142bc1-7449-479b075b2891b\"\r\nAccept-Ranges: bytes\r\nContent-Length: 29769\r\nContent-Type: text/html\r\n\r\n<!DOCTYPE html... (here come the 29769 bytes of the requested web page)\r\n\r\nCopy to Clipboard\r\n\r\nClose or reuse the connection for further requests.\r\n\r\n', 1, '2022-03-22 16:29:42', '2022-03-22 16:29:42', 'tcp-connection', 'servers', 'version', '', '', 3),
(456, 62, 'HTTP Request Life Cycle', '<ol id=\"bkmrk-first%2C-the-browser-n\"><li>First, the browser needs to translate <a href=\"http://www.google.com/\" rel=\"noreferrer\">www.google.com</a> to an IP address. To do so it contacts a DNS server to resolve the name.</li>\r\n<li>Then browser will open a TCP connection to the IP address of <a href=\"http://www.google.com/\" rel=\"noreferrer\">www.google.com</a> and send a HTTP GET request over. In this example it will be<br><code>GET / HTTP/1.1   Host: www.google.com</code></li>\r\n<li>The server software will get this HTTP request. It will somehow generate a HTTP response and send that back trough the TCP connection. How the server does this is server software dependent. You can for example plug in application code in Apache, or just make Apache return a file from the filesystem. PHP is an application called by some software, which then generates the response sent to the browser. When the response is sent, in HTTP version 1.0 the connection is closed. HTTP 1.1 can have persistent connections though.</li>\r\n<li>When the browser gets the response, it typically renders it on screen. The HTTP request is now done. A click on \"search\" will send a new request to the server.</li>\r\n</ol>', 'First, the browser needs to translate www.google.com to an IP address. To do so it contacts a DNS server to resolve the name.\r\nThen browser will open a TCP connection to the IP address of www.google.com and send a HTTP GET request over. In this example it will beGET / HTTP/1.1   Host: www.google.com\r\nThe server software will get this HTTP request. It will somehow generate a HTTP response and send that back trough the TCP connection. How the server does this is server software dependent. You can for example plug in application code in Apache, or just make Apache return a file from the filesystem. PHP is an application called by some software, which then generates the response sent to the browser. When the response is sent, in HTTP version 1.0 the connection is closed. HTTP 1.1 can have persistent connections though.\r\nWhen the browser gets the response, it typically renders it on screen. The HTTP request is now done. A click on \"search\" will send a new request to the server.\r\n', 1, '2022-03-22 16:34:58', '2022-03-22 16:34:58', 'http-request-life-cycle', 'servers', 'version', '', '', 4),
(457, 64, 'PHP Web Server', '', '', 1, '2022-03-22 16:36:21', '2022-03-22 16:36:21', 'php-web-server', 'servers', 'version', '', 'Initial publish', 1),
(459, 64, 'PHP Web Server', '<p id=\"bkmrk-php-is-a-server-side\">PHP is a server-side language that outputs (usually) HTML results. When a URL is called that requests a .php file, Apache asks PHP (the runtime, responsible for running that code you wrote) to process it and expects whatever output comes of it, then sends it back (through HTTP) to the user/browser/client software that requested it.</p>\r\n<p class=\"_1qeIAgB0cPwnLhDF9XSiJM\" id=\"bkmrk-apache---is-a-web-se\"><strong class=\"_12FoOEddL7j_RgMQN0SNeU\">Apache</strong> - is a web server program that is responsible for talking to web browsers and connecting them with the information they request.</p>\r\n<p class=\"_1qeIAgB0cPwnLhDF9XSiJM\" id=\"bkmrk-php%C2%A0is-a-scripting-p\"><strong class=\"_12FoOEddL7j_RgMQN0SNeU\">PHP</strong> is a scripting programming language that interfaces with Apache to provide content that is dynamically generated, often from information that is stored in a database.</p>', 'PHP is a server-side language that outputs (usually) HTML results. When a URL is called that requests a .php file, Apache asks PHP (the runtime, responsible for running that code you wrote) to process it and expects whatever output comes of it, then sends it back (through HTTP) to the user/browser/client software that requested it.\r\nApache - is a web server program that is responsible for talking to web browsers and connecting them with the information they request.\r\nPHP is a scripting programming language that interfaces with Apache to provide content that is dynamically generated, often from information that is stored in a database.', 1, '2022-03-22 16:37:29', '2022-03-22 16:37:29', 'php-web-server', 'servers', 'version', '', '', 2),
(461, 64, 'PHP Web Server', '<p id=\"bkmrk-php-is-a-server-side\">PHP is a server-side language that outputs (usually) HTML results. When a URL is called that requests a .php file, Apache asks PHP (the runtime, responsible for running that code you wrote) to process it and expects whatever output comes of it, then sends it back (through HTTP) to the user/browser/client software that requested it.</p>\r\n<p id=\"bkmrk-apache---is-a-web-se\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\"><strong class=\"_12FoOEddL7j_RgMQN0SNeU\">Apache/Nginx</strong> - is a web server program that is responsible for talking to web browsers and connecting them with the information they request.</p>\r\n<p id=\"bkmrk-php%C2%A0is-a-scripting-p\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\"><strong class=\"_12FoOEddL7j_RgMQN0SNeU\">PHP</strong> is a scripting programming language that interfaces with Apache to provide content that is dynamically generated, often from information that is stored in a database.</p>\r\n<h4 class=\"_1qeIAgB0cPwnLhDF9XSiJM\" id=\"bkmrk-apache-vs-nginx\">Apache vs Nginx</h4>\r\n<p id=\"bkmrk-%E2%80%9Capache-is-like-micr\">“Apache is like Microsoft Word. It has a million options but you only need six. NGINX does those six things, and it does five of them 50 times faster than Apache.\"</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647967309563.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647967309563.png\" alt=\"image-1647967309563.png\" width=\"541\" height=\"672\"></a></p>', 'PHP is a server-side language that outputs (usually) HTML results. When a URL is called that requests a .php file, Apache asks PHP (the runtime, responsible for running that code you wrote) to process it and expects whatever output comes of it, then sends it back (through HTTP) to the user/browser/client software that requested it.\r\nApache/Nginx - is a web server program that is responsible for talking to web browsers and connecting them with the information they request.\r\nPHP is a scripting programming language that interfaces with Apache to provide content that is dynamically generated, often from information that is stored in a database.\r\nApache vs Nginx\r\n“Apache is like Microsoft Word. It has a million options but you only need six. NGINX does those six things, and it does five of them 50 times faster than Apache.\"\r\n', 1, '2022-03-22 16:52:01', '2022-03-22 16:52:01', 'php-web-server', 'servers', 'version', '', '', 3),
(462, 65, 'New Page', '<h4 id=\"bkmrk-what-is-php-fmp%3F\">What is PHP-FMP?</h4>\r\n<p id=\"bkmrk-the-%E2%80%9Cfpm%E2%80%9D-part-in-ph\">The “FPM” part in PHP stands for “Fast Process Manager”, which is just a fancy way of saying that the PHP running on a server isn’t a single process, but rather some PHP processes that are spawned, controller, and killed off by this FPM process manager. It is this process manager that the web server passes the requests to.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647967953497.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647967953497.png\" alt=\"image-1647967953497.png\"></a></p>', 'What is PHP-FMP?\r\nThe “FPM” part in PHP stands for “Fast Process Manager”, which is just a fancy way of saying that the PHP running on a server isn’t a single process, but rather some PHP processes that are spawned, controller, and killed off by this FPM process manager. It is this process manager that the web server passes the requests to.\r\n', 1, '2022-03-22 16:52:42', '2022-03-22 16:52:42', 'new-page', 'php', 'version', '', 'Initial publish', 1),
(463, 65, 'PHP Server', '<h4 id=\"bkmrk-what-is-php-fmp%3F\">What is PHP-FMP?</h4>\r\n<p id=\"bkmrk-the-%E2%80%9Cfpm%E2%80%9D-part-in-ph\">The “FPM” part in PHP stands for “Fast Process Manager”, which is just a fancy way of saying that the PHP running on a server isn’t a single process, but rather some PHP processes that are spawned, controller, and killed off by this FPM process manager. It is this process manager that the web server passes the requests to.</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647967953497.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647967953497.png\" alt=\"image-1647967953497.png\"></a></p>', 'What is PHP-FMP?\r\nThe “FPM” part in PHP stands for “Fast Process Manager”, which is just a fancy way of saying that the PHP running on a server isn’t a single process, but rather some PHP processes that are spawned, controller, and killed off by this FPM process manager. It is this process manager that the web server passes the requests to.\r\n', 1, '2022-03-22 16:52:53', '2022-03-22 16:52:53', 'php-server', 'php', 'version', '', '', 2),
(464, 65, 'PHP Server', '<p id=\"bkmrk-php-is-a-server-side\">PHP is a server-side language that outputs (usually) HTML results. When a URL is called that requests a .php file, Apache asks PHP (the runtime, responsible for running that code you wrote) to process it and expects whatever output comes of it, then sends it back (through HTTP) to the user/browser/client software that requested it.</p>\r\n<p id=\"bkmrk-apache---is-a-web-se\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\"><strong class=\"_12FoOEddL7j_RgMQN0SNeU\">Apache/Nginx</strong> - is a web server program that is responsible for talking to web browsers and connecting them with the information they request.</p>\r\n<p id=\"bkmrk-php%C2%A0is-a-scripting-p\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\"><strong class=\"_12FoOEddL7j_RgMQN0SNeU\">PHP</strong> is a scripting programming language that interfaces with Apache to provide content that is dynamically generated, often from information that is stored in a database.</p>\r\n<h4 id=\"bkmrk-apache-vs-nginx\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\">Apache vs Nginx</h4>\r\n<p id=\"bkmrk-%E2%80%9Capache-is-like-micr\">“Apache is like Microsoft Word. It has a million options but you only need six. NGINX does those six things, and it does five of them 50 times faster than Apache.\"</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647967309563.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647967309563.png\" alt=\"image-1647967309563.png\" width=\"541\" height=\"672\"></a></p>\r\n<h4 id=\"bkmrk-what-is-php-fmp%3F\">What is PHP-FMP?</h4>\r\n<p id=\"bkmrk-the-%E2%80%9Cfpm%E2%80%9D-part-in-ph\">The “FPM” part in PHP stands for “Fast Process Manager”, which is just a fancy way of saying that the PHP running on a server isn’t a single process, but rather some PHP processes that are spawned, controller, and killed off by this FPM process manager. It is this process manager that the web server passes the requests to.</p>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647967953497.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647967953497.png\" alt=\"image-1647967953497.png\"></a></p>', 'PHP is a server-side language that outputs (usually) HTML results. When a URL is called that requests a .php file, Apache asks PHP (the runtime, responsible for running that code you wrote) to process it and expects whatever output comes of it, then sends it back (through HTTP) to the user/browser/client software that requested it.\r\nApache/Nginx - is a web server program that is responsible for talking to web browsers and connecting them with the information they request.\r\nPHP is a scripting programming language that interfaces with Apache to provide content that is dynamically generated, often from information that is stored in a database.\r\nApache vs Nginx\r\n“Apache is like Microsoft Word. It has a million options but you only need six. NGINX does those six things, and it does five of them 50 times faster than Apache.\"\r\n\r\nWhat is PHP-FMP?\r\nThe “FPM” part in PHP stands for “Fast Process Manager”, which is just a fancy way of saying that the PHP running on a server isn’t a single process, but rather some PHP processes that are spawned, controller, and killed off by this FPM process manager. It is this process manager that the web server passes the requests to.\r\n', 1, '2022-03-22 16:53:27', '2022-03-22 16:53:27', 'php-server', 'php', 'version', '', '', 3),
(466, 65, 'PHP Server', '<p id=\"bkmrk-php-is-a-server-side\">PHP is a server-side language that outputs (usually) HTML results. When a URL is called that requests a .php file, Apache asks PHP (the runtime, responsible for running that code you wrote) to process it and expects whatever output comes of it, then sends it back (through HTTP) to the user/browser/client software that requested it.</p>\r\n<p id=\"bkmrk-apache---is-a-web-se\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\"><strong class=\"_12FoOEddL7j_RgMQN0SNeU\">Apache/Nginx</strong> - is a web server program that is responsible for talking to web browsers and connecting them with the information they request.</p>\r\n<p id=\"bkmrk-php%C2%A0is-a-scripting-p\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\"><strong class=\"_12FoOEddL7j_RgMQN0SNeU\">PHP</strong> is a scripting programming language that interfaces with Apache to provide content that is dynamically generated, often from information that is stored in a database.</p>\r\n<h4 id=\"bkmrk-apache-vs-nginx\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\">Apache vs Nginx</h4>\r\n<p id=\"bkmrk-%E2%80%9Capache-is-like-micr\">“Apache is like Microsoft Word. It has a million options but you only need six. NGINX does those six things, and it does five of them 50 times faster than Apache.\"</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647967309563.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647967309563.png\" alt=\"image-1647967309563.png\" width=\"541\" height=\"672\"></a></p>\r\n<h4 id=\"bkmrk-what-is-php-fmp%3F\">What is PHP-FMP?</h4>\r\n<p id=\"bkmrk-the-%E2%80%9Cfpm%E2%80%9D-part-in-ph\">The “FPM” part in PHP stands for “Fast Process Manager”, which is just a fancy way of saying that the PHP running on a server isn’t a single process, but rather some PHP processes that are spawned, controller, and killed off by this FPM process manager. It is this process manager that the web server passes the requests to.</p>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647967953497.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647967953497.png\" alt=\"image-1647967953497.png\"></a></p>\r\n<p id=\"bkmrk-the-configuration-fi\">The configuration file location for <code>php-fpm</code> may differ on the server, so you’ll need to do some research for locating it.</p>\r\n<p id=\"bkmrk-a-few-things-should-\">A few things should be immediately obvious: the line <code>pid = /run/php/php7.2-fpm.pid</code> tells us which file contains the process id of the <code>php-fpm</code> process.</p>\r\n<p id=\"bkmrk-we-also-see-that%C2%A0%2Fva\">We also see that <code>/var/log/php7.2-fpm.log</code> is where <code>php-fpm</code> is going to store its logs.</p>\r\n<h4 id=\"bkmrk-what-is-pid-file%3F\">What is PID file?</h4>\r\n<p id=\"bkmrk-the-pid-files-contai\">The pid files contains the process id (a number) of a given program. For example, Apache HTTPD may write its main process number to a pid file - which is a regular text file, nothing more than that - and later use the information there contained to stop itself. You can also use that information to kill the process yourself, using <code>cat filename.pid | xargs kill</code></p>', 'PHP is a server-side language that outputs (usually) HTML results. When a URL is called that requests a .php file, Apache asks PHP (the runtime, responsible for running that code you wrote) to process it and expects whatever output comes of it, then sends it back (through HTTP) to the user/browser/client software that requested it.\r\nApache/Nginx - is a web server program that is responsible for talking to web browsers and connecting them with the information they request.\r\nPHP is a scripting programming language that interfaces with Apache to provide content that is dynamically generated, often from information that is stored in a database.\r\nApache vs Nginx\r\n“Apache is like Microsoft Word. It has a million options but you only need six. NGINX does those six things, and it does five of them 50 times faster than Apache.\"\r\n\r\nWhat is PHP-FMP?\r\nThe “FPM” part in PHP stands for “Fast Process Manager”, which is just a fancy way of saying that the PHP running on a server isn’t a single process, but rather some PHP processes that are spawned, controller, and killed off by this FPM process manager. It is this process manager that the web server passes the requests to.\r\n\r\nThe configuration file location for php-fpm may differ on the server, so you’ll need to do some research for locating it.\r\nA few things should be immediately obvious: the line pid = /run/php/php7.2-fpm.pid tells us which file contains the process id of the php-fpm process.\r\nWe also see that /var/log/php7.2-fpm.log is where php-fpm is going to store its logs.\r\nWhat is PID file?\r\nThe pid files contains the process id (a number) of a given program. For example, Apache HTTPD may write its main process number to a pid file - which is a regular text file, nothing more than that - and later use the information there contained to stop itself. You can also use that information to kill the process yourself, using cat filename.pid | xargs kill', 1, '2022-03-22 16:56:46', '2022-03-22 16:56:46', 'php-server', 'php', 'version', '', '', 4),
(468, 65, 'PHP Server', '<p id=\"bkmrk-php-is-a-server-side\">PHP is a server-side language that outputs (usually) HTML results. When a URL is called that requests a .php file, Apache asks PHP (the runtime, responsible for running that code you wrote) to process it and expects whatever output comes of it, then sends it back (through HTTP) to the user/browser/client software that requested it.</p>\r\n<p id=\"bkmrk-apache---is-a-web-se\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\"><strong class=\"_12FoOEddL7j_RgMQN0SNeU\">Apache/Nginx</strong> - is a web server program that is responsible for talking to web browsers and connecting them with the information they request.</p>\r\n<p id=\"bkmrk-php%C2%A0is-a-scripting-p\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\"><strong class=\"_12FoOEddL7j_RgMQN0SNeU\">PHP</strong> is a scripting programming language that interfaces with Apache to provide content that is dynamically generated, often from information that is stored in a database.</p>\r\n<h4 id=\"bkmrk-apache-vs-nginx\" class=\"_1qeIAgB0cPwnLhDF9XSiJM\">Apache vs Nginx</h4>\r\n<p id=\"bkmrk-%E2%80%9Capache-is-like-micr\">“Apache is like Microsoft Word. It has a million options but you only need six. NGINX does those six things, and it does five of them 50 times faster than Apache.\"</p>\r\n<p id=\"bkmrk-\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647967309563.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647967309563.png\" alt=\"image-1647967309563.png\" width=\"541\" height=\"672\"></a></p>\r\n<h4 id=\"bkmrk-nginx-configuration\">Nginx Configuration</h4>\r\n<p id=\"bkmrk-to-verify-that-there\">To verify that there are no issues with your Nginx configuration you can run:</p>\r\n<pre id=\"bkmrk-sudo-nginx--t\"><code class=\"language-shell\">sudo nginx -t</code></pre>\r\n<p id=\"bkmrk-remember-to-reload-n\">Remember to reload Nginx when making any changes to your Nginx config files:</p>\r\n<pre id=\"bkmrk-sudo-service-nginx-r\"><code class=\"language-shell\">sudo service nginx reload</code></pre>\r\n<h4 id=\"bkmrk-what-is-php-fmp%3F\">What is PHP-FMP?</h4>\r\n<p id=\"bkmrk-the-%E2%80%9Cfpm%E2%80%9D-part-in-ph\">The “FPM” part in PHP stands for “Fast Process Manager”, which is just a fancy way of saying that the PHP running on a server isn’t a single process, but rather some PHP processes that are spawned, controller, and killed off by this FPM process manager. It is this process manager that the web server passes the requests to.</p>\r\n<p id=\"bkmrk--0\"><a href=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/image-1647967953497.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://wiki.lazda.io/uploads/images/gallery/2022-03/scaled-1680-/image-1647967953497.png\" alt=\"image-1647967953497.png\"></a></p>\r\n<p id=\"bkmrk-the-configuration-fi\">The configuration file location for <code>php-fpm</code> may differ on the server, so you’ll need to do some research for locating it.</p>\r\n<p id=\"bkmrk-a-few-things-should-\">A few things should be immediately obvious: the line <code>pid = /run/php/php7.2-fpm.pid</code> tells us which file contains the process id of the <code>php-fpm</code> process.</p>\r\n<p id=\"bkmrk-we-also-see-that%C2%A0%2Fva\">We also see that <code>/var/log/php7.2-fpm.log</code> is where <code>php-fpm</code> is going to store its logs.</p>\r\n<h4 id=\"bkmrk-what-is-pid-file%3F\">What is PID file?</h4>\r\n<p id=\"bkmrk-the-pid-files-contai\">The pid files contains the process id (a number) of a given program. For example, Apache HTTPD may write its main process number to a pid file - which is a regular text file, nothing more than that - and later use the information there contained to stop itself. You can also use that information to kill the process yourself, using <code>cat filename.pid | xargs kill</code></p>', 'PHP is a server-side language that outputs (usually) HTML results. When a URL is called that requests a .php file, Apache asks PHP (the runtime, responsible for running that code you wrote) to process it and expects whatever output comes of it, then sends it back (through HTTP) to the user/browser/client software that requested it.\r\nApache/Nginx - is a web server program that is responsible for talking to web browsers and connecting them with the information they request.\r\nPHP is a scripting programming language that interfaces with Apache to provide content that is dynamically generated, often from information that is stored in a database.\r\nApache vs Nginx\r\n“Apache is like Microsoft Word. It has a million options but you only need six. NGINX does those six things, and it does five of them 50 times faster than Apache.\"\r\n\r\nNginx Configuration\r\nTo verify that there are no issues with your Nginx configuration you can run:\r\nsudo nginx -t\r\nRemember to reload Nginx when making any changes to your Nginx config files:\r\nsudo service nginx reload\r\nWhat is PHP-FMP?\r\nThe “FPM” part in PHP stands for “Fast Process Manager”, which is just a fancy way of saying that the PHP running on a server isn’t a single process, but rather some PHP processes that are spawned, controller, and killed off by this FPM process manager. It is this process manager that the web server passes the requests to.\r\n\r\nThe configuration file location for php-fpm may differ on the server, so you’ll need to do some research for locating it.\r\nA few things should be immediately obvious: the line pid = /run/php/php7.2-fpm.pid tells us which file contains the process id of the php-fpm process.\r\nWe also see that /var/log/php7.2-fpm.log is where php-fpm is going to store its logs.\r\nWhat is PID file?\r\nThe pid files contains the process id (a number) of a given program. For example, Apache HTTPD may write its main process number to a pid file - which is a regular text file, nothing more than that - and later use the information there contained to stop itself. You can also use that information to kill the process yourself, using cat filename.pid | xargs kill', 1, '2022-03-22 17:02:00', '2022-03-22 17:02:00', 'php-server', 'php', 'version', '', '', 5);
INSERT INTO `page_revisions` (`id`, `page_id`, `name`, `html`, `text`, `created_by`, `created_at`, `updated_at`, `slug`, `book_slug`, `type`, `markdown`, `summary`, `revision_number`) VALUES
(469, 66, 'Socket Files', '', '', 1, '2022-03-22 17:09:55', '2022-03-22 17:09:55', 'socket-files', 'linux', 'version', '', 'Initial publish', 1),
(471, 66, 'Socket Files', '<p id=\"bkmrk-a-socket-is-a-specia\">A socket is a special file used for inter-process communication, which enables the communication between two processes. In addition to sending data, processes can send file descriptors across a Unix domain socket connection using the <code>sendmsg()</code> and <code>recvmsg()</code> system calls.</p>', 'A socket is a special file used for inter-process communication, which enables the communication between two processes. In addition to sending data, processes can send file descriptors across a Unix domain socket connection using the sendmsg() and recvmsg() system calls.', 1, '2022-03-22 17:11:12', '2022-03-22 17:11:12', 'socket-files', 'linux', 'version', '', '', 2),
(473, 40, 'Learning Roadmap', '<h4 id=\"bkmrk-current-roadmap\">Current Roadmap</h4>\r\n<ol id=\"bkmrk-docker-webpack-php-m\"><li>Docker</li>\r\n<li>Webpack and JS modules</li>\r\n<li>PHP MVC</li>\r\n<li>Vanilla JS</li>\r\n<li>Design Patterns</li>\r\n<li>Read SQL docs -&gt; <a href=\"https://dev.mysql.com/doc/refman/8.0/en/\">https://dev.mysql.com/doc/refman/8.0/en/</a></li>\r\n<li>PHP-FPM, PostgreSQL, Nginx, Apache</li>\r\n<li>SOLID</li>\r\n<li>DB Sharding</li>\r\n<li>SSL/TLS</li>\r\n<li> </li>\r\n</ol><h4 id=\"bkmrk-future-certificates%C2%A0\">Future Certificates </h4>\r\n<ol id=\"bkmrk-network%2B-linux%2B-secu\"><li>Network+</li>\r\n<li>Linux+</li>\r\n<li>\r\n<p>Security+</p>\r\n</li>\r\n<li>\r\n<p class=\"udlite-heading-xl clp-lead__title clp-lead__title--small\" data-purpose=\"lead-title\">AWS Certified Cloud Practitioner</p>\r\n</li>\r\n</ol><h4 id=\"bkmrk-things-i-still-need-\">Things I still need to polish</h4>\r\n<ol id=\"bkmrk-docker-php-server-co\"><li>Docker</li>\r\n<li>PHP Server Configuration</li>\r\n<li>Complicated SQL queries</li>\r\n</ol>', 'Current Roadmap\r\nDocker\r\nWebpack and JS modules\r\nPHP MVC\r\nVanilla JS\r\nDesign Patterns\r\nRead SQL docs -> https://dev.mysql.com/doc/refman/8.0/en/\r\nPHP-FPM, PostgreSQL, Nginx, Apache\r\nSOLID\r\nDB Sharding\r\nSSL/TLS\r\n \r\nFuture Certificates \r\nNetwork+\r\nLinux+\r\n\r\nSecurity+\r\n\r\n\r\nAWS Certified Cloud Practitioner\r\n\r\nThings I still need to polish\r\nDocker\r\nPHP Server Configuration\r\nComplicated SQL queries\r\n', 1, '2022-03-22 19:47:00', '2022-03-22 19:47:00', 'learning-roadmap', 'misc', 'version', '', '', 10),
(474, 67, 'Nginx', '', '', 1, '2022-03-22 20:02:32', '2022-03-22 20:02:32', 'nginx', 'servers', 'version', '', 'Initial publish', 1),
(475, 68, 'Nginx', '', '', 1, '2022-03-22 20:03:45', '2022-03-22 20:03:45', 'nginx', 'servers', 'version', '', 'Initial publish', 1),
(477, 26, 'Productivity Tools', '<h4 id=\"bkmrk-what-tools-do-i-use-\">What tools do I use for productivity?</h4>\r\n<ul id=\"bkmrk-lightshot%C2%A0--tool-for\"><li><strong>Lightshot </strong>- Tool for taking and editing screenshots.</li>\r\n<li><strong>Spectacle </strong>- Window resizing tool for shortcut support.</li>\r\n<li><strong>Copyless </strong>- Tool for managing your clipboard history.</li>\r\n<li><strong>CleanMyMac </strong>- Tool for cleaning junk files and managing startup apps.</li>\r\n<li><strong>MySQL Workbench </strong>- Database IDE.</li>\r\n<li><strong>PHPStorm </strong>- Development IDE.</li>\r\n<li><strong>Brave </strong>- Internet Browser</li>\r\n</ul><h4 id=\"bkmrk-what-terminal-config\">What terminal configuration I use?</h4>\r\n<p id=\"bkmrk-i-use-iterm-terminal\">I use <strong>iTerm</strong> terminal together with <strong>Oh My Zsh. </strong>I like zsh because it is more customisable than bash and supports more plugins. Preferences -&gt; Profiles -&gt; Keys -&gt; Key Mapping -&gt; Natural Text Editing</p>\r\n<p id=\"bkmrk-what-plugins-do-i-us\"><strong>What zsh plugins do I use?</strong></p>\r\n<ul id=\"bkmrk-zsh-autosuggestions-\"><li>\r\n<p class=\" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal\">zsh-autosuggestions</p>\r\n</li>\r\n</ul>', 'What tools do I use for productivity?\r\nLightshot - Tool for taking and editing screenshots.\r\nSpectacle - Window resizing tool for shortcut support.\r\nCopyless - Tool for managing your clipboard history.\r\nCleanMyMac - Tool for cleaning junk files and managing startup apps.\r\nMySQL Workbench - Database IDE.\r\nPHPStorm - Development IDE.\r\nBrave - Internet Browser\r\nWhat terminal configuration I use?\r\nI use iTerm terminal together with Oh My Zsh. I like zsh because it is more customisable than bash and supports more plugins. Preferences -> Profiles -> Keys -> Key Mapping -> Natural Text Editing\r\nWhat zsh plugins do I use?\r\n\r\nzsh-autosuggestions\r\n\r\n', 1, '2022-03-22 20:46:34', '2022-03-22 20:46:34', 'productivity-tools', 'misc', 'version', '', '', 9);

-- --------------------------------------------------------

--
-- Table structure for table `password_resets`
--

CREATE TABLE `password_resets` (
  `email` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `permission_role`
--

CREATE TABLE `permission_role` (
  `permission_id` int(10) UNSIGNED NOT NULL,
  `role_id` int(10) UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `permission_role`
--

INSERT INTO `permission_role` (`permission_id`, `role_id`) VALUES
(19, 1),
(20, 1),
(21, 1),
(22, 1),
(23, 1),
(24, 1),
(24, 2),
(25, 1),
(25, 2),
(26, 1),
(26, 2),
(27, 1),
(27, 2),
(28, 1),
(28, 2),
(29, 1),
(29, 2),
(30, 1),
(30, 2),
(31, 1),
(31, 2),
(32, 1),
(32, 2),
(33, 1),
(33, 2),
(34, 1),
(34, 2),
(35, 1),
(35, 2),
(36, 1),
(36, 2),
(37, 1),
(37, 2),
(38, 1),
(38, 2),
(39, 1),
(39, 2),
(40, 1),
(40, 2),
(41, 1),
(41, 2),
(42, 1),
(42, 2),
(43, 1),
(43, 2),
(44, 1),
(44, 2),
(45, 1),
(45, 2),
(46, 1),
(46, 2),
(47, 1),
(47, 2),
(48, 1),
(48, 2),
(48, 3),
(48, 4),
(49, 1),
(49, 2),
(49, 3),
(49, 4),
(50, 1),
(50, 2),
(50, 3),
(50, 4),
(51, 1),
(51, 2),
(51, 3),
(51, 4),
(52, 1),
(52, 2),
(52, 3),
(52, 4),
(53, 1),
(53, 2),
(53, 3),
(53, 4),
(54, 1),
(55, 1),
(56, 1),
(57, 1),
(58, 1),
(59, 1),
(60, 1),
(61, 1),
(62, 1),
(63, 1),
(64, 1),
(65, 1),
(66, 1),
(66, 2),
(66, 3),
(66, 4),
(67, 1),
(67, 2),
(67, 3),
(67, 4),
(68, 1),
(68, 2),
(69, 1),
(69, 2),
(70, 1),
(70, 2),
(71, 1),
(71, 2),
(72, 1),
(72, 2),
(73, 1),
(73, 2),
(74, 1),
(75, 1),
(76, 1),
(76, 2),
(76, 3),
(76, 4);

-- --------------------------------------------------------

--
-- Table structure for table `roles`
--

CREATE TABLE `roles` (
  `id` int(10) UNSIGNED NOT NULL,
  `display_name` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `description` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `system_name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `external_auth_id` varchar(180) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `mfa_enforced` tinyint(1) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `roles`
--

INSERT INTO `roles` (`id`, `display_name`, `description`, `created_at`, `updated_at`, `system_name`, `external_auth_id`, `mfa_enforced`) VALUES
(1, 'Admin', 'Administrator of the whole application', '2021-11-26 17:43:14', '2021-11-26 17:43:14', 'admin', '', 0),
(2, 'Editor', 'User can edit Books, Chapters & Pages', '2021-11-26 17:43:14', '2021-11-26 17:43:14', '', '', 0),
(3, 'Viewer', 'User can view books & their content behind authentication', '2021-11-26 17:43:14', '2021-11-26 17:43:14', '', '', 0),
(4, 'Public', 'The role given to public visitors if allowed', '2021-11-26 17:43:15', '2021-11-26 17:43:15', 'public', '', 0);

-- --------------------------------------------------------

--
-- Table structure for table `role_permissions`
--

CREATE TABLE `role_permissions` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `display_name` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `description` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `role_permissions`
--

INSERT INTO `role_permissions` (`id`, `name`, `display_name`, `description`, `created_at`, `updated_at`) VALUES
(19, 'settings-manage', 'Manage Settings', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(20, 'users-manage', 'Manage Users', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(21, 'user-roles-manage', 'Manage Roles & Permissions', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(22, 'restrictions-manage-all', 'Manage All Entity Permissions', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(23, 'restrictions-manage-own', 'Manage Entity Permissions On Own Content', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(24, 'book-create-all', 'Create All Books', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(25, 'book-create-own', 'Create Own Books', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(26, 'book-update-all', 'Update All Books', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(27, 'book-update-own', 'Update Own Books', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(28, 'book-delete-all', 'Delete All Books', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(29, 'book-delete-own', 'Delete Own Books', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(30, 'page-create-all', 'Create All Pages', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(31, 'page-create-own', 'Create Own Pages', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(32, 'page-update-all', 'Update All Pages', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(33, 'page-update-own', 'Update Own Pages', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(34, 'page-delete-all', 'Delete All Pages', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(35, 'page-delete-own', 'Delete Own Pages', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(36, 'chapter-create-all', 'Create All Chapters', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(37, 'chapter-create-own', 'Create Own Chapters', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(38, 'chapter-update-all', 'Update All Chapters', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(39, 'chapter-update-own', 'Update Own Chapters', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(40, 'chapter-delete-all', 'Delete All Chapters', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(41, 'chapter-delete-own', 'Delete Own Chapters', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(42, 'image-create-all', 'Create All Images', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(43, 'image-create-own', 'Create Own Images', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(44, 'image-update-all', 'Update All Images', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(45, 'image-update-own', 'Update Own Images', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(46, 'image-delete-all', 'Delete All Images', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(47, 'image-delete-own', 'Delete Own Images', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(48, 'book-view-all', 'View All Books', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(49, 'book-view-own', 'View Own Books', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(50, 'page-view-all', 'View All Pages', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(51, 'page-view-own', 'View Own Pages', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(52, 'chapter-view-all', 'View All Chapters', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(53, 'chapter-view-own', 'View Own Chapters', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15'),
(54, 'attachment-create-all', 'Create All Attachments', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(55, 'attachment-create-own', 'Create Own Attachments', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(56, 'attachment-update-all', 'Update All Attachments', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(57, 'attachment-update-own', 'Update Own Attachments', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(58, 'attachment-delete-all', 'Delete All Attachments', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(59, 'attachment-delete-own', 'Delete Own Attachments', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(60, 'comment-create-all', 'Create All Comments', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(61, 'comment-create-own', 'Create Own Comments', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(62, 'comment-update-all', 'Update All Comments', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(63, 'comment-update-own', 'Update Own Comments', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(64, 'comment-delete-all', 'Delete All Comments', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(65, 'comment-delete-own', 'Delete Own Comments', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(66, 'bookshelf-view-all', 'View All BookShelves', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(67, 'bookshelf-view-own', 'View Own BookShelves', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(68, 'bookshelf-create-all', 'Create All BookShelves', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(69, 'bookshelf-create-own', 'Create Own BookShelves', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(70, 'bookshelf-update-all', 'Update All BookShelves', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(71, 'bookshelf-update-own', 'Update Own BookShelves', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(72, 'bookshelf-delete-all', 'Delete All BookShelves', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(73, 'bookshelf-delete-own', 'Delete Own BookShelves', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(74, 'templates-manage', 'Manage Page Templates', NULL, '2021-11-26 17:43:16', '2021-11-26 17:43:16'),
(75, 'access-api', 'Access system API', NULL, '2021-11-26 17:43:17', '2021-11-26 17:43:17'),
(76, 'content-export', 'Export Content', NULL, '2021-11-26 17:43:17', '2021-11-26 17:43:17');

-- --------------------------------------------------------

--
-- Table structure for table `role_user`
--

CREATE TABLE `role_user` (
  `user_id` int(10) UNSIGNED NOT NULL,
  `role_id` int(10) UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `role_user`
--

INSERT INTO `role_user` (`user_id`, `role_id`) VALUES
(1, 1),
(2, 4);

-- --------------------------------------------------------

--
-- Table structure for table `search_terms`
--

CREATE TABLE `search_terms` (
  `id` int(10) UNSIGNED NOT NULL,
  `term` varchar(180) COLLATE utf8mb4_unicode_ci NOT NULL,
  `entity_type` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,
  `entity_id` int(11) NOT NULL,
  `score` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `search_terms`
--

INSERT INTO `search_terms` (`id`, `term`, `entity_type`, `entity_id`, `score`) VALUES
(1, 'Software', 'BookStack\\Bookshelf', 1, 48),
(2, 'Development', 'BookStack\\Bookshelf', 1, 48),
(3, 'MySQL', 'BookStack\\Book', 1, 48),
(2213, 'Indexes', 'BookStack\\Page', 3, 44),
(2214, 'Index', 'BookStack\\Page', 3, 5),
(2215, 'Types', 'BookStack\\Page', 3, 5),
(2216, 'The', 'BookStack\\Page', 3, 2),
(2217, 'primary', 'BookStack\\Page', 3, 2),
(2218, 'key', 'BookStack\\Page', 3, 3),
(2219, 'is', 'BookStack\\Page', 3, 14),
(2220, 'always', 'BookStack\\Page', 3, 1),
(2221, 'automatically', 'BookStack\\Page', 3, 1),
(2222, 'indexed', 'BookStack\\Page', 3, 1),
(2223, 'and', 'BookStack\\Page', 3, 11),
(2224, 'unique', 'BookStack\\Page', 3, 1),
(2225, 'by', 'BookStack\\Page', 3, 4),
(2226, 'default', 'BookStack\\Page', 3, 1),
(2227, 'are', 'BookStack\\Page', 3, 6),
(2228, 'saved', 'BookStack\\Page', 3, 1),
(2229, 'in', 'BookStack\\Page', 3, 6),
(2230, 'a', 'BookStack\\Page', 3, 25),
(2231, 'binary', 'BookStack\\Page', 3, 2),
(2232, 'tree', 'BookStack\\Page', 3, 1),
(2233, 'form', 'BookStack\\Page', 3, 1),
(2234, 'B-TREE', 'BookStack\\Page', 3, 1),
(2235, 'slow', 'BookStack\\Page', 3, 1),
(2236, 'down', 'BookStack\\Page', 3, 1),
(2237, 'inserts', 'BookStack\\Page', 3, 1),
(2238, 'updates', 'BookStack\\Page', 3, 1),
(2239, 'so', 'BookStack\\Page', 3, 1),
(2240, 'you', 'BookStack\\Page', 3, 4),
(2241, 'want', 'BookStack\\Page', 3, 1),
(2242, 'to', 'BookStack\\Page', 3, 20),
(2243, 'use', 'BookStack\\Page', 3, 2),
(2244, 'them', 'BookStack\\Page', 3, 2),
(2245, 'carefully', 'BookStack\\Page', 3, 1),
(2246, 'on', 'BookStack\\Page', 3, 13),
(2247, 'columns', 'BookStack\\Page', 3, 5),
(2248, 'that', 'BookStack\\Page', 3, 5),
(2249, 'FREQUENTLY', 'BookStack\\Page', 3, 1),
(2250, 'updated', 'BookStack\\Page', 3, 3),
(2251, 'This', 'BookStack\\Page', 3, 2),
(2252, 'because', 'BookStack\\Page', 3, 2),
(2253, 'each', 'BookStack\\Page', 3, 1),
(2254, 'time', 'BookStack\\Page', 3, 2),
(2255, 'record', 'BookStack\\Page', 3, 2),
(2256, 'added', 'BookStack\\Page', 3, 2),
(2257, 'or', 'BookStack\\Page', 3, 4),
(2258, 'all', 'BookStack\\Page', 3, 2),
(2259, 'the', 'BookStack\\Page', 3, 22),
(2260, 'indexes', 'BookStack\\Page', 3, 11),
(2261, 'need', 'BookStack\\Page', 3, 1),
(2262, 'be', 'BookStack\\Page', 3, 5),
(2263, 'as', 'BookStack\\Page', 3, 3),
(2264, 'well', 'BookStack\\Page', 3, 2),
(2265, '\r', 'BookStack\\Page', 3, 13),
(2266, 'speed', 'BookStack\\Page', 3, 2),
(2267, 'up', 'BookStack\\Page', 3, 2),
(2268, 'where', 'BookStack\\Page', 3, 1),
(2269, 'clauses', 'BookStack\\Page', 3, 1),
(2270, 'order', 'BookStack\\Page', 3, 4),
(2271, 'Remember', 'BookStack\\Page', 3, 1),
(2272, 'think', 'BookStack\\Page', 3, 1),
(2273, 'about', 'BookStack\\Page', 3, 1),
(2274, 'HOW', 'BookStack\\Page', 3, 1),
(2275, 'your', 'BookStack\\Page', 3, 5),
(2276, 'data', 'BookStack\\Page', 3, 5),
(2277, 'going', 'BookStack\\Page', 3, 2),
(2278, 'used', 'BookStack\\Page', 3, 3),
(2279, 'when', 'BookStack\\Page', 3, 3),
(2280, 'building', 'BookStack\\Page', 3, 1),
(2281, 'tables', 'BookStack\\Page', 3, 3),
(2282, 'There', 'BookStack\\Page', 3, 1),
(2283, 'few', 'BookStack\\Page', 3, 2),
(2284, 'other', 'BookStack\\Page', 3, 1),
(2285, 'things', 'BookStack\\Page', 3, 1),
(2286, 'remember', 'BookStack\\Page', 3, 2),
(2287, 'If', 'BookStack\\Page', 3, 6),
(2288, 'table', 'BookStack\\Page', 3, 3),
(2289, 'very', 'BookStack\\Page', 3, 1),
(2290, 'small', 'BookStack\\Page', 3, 1),
(2291, 'i', 'BookStack\\Page', 3, 1),
(2292, 'e', 'BookStack\\Page', 3, 1),
(2293, 'only', 'BookStack\\Page', 3, 2),
(2294, 'employees', 'BookStack\\Page', 3, 1),
(2295, 'it', 'BookStack\\Page', 3, 7),
(2296, 's', 'BookStack\\Page', 3, 1),
(2297, 'worse', 'BookStack\\Page', 3, 1),
(2298, 'an', 'BookStack\\Page', 3, 7),
(2299, 'index', 'BookStack\\Page', 3, 14),
(2300, 'than', 'BookStack\\Page', 3, 2),
(2301, 'leave', 'BookStack\\Page', 3, 1),
(2302, 'out', 'BookStack\\Page', 3, 1),
(2303, 'just', 'BookStack\\Page', 3, 4),
(2304, 'let', 'BookStack\\Page', 3, 1),
(2305, 'do', 'BookStack\\Page', 3, 1),
(2306, 'scan', 'BookStack\\Page', 3, 1),
(2307, 'come', 'BookStack\\Page', 3, 1),
(2308, 'handy', 'BookStack\\Page', 3, 1),
(2309, 'with', 'BookStack\\Page', 3, 1),
(2310, 'have', 'BookStack\\Page', 3, 3),
(2311, 'lot', 'BookStack\\Page', 3, 2),
(2312, 'of', 'BookStack\\Page', 3, 9),
(2313, 'rows', 'BookStack\\Page', 3, 1),
(2314, 'Another', 'BookStack\\Page', 3, 1),
(2315, 'thing', 'BookStack\\Page', 3, 1),
(2316, 'if', 'BookStack\\Page', 3, 1),
(2317, 'column', 'BookStack\\Page', 3, 1),
(2318, 'variable', 'BookStack\\Page', 3, 1),
(2319, 'length', 'BookStack\\Page', 3, 1),
(2320, 'most', 'BookStack\\Page', 3, 4),
(2321, 'MySQL', 'BookStack\\Page', 3, 1),
(2322, 'perform', 'BookStack\\Page', 3, 2),
(2323, 'much', 'BookStack\\Page', 3, 1),
(2324, 'less', 'BookStack\\Page', 3, 2),
(2325, 'efficiently', 'BookStack\\Page', 3, 1),
(2326, 'It', 'BookStack\\Page', 3, 2),
(2327, 'highly', 'BookStack\\Page', 3, 1),
(2328, 'recommended', 'BookStack\\Page', 3, 1),
(2329, 'create', 'BookStack\\Page', 3, 7),
(2330, 'the foreign key', 'BookStack\\Page', 3, 1),
(2331, 'enhance', 'BookStack\\Page', 3, 1),
(2332, 'performance', 'BookStack\\Page', 3, 2),
(2333, 'joins', 'BookStack\\Page', 3, 1),
(2334, 'between', 'BookStack\\Page', 3, 2),
(2335, 'foreign', 'BookStack\\Page', 3, 1),
(2336, 'keys', 'BookStack\\Page', 3, 2),
(2337, 'also', 'BookStack\\Page', 3, 3),
(2338, 'reduce', 'BookStack\\Page', 3, 1),
(2339, 'cost', 'BookStack\\Page', 3, 1),
(2340, 'maintaining', 'BookStack\\Page', 3, 1),
(2341, 'relationship', 'BookStack\\Page', 3, 1),
(2342, 'child', 'BookStack\\Page', 3, 1),
(2343, 'parent', 'BookStack\\Page', 3, 1),
(2344, 'Full-text', 'BookStack\\Page', 3, 1),
(2345, 'FULLTEXT', 'BookStack\\Page', 3, 1),
(2346, 'created', 'BookStack\\Page', 3, 1),
(2347, 'text-based', 'BookStack\\Page', 3, 1),
(2348, 'CHAR', 'BookStack\\Page', 3, 1),
(2349, 'VARCHAR', 'BookStack\\Page', 3, 1),
(2350, 'TEXT', 'BookStack\\Page', 3, 1),
(2351, ' to', 'BookStack\\Page', 3, 1),
(2352, 'queries', 'BookStack\\Page', 3, 3),
(2353, 'manipulation', 'BookStack\\Page', 3, 1),
(2354, 'operations', 'BookStack\\Page', 3, 1),
(2355, 'contained', 'BookStack\\Page', 3, 1),
(2356, 'within', 'BookStack\\Page', 3, 1),
(2357, 'those', 'BookStack\\Page', 3, 1),
(2358, 'They', 'BookStack\\Page', 3, 1),
(2359, 'split', 'BookStack\\Page', 3, 1),
(2360, 'text', 'BookStack\\Page', 3, 3),
(2361, 'into', 'BookStack\\Page', 3, 1),
(2362, 'words', 'BookStack\\Page', 3, 3),
(2363, 'make', 'BookStack\\Page', 3, 1),
(2364, 'over', 'BookStack\\Page', 3, 1),
(2365, 'not', 'BookStack\\Page', 3, 2),
(2366, 'whole', 'BookStack\\Page', 3, 1),
(2367, 'works', 'BookStack\\Page', 3, 1),
(2368, 'faster', 'BookStack\\Page', 3, 1),
(2369, 'for', 'BookStack\\Page', 3, 5),
(2370, 'searches', 'BookStack\\Page', 3, 1),
(2371, 'looking', 'BookStack\\Page', 3, 1),
(2372, 'specific', 'BookStack\\Page', 3, 1),
(2373, 'Descending', 'BookStack\\Page', 3, 1),
(2374, 'DESC', 'BookStack\\Page', 3, 1),
(2375, 'causes', 'BookStack\\Page', 3, 1),
(2376, 'storage', 'BookStack\\Page', 3, 1),
(2377, 'values', 'BookStack\\Page', 3, 1),
(2378, 'descending', 'BookStack\\Page', 3, 2),
(2379, 'Previously', 'BookStack\\Page', 3, 1),
(2380, 'could', 'BookStack\\Page', 3, 1),
(2381, 'scanned', 'BookStack\\Page', 3, 1),
(2382, 'reverse', 'BookStack\\Page', 3, 1),
(2383, 'but', 'BookStack\\Page', 3, 2),
(2384, 'at', 'BookStack\\Page', 3, 1),
(2385, 'penalty', 'BookStack\\Page', 3, 1),
(2386, 'A', 'BookStack\\Page', 3, 2),
(2387, 'can', 'BookStack\\Page', 3, 4),
(2388, 'be scanned', 'BookStack\\Page', 3, 1),
(2389, 'forward', 'BookStack\\Page', 3, 1),
(2390, 'which', 'BookStack\\Page', 3, 1),
(2391, 'more', 'BookStack\\Page', 3, 2),
(2392, 'efficient', 'BookStack\\Page', 3, 1),
(2393, 'It’s', 'BookStack\\Page', 3, 1),
(2394, 'helpful', 'BookStack\\Page', 3, 1),
(2395, 'run', 'BookStack\\Page', 3, 1),
(2396, 'recently', 'BookStack\\Page', 3, 1),
(2397, 'like', 'BookStack\\Page', 3, 3),
(2398, 'might', 'BookStack\\Page', 3, 1),
(2399, 'show', 'BookStack\\Page', 3, 1),
(2400, 'five', 'BookStack\\Page', 3, 1),
(2401, 'recent', 'BookStack\\Page', 3, 2),
(2402, 'posts', 'BookStack\\Page', 3, 2),
(2403, 'ten', 'BookStack\\Page', 3, 1),
(2404, 'comments', 'BookStack\\Page', 3, 1),
(2405, 'Composite', 'BookStack\\Page', 3, 6),
(2406, 'work', 'BookStack\\Page', 3, 1),
(2407, 'regular', 'BookStack\\Page', 3, 1),
(2408, 'except', 'BookStack\\Page', 3, 1),
(2409, 'they', 'BookStack\\Page', 3, 1),
(2410, 'multi-values', 'BookStack\\Page', 3, 1),
(2411, 'define', 'BookStack\\Page', 3, 1),
(2412, 'fields', 'BookStack\\Page', 3, 3),
(2413, 'b', 'BookStack\\Page', 3, 2),
(2414, 'c', 'BookStack\\Page', 3, 2),
(2415, 'records', 'BookStack\\Page', 3, 2),
(2416, 'sorted', 'BookStack\\Page', 3, 5),
(2417, 'first', 'BookStack\\Page', 3, 3),
(2418, 'then', 'BookStack\\Page', 3, 5),
(2419, '|', 'BookStack\\Page', 3, 119),
(2420, 'B', 'BookStack\\Page', 3, 1),
(2421, 'C', 'BookStack\\Page', 3, 1),
(2422, '|\r', 'BookStack\\Page', 3, 29),
(2423, '-------------\r', 'BookStack\\Page', 3, 1),
(2424, '1', 'BookStack\\Page', 3, 5),
(2425, '2', 'BookStack\\Page', 3, 7),
(2426, '3', 'BookStack\\Page', 3, 5),
(2427, '4', 'BookStack\\Page', 3, 7),
(2428, '5', 'BookStack\\Page', 3, 3),
(2429, 'certain', 'BookStack\\Page', 3, 1),
(2430, 'tend', 'BookStack\\Page', 3, 1),
(2431, 'appear', 'BookStack\\Page', 3, 1),
(2432, 'together', 'BookStack\\Page', 3, 1),
(2433, 'it’s', 'BookStack\\Page', 3, 1),
(2434, 'good', 'BookStack\\Page', 3, 1),
(2435, 'idea', 'BookStack\\Page', 3, 1),
(2436, 'composite', 'BookStack\\Page', 3, 3),
(2437, 'we’re', 'BookStack\\Page', 3, 1),
(2438, 'an index on field1 but', 'BookStack\\Page', 3, 1),
(2439, 'a composite', 'BookStack\\Page', 3, 2),
(2440, 'index on ', 'BookStack\\Page', 3, 2),
(2441, 'field1', 'BookStack\\Page', 3, 2),
(2442, 'field2', 'BookStack\\Page', 3, 2),
(2443, 'creating', 'BookStack\\Page', 3, 1),
(2444, ' is', 'BookStack\\Page', 3, 1),
(2445, 'enough', 'BookStack\\Page', 3, 1),
(2446, 'since', 'BookStack\\Page', 3, 3),
(2447, 'querying', 'BookStack\\Page', 3, 1),
(2448, 'by field1 alone', 'BookStack\\Page', 3, 1),
(2449, 'Examples', 'BookStack\\Page', 3, 5),
(2450, 'possible', 'BookStack\\Page', 3, 1),
(2451, 'pass', 'BookStack\\Page', 3, 1),
(2452, 'integer', 'BookStack\\Page', 3, 1),
(2453, 'argument', 'BookStack\\Page', 3, 1),
(2454, 'specify', 'BookStack\\Page', 3, 1),
(2455, 'how', 'BookStack\\Page', 3, 1),
(2456, 'many', 'BookStack\\Page', 3, 1),
(2457, 'characters', 'BookStack\\Page', 3, 2),
(2458, 'string', 'BookStack\\Page', 3, 1),
(2459, 'should', 'BookStack\\Page', 3, 1),
(2460, 'Here', 'BookStack\\Page', 3, 1),
(2461, 'we', 'BookStack\\Page', 3, 3),
(2462, 'specifying', 'BookStack\\Page', 3, 1),
(2463, 'three', 'BookStack\\Page', 3, 1),
(2464, 'products', 'BookStack\\Page', 3, 2),
(2465, 'SKU', 'BookStack\\Page', 3, 1),
(2466, 'CREATE', 'BookStack\\Page', 3, 3),
(2467, 'INDEX', 'BookStack\\Page', 3, 3),
(2468, 'idx_sku_three', 'BookStack\\Page', 3, 1),
(2469, 'ON', 'BookStack\\Page', 3, 3),
(2470, 'products_sku', 'BookStack\\Page', 3, 1),
(2471, 'users', 'BookStack\\Page', 3, 3),
(2472, 'first_name', 'BookStack\\Page', 3, 3),
(2473, 'would', 'BookStack\\Page', 3, 3),
(2474, 'sorting', 'BookStack\\Page', 3, 1),
(2475, 'the users by', 'BookStack\\Page', 3, 1),
(2476, 'their first_name with', 'BookStack\\Page', 3, 1),
(2477, 'pointer', 'BookStack\\Page', 3, 1),
(2478, 'their primary', 'BookStack\\Page', 3, 1),
(2479, 'something', 'BookStack\\Page', 3, 3),
(2480, 'this', 'BookStack\\Page', 3, 2),
(2481, 'take', 'BookStack\\Page', 3, 1),
(2482, 'only O', 'BookStack\\Page', 3, 1),
(2483, 'log_2', 'BookStack\\Page', 3, 2),
(2484, 'n', 'BookStack\\Page', 3, 2),
(2485, 'reads', 'BookStack\\Page', 3, 1),
(2486, 'database', 'BookStack\\Page', 3, 2),
(2487, 'search', 'BookStack\\Page', 3, 2),
(2488, 'by first_name', 'BookStack\\Page', 3, 1),
(2489, 'ID', 'BookStack\\Page', 3, 1),
(2490, 'last_name', 'BookStack\\Page', 3, 1),
(2491, 'class', 'BookStack\\Page', 3, 3),
(2492, 'position', 'BookStack\\Page', 3, 5),
(2493, '--------------------------------------------------------\r', 'BookStack\\Page', 3, 1),
(2494, 'Teemo', 'BookStack\\Page', 3, 2),
(2495, 'Shroomer', 'BookStack\\Page', 3, 1),
(2496, 'Specialist', 'BookStack\\Page', 3, 4),
(2497, 'Top', 'BookStack\\Page', 3, 7),
(2498, 'Cecil', 'BookStack\\Page', 3, 2),
(2499, 'Heimerdinger', 'BookStack\\Page', 3, 1),
(2500, 'Mid', 'BookStack\\Page', 3, 7),
(2501, 'Annie', 'BookStack\\Page', 3, 2),
(2502, 'Hastur', 'BookStack\\Page', 3, 1),
(2503, 'Mage', 'BookStack\\Page', 3, 5),
(2504, 'Fiora', 'BookStack\\Page', 3, 2),
(2505, 'Laurent', 'BookStack\\Page', 3, 1),
(2506, 'Slayer', 'BookStack\\Page', 3, 1),
(2507, 'Garen', 'BookStack\\Page', 3, 2),
(2508, 'Crownguard', 'BookStack\\Page', 3, 2),
(2509, 'Fighter', 'BookStack\\Page', 3, 4),
(2510, '6', 'BookStack\\Page', 3, 1),
(2511, 'Malcolm', 'BookStack\\Page', 3, 2),
(2512, 'Graves', 'BookStack\\Page', 3, 1),
(2513, 'ADC', 'BookStack\\Page', 3, 3),
(2514, '7', 'BookStack\\Page', 3, 1),
(2515, 'Irelia', 'BookStack\\Page', 3, 2),
(2516, 'Lito', 'BookStack\\Page', 3, 1),
(2517, 'Figher', 'BookStack\\Page', 3, 2),
(2518, '8', 'BookStack\\Page', 3, 1),
(2519, 'Janna', 'BookStack\\Page', 3, 2),
(2520, 'Windforce', 'BookStack\\Page', 3, 1),
(2521, 'Controller', 'BookStack\\Page', 3, 3),
(2522, 'Support', 'BookStack\\Page', 3, 3),
(2523, '9', 'BookStack\\Page', 3, 1),
(2524, 'Jarvan', 'BookStack\\Page', 3, 2),
(2525, 'Lightshield', 'BookStack\\Page', 3, 1),
(2526, '10', 'BookStack\\Page', 3, 1),
(2527, 'Katarina', 'BookStack\\Page', 3, 2),
(2528, 'DuCouteau', 'BookStack\\Page', 3, 1),
(2529, 'Assassin', 'BookStack\\Page', 3, 1),
(2530, '11', 'BookStack\\Page', 3, 1),
(2531, 'Kayle', 'BookStack\\Page', 3, 2),
(2532, 'Hex', 'BookStack\\Page', 3, 2),
(2533, '12', 'BookStack\\Page', 3, 1),
(2534, 'Emilia', 'BookStack\\Page', 3, 2),
(2535, 'LeBlanc', 'BookStack\\Page', 3, 1),
(2536, '13', 'BookStack\\Page', 3, 1),
(2537, 'Lee', 'BookStack\\Page', 3, 2),
(2538, 'Sin', 'BookStack\\Page', 3, 1),
(2539, 'Jungle', 'BookStack\\Page', 3, 3),
(2540, '14', 'BookStack\\Page', 3, 1),
(2541, 'Lux', 'BookStack\\Page', 3, 2),
(2542, '15', 'BookStack\\Page', 3, 1),
(2543, 'Sarah', 'BookStack\\Page', 3, 2),
(2544, 'Fortune', 'BookStack\\Page', 3, 1),
(2545, 'Marksman', 'BookStack\\Page', 3, 2),
(2546, '16', 'BookStack\\Page', 3, 1),
(2547, 'Morgana', 'BookStack\\Page', 3, 2),
(2548, '17', 'BookStack\\Page', 3, 1),
(2549, 'Orianna', 'BookStack\\Page', 3, 2),
(2550, 'Reveck', 'BookStack\\Page', 3, 1),
(2551, '18', 'BookStack\\Page', 3, 1),
(2552, 'Sona', 'BookStack\\Page', 3, 2),
(2553, 'Buvelle', 'BookStack\\Page', 3, 1),
(2554, '19', 'BookStack\\Page', 3, 1),
(2555, 'Jericho', 'BookStack\\Page', 3, 2),
(2556, 'Swain', 'BookStack\\Page', 3, 1),
(2557, '20', 'BookStack\\Page', 3, 1),
(2558, 'Shauna', 'BookStack\\Page', 3, 2),
(2559, 'Vayne', 'BookStack\\Page', 3, 1),
(2560, '21', 'BookStack\\Page', 3, 1),
(2561, 'Xin', 'BookStack\\Page', 3, 2),
(2562, 'Zhao', 'BookStack\\Page', 3, 1),
(2563, '22', 'BookStack\\Page', 3, 3),
(2564, 'Yorick', 'BookStack\\Page', 3, 2),
(2565, 'Mori', 'BookStack\\Page', 3, 1),
(2566, 'Tank', 'BookStack\\Page', 3, 1),
(2567, '23', 'BookStack\\Page', 3, 1),
(2568, 'Wu', 'BookStack\\Page', 3, 2),
(2569, 'Kong', 'BookStack\\Page', 3, 1),
(2570, 'first_name_index', 'BookStack\\Page', 3, 1),
(2571, 'USING', 'BookStack\\Page', 3, 1),
(2572, 'BTREE', 'BookStack\\Page', 3, 1),
(2573, '-', 'BookStack\\Page', 3, 46),
(2574, '3\r', 'BookStack\\Page', 3, 2),
(2575, '2\r', 'BookStack\\Page', 3, 2),
(2576, '12\r', 'BookStack\\Page', 3, 2),
(2577, '4\r', 'BookStack\\Page', 3, 2),
(2578, '5\r', 'BookStack\\Page', 3, 2),
(2579, '7\r', 'BookStack\\Page', 3, 2),
(2580, '8\r', 'BookStack\\Page', 3, 2),
(2581, '9\r', 'BookStack\\Page', 3, 2),
(2582, '19\r', 'BookStack\\Page', 3, 2),
(2583, '10\r', 'BookStack\\Page', 3, 2),
(2584, '11\r', 'BookStack\\Page', 3, 2),
(2585, '13\r', 'BookStack\\Page', 3, 2),
(2586, '14\r', 'BookStack\\Page', 3, 2),
(2587, '6\r', 'BookStack\\Page', 3, 2),
(2588, '16\r', 'BookStack\\Page', 3, 2),
(2589, '17\r', 'BookStack\\Page', 3, 2),
(2590, '15\r', 'BookStack\\Page', 3, 2),
(2591, '20\r', 'BookStack\\Page', 3, 2),
(2592, '18\r', 'BookStack\\Page', 3, 2),
(2593, '1\r', 'BookStack\\Page', 3, 2),
(2594, '23\r', 'BookStack\\Page', 3, 2),
(2595, '21\r', 'BookStack\\Page', 3, 2),
(2596, 'Like', 'BookStack\\Page', 3, 1),
(2597, 'single', 'BookStack\\Page', 3, 2),
(2598, 'structure', 'BookStack\\Page', 3, 1),
(2599, 'But', 'BookStack\\Page', 3, 1),
(2600, 'unlike', 'BookStack\\Page', 3, 1),
(2601, 'field', 'BookStack\\Page', 3, 3),
(2602, 'concatenation', 'BookStack\\Page', 3, 1),
(2603, 'multiple', 'BookStack\\Page', 3, 1),
(2604, 'try', 'BookStack\\Page', 3, 1),
(2605, 'our', 'BookStack\\Page', 3, 1),
(2606, 'query', 'BookStack\\Page', 3, 2),
(2607, 'will', 'BookStack\\Page', 3, 3),
(2608, 'improved', 'BookStack\\Page', 3, 1),
(2609, 'retrieval', 'BookStack\\Page', 3, 1),
(2610, 'the composite', 'BookStack\\Page', 3, 1),
(2611, 'index is', 'BookStack\\Page', 3, 1),
(2612, 'by class', 'BookStack\\Page', 3, 1),
(2613, 'find SpecialistTop in O', 'BookStack\\Page', 3, 1),
(2614, ' reads', 'BookStack\\Page', 3, 1),
(2615, 'rather', 'BookStack\\Page', 3, 1),
(2616, 'full', 'BookStack\\Page', 3, 1),
(2617, 'read', 'BookStack\\Page', 3, 1),
(2618, 'Note', 'BookStack\\Page', 3, 1),
(2619, 'even', 'BookStack\\Page', 3, 1),
(2620, 'the class field', 'BookStack\\Page', 3, 1),
(2621, 'benefit', 'BookStack\\Page', 3, 2),
(2622, 'from', 'BookStack\\Page', 3, 2),
(2623, 'this composite', 'BookStack\\Page', 3, 2),
(2624, 'index since the', 'BookStack\\Page', 3, 1),
(2625, 'class is', 'BookStack\\Page', 3, 1),
(2626, 'Searching', 'BookStack\\Page', 3, 1),
(2627, 'the index that', 'BookStack\\Page', 3, 1),
(2628, 'by class is', 'BookStack\\Page', 3, 1),
(2629, 'equivalent', 'BookStack\\Page', 3, 1),
(2630, 'searching', 'BookStack\\Page', 3, 2),
(2631, 'index sorted', 'BookStack\\Page', 3, 2),
(2632, 'by class-position', 'BookStack\\Page', 3, 1),
(2633, 'However', 'BookStack\\Page', 3, 1),
(2634, 'NOT', 'BookStack\\Page', 3, 1),
(2635, 'index because the', 'BookStack\\Page', 3, 1),
(2636, 'position is', 'BookStack\\Page', 3, 1),
(2637, 'second', 'BookStack\\Page', 3, 1),
(2638, 'A composite', 'BookStack\\Page', 3, 1),
(2639, 'by class-position cannot', 'BookStack\\Page', 3, 1),
(2640, 'quickly', 'BookStack\\Page', 3, 1),
(2641, 'find', 'BookStack\\Page', 3, 1),
(2642, 'by position', 'BookStack\\Page', 3, 1),
(2643, 'class_pos_index', 'BookStack\\Page', 3, 1),
(2644, 'class-position', 'BookStack\\Page', 3, 1),
(2645, 'Primary', 'BookStack\\Page', 3, 1),
(2646, 'Key\r', 'BookStack\\Page', 3, 1),
(2647, '--------------------------------\r', 'BookStack\\Page', 3, 1),
(2648, 'AssassinMid', 'BookStack\\Page', 3, 1),
(2649, 'ControllerSupport', 'BookStack\\Page', 3, 3),
(2650, 'FigherTop', 'BookStack\\Page', 3, 2),
(2651, 'FighterJungle', 'BookStack\\Page', 3, 3),
(2652, 'FighterTop', 'BookStack\\Page', 3, 1),
(2653, 'MageMid', 'BookStack\\Page', 3, 5),
(2654, 'MarksmanADC', 'BookStack\\Page', 3, 2),
(2655, 'SlayerTop', 'BookStack\\Page', 3, 1),
(2656, 'SpecialistADC', 'BookStack\\Page', 3, 1),
(2657, 'SpecialistMid', 'BookStack\\Page', 3, 1),
(2658, 'SpecialistTop', 'BookStack\\Page', 3, 2),
(2659, 'TankTop', 'BookStack\\Page', 3, 1),
(2717, 'Constraints', 'BookStack\\Page', 2, 42),
(2718, 'What', 'BookStack\\Page', 2, 8),
(2719, 'are', 'BookStack\\Page', 2, 8),
(2720, 'constraints', 'BookStack\\Page', 2, 4),
(2721, 'used', 'BookStack\\Page', 2, 4),
(2722, 'to', 'BookStack\\Page', 2, 7),
(2723, 'define', 'BookStack\\Page', 2, 1),
(2724, 'rules', 'BookStack\\Page', 2, 1),
(2725, 'allow', 'BookStack\\Page', 2, 1),
(2726, 'or', 'BookStack\\Page', 2, 1),
(2727, 'restrict', 'BookStack\\Page', 2, 1),
(2728, 'what', 'BookStack\\Page', 2, 1),
(2729, 'values', 'BookStack\\Page', 2, 1),
(2730, 'can', 'BookStack\\Page', 2, 1),
(2731, 'be', 'BookStack\\Page', 2, 2),
(2732, 'stored', 'BookStack\\Page', 2, 1),
(2733, 'in', 'BookStack\\Page', 2, 3),
(2734, 'columns', 'BookStack\\Page', 2, 4),
(2735, 'MySQL', 'BookStack\\Page', 2, 1),
(2736, 'NOT', 'BookStack\\Page', 2, 1),
(2737, 'NULL\r', 'BookStack\\Page', 2, 1),
(2738, 'UNIQUE\r', 'BookStack\\Page', 2, 1),
(2739, 'PRIMARY', 'BookStack\\Page', 2, 1),
(2740, 'KEY\r', 'BookStack\\Page', 2, 2),
(2741, 'FOREIGN', 'BookStack\\Page', 2, 5),
(2742, 'CHECK\r', 'BookStack\\Page', 2, 1),
(2743, 'DEFAULT', 'BookStack\\Page', 2, 1),
(2744, 'is', 'BookStack\\Page', 2, 9),
(2745, 'a', 'BookStack\\Page', 2, 4),
(2746, 'KEY', 'BookStack\\Page', 2, 4),
(2747, 'constraint', 'BookStack\\Page', 2, 4),
(2748, 'The FOREIGN', 'BookStack\\Page', 2, 1),
(2749, 'KEY constraint', 'BookStack\\Page', 2, 1),
(2750, 'prevent', 'BookStack\\Page', 2, 1),
(2751, 'actions', 'BookStack\\Page', 2, 4),
(2752, 'that', 'BookStack\\Page', 2, 3),
(2753, 'would', 'BookStack\\Page', 2, 1),
(2754, 'destroy', 'BookStack\\Page', 2, 1),
(2755, 'links', 'BookStack\\Page', 2, 1),
(2756, 'between', 'BookStack\\Page', 2, 1),
(2757, 'tables', 'BookStack\\Page', 2, 1),
(2758, 'Typically', 'BookStack\\Page', 2, 1),
(2759, 'the', 'BookStack\\Page', 2, 13),
(2760, 'foreign', 'BookStack\\Page', 2, 3),
(2761, 'key', 'BookStack\\Page', 2, 4),
(2762, 'of', 'BookStack\\Page', 2, 4),
(2763, 'child', 'BookStack\\Page', 2, 4),
(2764, 'table', 'BookStack\\Page', 2, 8),
(2765, 'often', 'BookStack\\Page', 2, 1),
(2766, 'refer', 'BookStack\\Page', 2, 2),
(2767, 'the primary', 'BookStack\\Page', 2, 1),
(2768, 'key columns', 'BookStack\\Page', 2, 1),
(2769, 'parent', 'BookStack\\Page', 2, 3),
(2770, '\r', 'BookStack\\Page', 2, 3),
(2771, 'The', 'BookStack\\Page', 2, 1),
(2772, 'data', 'BookStack\\Page', 2, 2),
(2773, 'type', 'BookStack\\Page', 2, 2),
(2774, 'must', 'BookStack\\Page', 2, 1),
(2775, 'same', 'BookStack\\Page', 2, 1),
(2776, 'as', 'BookStack\\Page', 2, 1),
(2777, 'primary', 'BookStack\\Page', 2, 1),
(2778, 'Referential', 'BookStack\\Page', 2, 3),
(2779, 'CASCADE –', 'BookStack\\Page', 2, 1),
(2780, 'Changes', 'BookStack\\Page', 2, 1),
(2781, 'placed', 'BookStack\\Page', 2, 1),
(2782, 'upon', 'BookStack\\Page', 2, 1),
(2783, 'column', 'BookStack\\Page', 2, 2),
(2784, 'automatically', 'BookStack\\Page', 2, 1),
(2785, 'reflected', 'BookStack\\Page', 2, 1),
(2786, 'on', 'BookStack\\Page', 2, 1),
(2787, 'SET', 'BookStack\\Page', 2, 1),
(2788, 'NULL –', 'BookStack\\Page', 2, 1),
(2789, 'Child', 'BookStack\\Page', 2, 1),
(2790, 'set', 'BookStack\\Page', 2, 1),
(2791, 'NULL for', 'BookStack\\Page', 2, 1),
(2792, 'both UPDATE or DELETE operations', 'BookStack\\Page', 2, 1),
(2793, 'RESTRICT –', 'BookStack\\Page', 2, 1),
(2794, 'Rejects', 'BookStack\\Page', 2, 1),
(2795, 'the DELETE or UPDATE on', 'BookStack\\Page', 2, 1),
(2796, 'any', 'BookStack\\Page', 2, 1),
(2797, 'If', 'BookStack\\Page', 2, 1),
(2798, 'no', 'BookStack\\Page', 2, 1),
(2799, 'referential', 'BookStack\\Page', 2, 1),
(2800, 'action', 'BookStack\\Page', 2, 2),
(2801, 'clause', 'BookStack\\Page', 2, 1),
(2802, 'specified', 'BookStack\\Page', 2, 1),
(2803, 'this', 'BookStack\\Page', 2, 1),
(2804, 'default', 'BookStack\\Page', 2, 1),
(2961, 'Wildcards', 'BookStack\\Page', 4, 44),
(2962, 'What', 'BookStack\\Page', 4, 4),
(2963, 'are', 'BookStack\\Page', 4, 4),
(2964, 'MySQL', 'BookStack\\Page', 4, 1),
(2965, 'provides', 'BookStack\\Page', 4, 1),
(2966, 'two', 'BookStack\\Page', 4, 1),
(2967, 'wildcard', 'BookStack\\Page', 4, 5),
(2968, 'characters', 'BookStack\\Page', 4, 2),
(2969, 'for', 'BookStack\\Page', 4, 1),
(2970, 'constructing', 'BookStack\\Page', 4, 1),
(2971, 'patterns', 'BookStack\\Page', 4, 1),
(2972, 'percentage % and', 'BookStack\\Page', 4, 1),
(2973, 'the', 'BookStack\\Page', 4, 8),
(2974, 'underscore _', 'BookStack\\Page', 4, 1),
(2975, 'The', 'BookStack\\Page', 4, 2),
(2976, 'percentage', 'BookStack\\Page', 4, 1),
(2977, ' % ', 'BookStack\\Page', 4, 1),
(2978, 'matches', 'BookStack\\Page', 4, 2),
(2979, 'any', 'BookStack\\Page', 4, 5),
(2980, 'string', 'BookStack\\Page', 4, 1),
(2981, 'of', 'BookStack\\Page', 4, 1),
(2982, 'zero', 'BookStack\\Page', 4, 1),
(2983, 'or', 'BookStack\\Page', 4, 1),
(2984, 'more', 'BookStack\\Page', 4, 1),
(2985, '\r', 'BookStack\\Page', 4, 7),
(2986, 'underscore', 'BookStack\\Page', 4, 3),
(2987, ' _ ', 'BookStack\\Page', 4, 1),
(2988, 'single', 'BookStack\\Page', 4, 2),
(2989, 'character', 'BookStack\\Page', 4, 2),
(2990, 'Examples', 'BookStack\\Page', 4, 1),
(2991, 'To', 'BookStack\\Page', 4, 2),
(2992, 'find', 'BookStack\\Page', 4, 2),
(2993, 'employees', 'BookStack\\Page', 4, 2),
(2994, 'whose', 'BookStack\\Page', 4, 3),
(2995, 'first', 'BookStack\\Page', 4, 1),
(2996, 'names', 'BookStack\\Page', 4, 2),
(2997, 'start', 'BookStack\\Page', 4, 2),
(2998, 'with', 'BookStack\\Page', 4, 4),
(2999, 'letter T ', 'BookStack\\Page', 4, 1),
(3000, 'end', 'BookStack\\Page', 4, 2),
(3001, 'letter m', 'BookStack\\Page', 4, 1),
(3002, 'and', 'BookStack\\Page', 4, 2),
(3003, 'contain', 'BookStack\\Page', 4, 1),
(3004, 'between', 'BookStack\\Page', 4, 1),
(3005, 'e', 'BookStack\\Page', 4, 1),
(3006, 'g', 'BookStack\\Page', 4, 2),
(3007, ' Tom', 'BookStack\\Page', 4, 1),
(3008, ' Tim', 'BookStack\\Page', 4, 1),
(3009, 'you', 'BookStack\\Page', 4, 2),
(3010, 'use', 'BookStack\\Page', 4, 2),
(3011, '_', 'BookStack\\Page', 4, 1),
(3012, 'to', 'BookStack\\Page', 4, 2),
(3013, 'construct', 'BookStack\\Page', 4, 2),
(3014, 'pattern', 'BookStack\\Page', 4, 2),
(3015, 'as', 'BookStack\\Page', 4, 2),
(3016, 'follows', 'BookStack\\Page', 4, 2),
(3017, 'SELECT', 'BookStack\\Page', 4, 2),
(3018, 'employeeNumber', 'BookStack\\Page', 4, 2),
(3019, 'lastName', 'BookStack\\Page', 4, 3),
(3020, 'firstName\r', 'BookStack\\Page', 4, 2),
(3021, 'FROM\r', 'BookStack\\Page', 4, 2),
(3022, 'employees\r', 'BookStack\\Page', 4, 2),
(3023, 'WHERE\r', 'BookStack\\Page', 4, 2),
(3024, 'firstname', 'BookStack\\Page', 4, 1),
(3025, 'LIKE', 'BookStack\\Page', 4, 2),
(3026, 'T_m', 'BookStack\\Page', 4, 1),
(3027, 'name', 'BookStack\\Page', 4, 1),
(3028, 'can', 'BookStack\\Page', 4, 1),
(3029, 'letter', 'BookStack\\Page', 4, 1),
(3030, 'length', 'BookStack\\Page', 4, 1),
(3031, 'but', 'BookStack\\Page', 4, 1),
(3032, 'last', 'BookStack\\Page', 4, 1),
(3033, 'literal', 'BookStack\\Page', 4, 1),
(3034, 'string on e', 'BookStack\\Page', 4, 1),
(3035, ' Patterson', 'BookStack\\Page', 4, 1),
(3036, ' Thompson', 'BookStack\\Page', 4, 1),
(3037, '%', 'BookStack\\Page', 4, 1),
(3038, '%on', 'BookStack\\Page', 4, 1),
(3278, 'Linux', 'BookStack\\Book', 2, 48),
(3279, 'Joins', 'BookStack\\Page', 1, 40),
(3280, 'JOIN', 'BookStack\\Page', 1, 10),
(3281, 'types', 'BookStack\\Page', 1, 4),
(3282, 'INNER', 'BookStack\\Page', 1, 1),
(3283, 'returns', 'BookStack\\Page', 1, 3),
(3284, 'rows', 'BookStack\\Page', 1, 3),
(3285, 'when', 'BookStack\\Page', 1, 1),
(3286, 'there', 'BookStack\\Page', 1, 3),
(3287, 'is', 'BookStack\\Page', 1, 1),
(3288, 'a', 'BookStack\\Page', 1, 2),
(3289, 'match', 'BookStack\\Page', 1, 1),
(3290, 'in', 'BookStack\\Page', 1, 3),
(3291, 'both', 'BookStack\\Page', 1, 2),
(3292, 'tables', 'BookStack\\Page', 1, 6),
(3293, '\r', 'BookStack\\Page', 1, 3),
(3294, 'LEFT', 'BookStack\\Page', 1, 2),
(3295, 'all', 'BookStack\\Page', 1, 3),
(3296, 'from', 'BookStack\\Page', 1, 2),
(3297, 'the', 'BookStack\\Page', 1, 6),
(3298, 'left', 'BookStack\\Page', 1, 3),
(3299, 'table', 'BookStack\\Page', 1, 4),
(3300, 'even', 'BookStack\\Page', 1, 2),
(3301, 'if', 'BookStack\\Page', 1, 2),
(3302, 'are', 'BookStack\\Page', 1, 2),
(3303, 'no', 'BookStack\\Page', 1, 2),
(3304, 'matches', 'BookStack\\Page', 1, 2),
(3305, 'right', 'BookStack\\Page', 1, 3),
(3306, 'RIGHT', 'BookStack\\Page', 1, 1),
(3307, 'FULL', 'BookStack\\Page', 1, 1),
(3308, 'OUTER', 'BookStack\\Page', 1, 1),
(3309, 'combines', 'BookStack\\Page', 1, 1),
(3310, 'results', 'BookStack\\Page', 1, 1),
(3311, 'of', 'BookStack\\Page', 1, 1),
(3312, 'and', 'BookStack\\Page', 1, 2),
(3313, 'outer', 'BookStack\\Page', 1, 1),
(3314, 'joins', 'BookStack\\Page', 1, 1),
(3315, 'Examples', 'BookStack\\Page', 1, 3),
(3316, '1', 'BookStack\\Page', 1, 1),
(3317, 'To', 'BookStack\\Page', 1, 1),
(3318, 'retrieve', 'BookStack\\Page', 1, 1),
(3319, 'records', 'BookStack\\Page', 1, 1),
(3320, 'that', 'BookStack\\Page', 1, 1),
(3321, 'don', 'BookStack\\Page', 1, 1),
(3322, 't', 'BookStack\\Page', 1, 1),
(3323, 'have', 'BookStack\\Page', 1, 1),
(3324, 'relation', 'BookStack\\Page', 1, 1),
(3325, 'I', 'BookStack\\Page', 1, 1),
(3326, 'would', 'BookStack\\Page', 1, 1),
(3327, 'then', 'BookStack\\Page', 1, 1),
(3328, 'filter', 'BookStack\\Page', 1, 1),
(3329, 'out', 'BookStack\\Page', 1, 1),
(3330, 'by', 'BookStack\\Page', 1, 1),
(3331, 'NULL', 'BookStack\\Page', 1, 1),
(3332, 'Joining', 'BookStack\\Page', 1, 6),
(3333, 'with', 'BookStack\\Page', 1, 4),
(3334, 'ON', 'BookStack\\Page', 1, 6),
(3335, 'vs', 'BookStack\\Page', 1, 4),
(3336, 'WHERE', 'BookStack\\Page', 1, 7),
(3337, 'using', 'BookStack\\Page', 1, 2),
(3338, 'SELECT', 'BookStack\\Page', 1, 2),
(3339, '*', 'BookStack\\Page', 1, 2),
(3340, 'FROM', 'BookStack\\Page', 1, 2),
(3341, 'facebook\r', 'BookStack\\Page', 1, 1),
(3342, 'linkedin\r', 'BookStack\\Page', 1, 2),
(3343, 'facebook', 'BookStack\\Page', 1, 5),
(3344, 'name', 'BookStack\\Page', 1, 4),
(3345, '=', 'BookStack\\Page', 1, 6),
(3346, 'linkedin', 'BookStack\\Page', 1, 4),
(3347, 'name\r', 'BookStack\\Page', 1, 2),
(3348, 'Matt', 'BookStack\\Page', 1, 2),
(3349, 'OR', 'BookStack\\Page', 1, 2),
(3350, 'city', 'BookStack\\Page', 1, 2),
(3351, 'SF', 'BookStack\\Page', 1, 2),
(3352, 'AND', 'BookStack\\Page', 1, 1),
(3840, 'File', 'BookStack\\Page', 6, 44),
(3841, 'Permissions', 'BookStack\\Page', 6, 44),
(3842, 'How', 'BookStack\\Page', 6, 4),
(3843, 'do', 'BookStack\\Page', 6, 4),
(3844, 'work', 'BookStack\\Page', 6, 4),
(3845, 'Each', 'BookStack\\Page', 6, 2),
(3846, 'file', 'BookStack\\Page', 6, 13),
(3847, 'and', 'BookStack\\Page', 6, 1),
(3848, 'directory', 'BookStack\\Page', 6, 7),
(3849, 'has', 'BookStack\\Page', 6, 3),
(3850, 'three', 'BookStack\\Page', 6, 2),
(3851, 'user', 'BookStack\\Page', 6, 1),
(3852, 'based', 'BookStack\\Page', 6, 1),
(3853, 'permission', 'BookStack\\Page', 6, 5),
(3854, 'groups', 'BookStack\\Page', 6, 3),
(3855, 'owner', 'BookStack\\Page', 6, 7),
(3856, '–', 'BookStack\\Page', 6, 6),
(3857, 'The', 'BookStack\\Page', 6, 6),
(3858, 'Owner', 'BookStack\\Page', 6, 1),
(3859, 'permissions', 'BookStack\\Page', 6, 9),
(3860, 'apply', 'BookStack\\Page', 6, 3),
(3861, 'only', 'BookStack\\Page', 6, 3),
(3862, 'the', 'BookStack\\Page', 6, 12),
(3863, 'of', 'BookStack\\Page', 6, 9),
(3864, 'or', 'BookStack\\Page', 6, 8),
(3865, 'they', 'BookStack\\Page', 6, 2),
(3866, 'will', 'BookStack\\Page', 6, 2),
(3867, 'not', 'BookStack\\Page', 6, 2),
(3868, 'impact', 'BookStack\\Page', 6, 1),
(3869, 'actions', 'BookStack\\Page', 6, 2),
(3870, 'other', 'BookStack\\Page', 6, 3),
(3871, 'users', 'BookStack\\Page', 6, 4),
(3872, '\r', 'BookStack\\Page', 6, 11),
(3873, 'group', 'BookStack\\Page', 6, 7),
(3874, 'Group', 'BookStack\\Page', 6, 1),
(3875, 'to', 'BookStack\\Page', 6, 9),
(3876, 'that', 'BookStack\\Page', 6, 2),
(3877, 'been', 'BookStack\\Page', 6, 1),
(3878, 'assigned', 'BookStack\\Page', 6, 1),
(3879, 'effect', 'BookStack\\Page', 6, 1),
(3880, 'all', 'BookStack\\Page', 6, 8),
(3881, 'All', 'BookStack\\Page', 6, 1),
(3882, 'Users', 'BookStack\\Page', 6, 1),
(3883, 'on', 'BookStack\\Page', 6, 1),
(3884, 'system', 'BookStack\\Page', 6, 1),
(3885, 'this', 'BookStack\\Page', 6, 1),
(3886, 'is', 'BookStack\\Page', 6, 2),
(3887, 'you', 'BookStack\\Page', 6, 1),
(3888, 'want', 'BookStack\\Page', 6, 1),
(3889, 'watch', 'BookStack\\Page', 6, 1),
(3890, 'most', 'BookStack\\Page', 6, 1),
(3891, 'basic', 'BookStack\\Page', 6, 1),
(3892, 'types', 'BookStack\\Page', 6, 1),
(3893, 'read', 'BookStack\\Page', 6, 2),
(3894, 'Read', 'BookStack\\Page', 6, 3),
(3895, 'refers', 'BookStack\\Page', 6, 1),
(3896, 'a', 'BookStack\\Page', 6, 7),
(3897, 'user’s', 'BookStack\\Page', 6, 3),
(3898, 'capability', 'BookStack\\Page', 6, 3),
(3899, 'contents', 'BookStack\\Page', 6, 2),
(3900, 'write', 'BookStack\\Page', 6, 3),
(3901, 'Write', 'BookStack\\Page', 6, 1),
(3902, 'refer', 'BookStack\\Page', 6, 1),
(3903, 'modify', 'BookStack\\Page', 6, 1),
(3904, 'execute', 'BookStack\\Page', 6, 4),
(3905, 'Execute', 'BookStack\\Page', 6, 1),
(3906, 'affects', 'BookStack\\Page', 6, 1),
(3907, 'view', 'BookStack\\Page', 6, 1),
(3908, ' ', 'BookStack\\Page', 6, 1),
(3909, 'Commands', 'BookStack\\Page', 6, 3),
(3910, 'chmod', 'BookStack\\Page', 6, 5),
(3911, '-', 'BookStack\\Page', 6, 8),
(3912, 'Change', 'BookStack\\Page', 6, 2),
(3913, '+x', 'BookStack\\Page', 6, 1),
(3914, 'Execution', 'BookStack\\Page', 6, 2),
(3915, 'for', 'BookStack\\Page', 6, 4),
(3916, '111', 'BookStack\\Page', 6, 1),
(3917, '744', 'BookStack\\Page', 6, 1),
(3918, 'but', 'BookStack\\Page', 6, 1),
(3919, 'can', 'BookStack\\Page', 6, 1),
(3920, '777', 'BookStack\\Page', 6, 1),
(3921, 'Lists', 'BookStack\\Page', 6, 2),
(3922, 'part', 'BookStack\\Page', 6, 1),
(3923, 'members', 'BookStack\\Page', 6, 2),
(3924, 'chown', 'BookStack\\Page', 6, 1),
(3925, 'file/directory', 'BookStack\\Page', 6, 1),
(3926, 'Archiving', 'BookStack\\Page', 7, 41),
(3927, 'and', 'BookStack\\Page', 7, 44),
(3928, 'Compression', 'BookStack\\Page', 7, 45),
(3929, 'What', 'BookStack\\Page', 7, 8),
(3930, 'are', 'BookStack\\Page', 7, 6),
(3931, 'Archives', 'BookStack\\Page', 7, 4),
(3932, 'is', 'BookStack\\Page', 7, 7),
(3933, 'the', 'BookStack\\Page', 7, 6),
(3934, 'process', 'BookStack\\Page', 7, 1),
(3935, 'of', 'BookStack\\Page', 7, 4),
(3936, 'collecting', 'BookStack\\Page', 7, 1),
(3937, 'storing', 'BookStack\\Page', 7, 1),
(3938, 'a', 'BookStack\\Page', 7, 2),
(3939, 'group', 'BookStack\\Page', 7, 1),
(3940, 'files', 'BookStack\\Page', 7, 6),
(3941, 'directories', 'BookStack\\Page', 7, 1),
(3942, 'into', 'BookStack\\Page', 7, 1),
(3943, 'one', 'BookStack\\Page', 7, 1),
(3944, 'file', 'BookStack\\Page', 7, 9),
(3945, 'The', 'BookStack\\Page', 7, 2),
(3946, 'tar', 'BookStack\\Page', 7, 6),
(3947, 'utility', 'BookStack\\Page', 7, 2),
(3948, 'performs', 'BookStack\\Page', 7, 2),
(3949, 'this', 'BookStack\\Page', 7, 2),
(3950, 'action', 'BookStack\\Page', 7, 2),
(3951, 'with', 'BookStack\\Page', 7, 2),
(3952, 'extension', 'BookStack\\Page', 7, 2),
(3953, 'Commands', 'BookStack\\Page', 7, 2),
(3954, '-cf', 'BookStack\\Page', 7, 1),
(3955, 'destination_file', 'BookStack\\Page', 7, 1),
(3956, 'file_1', 'BookStack\\Page', 7, 1),
(3957, '* file_2', 'BookStack\\Page', 7, 1),
(3958, '*', 'BookStack\\Page', 7, 1),
(3959, '-', 'BookStack\\Page', 7, 5),
(3960, 'Archive', 'BookStack\\Page', 7, 1),
(3961, '\r', 'BookStack\\Page', 7, 3),
(3962, '-xf', 'BookStack\\Page', 7, 1),
(3963, 'Extract', 'BookStack\\Page', 7, 1),
(3964, 'act', 'BookStack\\Page', 7, 1),
(3965, 'shrinking', 'BookStack\\Page', 7, 1),
(3966, 'size', 'BookStack\\Page', 7, 1),
(3967, 'which', 'BookStack\\Page', 7, 1),
(3968, 'quite', 'BookStack\\Page', 7, 1),
(3969, 'useful', 'BookStack\\Page', 7, 1),
(3970, 'in', 'BookStack\\Page', 7, 1),
(3971, 'sending', 'BookStack\\Page', 7, 1),
(3972, 'large', 'BookStack\\Page', 7, 1),
(3973, 'over', 'BookStack\\Page', 7, 1),
(3974, 'internet', 'BookStack\\Page', 7, 1),
(3975, 'gzip', 'BookStack\\Page', 7, 2),
(3976, 'gz', 'BookStack\\Page', 7, 1),
(3977, 'du', 'BookStack\\Page', 7, 1),
(3978, '-h', 'BookStack\\Page', 7, 1),
(3979, 'List', 'BookStack\\Page', 7, 1),
(3980, 'disk', 'BookStack\\Page', 7, 1),
(3981, 'usage', 'BookStack\\Page', 7, 1),
(3982, 'Compresses', 'BookStack\\Page', 7, 1),
(3983, 'gunzip', 'BookStack\\Page', 7, 1),
(3984, 'Un-compresses', 'BookStack\\Page', 7, 1),
(4092, 'Device', 'BookStack\\Page', 8, 45),
(4093, 'Files', 'BookStack\\Page', 8, 44),
(4094, 'What', 'BookStack\\Page', 8, 4),
(4095, 'are', 'BookStack\\Page', 8, 12),
(4096, 'In', 'BookStack\\Page', 8, 1),
(4097, 'Linux', 'BookStack\\Page', 8, 2),
(4098, 'various', 'BookStack\\Page', 8, 1),
(4099, 'special', 'BookStack\\Page', 8, 1),
(4100, 'files', 'BookStack\\Page', 8, 5),
(4101, 'can', 'BookStack\\Page', 8, 1),
(4102, 'be', 'BookStack\\Page', 8, 1),
(4103, 'found', 'BookStack\\Page', 8, 1),
(4104, 'under', 'BookStack\\Page', 8, 1),
(4105, 'the', 'BookStack\\Page', 8, 7),
(4106, '/dev', 'BookStack\\Page', 8, 1),
(4107, 'directory', 'BookStack\\Page', 8, 1),
(4108, 'These', 'BookStack\\Page', 8, 2),
(4109, 'called', 'BookStack\\Page', 8, 2),
(4110, 'device', 'BookStack\\Page', 8, 2),
(4111, 'and', 'BookStack\\Page', 8, 2),
(4112, 'behave', 'BookStack\\Page', 8, 1),
(4113, 'unlike', 'BookStack\\Page', 8, 1),
(4114, 'ordinary', 'BookStack\\Page', 8, 1),
(4115, 'Two', 'BookStack\\Page', 8, 1),
(4116, 'standard', 'BookStack\\Page', 8, 1),
(4117, 'types', 'BookStack\\Page', 8, 1),
(4118, 'of', 'BookStack\\Page', 8, 3),
(4119, 'exist', 'BookStack\\Page', 8, 1),
(4120, 'Character', 'BookStack\\Page', 8, 1),
(4121, 'devices', 'BookStack\\Page', 8, 9),
(4122, 'where', 'BookStack\\Page', 8, 2),
(4123, 'that', 'BookStack\\Page', 8, 2),
(4124, 'communicate', 'BookStack\\Page', 8, 2),
(4125, 'by', 'BookStack\\Page', 8, 2),
(4126, 'sending', 'BookStack\\Page', 8, 2),
(4127, 'receiving', 'BookStack\\Page', 8, 1),
(4128, 'single', 'BookStack\\Page', 8, 1),
(4129, 'characters', 'BookStack\\Page', 8, 1),
(4130, 'or', 'BookStack\\Page', 8, 1),
(4131, 'bytes', 'BookStack\\Page', 8, 1),
(4132, '\r', 'BookStack\\Page', 8, 16),
(4133, '/dev/null', 'BookStack\\Page', 8, 1),
(4134, '/dev/urandom', 'BookStack\\Page', 8, 1),
(4135, '/dev/zero', 'BookStack\\Page', 8, 1),
(4136, 'etc', 'BookStack\\Page', 8, 2),
(4137, 'pseudo', 'BookStack\\Page', 8, 1),
(4138, 'Sound', 'BookStack\\Page', 8, 1),
(4139, 'cards\r', 'BookStack\\Page', 8, 1),
(4140, 'Serial', 'BookStack\\Page', 8, 1),
(4141, 'ports\r', 'BookStack\\Page', 8, 2),
(4142, 'Parallel', 'BookStack\\Page', 8, 1),
(4143, 'Block', 'BookStack\\Page', 8, 1),
(4144, 'entire', 'BookStack\\Page', 8, 1),
(4145, 'blocks', 'BookStack\\Page', 8, 1),
(4146, 'data', 'BookStack\\Page', 8, 1),
(4147, 'Hard', 'BookStack\\Page', 8, 1),
(4148, 'drives\r', 'BookStack\\Page', 8, 2),
(4149, 'CD-ROM', 'BookStack\\Page', 8, 1),
(4150, 'RAM', 'BookStack\\Page', 8, 1),
(4151, 'disks\r', 'BookStack\\Page', 8, 1),
(4152, 'USB', 'BookStack\\Page', 8, 2),
(4153, 'cameras\r', 'BookStack\\Page', 8, 1),
(4154, 'How', 'BookStack\\Page', 8, 1),
(4155, 'Disks', 'BookStack\\Page', 8, 1),
(4156, 'grouped', 'BookStack\\Page', 8, 1),
(4157, 'Disk', 'BookStack\\Page', 8, 1),
(4158, 'names', 'BookStack\\Page', 8, 1),
(4159, 'in', 'BookStack\\Page', 8, 1),
(4160, 'alphabetical', 'BookStack\\Page', 8, 1),
(4161, '/dev/sda', 'BookStack\\Page', 8, 1),
(4162, 'is', 'BookStack\\Page', 8, 3),
(4163, 'first', 'BookStack\\Page', 8, 3),
(4164, 'hard', 'BookStack\\Page', 8, 1),
(4165, 'drive', 'BookStack\\Page', 8, 2),
(4166, 'usually', 'BookStack\\Page', 8, 1),
(4167, 'primary', 'BookStack\\Page', 8, 1),
(4168, 'one', 'BookStack\\Page', 8, 1),
(4169, '/dev/sdb', 'BookStack\\Page', 8, 1),
(4170, 'second', 'BookStack\\Page', 8, 1),
(4171, 'The', 'BookStack\\Page', 8, 1),
(4172, 'numbers', 'BookStack\\Page', 8, 1),
(4173, 'refer', 'BookStack\\Page', 8, 1),
(4174, 'to', 'BookStack\\Page', 8, 1),
(4175, 'partitions', 'BookStack\\Page', 8, 2),
(4176, 'so', 'BookStack\\Page', 8, 1),
(4177, '/dev/sda1', 'BookStack\\Page', 8, 1),
(4178, 'partition', 'BookStack\\Page', 8, 1),
(4179, 'Storage', 'BookStack\\Page', 8, 1),
(4180, 'prefixed', 'BookStack\\Page', 8, 1),
(4181, 'with', 'BookStack\\Page', 8, 1),
(4182, 'sd', 'BookStack\\Page', 8, 1),
(4183, 'because', 'BookStack\\Page', 8, 1),
(4184, 'they', 'BookStack\\Page', 8, 1),
(4185, 'SCSI', 'BookStack\\Page', 8, 1),
(4186, 'Commands', 'BookStack\\Page', 8, 1),
(4187, 'df', 'BookStack\\Page', 8, 1),
(4188, '-h', 'BookStack\\Page', 8, 1),
(4189, '-', 'BookStack\\Page', 8, 4),
(4190, 'Lists', 'BookStack\\Page', 8, 4),
(4191, 'all', 'BookStack\\Page', 8, 4),
(4192, 'mounted', 'BookStack\\Page', 8, 1),
(4193, 'lsblk', 'BookStack\\Page', 8, 1),
(4194, 'block', 'BookStack\\Page', 8, 1),
(4195, 'lsusb', 'BookStack\\Page', 8, 1),
(4196, 'lspci', 'BookStack\\Page', 8, 1),
(4197, 'PCI', 'BookStack\\Page', 8, 1),
(4198, 'Devices', 'BookStack\\Page', 8, 1),
(4389, 'DD', 'BookStack\\Page', 9, 44),
(4390, 'Utility', 'BookStack\\Page', 9, 40),
(4391, 'What', 'BookStack\\Page', 9, 4),
(4392, 'is', 'BookStack\\Page', 9, 8),
(4393, 'command', 'BookStack\\Page', 9, 4),
(4394, 'used', 'BookStack\\Page', 9, 4),
(4395, 'for', 'BookStack\\Page', 9, 4),
(4396, 'Dd', 'BookStack\\Page', 9, 1),
(4397, 'a', 'BookStack\\Page', 9, 3),
(4398, 'very', 'BookStack\\Page', 9, 1),
(4399, 'powerful', 'BookStack\\Page', 9, 1),
(4400, 'and', 'BookStack\\Page', 9, 6),
(4401, 'useful', 'BookStack\\Page', 9, 2),
(4402, 'utility', 'BookStack\\Page', 9, 1),
(4403, 'available', 'BookStack\\Page', 9, 1),
(4404, 'on', 'BookStack\\Page', 9, 1),
(4405, 'Unix', 'BookStack\\Page', 9, 2),
(4406, 'Unix-like', 'BookStack\\Page', 9, 2),
(4407, 'operating', 'BookStack\\Page', 9, 2),
(4408, 'systems', 'BookStack\\Page', 9, 2),
(4409, 'As', 'BookStack\\Page', 9, 1),
(4410, 'stated', 'BookStack\\Page', 9, 1),
(4411, 'in', 'BookStack\\Page', 9, 1),
(4412, 'its', 'BookStack\\Page', 9, 2),
(4413, 'manual', 'BookStack\\Page', 9, 1),
(4414, 'purpose', 'BookStack\\Page', 9, 1),
(4415, 'to', 'BookStack\\Page', 9, 3),
(4416, 'convert', 'BookStack\\Page', 9, 1),
(4417, 'copy', 'BookStack\\Page', 9, 3),
(4418, 'files', 'BookStack\\Page', 9, 2),
(4419, 'On', 'BookStack\\Page', 9, 1),
(4420, 'like', 'BookStack\\Page', 9, 1),
(4421, 'Linux', 'BookStack\\Page', 9, 1),
(4422, 'almost', 'BookStack\\Page', 9, 1),
(4423, 'everything', 'BookStack\\Page', 9, 1),
(4424, 'treated', 'BookStack\\Page', 9, 1),
(4425, 'as', 'BookStack\\Page', 9, 1),
(4426, 'file', 'BookStack\\Page', 9, 3),
(4427, 'even', 'BookStack\\Page', 9, 1),
(4428, 'block', 'BookStack\\Page', 9, 1),
(4429, 'devices', 'BookStack\\Page', 9, 1),
(4430, 'this', 'BookStack\\Page', 9, 1),
(4431, 'makes', 'BookStack\\Page', 9, 1),
(4432, 'dd', 'BookStack\\Page', 9, 5),
(4433, 'among', 'BookStack\\Page', 9, 1),
(4434, 'the', 'BookStack\\Page', 9, 1),
(4435, 'other', 'BookStack\\Page', 9, 1),
(4436, 'things', 'BookStack\\Page', 9, 1),
(4437, 'clone', 'BookStack\\Page', 9, 1),
(4438, 'disks', 'BookStack\\Page', 9, 1),
(4439, 'or', 'BookStack\\Page', 9, 1),
(4440, 'wipe', 'BookStack\\Page', 9, 1),
(4441, 'data', 'BookStack\\Page', 9, 1),
(4442, 'Commands', 'BookStack\\Page', 9, 1),
(4443, '-', 'BookStack\\Page', 9, 6),
(4444, 'Convert', 'BookStack\\Page', 9, 1),
(4445, '\r', 'BookStack\\Page', 9, 4),
(4446, '-bs', 'BookStack\\Page', 9, 1),
(4447, 'Block', 'BookStack\\Page', 9, 1),
(4448, 'size', 'BookStack\\Page', 9, 1),
(4449, 'default', 'BookStack\\Page', 9, 1),
(4450, '512', 'BookStack\\Page', 9, 1),
(4451, 'KB', 'BookStack\\Page', 9, 1),
(4452, '-count', 'BookStack\\Page', 9, 1),
(4453, 'Number', 'BookStack\\Page', 9, 1),
(4454, 'of', 'BookStack\\Page', 9, 2),
(4455, 'blocks', 'BookStack\\Page', 9, 1),
(4456, 'be', 'BookStack\\Page', 9, 1),
(4457, 'copied', 'BookStack\\Page', 9, 1),
(4458, '-if', 'BookStack\\Page', 9, 1),
(4459, '-of', 'BookStack\\Page', 9, 1),
(4460, 'Input/output', 'BookStack\\Page', 9, 1),
(4461, 'if=/dev/sda', 'BookStack\\Page', 9, 1),
(4462, '|', 'BookStack\\Page', 9, 1),
(4463, 'gzip', 'BookStack\\Page', 9, 1),
(4464, '-c', 'BookStack\\Page', 9, 1),
(4465, '-9', 'BookStack\\Page', 9, 1),
(4466, 'sda', 'BookStack\\Page', 9, 1),
(4467, 'gz', 'BookStack\\Page', 9, 1),
(4468, 'Make', 'BookStack\\Page', 9, 1),
(4469, 'drive', 'BookStack\\Page', 9, 1),
(4470, 'A', 'BookStack\\Page', 9, 1),
(4471, 'compress', 'BookStack\\Page', 9, 1),
(4472, 'it', 'BookStack\\Page', 9, 1),
(4473, 'if=/dev/zero', 'BookStack\\Page', 9, 1),
(4474, 'of=~/howtogeek', 'BookStack\\Page', 9, 1),
(4475, 'img', 'BookStack\\Page', 9, 1),
(4476, 'bs=1M', 'BookStack\\Page', 9, 1),
(4477, 'count=250', 'BookStack\\Page', 9, 1),
(4478, 'Create', 'BookStack\\Page', 9, 1),
(4479, 'an', 'BookStack\\Page', 9, 1),
(4480, 'empty', 'BookStack\\Page', 9, 1),
(4481, '250MB', 'BookStack\\Page', 9, 1),
(4482, 'image', 'BookStack\\Page', 9, 1),
(4558, 'Disk', 'BookStack\\Page', 10, 45),
(4559, 'Partitioning', 'BookStack\\Page', 10, 44),
(4560, 'What', 'BookStack\\Page', 10, 4),
(4561, 'is', 'BookStack\\Page', 10, 6),
(4562, 'partitioning', 'BookStack\\Page', 10, 1),
(4563, 'splitting', 'BookStack\\Page', 10, 1),
(4564, 'a', 'BookStack\\Page', 10, 3),
(4565, 'drive', 'BookStack\\Page', 10, 6),
(4566, 'into', 'BookStack\\Page', 10, 1),
(4567, 'logical', 'BookStack\\Page', 10, 1),
(4568, 'drives', 'BookStack\\Page', 10, 1),
(4569, 'or', 'BookStack\\Page', 10, 1),
(4570, 'volumes', 'BookStack\\Page', 10, 1),
(4571, 'Each', 'BookStack\\Page', 10, 2),
(4572, 'volume', 'BookStack\\Page', 10, 1),
(4573, 'on', 'BookStack\\Page', 10, 1),
(4574, 'partitioned', 'BookStack\\Page', 10, 1),
(4575, 'disk', 'BookStack\\Page', 10, 1),
(4576, 'has', 'BookStack\\Page', 10, 2),
(4577, 'its', 'BookStack\\Page', 10, 1),
(4578, 'own', 'BookStack\\Page', 10, 1),
(4579, 'letter', 'BookStack\\Page', 10, 2),
(4580, 'and', 'BookStack\\Page', 10, 2),
(4581, 'folder', 'BookStack\\Page', 10, 1),
(4582, 'structure', 'BookStack\\Page', 10, 1),
(4583, 'also', 'BookStack\\Page', 10, 1),
(4584, 'can', 'BookStack\\Page', 10, 2),
(4585, 'be', 'BookStack\\Page', 10, 2),
(4586, 'formatted', 'BookStack\\Page', 10, 1),
(4587, 'with', 'BookStack\\Page', 10, 2),
(4588, 'different', 'BookStack\\Page', 10, 1),
(4589, 'file', 'BookStack\\Page', 10, 1),
(4590, 'systems', 'BookStack\\Page', 10, 1),
(4591, 'without', 'BookStack\\Page', 10, 1),
(4592, 'affecting', 'BookStack\\Page', 10, 1),
(4593, 'other', 'BookStack\\Page', 10, 1),
(4594, 'partitions', 'BookStack\\Page', 10, 2),
(4595, 'It', 'BookStack\\Page', 10, 1),
(4596, 'possible', 'BookStack\\Page', 10, 1),
(4597, 'to', 'BookStack\\Page', 10, 2),
(4598, 'set', 'BookStack\\Page', 10, 1),
(4599, 'up', 'BookStack\\Page', 10, 1),
(4600, 'hidden', 'BookStack\\Page', 10, 1),
(4601, 'partition', 'BookStack\\Page', 10, 7),
(4602, 'no', 'BookStack\\Page', 10, 1),
(4603, 'When', 'BookStack\\Page', 10, 1),
(4604, 'creating', 'BookStack\\Page', 10, 1),
(4605, 'table', 'BookStack\\Page', 10, 5),
(4606, 'specified', 'BookStack\\Page', 10, 1),
(4607, 'have', 'BookStack\\Page', 10, 2),
(4608, 'only', 'BookStack\\Page', 10, 1),
(4609, '1', 'BookStack\\Page', 10, 1),
(4610, 'Which', 'BookStack\\Page', 10, 3),
(4611, 'should', 'BookStack\\Page', 10, 3),
(4612, 'I', 'BookStack\\Page', 10, 3),
(4613, 'use', 'BookStack\\Page', 10, 3),
(4614, 'MBR\r', 'BookStack\\Page', 10, 1),
(4615, '\r', 'BookStack\\Page', 10, 4),
(4616, 'If', 'BookStack\\Page', 10, 4),
(4617, 'the', 'BookStack\\Page', 10, 4),
(4618, 'motherboard', 'BookStack\\Page', 10, 2),
(4619, 'uses', 'BookStack\\Page', 10, 1),
(4620, 'legacy', 'BookStack\\Page', 10, 1),
(4621, 'BIOS\r', 'BookStack\\Page', 10, 1),
(4622, 'GPT\r', 'BookStack\\Page', 10, 1),
(4623, 'capacity', 'BookStack\\Page', 10, 1),
(4624, 'exceeds', 'BookStack\\Page', 10, 1),
(4625, '2', 'BookStack\\Page', 10, 1),
(4626, 'TB\r', 'BookStack\\Page', 10, 1),
(4627, 'supports', 'BookStack\\Page', 10, 1),
(4628, 'UEFI\r', 'BookStack\\Page', 10, 1),
(4629, 'will', 'BookStack\\Page', 10, 1),
(4630, 'more', 'BookStack\\Page', 10, 1),
(4631, 'than', 'BookStack\\Page', 10, 1),
(4632, '4', 'BookStack\\Page', 10, 1),
(4846, 'File', 'BookStack\\Page', 11, 54),
(4847, 'Systems', 'BookStack\\Page', 11, 49),
(4848, 'What', 'BookStack\\Page', 11, 11),
(4849, 'are', 'BookStack\\Page', 11, 10),
(4850, 'system', 'BookStack\\Page', 11, 20),
(4851, 'is', 'BookStack\\Page', 11, 6),
(4852, 'the', 'BookStack\\Page', 11, 9),
(4853, 'way', 'BookStack\\Page', 11, 3),
(4854, 'storage', 'BookStack\\Page', 11, 2),
(4855, 'space', 'BookStack\\Page', 11, 1),
(4856, 'on', 'BookStack\\Page', 11, 5),
(4857, 'a', 'BookStack\\Page', 11, 15),
(4858, 'drive', 'BookStack\\Page', 11, 5),
(4859, 'split', 'BookStack\\Page', 11, 1),
(4860, 'Without', 'BookStack\\Page', 11, 1),
(4861, 'it', 'BookStack\\Page', 11, 6),
(4862, 'we', 'BookStack\\Page', 11, 3),
(4863, 'wouldn', 'BookStack\\Page', 11, 1),
(4864, 't', 'BookStack\\Page', 11, 2),
(4865, 'have', 'BookStack\\Page', 11, 1),
(4866, 'any', 'BookStack\\Page', 11, 1),
(4867, 'to', 'BookStack\\Page', 11, 5),
(4868, 'know', 'BookStack\\Page', 11, 1),
(4869, 'where', 'BookStack\\Page', 11, 1),
(4870, 'file', 'BookStack\\Page', 11, 22),
(4871, 'one', 'BookStack\\Page', 11, 4),
(4872, 'ends', 'BookStack\\Page', 11, 1),
(4873, 'and', 'BookStack\\Page', 11, 5),
(4874, 'other', 'BookStack\\Page', 11, 2),
(4875, 'starts', 'BookStack\\Page', 11, 1),
(4876, 'An', 'BookStack\\Page', 11, 1),
(4877, 'inode', 'BookStack\\Page', 11, 2),
(4878, 'data', 'BookStack\\Page', 11, 6),
(4879, 'structure', 'BookStack\\Page', 11, 2),
(4880, 'that', 'BookStack\\Page', 11, 6),
(4881, 'describes', 'BookStack\\Page', 11, 1),
(4882, 'each', 'BookStack\\Page', 11, 1),
(4883, 'has', 'BookStack\\Page', 11, 3),
(4884, 'Each', 'BookStack\\Page', 11, 1),
(4885, 'an', 'BookStack\\Page', 11, 5),
(4886, 'table', 'BookStack\\Page', 11, 1),
(4887, 'which', 'BookStack\\Page', 11, 1),
(4888, 'stores', 'BookStack\\Page', 11, 1),
(4889, 'inodes', 'BookStack\\Page', 11, 4),
(4890, ' ', 'BookStack\\Page', 11, 2),
(4891, 'do', 'BookStack\\Page', 11, 6),
(4892, 'contain', 'BookStack\\Page', 11, 3),
(4893, 'Unique', 'BookStack\\Page', 11, 1),
(4894, 'index\r', 'BookStack\\Page', 11, 1),
(4895, 'size\r', 'BookStack\\Page', 11, 1),
(4896, 'Permissions\r', 'BookStack\\Page', 11, 1),
(4897, 'Location', 'BookStack\\Page', 11, 1),
(4898, 'of', 'BookStack\\Page', 11, 6),
(4899, 'data\r', 'BookStack\\Page', 11, 1),
(4900, 'Creation', 'BookStack\\Page', 11, 1),
(4901, 'read', 'BookStack\\Page', 11, 1),
(4902, 'write', 'BookStack\\Page', 11, 1),
(4903, 'timestamps', 'BookStack\\Page', 11, 1),
(4904, 'Which', 'BookStack\\Page', 11, 6),
(4905, 'should', 'BookStack\\Page', 11, 6),
(4906, 'I', 'BookStack\\Page', 11, 13),
(4907, 'use', 'BookStack\\Page', 11, 8),
(4908, 'for', 'BookStack\\Page', 11, 11),
(4909, 'my', 'BookStack\\Page', 11, 6),
(4910, 'NFTS\r', 'BookStack\\Page', 11, 2),
(4911, '\r', 'BookStack\\Page', 11, 16),
(4912, 'Suitable', 'BookStack\\Page', 11, 5),
(4913, 'Windows\r', 'BookStack\\Page', 11, 2),
(4914, 'ext4\r', 'BookStack\\Page', 11, 1),
(4915, 'Linux\r', 'BookStack\\Page', 11, 1),
(4916, 'HFS+/APFS\r', 'BookStack\\Page', 11, 1),
(4917, 'MacOS', 'BookStack\\Page', 11, 1),
(4918, 'secondary', 'BookStack\\Page', 11, 3),
(4919, 'drives', 'BookStack\\Page', 11, 4),
(4920, 'exFat\r', 'BookStack\\Page', 11, 1),
(4921, 'Windows', 'BookStack\\Page', 11, 1),
(4922, 'or', 'BookStack\\Page', 11, 5),
(4923, 'MacOS\r', 'BookStack\\Page', 11, 1),
(4924, 'FAT32\r', 'BookStack\\Page', 11, 1),
(4925, 'Will', 'BookStack\\Page', 11, 1),
(4926, 'work', 'BookStack\\Page', 11, 1),
(4927, 'across', 'BookStack\\Page', 11, 1),
(4928, 'all', 'BookStack\\Page', 11, 4),
(4929, 'Operating', 'BookStack\\Page', 11, 1),
(4930, 'Systems\r', 'BookStack\\Page', 11, 1),
(4931, 'Supports', 'BookStack\\Page', 11, 1),
(4932, 'only', 'BookStack\\Page', 11, 2),
(4933, '4', 'BookStack\\Page', 11, 1),
(4934, 'GB', 'BookStack\\Page', 11, 1),
(4935, 'memory', 'BookStack\\Page', 11, 1),
(4936, 'Commands', 'BookStack\\Page', 11, 2),
(4937, 'wipefs', 'BookStack\\Page', 11, 1),
(4938, '-a', 'BookStack\\Page', 11, 3),
(4939, 'device -', 'BookStack\\Page', 11, 1),
(4940, 'Wipe', 'BookStack\\Page', 11, 1),
(4941, 'file-system', 'BookStack\\Page', 11, 3),
(4942, 'device', 'BookStack\\Page', 11, 3),
(4943, '--all', 'BookStack\\Page', 11, 1),
(4944, 'will', 'BookStack\\Page', 11, 1),
(4945, 'wipe', 'BookStack\\Page', 11, 1),
(4946, 'partitions', 'BookStack\\Page', 11, 2),
(4947, 'mkfs', 'BookStack\\Page', 11, 1),
(4948, 'file_system', 'BookStack\\Page', 11, 1),
(4949, 'image -', 'BookStack\\Page', 11, 1),
(4950, 'Create', 'BookStack\\Page', 11, 1),
(4951, 'image', 'BookStack\\Page', 11, 2),
(4952, 'How', 'BookStack\\Page', 11, 7),
(4953, 'can', 'BookStack\\Page', 11, 8),
(4954, 'mount', 'BookStack\\Page', 11, 8),
(4955, 'One', 'BookStack\\Page', 11, 1),
(4956, 'key', 'BookStack\\Page', 11, 1),
(4957, 'differences', 'BookStack\\Page', 11, 1);
INSERT INTO `search_terms` (`id`, `term`, `entity_type`, `entity_id`, `score`) VALUES
(4958, 'between', 'BookStack\\Page', 11, 1),
(4959, 'Linux', 'BookStack\\Page', 11, 3),
(4960, 'operating', 'BookStack\\Page', 11, 1),
(4961, 'systems', 'BookStack\\Page', 11, 3),
(4962, 'you', 'BookStack\\Page', 11, 3),
(4963, 'need', 'BookStack\\Page', 11, 2),
(4964, 'before', 'BookStack\\Page', 11, 1),
(4965, 'These', 'BookStack\\Page', 11, 1),
(4966, 'usually', 'BookStack\\Page', 11, 1),
(4967, 'disk', 'BookStack\\Page', 11, 4),
(4968, 'DVDs', 'BookStack\\Page', 11, 1),
(4969, 'USB', 'BookStack\\Page', 11, 1),
(4970, 'etc', 'BookStack\\Page', 11, 1),
(4971, 'When', 'BookStack\\Page', 11, 2),
(4972, 'mounting', 'BookStack\\Page', 11, 1),
(4973, 'been', 'BookStack\\Page', 11, 1),
(4974, 'created', 'BookStack\\Page', 11, 1),
(4975, 'partition', 'BookStack\\Page', 11, 1),
(4976, 'flash', 'BookStack\\Page', 11, 1),
(4977, 'gets', 'BookStack\\Page', 11, 1),
(4978, 'mounted', 'BookStack\\Page', 11, 8),
(4979, 'into', 'BookStack\\Page', 11, 3),
(4980, 'existing', 'BookStack\\Page', 11, 1),
(4981, 'directory', 'BookStack\\Page', 11, 3),
(4982, 'within', 'BookStack\\Page', 11, 1),
(4983, 'That', 'BookStack\\Page', 11, 1),
(4984, 'when', 'BookStack\\Page', 11, 1),
(4985, 'switch', 'BookStack\\Page', 11, 1),
(4986, 'actually', 'BookStack\\Page', 11, 1),
(4987, 'switching', 'BookStack\\Page', 11, 1),
(4988, 'Usually', 'BookStack\\Page', 11, 1),
(4989, 'get', 'BookStack\\Page', 11, 1),
(4990, 'in', 'BookStack\\Page', 11, 2),
(4991, '/mnt', 'BookStack\\Page', 11, 1),
(4992, '-', 'BookStack\\Page', 11, 2),
(4993, 'Returns', 'BookStack\\Page', 11, 1),
(4994, 'file-systems\r', 'BookStack\\Page', 11, 1),
(4995, '-t file_system', 'BookStack\\Page', 11, 1),
(4996, 'device_location', 'BookStack\\Page', 11, 1),
(4997, 'destination_location\r', 'BookStack\\Page', 11, 1),
(4998, 'using', 'BookStack\\Page', 11, 1),
(4999, 'doesn', 'BookStack\\Page', 11, 1),
(5000, 'be', 'BookStack\\Page', 11, 5),
(5001, 'provided', 'BookStack\\Page', 11, 1),
(5002, 'It', 'BookStack\\Page', 11, 1),
(5003, 'goes', 'BookStack\\Page', 11, 1),
(5004, 'through', 'BookStack\\Page', 11, 1),
(5005, 'file-systems', 'BookStack\\Page', 11, 1),
(5006, 'until', 'BookStack\\Page', 11, 1),
(5007, 'works', 'BookStack\\Page', 11, 1),
(5008, 'keep', 'BookStack\\Page', 11, 4),
(5009, 'System', 'BookStack\\Page', 11, 3),
(5010, 'after', 'BookStack\\Page', 11, 4),
(5011, 'reboot', 'BookStack\\Page', 11, 4),
(5012, 'To', 'BookStack\\Page', 11, 1),
(5013, 'even', 'BookStack\\Page', 11, 1),
(5014, 'needs', 'BookStack\\Page', 11, 1),
(5015, 'added', 'BookStack\\Page', 11, 1),
(5016, '/etc/fstab', 'BookStack\\Page', 11, 1),
(5017, 'Image', 'BookStack\\Page', 11, 3),
(5018, 'files', 'BookStack\\Page', 11, 7),
(5019, 'img', 'BookStack\\Page', 11, 3),
(5020, 'computer', 'BookStack\\Page', 11, 1),
(5021, 'containing', 'BookStack\\Page', 11, 1),
(5022, 'contents', 'BookStack\\Page', 11, 2),
(5023, 'volume', 'BookStack\\Page', 11, 1),
(5024, 'entire', 'BookStack\\Page', 11, 1),
(5025, 'Since', 'BookStack\\Page', 11, 1),
(5026, 'hold', 'BookStack\\Page', 11, 1),
(5027, 'no', 'BookStack\\Page', 11, 1),
(5028, 'additional', 'BookStack\\Page', 11, 1),
(5029, 'beyond', 'BookStack\\Page', 11, 1),
(5030, 'these', 'BookStack\\Page', 11, 1),
(5031, 'automatically', 'BookStack\\Page', 11, 1),
(5032, 'handled', 'BookStack\\Page', 11, 1),
(5033, 'by', 'BookStack\\Page', 11, 1),
(5034, 'programs', 'BookStack\\Page', 11, 1),
(5035, 'detect', 'BookStack\\Page', 11, 1),
(5036, 'their', 'BookStack\\Page', 11, 1),
(5037, 'iso', 'BookStack\\Page', 11, 2),
(5038, 'cannot', 'BookStack\\Page', 11, 1),
(5039, 'compressed', 'BookStack\\Page', 11, 2),
(5040, 'while', 'BookStack\\Page', 11, 1),
(5041, 'either', 'BookStack\\Page', 11, 1),
(5042, 'uncompressed', 'BookStack\\Page', 11, 2),
(5043, 'If', 'BookStack\\Page', 11, 1),
(5044, 'could', 'BookStack\\Page', 11, 1),
(5045, 'rename', 'BookStack\\Page', 11, 1),
(5046, 'would', 'BookStack\\Page', 11, 1),
(5047, 'still', 'BookStack\\Page', 11, 1),
(5048, 'function', 'BookStack\\Page', 11, 1),
(5347, 'SSH', 'BookStack\\Page', 12, 50),
(5348, 'keys', 'BookStack\\Page', 12, 42),
(5349, 'How', 'BookStack\\Page', 12, 7),
(5350, 'to', 'BookStack\\Page', 12, 21),
(5351, 'use', 'BookStack\\Page', 12, 7),
(5352, 'Keys', 'BookStack\\Page', 12, 4),
(5353, 'To', 'BookStack\\Page', 12, 2),
(5354, 'authenticate', 'BookStack\\Page', 12, 1),
(5355, 'using', 'BookStack\\Page', 12, 2),
(5356, 'a', 'BookStack\\Page', 12, 12),
(5357, 'user', 'BookStack\\Page', 12, 1),
(5358, 'must', 'BookStack\\Page', 12, 2),
(5359, 'have', 'BookStack\\Page', 12, 3),
(5360, 'an', 'BookStack\\Page', 12, 4),
(5361, 'key', 'BookStack\\Page', 12, 17),
(5362, 'pair', 'BookStack\\Page', 12, 2),
(5363, 'on', 'BookStack\\Page', 12, 2),
(5364, 'their', 'BookStack\\Page', 12, 1),
(5365, 'local', 'BookStack\\Page', 12, 2),
(5366, 'computer', 'BookStack\\Page', 12, 2),
(5367, 'On', 'BookStack\\Page', 12, 1),
(5368, 'the', 'BookStack\\Page', 12, 12),
(5369, 'remote', 'BookStack\\Page', 12, 1),
(5370, 'server', 'BookStack\\Page', 12, 5),
(5371, 'public', 'BookStack\\Page', 12, 6),
(5372, 'be', 'BookStack\\Page', 12, 4),
(5373, 'copied', 'BookStack\\Page', 12, 1),
(5374, 'file', 'BookStack\\Page', 12, 2),
(5375, 'within', 'BookStack\\Page', 12, 1),
(5376, 'user’s', 'BookStack\\Page', 12, 1),
(5377, 'home', 'BookStack\\Page', 12, 1),
(5378, 'directory', 'BookStack\\Page', 12, 1),
(5379, 'at ~/', 'BookStack\\Page', 12, 1),
(5380, 'ssh/authorized_keys', 'BookStack\\Page', 12, 1),
(5381, 'This', 'BookStack\\Page', 12, 4),
(5382, 'contains', 'BookStack\\Page', 12, 1),
(5383, 'list', 'BookStack\\Page', 12, 1),
(5384, 'of', 'BookStack\\Page', 12, 4),
(5385, 'one-per-line', 'BookStack\\Page', 12, 1),
(5386, 'that', 'BookStack\\Page', 12, 2),
(5387, 'are', 'BookStack\\Page', 12, 1),
(5388, 'authorised', 'BookStack\\Page', 12, 1),
(5389, 'log', 'BookStack\\Page', 12, 1),
(5390, 'into', 'BookStack\\Page', 12, 1),
(5391, 'this', 'BookStack\\Page', 12, 5),
(5392, 'account', 'BookStack\\Page', 12, 1),
(5393, 'When', 'BookStack\\Page', 12, 1),
(5394, 'client', 'BookStack\\Page', 12, 2),
(5395, 'connects', 'BookStack\\Page', 12, 1),
(5396, 'host', 'BookStack\\Page', 12, 1),
(5397, 'wishing', 'BookStack\\Page', 12, 1),
(5398, 'authentication', 'BookStack\\Page', 12, 1),
(5399, 'it', 'BookStack\\Page', 12, 2),
(5400, 'will', 'BookStack\\Page', 12, 6),
(5401, 'inform', 'BookStack\\Page', 12, 1),
(5402, 'intent', 'BookStack\\Page', 12, 1),
(5403, 'and', 'BookStack\\Page', 12, 2),
(5404, 'tell', 'BookStack\\Page', 12, 1),
(5405, 'which', 'BookStack\\Page', 12, 1),
(5406, 'The', 'BookStack\\Page', 12, 5),
(5407, 'then', 'BookStack\\Page', 12, 1),
(5408, 'checks', 'BookStack\\Page', 12, 1),
(5409, 'its authorized_keys file', 'BookStack\\Page', 12, 1),
(5410, 'for', 'BookStack\\Page', 12, 2),
(5411, 'generates', 'BookStack\\Page', 12, 1),
(5412, 'random', 'BookStack\\Page', 12, 1),
(5413, 'string', 'BookStack\\Page', 12, 1),
(5414, 'encrypts', 'BookStack\\Page', 12, 1),
(5415, 'encrypted', 'BookStack\\Page', 12, 2),
(5416, 'message', 'BookStack\\Page', 12, 2),
(5417, 'can', 'BookStack\\Page', 12, 2),
(5418, 'only', 'BookStack\\Page', 12, 1),
(5419, 'decrypted', 'BookStack\\Page', 12, 1),
(5420, 'with', 'BookStack\\Page', 12, 1),
(5421, 'associated', 'BookStack\\Page', 12, 3),
(5422, 'private', 'BookStack\\Page', 12, 6),
(5423, 'send', 'BookStack\\Page', 12, 1),
(5424, 'test', 'BookStack\\Page', 12, 1),
(5425, 'whether', 'BookStack\\Page', 12, 1),
(5426, 'they', 'BookStack\\Page', 12, 1),
(5427, 'actually', 'BookStack\\Page', 12, 1),
(5428, 'generate', 'BookStack\\Page', 12, 4),
(5429, 'RSA', 'BookStack\\Page', 12, 1),
(5430, 'your', 'BookStack\\Page', 12, 4),
(5431, 'type', 'BookStack\\Page', 12, 2),
(5432, 'ssh-keygen', 'BookStack\\Page', 12, 1),
(5433, 'Enter', 'BookStack\\Page', 12, 2),
(5434, 'passphrase', 'BookStack\\Page', 12, 7),
(5435, 'empty', 'BookStack\\Page', 12, 1),
(5436, 'no', 'BookStack\\Page', 12, 1),
(5437, '\r', 'BookStack\\Page', 12, 2),
(5438, 'same', 'BookStack\\Page', 12, 1),
(5439, 'again', 'BookStack\\Page', 12, 1),
(5440, 'next', 'BookStack\\Page', 12, 1),
(5441, 'prompt', 'BookStack\\Page', 12, 1),
(5442, 'allows', 'BookStack\\Page', 12, 1),
(5443, 'you', 'BookStack\\Page', 12, 7),
(5444, 'enter', 'BookStack\\Page', 12, 3),
(5445, 'arbitrary', 'BookStack\\Page', 12, 1),
(5446, 'length', 'BookStack\\Page', 12, 1),
(5447, 'secure', 'BookStack\\Page', 12, 1),
(5448, 'By', 'BookStack\\Page', 12, 1),
(5449, 'default', 'BookStack\\Page', 12, 1),
(5450, 'any', 'BookStack\\Page', 12, 1),
(5451, 'set', 'BookStack\\Page', 12, 1),
(5452, 'here', 'BookStack\\Page', 12, 1),
(5453, 'every', 'BookStack\\Page', 12, 1),
(5454, 'time', 'BookStack\\Page', 12, 1),
(5455, 'as', 'BookStack\\Page', 12, 2),
(5456, 'additional', 'BookStack\\Page', 12, 1),
(5457, 'security', 'BookStack\\Page', 12, 2),
(5458, 'measure', 'BookStack\\Page', 12, 1),
(5459, 'Feel', 'BookStack\\Page', 12, 1),
(5460, 'free', 'BookStack\\Page', 12, 1),
(5461, 'press ENTER to', 'BookStack\\Page', 12, 1),
(5462, 'leave', 'BookStack\\Page', 12, 1),
(5463, 'blank', 'BookStack\\Page', 12, 1),
(5464, 'if', 'BookStack\\Page', 12, 1),
(5465, 'do', 'BookStack\\Page', 12, 1),
(5466, 'not', 'BookStack\\Page', 12, 1),
(5467, 'want', 'BookStack\\Page', 12, 1),
(5468, 'Keep', 'BookStack\\Page', 12, 1),
(5469, 'in', 'BookStack\\Page', 12, 1),
(5470, 'mind', 'BookStack\\Page', 12, 1),
(5471, 'though', 'BookStack\\Page', 12, 1),
(5472, 'allow', 'BookStack\\Page', 12, 1),
(5473, 'anyone', 'BookStack\\Page', 12, 1),
(5474, 'who', 'BookStack\\Page', 12, 1),
(5475, 'gains', 'BookStack\\Page', 12, 1),
(5476, 'control', 'BookStack\\Page', 12, 1),
(5477, 'login', 'BookStack\\Page', 12, 1),
(5478, 'servers', 'BookStack\\Page', 12, 1),
(5479, 'If', 'BookStack\\Page', 12, 1),
(5480, 'choose', 'BookStack\\Page', 12, 1),
(5481, 'nothing', 'BookStack\\Page', 12, 1),
(5482, 'displayed', 'BookStack\\Page', 12, 1),
(5483, 'is', 'BookStack\\Page', 12, 1),
(5484, 'precaution', 'BookStack\\Page', 12, 1),
(5485, '~/', 'BookStack\\Page', 12, 2),
(5486, 'ssh/id_rsa', 'BookStack\\Page', 12, 2),
(5487, 'DO', 'BookStack\\Page', 12, 1),
(5488, 'NOT', 'BookStack\\Page', 12, 1),
(5489, 'SHARE', 'BookStack\\Page', 12, 1),
(5490, 'THIS', 'BookStack\\Page', 12, 1),
(5491, 'FILE', 'BookStack\\Page', 12, 1),
(5492, 'pub', 'BookStack\\Page', 12, 1),
(5493, 'shared', 'BookStack\\Page', 12, 1),
(5494, 'freely', 'BookStack\\Page', 12, 1),
(5495, 'without', 'BookStack\\Page', 12, 1),
(5496, 'consequence', 'BookStack\\Page', 12, 1),
(6114, 'Git', 'BookStack\\Book', 3, 48),
(6919, 'Contributing', 'BookStack\\Page', 16, 40),
(6920, 'to', 'BookStack\\Page', 16, 57),
(6921, 'Open', 'BookStack\\Page', 16, 44),
(6922, 'Source', 'BookStack\\Page', 16, 44),
(6923, 'projects', 'BookStack\\Page', 16, 40),
(6924, 'How', 'BookStack\\Page', 16, 4),
(6925, 'can', 'BookStack\\Page', 16, 7),
(6926, 'I', 'BookStack\\Page', 16, 4),
(6927, 'contribute', 'BookStack\\Page', 16, 6),
(6928, 'an', 'BookStack\\Page', 16, 4),
(6929, 'project', 'BookStack\\Page', 16, 8),
(6930, 'A', 'BookStack\\Page', 16, 1),
(6931, 'fork', 'BookStack\\Page', 16, 3),
(6932, 'is', 'BookStack\\Page', 16, 5),
(6933, 'simply', 'BookStack\\Page', 16, 1),
(6934, 'a', 'BookStack\\Page', 16, 9),
(6935, 'copy', 'BookStack\\Page', 16, 1),
(6936, 'of', 'BookStack\\Page', 16, 2),
(6937, 'the', 'BookStack\\Page', 16, 11),
(6938, 'repo', 'BookStack\\Page', 16, 3),
(6939, 'that', 'BookStack\\Page', 16, 3),
(6940, 'lives', 'BookStack\\Page', 16, 1),
(6941, 'on', 'BookStack\\Page', 16, 3),
(6942, 'your', 'BookStack\\Page', 16, 10),
(6943, 'own', 'BookStack\\Page', 16, 1),
(6944, 'personal', 'BookStack\\Page', 16, 1),
(6945, 'Github', 'BookStack\\Page', 16, 1),
(6946, 'profile', 'BookStack\\Page', 16, 1),
(6947, 'You', 'BookStack\\Page', 16, 1),
(6948, 'make', 'BookStack\\Page', 16, 5),
(6949, 'any', 'BookStack\\Page', 16, 2),
(6950, 'changes', 'BookStack\\Page', 16, 4),
(6951, 'you', 'BookStack\\Page', 16, 10),
(6952, 'want', 'BookStack\\Page', 16, 4),
(6953, 'this', 'BookStack\\Page', 16, 1),
(6954, 'and', 'BookStack\\Page', 16, 4),
(6955, 'experiment', 'BookStack\\Page', 16, 1),
(6956, 'all', 'BookStack\\Page', 16, 1),
(6957, 'with', 'BookStack\\Page', 16, 3),
(6958, 'its', 'BookStack\\Page', 16, 1),
(6959, 'code', 'BookStack\\Page', 16, 3),
(6960, 'that’s', 'BookStack\\Page', 16, 1),
(6961, 'fine', 'BookStack\\Page', 16, 1),
(6962, 'Any', 'BookStack\\Page', 16, 1),
(6963, 'have', 'BookStack\\Page', 16, 2),
(6964, 'no', 'BookStack\\Page', 16, 1),
(6965, 'effect', 'BookStack\\Page', 16, 1),
(6966, 'original', 'BookStack\\Page', 16, 1),
(6967, 'upstream', 'BookStack\\Page', 16, 4),
(6968, 'repository', 'BookStack\\Page', 16, 2),
(6969, 'forked', 'BookStack\\Page', 16, 1),
(6970, 'from', 'BookStack\\Page', 16, 2),
(6971, 'The', 'BookStack\\Page', 16, 1),
(6972, 'only', 'BookStack\\Page', 16, 1),
(6973, 'way', 'BookStack\\Page', 16, 2),
(6974, 'it', 'BookStack\\Page', 16, 6),
(6975, 'into', 'BookStack\\Page', 16, 2),
(6976, 'through', 'BookStack\\Page', 16, 1),
(6977, 'pull', 'BookStack\\Page', 16, 6),
(6978, 'requests', 'BookStack\\Page', 16, 2),
(6979, 'Generally', 'BookStack\\Page', 16, 1),
(6980, 'where', 'BookStack\\Page', 16, 1),
(6981, 'clone', 'BookStack\\Page', 16, 1),
(6982, 'downstream', 'BookStack\\Page', 16, 1),
(6983, 'integrates', 'BookStack\\Page', 16, 2),
(6984, 'work', 'BookStack\\Page', 16, 1),
(6985, 'other', 'BookStack\\Page', 16, 1),
(6986, 'works', 'BookStack\\Page', 16, 1),
(6987, 'Pull', 'BookStack\\Page', 16, 1),
(6988, 'are', 'BookStack\\Page', 16, 1),
(6989, 'mechanism', 'BookStack\\Page', 16, 1),
(6990, 'for', 'BookStack\\Page', 16, 1),
(6991, 'developer', 'BookStack\\Page', 16, 1),
(6992, 'notify', 'BookStack\\Page', 16, 1),
(6993, 'team', 'BookStack\\Page', 16, 1),
(6994, 'members', 'BookStack\\Page', 16, 1),
(6995, 'they', 'BookStack\\Page', 16, 1),
(6996, 'completed', 'BookStack\\Page', 16, 1),
(6997, 'feature', 'BookStack\\Page', 16, 1),
(6998, 'If', 'BookStack\\Page', 16, 1),
(6999, 'request', 'BookStack\\Page', 16, 5),
(7000, 'maintainers', 'BookStack\\Page', 16, 2),
(7001, 'look', 'BookStack\\Page', 16, 1),
(7002, 'at', 'BookStack\\Page', 16, 1),
(7003, 'new', 'BookStack\\Page', 16, 3),
(7004, 'sure', 'BookStack\\Page', 16, 1),
(7005, 'rest', 'BookStack\\Page', 16, 1),
(7006, 'then', 'BookStack\\Page', 16, 1),
(7007, 'merge', 'BookStack\\Page', 16, 1),
(7008, 'And', 'BookStack\\Page', 16, 1),
(7009, 'if', 'BookStack\\Page', 16, 2),
(7010, 'isn', 'BookStack\\Page', 16, 1),
(7011, 't', 'BookStack\\Page', 16, 1),
(7012, '100%', 'BookStack\\Page', 16, 1),
(7013, 'ready', 'BookStack\\Page', 16, 1),
(7014, 'just', 'BookStack\\Page', 16, 1),
(7015, 'yet', 'BookStack\\Page', 16, 1),
(7016, 'comment', 'BookStack\\Page', 16, 1),
(7017, 'tell', 'BookStack\\Page', 16, 1),
(7018, 'what', 'BookStack\\Page', 16, 1),
(7019, 'need', 'BookStack\\Page', 16, 1),
(7020, 'fix', 'BookStack\\Page', 16, 1),
(7021, 'In', 'BookStack\\Page', 16, 1),
(7022, 'summary', 'BookStack\\Page', 16, 1),
(7023, 'simplest', 'BookStack\\Page', 16, 1),
(7024, 'Find', 'BookStack\\Page', 16, 1),
(7025, '\r', 'BookStack\\Page', 16, 7),
(7026, 'Fork', 'BookStack\\Page', 16, 1),
(7027, 'Clone', 'BookStack\\Page', 16, 1),
(7028, 'local', 'BookStack\\Page', 16, 1),
(7029, 'system', 'BookStack\\Page', 16, 1),
(7030, 'Make', 'BookStack\\Page', 16, 2),
(7031, 'branch', 'BookStack\\Page', 16, 1),
(7032, 'Push', 'BookStack\\Page', 16, 1),
(7033, 'back', 'BookStack\\Page', 16, 1),
(7034, 'Click', 'BookStack\\Page', 16, 2),
(7035, 'Compare', 'BookStack\\Page', 16, 1),
(7036, '&', 'BookStack\\Page', 16, 1),
(7037, 'button', 'BookStack\\Page', 16, 1),
(7038, 'Create', 'BookStack\\Page', 16, 1),
(7039, 'open', 'BookStack\\Page', 16, 1),
(9490, 'How', 'BookStack\\Page', 15, 44),
(9491, 'does', 'BookStack\\Page', 15, 40),
(9492, 'Git', 'BookStack\\Page', 15, 49),
(9493, 'work', 'BookStack\\Page', 15, 40),
(9494, 'under', 'BookStack\\Page', 15, 40),
(9495, 'the', 'BookStack\\Page', 15, 80),
(9496, 'hood', 'BookStack\\Page', 15, 40),
(9497, 'What', 'BookStack\\Page', 15, 4),
(9498, 'is', 'BookStack\\Page', 15, 23),
(9499, 'SHA-1', 'BookStack\\Page', 15, 7),
(9500, 'SHA-1 ', 'BookStack\\Page', 15, 1),
(9501, 'Secure', 'BookStack\\Page', 15, 1),
(9502, 'Hash', 'BookStack\\Page', 15, 1),
(9503, 'Algorithm', 'BookStack\\Page', 15, 1),
(9504, '1', 'BookStack\\Page', 15, 1),
(9505, 'a cryptographic', 'BookStack\\Page', 15, 1),
(9506, 'hash', 'BookStack\\Page', 15, 17),
(9507, 'function', 'BookStack\\Page', 15, 1),
(9508, 'which', 'BookStack\\Page', 15, 3),
(9509, 'takes', 'BookStack\\Page', 15, 1),
(9510, 'an', 'BookStack\\Page', 15, 4),
(9511, 'input', 'BookStack\\Page', 15, 1),
(9512, 'and', 'BookStack\\Page', 15, 7),
(9513, 'produces', 'BookStack\\Page', 15, 1),
(9514, 'a', 'BookStack\\Page', 15, 29),
(9515, '160-bit', 'BookStack\\Page', 15, 1),
(9516, '20-byte', 'BookStack\\Page', 15, 1),
(9517, 'value', 'BookStack\\Page', 15, 1),
(9518, 'known', 'BookStack\\Page', 15, 1),
(9519, 'as', 'BookStack\\Page', 15, 2),
(9520, 'message', 'BookStack\\Page', 15, 1),
(9521, 'digest', 'BookStack\\Page', 15, 1),
(9522, 'typically', 'BookStack\\Page', 15, 1),
(9523, 'rendered', 'BookStack\\Page', 15, 1),
(9524, 'hexadecimal', 'BookStack\\Page', 15, 1),
(9525, 'number', 'BookStack\\Page', 15, 3),
(9526, '40', 'BookStack\\Page', 15, 1),
(9527, 'digits', 'BookStack\\Page', 15, 1),
(9528, 'long', 'BookStack\\Page', 15, 1),
(9529, 'most', 'BookStack\\Page', 15, 1),
(9530, 'often', 'BookStack\\Page', 15, 1),
(9531, 'used', 'BookStack\\Page', 15, 1),
(9532, 'to verify', 'BookStack\\Page', 15, 1),
(9533, 'that', 'BookStack\\Page', 15, 9),
(9534, 'file', 'BookStack\\Page', 15, 19),
(9535, 'has', 'BookStack\\Page', 15, 2),
(9536, 'been', 'BookStack\\Page', 15, 2),
(9537, 'unaltered', 'BookStack\\Page', 15, 1),
(9538, 'This', 'BookStack\\Page', 15, 3),
(9539, 'done', 'BookStack\\Page', 15, 1),
(9540, 'by', 'BookStack\\Page', 15, 2),
(9541, 'producing', 'BookStack\\Page', 15, 1),
(9542, 'checksum', 'BookStack\\Page', 15, 2),
(9543, 'before', 'BookStack\\Page', 15, 1),
(9544, 'transmitted', 'BookStack\\Page', 15, 1),
(9545, 'then', 'BookStack\\Page', 15, 2),
(9546, 'again', 'BookStack\\Page', 15, 1),
(9547, 'once', 'BookStack\\Page', 15, 1),
(9548, 'it', 'BookStack\\Page', 15, 6),
(9549, 'reaches', 'BookStack\\Page', 15, 1),
(9550, 'its', 'BookStack\\Page', 15, 4),
(9551, 'destination', 'BookStack\\Page', 15, 1),
(9552, 'A', 'BookStack\\Page', 15, 3),
(9553, 'computed', 'BookStack\\Page', 15, 2),
(9554, 'from', 'BookStack\\Page', 15, 1),
(9555, 'contents', 'BookStack\\Page', 15, 9),
(9556, 'of', 'BookStack\\Page', 15, 21),
(9557, 'using', 'BookStack\\Page', 15, 2),
(9558, 'algorithm', 'BookStack\\Page', 15, 1),
(9559, 'doesn', 'BookStack\\Page', 15, 1),
(9560, 't', 'BookStack\\Page', 15, 1),
(9561, 'care', 'BookStack\\Page', 15, 1),
(9562, 'about', 'BookStack\\Page', 15, 2),
(9563, 'anything', 'BookStack\\Page', 15, 1),
(9564, 'except', 'BookStack\\Page', 15, 1),
(9565, 'actual', 'BookStack\\Page', 15, 1),
(9566, 'bytes', 'BookStack\\Page', 15, 1),
(9567, 'are', 'BookStack\\Page', 15, 5),
(9568, 'in', 'BookStack\\Page', 15, 9),
(9569, 'to', 'BookStack\\Page', 15, 13),
(9570, 'make', 'BookStack\\Page', 15, 1),
(9571, 'computation', 'BookStack\\Page', 15, 1),
(9572, 'If', 'BookStack\\Page', 15, 1),
(9573, 'you', 'BookStack\\Page', 15, 5),
(9574, 'same', 'BookStack\\Page', 15, 3),
(9575, 'object', 'BookStack\\Page', 15, 11),
(9576, 'twice', 'BookStack\\Page', 15, 1),
(9577, 'will', 'BookStack\\Page', 15, 5),
(9578, 'get', 'BookStack\\Page', 15, 1),
(9579, 'both', 'BookStack\\Page', 15, 1),
(9580, 'times', 'BookStack\\Page', 15, 1),
(9581, 'objects', 'BookStack\\Page', 15, 5),
(9582, 'stored', 'BookStack\\Page', 15, 6),
(9583, 'internally', 'BookStack\\Page', 15, 4),
(9584, 'One', 'BookStack\\Page', 15, 1),
(9585, 'thing', 'BookStack\\Page', 15, 1),
(9586, 'understand', 'BookStack\\Page', 15, 1),
(9587, 'git', 'BookStack\\Page', 15, 9),
(9588, 'doesn’t', 'BookStack\\Page', 15, 1),
(9589, 'store', 'BookStack\\Page', 15, 1),
(9590, 'diff', 'BookStack\\Page', 15, 1),
(9591, 'your', 'BookStack\\Page', 15, 2),
(9592, 'files', 'BookStack\\Page', 15, 4),
(9593, 'It', 'BookStack\\Page', 15, 2),
(9594, 'stores', 'BookStack\\Page', 15, 2),
(9595, 'exact', 'BookStack\\Page', 15, 1),
(9596, 'at', 'BookStack\\Page', 15, 1),
(9597, 'point', 'BookStack\\Page', 15, 1),
(9598, 'commit', 'BookStack\\Page', 15, 16),
(9599, 'made', 'BookStack\\Page', 15, 1),
(9600, 'uses', 'BookStack\\Page', 15, 1),
(9601, 'different', 'BookStack\\Page', 15, 1),
(9602, 'types', 'BookStack\\Page', 15, 1),
(9603, 'blob', 'BookStack\\Page', 15, 6),
(9604, '-', 'BookStack\\Page', 15, 2),
(9605, 'Raw', 'BookStack\\Page', 15, 1),
(9606, 'single', 'BookStack\\Page', 15, 1),
(9607, 'named', 'BookStack\\Page', 15, 2),
(9608, 'with', 'BookStack\\Page', 15, 2),
(9609, ' \r', 'BookStack\\Page', 15, 2),
(9610, 'tree', 'BookStack\\Page', 15, 14),
(9611, 'Object', 'BookStack\\Page', 15, 1),
(9612, 'contains', 'BookStack\\Page', 15, 2),
(9613, 'references', 'BookStack\\Page', 15, 1),
(9614, 'other', 'BookStack\\Page', 15, 2),
(9615, 'blobs', 'BookStack\\Page', 15, 2),
(9616, 'or', 'BookStack\\Page', 15, 4),
(9617, 'subtrees', 'BookStack\\Page', 15, 1),
(9618, 'commit -', 'BookStack\\Page', 15, 1),
(9619, 'Snapshot', 'BookStack\\Page', 15, 1),
(9620, 'entire', 'BookStack\\Page', 15, 1),
(9621, 'project', 'BookStack\\Page', 15, 3),
(9622, 'When', 'BookStack\\Page', 15, 2),
(9623, 'commited', 'BookStack\\Page', 15, 1),
(9624, 'into', 'BookStack\\Page', 15, 1),
(9625, 'repository', 'BookStack\\Page', 15, 3),
(9626, 'calculates', 'BookStack\\Page', 15, 1),
(9627, 'remembers', 'BookStack\\Page', 15, 1),
(9628, 'later', 'BookStack\\Page', 15, 1),
(9629, 'retrieve', 'BookStack\\Page', 15, 1),
(9630, 'can', 'BookStack\\Page', 15, 1),
(9631, 'verify', 'BookStack\\Page', 15, 1),
(9632, 'data', 'BookStack\\Page', 15, 1),
(9633, 'being', 'BookStack\\Page', 15, 1),
(9634, 'retrieved', 'BookStack\\Page', 15, 1),
(9635, 'exactly', 'BookStack\\Page', 15, 2),
(9636, 'matches', 'BookStack\\Page', 15, 1),
(9637, 'was', 'BookStack\\Page', 15, 3),
(9638, 'when', 'BookStack\\Page', 15, 2),
(9639, ' ', 'BookStack\\Page', 15, 2),
(9640, 'Every', 'BookStack\\Page', 15, 2),
(9641, 'git/objects', 'BookStack\\Page', 15, 1),
(9642, 'Commit', 'BookStack\\Page', 15, 5),
(9643, 'includes', 'BookStack\\Page', 15, 1),
(9644, 'pointer', 'BookStack\\Page', 15, 1),
(9645, 'main', 'BookStack\\Page', 15, 3),
(9646, 'The', 'BookStack\\Page', 15, 7),
(9647, 'recalculated', 'BookStack\\Page', 15, 1),
(9648, 'every', 'BookStack\\Page', 15, 5),
(9649, 'because', 'BookStack\\Page', 15, 1),
(9650, 'filename', 'BookStack\\Page', 15, 1),
(9651, 'changes', 'BookStack\\Page', 15, 1),
(9652, 'occur', 'BookStack\\Page', 15, 1),
(9653, 'means', 'BookStack\\Page', 15, 1),
(9654, 'almost', 'BookStack\\Page', 15, 1),
(9655, 'always', 'BookStack\\Page', 15, 3),
(9656, 'new', 'BookStack\\Page', 15, 8),
(9657, 'created', 'BookStack\\Page', 15, 2),
(9658, 'creating', 'BookStack\\Page', 15, 1),
(9659, 'calculated', 'BookStack\\Page', 15, 3),
(9660, 'based', 'BookStack\\Page', 15, 2),
(9661, 'on', 'BookStack\\Page', 15, 2),
(9662, 'message\r', 'BookStack\\Page', 15, 1),
(9663, 'changes\r', 'BookStack\\Page', 15, 1),
(9664, 'author\r', 'BookStack\\Page', 15, 1),
(9665, 'date\r', 'BookStack\\Page', 15, 1),
(9666, 'parent', 'BookStack\\Page', 15, 5),
(9667, 'Contents', 'BookStack\\Page', 15, 3),
(9668, '- ', 'BookStack\\Page', 15, 1),
(9669, 'root', 'BookStack\\Page', 15, 2),
(9670, 'directory', 'BookStack\\Page', 15, 1),
(9671, 'only', 'BookStack\\Page', 15, 1),
(9672, 'one', 'BookStack\\Page', 15, 3),
(9673, '\r', 'BookStack\\Page', 15, 6),
(9674, 'parent -', 'BookStack\\Page', 15, 1),
(9675, 'may', 'BookStack\\Page', 15, 1),
(9676, 'have', 'BookStack\\Page', 15, 2),
(9677, 'any', 'BookStack\\Page', 15, 2),
(9678, 'parents', 'BookStack\\Page', 15, 2),
(9679, 'With', 'BookStack\\Page', 15, 1),
(9680, 'ordinary', 'BookStack\\Page', 15, 1),
(9681, 'Having', 'BookStack\\Page', 15, 1),
(9682, 'more', 'BookStack\\Page', 15, 1),
(9683, 'than', 'BookStack\\Page', 15, 2),
(9684, 'makes', 'BookStack\\Page', 15, 1),
(9685, 'merge', 'BookStack\\Page', 15, 1),
(9686, 'Initial', 'BookStack\\Page', 15, 1),
(9687, 'commits', 'BookStack\\Page', 15, 2),
(9688, 'no', 'BookStack\\Page', 15, 2),
(9689, 'author -', 'BookStack\\Page', 15, 1),
(9690, 'author', 'BookStack\\Page', 15, 2),
(9691, '$', 'BookStack\\Page', 15, 3),
(9692, 'cat-file', 'BookStack\\Page', 15, 3),
(9693, '5bac93\r', 'BookStack\\Page', 15, 1),
(9694, '04d1daef', 'BookStack\\Page', 15, 1),
(9695, 'b7850ef5', 'BookStack\\Page', 15, 1),
(9696, 'a3d5ad1', 'BookStack\\Page', 15, 1),
(9697, 'Geddy', 'BookStack\\Page', 15, 1),
(9698, 'Lee', 'BookStack\\Page', 15, 1),
(9699, 'glee@rush', 'BookStack\\Page', 15, 1),
(9700, 'com', 'BookStack\\Page', 15, 2),
(9701, 'commiter', 'BookStack\\Page', 15, 1),
(9702, 'Neil', 'BookStack\\Page', 15, 1),
(9703, 'Peart', 'BookStack\\Page', 15, 1),
(9704, 'npeart@rush', 'BookStack\\Page', 15, 1),
(9705, 'Tree', 'BookStack\\Page', 15, 4),
(9706, 'really', 'BookStack\\Page', 15, 1),
(9707, 'list', 'BookStack\\Page', 15, 1),
(9708, 'pointers', 'BookStack\\Page', 15, 1),
(9709, 'trees', 'BookStack\\Page', 15, 1),
(9710, 's', 'BookStack\\Page', 15, 1),
(9711, 'all', 'BookStack\\Page', 15, 1),
(9712, 'their', 'BookStack\\Page', 15, 1),
(9713, 'filenames', 'BookStack\\Page', 15, 1),
(9714, '-p', 'BookStack\\Page', 15, 2),
(9715, '07b1a631\r', 'BookStack\\Page', 15, 1),
(9716, '100644', 'BookStack\\Page', 15, 3),
(9717, 'b91bba1b', 'BookStack\\Page', 15, 1),
(9718, 'gitignore\r', 'BookStack\\Page', 15, 1),
(9719, 'cc0956f1', 'BookStack\\Page', 15, 1),
(9720, 'Makefile\r', 'BookStack\\Page', 15, 1),
(9721, '040000', 'BookStack\\Page', 15, 1),
(9722, '92e1ca7e', 'BookStack\\Page', 15, 1),
(9723, 'src\r', 'BookStack\\Page', 15, 1),
(9724, 'cae391ff', 'BookStack\\Page', 15, 1),
(9725, 'Readme', 'BookStack\\Page', 15, 1),
(9726, 'txt', 'BookStack\\Page', 15, 1),
(9727, 'Blob', 'BookStack\\Page', 15, 4),
(9728, 'creates', 'BookStack\\Page', 15, 5),
(9729, 'for', 'BookStack\\Page', 15, 2),
(9730, 'content', 'BookStack\\Page', 15, 2),
(9731, 'each', 'BookStack\\Page', 15, 1),
(9732, 'unless', 'BookStack\\Page', 15, 1),
(9733, 'already', 'BookStack\\Page', 15, 2),
(9734, 'exists', 'BookStack\\Page', 15, 1),
(9735, 'case', 'BookStack\\Page', 15, 1),
(9736, 'reuses', 'BookStack\\Page', 15, 1),
(9737, 'Only', 'BookStack\\Page', 15, 1),
(9738, 'rather', 'BookStack\\Page', 15, 1),
(9739, 'name', 'BookStack\\Page', 15, 1),
(9740, 'metadata', 'BookStack\\Page', 15, 1),
(9741, 'cae391ff\r', 'BookStack\\Page', 15, 1),
(9742, 'Welcome', 'BookStack\\Page', 15, 1),
(9743, 'my', 'BookStack\\Page', 15, 1),
(9744, 'readmefile\r', 'BookStack\\Page', 15, 1),
(9745, 'Does', 'BookStack\\Page', 15, 4),
(9746, 'time', 'BookStack\\Page', 15, 1),
(9747, 'add', 'BookStack\\Page', 15, 1),
(9748, 'usually', 'BookStack\\Page', 15, 1),
(9749, 'adding', 'BookStack\\Page', 15, 1),
(9750, 'index', 'BookStack\\Page', 15, 1),
(9751, 'committing', 'BookStack\\Page', 15, 1),
(9752, 'snapshot', 'BookStack\\Page', 15, 1),
(9753, 'whole', 'BookStack\\Page', 15, 1),
(9754, 'added', 'BookStack\\Page', 15, 2),
(9755, 'this', 'BookStack\\Page', 15, 3),
(9756, 'identifier', 'BookStack\\Page', 15, 1),
(9757, 'However', 'BookStack\\Page', 15, 1),
(9758, 'if', 'BookStack\\Page', 15, 1),
(9759, '5-6', 'BookStack\\Page', 15, 1),
(9760, 'down', 'BookStack\\Page', 15, 1),
(9761, 'line', 'BookStack\\Page', 15, 1),
(9762, 'manage', 'BookStack\\Page', 15, 1),
(9763, 'restore', 'BookStack\\Page', 15, 1),
(9764, 'back', 'BookStack\\Page', 15, 1),
(9765, 'what', 'BookStack\\Page', 15, 1),
(9766, 'previously', 'BookStack\\Page', 15, 1),
(9767, 'exist', 'BookStack\\Page', 15, 1),
(9768, 'thus', 'BookStack\\Page', 15, 2),
(9769, 'additional', 'BookStack\\Page', 15, 1),
(9770, 'be', 'BookStack\\Page', 15, 2),
(9771, 'Instead', 'BookStack\\Page', 15, 1),
(9772, 'whatever', 'BookStack\\Page', 15, 1),
(9773, 'going', 'BookStack\\Page', 15, 1),
(9774, 'refer', 'BookStack\\Page', 15, 2),
(9775, 'use', 'BookStack\\Page', 15, 1),
(9776, 'but', 'BookStack\\Page', 15, 1),
(9777, 'old', 'BookStack\\Page', 15, 1),
(9778, 'So', 'BookStack\\Page', 15, 1),
(9779, 'theoretically', 'BookStack\\Page', 15, 1),
(9780, 'not', 'BookStack\\Page', 15, 1),
(12955, 'Workflow', 'BookStack\\Page', 24, 44),
(12956, 'What', 'BookStack\\Page', 24, 4),
(12957, 'is', 'BookStack\\Page', 24, 6),
(12958, 'the', 'BookStack\\Page', 24, 14),
(12959, 'Git', 'BookStack\\Page', 24, 4),
(12960, 'Working', 'BookStack\\Page', 24, 2),
(12961, 'directory', 'BookStack\\Page', 24, 1),
(12962, '/', 'BookStack\\Page', 24, 3),
(12963, 'tree', 'BookStack\\Page', 24, 1),
(12964, 'Workspace', 'BookStack\\Page', 24, 1),
(12965, 'holds files', 'BookStack\\Page', 24, 1),
(12966, 'in', 'BookStack\\Page', 24, 4),
(12967, 'your', 'BookStack\\Page', 24, 2),
(12968, 'computer', 'BookStack\\Page', 24, 1),
(12969, 's', 'BookStack\\Page', 24, 1),
(12970, 'ordinary', 'BookStack\\Page', 24, 1),
(12971, 'format', 'BookStack\\Page', 24, 2),
(12972, 'rather', 'BookStack\\Page', 24, 1),
(12973, 'than', 'BookStack\\Page', 24, 1),
(12974, 'special', 'BookStack\\Page', 24, 1),
(12975, 'Git-only', 'BookStack\\Page', 24, 1),
(12976, 'that', 'BookStack\\Page', 24, 4),
(12977, 'goes', 'BookStack\\Page', 24, 2),
(12978, 'into', 'BookStack\\Page', 24, 3),
(12979, 'each', 'BookStack\\Page', 24, 1),
(12980, 'new', 'BookStack\\Page', 24, 1),
(12981, 'commit', 'BookStack\\Page', 24, 4),
(12982, 'you', 'BookStack\\Page', 24, 3),
(12983, 'make', 'BookStack\\Page', 24, 1),
(12984, '\r', 'BookStack\\Page', 24, 4),
(12985, 'The', 'BookStack\\Page', 24, 2),
(12986, 'index', 'BookStack\\Page', 24, 4),
(12987, 'staging-area', 'BookStack\\Page', 24, 1),
(12988, '/ cache', 'BookStack\\Page', 24, 1),
(12989, 'holds', 'BookStack\\Page', 24, 1),
(12990, 'proposed', 'BookStack\\Page', 24, 1),
(12991, 'next', 'BookStack\\Page', 24, 2),
(12992, 'snapshot', 'BookStack\\Page', 24, 1),
(12993, 'If', 'BookStack\\Page', 24, 1),
(12994, 'you change a', 'BookStack\\Page', 24, 1),
(12995, 'file', 'BookStack\\Page', 24, 2),
(12996, 'work-tree', 'BookStack\\Page', 24, 1),
(12997, 'need', 'BookStack\\Page', 24, 1),
(12998, 'to copy', 'BookStack\\Page', 24, 1),
(12999, 'it', 'BookStack\\Page', 24, 1),
(13000, 'back', 'BookStack\\Page', 24, 1),
(13001, 'so', 'BookStack\\Page', 24, 1),
(13002, 'updated', 'BookStack\\Page', 24, 1),
(13003, 'one', 'BookStack\\Page', 24, 1),
(13004, 'not', 'BookStack\\Page', 24, 1),
(13005, 'git', 'BookStack\\Page', 24, 5),
(13006, 'repository', 'BookStack\\Page', 24, 2),
(13007, 'Files', 'BookStack\\Page', 24, 1),
(13008, 'are', 'BookStack\\Page', 24, 1),
(13009, 'files', 'BookStack\\Page', 24, 1),
(13010, 'would', 'BookStack\\Page', 24, 1),
(13011, 'to', 'BookStack\\Page', 24, 1),
(13012, 'if', 'BookStack\\Page', 24, 1),
(13013, 'used', 'BookStack\\Page', 24, 1),
(13014, 'command', 'BookStack\\Page', 24, 1),
(13015, ' ', 'BookStack\\Page', 24, 1),
(14052, 'Reset', 'BookStack\\Page', 23, 45),
(14053, 'vs', 'BookStack\\Page', 23, 40),
(14054, 'Revert', 'BookStack\\Page', 23, 44),
(14055, 'Git', 'BookStack\\Page', 23, 13),
(14056, 'Checkout', 'BookStack\\Page', 23, 4),
(14057, 'With git', 'BookStack\\Page', 23, 1),
(14058, 'checkout', 'BookStack\\Page', 23, 4),
(14059, 'the main ref', 'BookStack\\Page', 23, 1),
(14060, 'is', 'BookStack\\Page', 23, 3),
(14061, 'still', 'BookStack\\Page', 23, 1),
(14062, 'pointing', 'BookStack\\Page', 23, 1),
(14063, 'to d', 'BookStack\\Page', 23, 1),
(14064, 'The HEAD ref', 'BookStack\\Page', 23, 1),
(14065, 'has', 'BookStack\\Page', 23, 2),
(14066, 'been', 'BookStack\\Page', 23, 2),
(14067, 'moved', 'BookStack\\Page', 23, 1),
(14068, 'and', 'BookStack\\Page', 23, 2),
(14069, 'now', 'BookStack\\Page', 23, 2),
(14070, 'points', 'BookStack\\Page', 23, 1),
(14071, 'at', 'BookStack\\Page', 23, 1),
(14072, 'commit b', 'BookStack\\Page', 23, 1),
(14073, 'The', 'BookStack\\Page', 23, 1),
(14074, 'repo', 'BookStack\\Page', 23, 1),
(14075, 'in', 'BookStack\\Page', 23, 2),
(14076, 'a', 'BookStack\\Page', 23, 4),
(14077, 'detached HEAD', 'BookStack\\Page', 23, 1),
(14078, 'state', 'BookStack\\Page', 23, 2),
(14079, 'git', 'BookStack\\Page', 23, 5),
(14080, 'd', 'BookStack\\Page', 23, 2),
(14081, 'To', 'BookStack\\Page', 23, 1),
(14082, 'move', 'BookStack\\Page', 23, 1),
(14083, 'back', 'BookStack\\Page', 23, 1),
(14084, 'to', 'BookStack\\Page', 23, 5),
(14085, 'the', 'BookStack\\Page', 23, 8),
(14086, 'latest', 'BookStack\\Page', 23, 1),
(14087, 'commit', 'BookStack\\Page', 23, 7),
(14088, 'just', 'BookStack\\Page', 23, 2),
(14089, 'branch', 'BookStack\\Page', 23, 3),
(14090, 'main', 'BookStack\\Page', 23, 1),
(14091, 'Comparatively', 'BookStack\\Page', 23, 1),
(14092, 'reset', 'BookStack\\Page', 23, 2),
(14093, 'moves', 'BookStack\\Page', 23, 1),
(14094, 'both', 'BookStack\\Page', 23, 1),
(14095, 'HEAD', 'BookStack\\Page', 23, 1),
(14096, 'refs', 'BookStack\\Page', 23, 1),
(14097, 'specified', 'BookStack\\Page', 23, 1),
(14098, 'doesn', 'BookStack\\Page', 23, 1),
(14099, 't', 'BookStack\\Page', 23, 1),
(14100, 'make', 'BookStack\\Page', 23, 1),
(14101, 'commits', 'BookStack\\Page', 23, 1),
(14102, 'it', 'BookStack\\Page', 23, 1),
(14103, 'updates', 'BookStack\\Page', 23, 1),
(14104, 'point', 'BookStack\\Page', 23, 1),
(14105, 'different', 'BookStack\\Page', 23, 1),
(14106, ' ', 'BookStack\\Page', 23, 1),
(14107, 'Options', 'BookStack\\Page', 23, 1),
(14108, '--soft', 'BookStack\\Page', 23, 1),
(14109, '-', 'BookStack\\Page', 23, 1),
(14110, 'uncommit', 'BookStack\\Page', 23, 2),
(14111, 'changes', 'BookStack\\Page', 23, 3),
(14112, 'are', 'BookStack\\Page', 23, 2),
(14113, 'left', 'BookStack\\Page', 23, 3),
(14114, 'staged', 'BookStack\\Page', 23, 1),
(14115, '\r', 'BookStack\\Page', 23, 2),
(14116, '--mixed', 'BookStack\\Page', 23, 1),
(14117, 'default', 'BookStack\\Page', 23, 1),
(14118, '- uncommit', 'BookStack\\Page', 23, 1),
(14119, '+', 'BookStack\\Page', 23, 3),
(14120, 'unstage changes', 'BookStack\\Page', 23, 1),
(14121, 'in working', 'BookStack\\Page', 23, 1),
(14122, 'tree', 'BookStack\\Page', 23, 1),
(14123, '--hard -', 'BookStack\\Page', 23, 1),
(14124, 'unstage', 'BookStack\\Page', 23, 1),
(14125, 'delete changes', 'BookStack\\Page', 23, 1),
(14126, 'nothing', 'BookStack\\Page', 23, 1),
(14127, 'revert', 'BookStack\\Page', 23, 2),
(14128, 'simply', 'BookStack\\Page', 23, 1),
(14129, 'creates', 'BookStack\\Page', 23, 1),
(14130, 'new', 'BookStack\\Page', 23, 1),
(14131, 'that', 'BookStack\\Page', 23, 2),
(14132, 'opposite', 'BookStack\\Page', 23, 1),
(14133, 'of', 'BookStack\\Page', 23, 1),
(14134, 'an', 'BookStack\\Page', 23, 1),
(14135, 'existing', 'BookStack\\Page', 23, 1),
(14136, 'It', 'BookStack\\Page', 23, 1),
(14137, 'leaves', 'BookStack\\Page', 23, 1),
(14138, 'files', 'BookStack\\Page', 23, 1),
(14139, 'same', 'BookStack\\Page', 23, 1),
(14140, 'as', 'BookStack\\Page', 23, 1),
(14141, 'if', 'BookStack\\Page', 23, 1),
(14142, 'reverted', 'BookStack\\Page', 23, 1),
(14143, 'never', 'BookStack\\Page', 23, 1),
(14144, 'existed', 'BookStack\\Page', 23, 1),
(14536, 'Misc', 'BookStack\\Book', 6, 48),
(16489, 'Shell', 'BookStack\\Page', 27, 40),
(16490, 'Scripting', 'BookStack\\Page', 27, 40),
(16491, 'To', 'BookStack\\Page', 27, 1),
(16492, 'create', 'BookStack\\Page', 27, 3),
(16493, 'a', 'BookStack\\Page', 27, 7),
(16494, 'bash', 'BookStack\\Page', 27, 1),
(16495, 'script', 'BookStack\\Page', 27, 1),
(16496, 'plain', 'BookStack\\Page', 27, 1),
(16497, 'file', 'BookStack\\Page', 27, 4),
(16498, 'without', 'BookStack\\Page', 27, 1),
(16499, 'any', 'BookStack\\Page', 27, 1),
(16500, 'extension', 'BookStack\\Page', 27, 1),
(16501, 'and', 'BookStack\\Page', 27, 3),
(16502, 'put', 'BookStack\\Page', 27, 1),
(16503, '#', 'BookStack\\Page', 27, 14),
(16504, '/bin/bash', 'BookStack\\Page', 27, 1),
(16505, 'at', 'BookStack\\Page', 27, 1),
(16506, 'the', 'BookStack\\Page', 27, 7),
(16507, 'beginning', 'BookStack\\Page', 27, 1),
(16508, 'of', 'BookStack\\Page', 27, 4),
(16509, 'Operations', 'BookStack\\Page', 27, 6),
(16510, '$', 'BookStack\\Page', 27, 10),
(16511, '-', 'BookStack\\Page', 27, 4),
(16512, 'Command', 'BookStack\\Page', 27, 1),
(16513, 'Substitution', 'BookStack\\Page', 27, 2),
(16514, 'Encapsulate', 'BookStack\\Page', 27, 1),
(16515, 'result', 'BookStack\\Page', 27, 1),
(16516, 'command', 'BookStack\\Page', 27, 2),
(16517, 's', 'BookStack\\Page', 27, 3),
(16518, 'pass', 'BookStack\\Page', 27, 1),
(16519, 'it', 'BookStack\\Page', 27, 2),
(16520, 'as', 'BookStack\\Page', 27, 1),
(16521, 'an', 'BookStack\\Page', 27, 1),
(16522, 'argument', 'BookStack\\Page', 27, 1),
(16523, 'to', 'BookStack\\Page', 27, 5),
(16524, 'another', 'BookStack\\Page', 27, 1),
(16525, 'echo', 'BookStack\\Page', 27, 21),
(16526, 'seq', 'BookStack\\Page', 27, 2),
(16527, '1', 'BookStack\\Page', 27, 5),
(16528, '5', 'BookStack\\Page', 27, 4),
(16529, '\r', 'BookStack\\Page', 27, 44),
(16530, '2', 'BookStack\\Page', 27, 3),
(16531, '3', 'BookStack\\Page', 27, 2),
(16532, '4', 'BookStack\\Page', 27, 1),
(16533, 'Or', 'BookStack\\Page', 27, 1),
(16534, 'new', 'BookStack\\Page', 27, 1),
(16535, 'directories', 'BookStack\\Page', 27, 1),
(16536, 'mkdir', 'BookStack\\Page', 27, 1),
(16537, 'Arithmetic', 'BookStack\\Page', 27, 1),
(16538, 'Expansion', 'BookStack\\Page', 27, 1),
(16539, 'do', 'BookStack\\Page', 27, 1),
(16540, 'basic', 'BookStack\\Page', 27, 1),
(16541, 'calculations', 'BookStack\\Page', 27, 1),
(16542, 'Variable/Parameter', 'BookStack\\Page', 27, 1),
(16543, 'Substitute', 'BookStack\\Page', 27, 1),
(16544, 'value', 'BookStack\\Page', 27, 1),
(16545, 'variable', 'BookStack\\Page', 27, 1),
(16546, 'dest=', 'BookStack\\Page', 27, 1),
(16547, '/backups', 'BookStack\\Page', 27, 1),
(16548, '$dest\r', 'BookStack\\Page', 27, 1),
(16549, 'OR\r', 'BookStack\\Page', 27, 3),
(16550, '$dest', 'BookStack\\Page', 27, 2),
(16551, 'printf', 'BookStack\\Page', 27, 1),
(16552, 'dest', 'BookStack\\Page', 27, 1),
(16553, 'test', 'BookStack\\Page', 27, 2),
(16554, 'Conditional', 'BookStack\\Page', 27, 4),
(16555, 'Test/Expression', 'BookStack\\Page', 27, 1),
(16556, 'simply', 'BookStack\\Page', 27, 1),
(16557, 'evaluate', 'BookStack\\Page', 27, 1),
(16558, 'conditional', 'BookStack\\Page', 27, 2),
(16559, 'return', 'BookStack\\Page', 27, 1),
(16560, '0', 'BookStack\\Page', 27, 1),
(16561, 'or', 'BookStack\\Page', 27, 2),
(16562, 'For', 'BookStack\\Page', 27, 1),
(16563, 'example', 'BookStack\\Page', 27, 1),
(16564, 'can', 'BookStack\\Page', 27, 1),
(16565, 'be', 'BookStack\\Page', 27, 1),
(16566, 'used', 'BookStack\\Page', 27, 1),
(16567, 'check', 'BookStack\\Page', 27, 1),
(16568, 'if', 'BookStack\\Page', 27, 6),
(16569, 'directory', 'BookStack\\Page', 27, 1),
(16570, 'exist', 'BookStack\\Page', 27, 1),
(16571, ' ', 'BookStack\\Page', 27, 2),
(16572, ' is', 'BookStack\\Page', 27, 1),
(16573, 'preferred', 'BookStack\\Page', 27, 1),
(16574, 'over test and ', 'BookStack\\Page', 27, 1),
(16575, 'because', 'BookStack\\Page', 27, 1),
(16576, 'is', 'BookStack\\Page', 27, 5),
(16577, 'considered', 'BookStack\\Page', 27, 1),
(16578, 'safer', 'BookStack\\Page', 27, 1),
(16579, 'Functions', 'BookStack\\Page', 27, 3),
(16580, 'sum=10', 'BookStack\\Page', 27, 1),
(16581, 'global', 'BookStack\\Page', 27, 1),
(16582, 'variable\r', 'BookStack\\Page', 27, 2),
(16583, 'getSum', 'BookStack\\Page', 27, 3),
(16584, 'local', 'BookStack\\Page', 27, 4),
(16585, 'num3=$1', 'BookStack\\Page', 27, 1),
(16586, '1st', 'BookStack\\Page', 27, 2),
(16587, 'parameter\r', 'BookStack\\Page', 27, 2),
(16588, 'num4=$2', 'BookStack\\Page', 27, 1),
(16589, '2nd', 'BookStack\\Page', 27, 1),
(16590, 'sum=$', 'BookStack\\Page', 27, 1),
(16591, 'num3+num4', 'BookStack\\Page', 27, 1),
(16592, '$sum\r', 'BookStack\\Page', 27, 2),
(16593, 'newSum=$', 'BookStack\\Page', 27, 1),
(16594, '10', 'BookStack\\Page', 27, 4),
(16595, '$newSum\r', 'BookStack\\Page', 27, 1),
(16596, '4\r', 'BookStack\\Page', 27, 1),
(16597, 'output\r', 'BookStack\\Page', 27, 1),
(16598, '10\r', 'BookStack\\Page', 27, 1),
(16599, '20\r', 'BookStack\\Page', 27, 1),
(16600, '7', 'BookStack\\Page', 27, 1),
(16601, 'Statements', 'BookStack\\Page', 27, 3),
(16602, 'read', 'BookStack\\Page', 27, 2),
(16603, 'inputValue', 'BookStack\\Page', 27, 3),
(16604, 'get', 'BookStack\\Page', 27, 4),
(16605, 'parameters', 'BookStack\\Page', 27, 1),
(16606, 'provider', 'BookStack\\Page', 27, 1),
(16607, 'when', 'BookStack\\Page', 27, 1),
(16608, 'running', 'BookStack\\Page', 27, 1),
(16609, 'script\r', 'BookStack\\Page', 27, 1),
(16610, '20', 'BookStack\\Page', 27, 2),
(16611, '&&', 'BookStack\\Page', 27, 1),
(16612, 'then\r', 'BookStack\\Page', 27, 5),
(16613, 'Value', 'BookStack\\Page', 27, 1),
(16614, 'greater', 'BookStack\\Page', 27, 1),
(16615, 'than', 'BookStack\\Page', 27, 2),
(16616, 'but', 'BookStack\\Page', 27, 1),
(16617, 'less', 'BookStack\\Page', 27, 1),
(16618, 'else', 'BookStack\\Page', 27, 1),
(16619, 'Some', 'BookStack\\Page', 27, 1),
(16620, 'other', 'BookStack\\Page', 27, 1),
(16621, 'number', 'BookStack\\Page', 27, 1),
(16622, 'fi\r', 'BookStack\\Page', 27, 4),
(16623, 'exampleFile=', 'BookStack\\Page', 27, 1),
(16624, '/example_file', 'BookStack\\Page', 27, 1),
(16625, '-e', 'BookStack\\Page', 27, 1),
(16626, '$exampleFile', 'BookStack\\Page', 27, 8),
(16627, 'exists', 'BookStack\\Page', 27, 1),
(16628, '-f', 'BookStack\\Page', 27, 1),
(16629, 'normal', 'BookStack\\Page', 27, 1),
(16630, '-r', 'BookStack\\Page', 27, 1),
(16631, 'readable', 'BookStack\\Page', 27, 1),
(16632, '-w', 'BookStack\\Page', 27, 1),
(16633, 'writable', 'BookStack\\Page', 27, 1),
(16634, 'fi', 'BookStack\\Page', 27, 1),
(16635, 'Case', 'BookStack\\Page', 27, 3),
(16636, 'COUNTRY\r', 'BookStack\\Page', 27, 1),
(16637, 'case', 'BookStack\\Page', 27, 1),
(16638, '$COUNTRY', 'BookStack\\Page', 27, 1),
(16639, 'in\r', 'BookStack\\Page', 27, 1),
(16640, 'Lithuania', 'BookStack\\Page', 27, 1),
(16641, '-n', 'BookStack\\Page', 27, 4),
(16642, 'Lithuanian', 'BookStack\\Page', 27, 1),
(16643, 'Romania', 'BookStack\\Page', 27, 1),
(16644, '|', 'BookStack\\Page', 27, 4),
(16645, 'Moldova', 'BookStack\\Page', 27, 1),
(16646, 'Romanian', 'BookStack\\Page', 27, 1),
(16647, 'Italy', 'BookStack\\Page', 27, 1),
(16648, 'San', 'BookStack\\Page', 27, 1),
(16649, 'Marino', 'BookStack\\Page', 27, 1),
(16650, 'Switzerland', 'BookStack\\Page', 27, 1),
(16651, 'Vatican', 'BookStack\\Page', 27, 1),
(16652, 'City', 'BookStack\\Page', 27, 1),
(16653, 'Italian', 'BookStack\\Page', 27, 1),
(16654, '*', 'BookStack\\Page', 27, 1),
(16655, 'unknown', 'BookStack\\Page', 27, 1),
(16656, 'esac', 'BookStack\\Page', 27, 1),
(16657, 'String', 'BookStack\\Page', 27, 4),
(16658, 'rand_str=', 'BookStack\\Page', 27, 1),
(16659, 'A', 'BookStack\\Page', 27, 2),
(16660, 'random', 'BookStack\\Page', 27, 1),
(16661, 'string', 'BookStack\\Page', 27, 1),
(16662, 'Length', 'BookStack\\Page', 27, 1),
(16663, '#rand_str', 'BookStack\\Page', 27, 1),
(16664, 'rand_str', 'BookStack\\Page', 27, 2),
(16665, 'second', 'BookStack\\Page', 27, 1),
(16666, 'word', 'BookStack\\Page', 27, 1),
(16667, 'string\r', 'BookStack\\Page', 27, 1),
(16668, 'words', 'BookStack\\Page', 27, 2),
(16669, 'in', 'BookStack\\Page', 27, 1),
(16670, 'range', 'BookStack\\Page', 27, 1),
(16671, 'from', 'BookStack\\Page', 27, 1),
(16672, '2nd\r', 'BookStack\\Page', 27, 1),
(16673, 'rand_str#*A', 'BookStack\\Page', 27, 1),
(16674, 'that', 'BookStack\\Page', 27, 1),
(16675, 'follow', 'BookStack\\Page', 27, 1),
(16676, 'characters', 'BookStack\\Page', 27, 1),
(16677, 'Docker', 'BookStack\\Book', 7, 48),
(20196, 'Volumes', 'BookStack\\Page', 31, 50),
(20197, 'Docker', 'BookStack\\Page', 31, 8),
(20198, 'has', 'BookStack\\Page', 31, 3),
(20199, 'two', 'BookStack\\Page', 31, 1),
(20200, 'options', 'BookStack\\Page', 31, 1),
(20201, 'for', 'BookStack\\Page', 31, 4),
(20202, 'containers', 'BookStack\\Page', 31, 6),
(20203, 'to', 'BookStack\\Page', 31, 14),
(20204, 'store', 'BookStack\\Page', 31, 1),
(20205, 'files', 'BookStack\\Page', 31, 2),
(20206, 'in', 'BookStack\\Page', 31, 10),
(20207, 'the', 'BookStack\\Page', 31, 38),
(20208, 'host', 'BookStack\\Page', 31, 12),
(20209, 'machine', 'BookStack\\Page', 31, 3),
(20210, 'so', 'BookStack\\Page', 31, 1),
(20211, 'that', 'BookStack\\Page', 31, 4),
(20212, 'are', 'BookStack\\Page', 31, 13),
(20213, 'persisted', 'BookStack\\Page', 31, 2),
(20214, 'even', 'BookStack\\Page', 31, 1),
(20215, 'after', 'BookStack\\Page', 31, 1),
(20216, 'container', 'BookStack\\Page', 31, 16),
(20217, 'stops', 'BookStack\\Page', 31, 1),
(20218, '-', 'BookStack\\Page', 31, 5),
(20219, 'stored', 'BookStack\\Page', 31, 1),
(20220, 'a', 'BookStack\\Page', 31, 17),
(20221, 'part', 'BookStack\\Page', 31, 1),
(20222, 'of', 'BookStack\\Page', 31, 5),
(20223, 'filesystem', 'BookStack\\Page', 31, 2),
(20224, 'which', 'BookStack\\Page', 31, 1),
(20225, 'is', 'BookStack\\Page', 31, 3),
(20226, 'managed', 'BookStack\\Page', 31, 2),
(20227, 'by', 'BookStack\\Page', 31, 6),
(20228, '\r', 'BookStack\\Page', 31, 2),
(20229, 'Bind', 'BookStack\\Page', 31, 11),
(20230, 'mounts', 'BookStack\\Page', 31, 4),
(20231, 'may', 'BookStack\\Page', 31, 1),
(20232, 'be', 'BookStack\\Page', 31, 9),
(20233, 'stored anywhere on', 'BookStack\\Page', 31, 1),
(20234, 'system', 'BookStack\\Page', 31, 5),
(20235, ' ', 'BookStack\\Page', 31, 2),
(20236, 'What', 'BookStack\\Page', 31, 8),
(20237, 'volumes', 'BookStack\\Page', 31, 3),
(20238, 'file', 'BookStack\\Page', 31, 6),
(20239, 'systems', 'BookStack\\Page', 31, 1),
(20240, 'mounted', 'BookStack\\Page', 31, 2),
(20241, 'on', 'BookStack\\Page', 31, 7),
(20242, 'preserve', 'BookStack\\Page', 31, 1),
(20243, 'data', 'BookStack\\Page', 31, 8),
(20244, 'generated', 'BookStack\\Page', 31, 3),
(20245, 'running', 'BookStack\\Page', 31, 1),
(20246, 'outlive', 'BookStack\\Page', 31, 1),
(20247, 'That', 'BookStack\\Page', 31, 1),
(20248, 'means', 'BookStack\\Page', 31, 2),
(20249, 'if', 'BookStack\\Page', 31, 2),
(20250, 'will', 'BookStack\\Page', 31, 9),
(20251, 'deleted', 'BookStack\\Page', 31, 2),
(20252, 'volume', 'BookStack\\Page', 31, 10),
(20253, 'won', 'BookStack\\Page', 31, 1),
(20254, 't', 'BookStack\\Page', 31, 2),
(20255, 'and', 'BookStack\\Page', 31, 6),
(20256, 'it', 'BookStack\\Page', 31, 8),
(20257, 'manually', 'BookStack\\Page', 31, 1),
(20258, 'All', 'BookStack\\Page', 31, 1),
(20259, 'inside', 'BookStack\\Page', 31, 1),
(20260, 'directory', 'BookStack\\Page', 31, 14),
(20261, 'available', 'BookStack\\Page', 31, 2),
(20262, 'as', 'BookStack\\Page', 31, 2),
(20263, 'well', 'BookStack\\Page', 31, 1),
(20264, 'One', 'BookStack\\Page', 31, 1),
(20265, 'can', 'BookStack\\Page', 31, 1),
(20266, 'used', 'BookStack\\Page', 31, 2),
(20267, 'more', 'BookStack\\Page', 31, 1),
(20268, 'than', 'BookStack\\Page', 31, 2),
(20269, 'one', 'BookStack\\Page', 31, 1),
(20270, 'both', 'BookStack\\Page', 31, 1),
(20271, 'need', 'BookStack\\Page', 31, 3),
(20272, 'access', 'BookStack\\Page', 31, 1),
(20273, 'same', 'BookStack\\Page', 31, 1),
(20274, 'There', 'BookStack\\Page', 31, 1),
(20275, '3', 'BookStack\\Page', 31, 1),
(20276, 'ways', 'BookStack\\Page', 31, 1),
(20277, 'create', 'BookStack\\Page', 31, 3),
(20278, 'docker', 'BookStack\\Page', 31, 4),
(20279, 'run', 'BookStack\\Page', 31, 3),
(20280, '-v', 'BookStack\\Page', 31, 3),
(20281, 'container_directory', 'BookStack\\Page', 31, 3),
(20282, 'Mount', 'BookStack\\Page', 31, 3),
(20283, 'without', 'BookStack\\Page', 31, 1),
(20284, 'specifying', 'BookStack\\Page', 31, 1),
(20285, 'This', 'BookStack\\Page', 31, 2),
(20286, 'automatically', 'BookStack\\Page', 31, 2),
(20287, 'new', 'BookStack\\Page', 31, 1),
(20288, 'manage', 'BookStack\\Page', 31, 1),
(20289, 'us', 'BookStack\\Page', 31, 2),
(20290, 'Since', 'BookStack\\Page', 31, 1),
(20291, 'we', 'BookStack\\Page', 31, 2),
(20292, 'don', 'BookStack\\Page', 31, 1),
(20293, 'specify', 'BookStack\\Page', 31, 3),
(20294, 'name', 'BookStack\\Page', 31, 2),
(20295, 'random', 'BookStack\\Page', 31, 1),
(20296, 'hash', 'BookStack\\Page', 31, 1),
(20297, 'Anonymous', 'BookStack\\Page', 31, 1),
(20298, 'Volume', 'BookStack\\Page', 31, 2),
(20299, 'host_directory', 'BookStack\\Page', 31, 1),
(20300, 'where', 'BookStack\\Page', 31, 2),
(20301, 'should', 'BookStack\\Page', 31, 1),
(20302, 'save', 'BookStack\\Page', 31, 1),
(20303, ' \r', 'BookStack\\Page', 31, 1),
(20304, 'volume_name', 'BookStack\\Page', 31, 1),
(20305, 'like', 'BookStack\\Page', 31, 1),
(20306, 'anonymous', 'BookStack\\Page', 31, 1),
(20307, 'handle', 'BookStack\\Page', 31, 1),
(20308, 'type', 'BookStack\\Page', 31, 1),
(20309, 'better', 'BookStack\\Page', 31, 2),
(20310, 'because', 'BookStack\\Page', 31, 2),
(20311, 'allows', 'BookStack\\Page', 31, 1),
(20312, 'give', 'BookStack\\Page', 31, 1),
(20313, 'Named', 'BookStack\\Page', 31, 1),
(20314, 'When', 'BookStack\\Page', 31, 2),
(20315, 'creating', 'BookStack\\Page', 31, 1),
(20316, 'stores', 'BookStack\\Page', 31, 1),
(20317, 'its', 'BookStack\\Page', 31, 3),
(20318, 'Each', 'BookStack\\Page', 31, 1),
(20319, 'database', 'BookStack\\Page', 31, 1),
(20320, 'own', 'BookStack\\Page', 31, 1),
(20321, 'unique', 'BookStack\\Page', 31, 1),
(20322, 'path', 'BookStack\\Page', 31, 3),
(20323, 'start', 'BookStack\\Page', 31, 1),
(20324, 'all', 'BookStack\\Page', 31, 1),
(20325, 'replicated', 'BookStack\\Page', 31, 1),
(20326, 'specified', 'BookStack\\Page', 31, 1),
(20327, 'For MongoDB its', 'BookStack\\Page', 31, 1),
(20328, '/data/db\r', 'BookStack\\Page', 31, 1),
(20329, 'For', 'BookStack\\Page', 31, 2),
(20330, 'MySQLits', 'BookStack\\Page', 31, 1),
(20331, '/var/lib/mysql\r', 'BookStack\\Page', 31, 1),
(20332, 'PostgreSQL', 'BookStack\\Page', 31, 1),
(20333, '/var/lib/postresql/data', 'BookStack\\Page', 31, 1),
(20334, 'Mounts', 'BookStack\\Page', 31, 8),
(20335, 'created', 'BookStack\\Page', 31, 2),
(20336, 'binding', 'BookStack\\Page', 31, 1),
(20337, 'an', 'BookStack\\Page', 31, 1),
(20338, 'existing', 'BookStack\\Page', 31, 1),
(20339, 'folder', 'BookStack\\Page', 31, 2),
(20340, 'similarly', 'BookStack\\Page', 31, 1),
(20341, 'To', 'BookStack\\Page', 31, 1),
(20342, 'use', 'BookStack\\Page', 31, 1),
(20343, 'bind', 'BookStack\\Page', 31, 1),
(20344, 'or', 'BookStack\\Page', 31, 2),
(20345, 'does', 'BookStack\\Page', 31, 2),
(20346, 'not', 'BookStack\\Page', 31, 2),
(20347, 'exist', 'BookStack\\Page', 31, 3),
(20348, 'your', 'BookStack\\Page', 31, 1),
(20349, 'already', 'BookStack\\Page', 31, 1),
(20350, 'If', 'BookStack\\Page', 31, 1),
(20351, 'doesn’t', 'BookStack\\Page', 31, 1),
(20352, 'demand', 'BookStack\\Page', 31, 1),
(20353, 'rely', 'BookStack\\Page', 31, 1),
(20354, 'machine’s', 'BookStack\\Page', 31, 1),
(20355, 'having', 'BookStack\\Page', 31, 1),
(20356, 'specific', 'BookStack\\Page', 31, 1),
(20357, 'structure', 'BookStack\\Page', 31, 2),
(20358, 'You', 'BookStack\\Page', 31, 1),
(20359, 'must', 'BookStack\\Page', 31, 1),
(20360, 'explicitly', 'BookStack\\Page', 31, 1),
(20361, 'place', 'BookStack\\Page', 31, 1),
(20362, 'storage', 'BookStack\\Page', 31, 1),
(20363, 'vs', 'BookStack\\Page', 31, 4),
(20364, 'Volumes are', 'BookStack\\Page', 31, 1),
(20365, 'preferred', 'BookStack\\Page', 31, 1),
(20366, 'mechanism', 'BookStack\\Page', 31, 1),
(20367, 'persisting', 'BookStack\\Page', 31, 2),
(20368, ' While bind', 'BookStack\\Page', 31, 1),
(20369, 'mounts are', 'BookStack\\Page', 31, 1),
(20370, 'dependent', 'BookStack\\Page', 31, 1),
(20371, ' volumes are', 'BookStack\\Page', 31, 1),
(20372, 'completely', 'BookStack\\Page', 31, 1),
(20373, ' Volumes are', 'BookStack\\Page', 31, 1),
(20374, 'often', 'BookStack\\Page', 31, 1),
(20375, 'choice', 'BookStack\\Page', 31, 1),
(20376, 'container’s', 'BookStack\\Page', 31, 1),
(20377, 'writable', 'BookStack\\Page', 31, 1),
(20378, 'layer', 'BookStack\\Page', 31, 1),
(20379, 'increase', 'BookStack\\Page', 31, 1),
(20380, 'size', 'BookStack\\Page', 31, 1),
(20381, 'using', 'BookStack\\Page', 31, 1),
(20382, 'volume’s', 'BookStack\\Page', 31, 1),
(20383, 'contents', 'BookStack\\Page', 31, 1),
(20384, 'outside', 'BookStack\\Page', 31, 1),
(20385, 'lifecycle', 'BookStack\\Page', 31, 1);
INSERT INTO `search_terms` (`id`, `term`, `entity_type`, `entity_id`, `score`) VALUES
(20386, 'given', 'BookStack\\Page', 31, 1),
(21062, 'Networks', 'BookStack\\Page', 34, 41),
(21063, 'Docker', 'BookStack\\Page', 34, 4),
(21064, 'takes', 'BookStack\\Page', 34, 1),
(21065, 'care', 'BookStack\\Page', 34, 1),
(21066, 'of', 'BookStack\\Page', 34, 1),
(21067, 'the', 'BookStack\\Page', 34, 17),
(21068, 'networking', 'BookStack\\Page', 34, 4),
(21069, 'aspects', 'BookStack\\Page', 34, 1),
(21070, 'so', 'BookStack\\Page', 34, 1),
(21071, 'that', 'BookStack\\Page', 34, 2),
(21072, 'containers', 'BookStack\\Page', 34, 9),
(21073, 'can', 'BookStack\\Page', 34, 8),
(21074, 'communicate', 'BookStack\\Page', 34, 2),
(21075, 'with', 'BookStack\\Page', 34, 2),
(21076, 'other', 'BookStack\\Page', 34, 4),
(21077, 'and', 'BookStack\\Page', 34, 5),
(21078, 'also', 'BookStack\\Page', 34, 3),
(21079, 'Host', 'BookStack\\Page', 34, 4),
(21080, 'Already', 'BookStack\\Page', 34, 1),
(21081, 'running', 'BookStack\\Page', 34, 1),
(21082, 'be', 'BookStack\\Page', 34, 2),
(21083, 'attached', 'BookStack\\Page', 34, 1),
(21084, 'to', 'BookStack\\Page', 34, 10),
(21085, 'a', 'BookStack\\Page', 34, 8),
(21086, 'network', 'BookStack\\Page', 34, 8),
(21087, 'by default', 'BookStack\\Page', 34, 1),
(21088, 'supports', 'BookStack\\Page', 34, 1),
(21089, '3', 'BookStack\\Page', 34, 1),
(21090, 'networks', 'BookStack\\Page', 34, 3),
(21091, 'Bridge\r', 'BookStack\\Page', 34, 1),
(21092, 'Host\r', 'BookStack\\Page', 34, 1),
(21093, 'None', 'BookStack\\Page', 34, 4),
(21094, 'This', 'BookStack\\Page', 34, 2),
(21095, 'mode', 'BookStack\\Page', 34, 2),
(21096, 'will', 'BookStack\\Page', 34, 4),
(21097, 'not', 'BookStack\\Page', 34, 2),
(21098, 'configure', 'BookStack\\Page', 34, 1),
(21099, 'any', 'BookStack\\Page', 34, 2),
(21100, 'IP', 'BookStack\\Page', 34, 2),
(21101, 'for', 'BookStack\\Page', 34, 6),
(21102, 'container', 'BookStack\\Page', 34, 7),
(21103, 'doesn’t', 'BookStack\\Page', 34, 1),
(21104, 'have', 'BookStack\\Page', 34, 1),
(21105, 'access', 'BookStack\\Page', 34, 3),
(21106, 'external', 'BookStack\\Page', 34, 1),
(21107, 'as', 'BookStack\\Page', 34, 2),
(21108, 'well', 'BookStack\\Page', 34, 1),
(21109, 'option', 'BookStack\\Page', 34, 1),
(21110, 'is', 'BookStack\\Page', 34, 3),
(21111, 'used', 'BookStack\\Page', 34, 1),
(21112, 'when', 'BookStack\\Page', 34, 1),
(21113, 'user', 'BookStack\\Page', 34, 1),
(21114, 'wants', 'BookStack\\Page', 34, 1),
(21115, 'disable', 'BookStack\\Page', 34, 1),
(21116, 'Bridge', 'BookStack\\Page', 34, 4),
(21117, 'uses', 'BookStack\\Page', 34, 1),
(21118, 'software', 'BookStack\\Page', 34, 1),
(21119, 'bridge', 'BookStack\\Page', 34, 8),
(21120, 'which', 'BookStack\\Page', 34, 2),
(21121, 'allows', 'BookStack\\Page', 34, 1),
(21122, 'connected', 'BookStack\\Page', 34, 2),
(21123, 'same', 'BookStack\\Page', 34, 1),
(21124, 'while', 'BookStack\\Page', 34, 1),
(21125, 'providing', 'BookStack\\Page', 34, 1),
(21126, 'isolation', 'BookStack\\Page', 34, 1),
(21127, 'from', 'BookStack\\Page', 34, 2),
(21128, 'are', 'BookStack\\Page', 34, 2),
(21129, ' ', 'BookStack\\Page', 34, 2),
(21130, 'When', 'BookStack\\Page', 34, 1),
(21131, 'you', 'BookStack\\Page', 34, 1),
(21132, 'start', 'BookStack\\Page', 34, 1),
(21133, 'default', 'BookStack\\Page', 34, 3),
(21134, 'network is', 'BookStack\\Page', 34, 1),
(21135, 'created', 'BookStack\\Page', 34, 1),
(21136, 'automatically', 'BookStack\\Page', 34, 1),
(21137, 'newly-started', 'BookStack\\Page', 34, 1),
(21138, 'connect', 'BookStack\\Page', 34, 1),
(21139, 'it', 'BookStack\\Page', 34, 1),
(21140, 'unless', 'BookStack\\Page', 34, 1),
(21141, 'otherwise', 'BookStack\\Page', 34, 1),
(21142, 'specified', 'BookStack\\Page', 34, 1),
(21143, 'You', 'BookStack\\Page', 34, 1),
(21144, 'create', 'BookStack\\Page', 34, 1),
(21145, 'user-defined', 'BookStack\\Page', 34, 2),
(21146, 'custom', 'BookStack\\Page', 34, 1),
(21147, ' User-defined', 'BookStack\\Page', 34, 1),
(21148, 'superior', 'BookStack\\Page', 34, 1),
(21149, 'bridge network', 'BookStack\\Page', 34, 1),
(21150, 'The', 'BookStack\\Page', 34, 3),
(21151, 't', 'BookStack\\Page', 34, 1),
(21152, 'directly', 'BookStack\\Page', 34, 3),
(21153, 'use', 'BookStack\\Page', 34, 3),
(21154, 'host', 'BookStack\\Page', 34, 5),
(21155, 's', 'BookStack\\Page', 34, 1),
(21156, 'there', 'BookStack\\Page', 34, 1),
(21157, 'need', 'BookStack\\Page', 34, 2),
(21158, '“port', 'BookStack\\Page', 34, 1),
(21159, 'mapping“', 'BookStack\\Page', 34, 1),
(21160, '\r', 'BookStack\\Page', 34, 1),
(21161, 'User-defined', 'BookStack\\Page', 34, 1),
(21162, 'bridges', 'BookStack\\Page', 34, 1),
(21163, 'provide', 'BookStack\\Page', 34, 1),
(21164, 'automatic', 'BookStack\\Page', 34, 1),
(21165, 'DNS', 'BookStack\\Page', 34, 1),
(21166, 'resolution', 'BookStack\\Page', 34, 1),
(21167, 'between', 'BookStack\\Page', 34, 1),
(21168, 'Containers', 'BookStack\\Page', 34, 1),
(21169, 'on', 'BookStack\\Page', 34, 2),
(21170, 'only', 'BookStack\\Page', 34, 1),
(21171, 'each', 'BookStack\\Page', 34, 2),
(21172, 'by', 'BookStack\\Page', 34, 2),
(21173, 'addresses', 'BookStack\\Page', 34, 1),
(21174, 'On', 'BookStack\\Page', 34, 1),
(21175, 'resolve', 'BookStack\\Page', 34, 1),
(21176, 'name', 'BookStack\\Page', 34, 3),
(21177, 'or', 'BookStack\\Page', 34, 1),
(21178, 'alias', 'BookStack\\Page', 34, 1),
(21179, 'In', 'BookStack\\Page', 34, 1),
(21180, 'this', 'BookStack\\Page', 34, 1),
(21181, 'share', 'BookStack\\Page', 34, 1),
(21182, 'host’s', 'BookStack\\Page', 34, 2),
(21183, 'stack', 'BookStack\\Page', 34, 1),
(21184, 'all', 'BookStack\\Page', 34, 1),
(21185, 'interfaces', 'BookStack\\Page', 34, 1),
(21186, 'available', 'BookStack\\Page', 34, 1),
(21187, 'container’s', 'BookStack\\Page', 34, 1),
(21188, 'match', 'BookStack\\Page', 34, 1),
(21189, 'system', 'BookStack\\Page', 34, 1),
(21190, 'example', 'BookStack\\Page', 34, 1),
(21191, 'docker', 'BookStack\\Page', 34, 1),
(21192, '“eth0”', 'BookStack\\Page', 34, 1),
(21193, 'sending', 'BookStack\\Page', 34, 1),
(21194, 'receiving', 'BookStack\\Page', 34, 1),
(21195, 'packets', 'BookStack\\Page', 34, 1),
(21196, 'There', 'BookStack\\Page', 34, 1),
(21197, 'no', 'BookStack\\Page', 34, 1),
(21198, 'port', 'BookStack\\Page', 34, 1),
(21199, 'mapping', 'BookStack\\Page', 34, 1),
(23591, 'References', 'BookStack\\Page', 37, 40),
(23592, 'To', 'BookStack\\Page', 37, 1),
(23593, 'save', 'BookStack\\Page', 37, 1),
(23594, 'you', 'BookStack\\Page', 37, 2),
(23595, 'from', 'BookStack\\Page', 37, 1),
(23596, 'having', 'BookStack\\Page', 37, 1),
(23597, 'to', 'BookStack\\Page', 37, 2),
(23598, 'memorise', 'BookStack\\Page', 37, 1),
(23599, 'these', 'BookStack\\Page', 37, 1),
(23600, 'hashes', 'BookStack\\Page', 37, 1),
(23601, 'Git', 'BookStack\\Page', 37, 1),
(23602, 'has', 'BookStack\\Page', 37, 1),
(23603, 'references', 'BookStack\\Page', 37, 1),
(23604, 'or', 'BookStack\\Page', 37, 1),
(23605, 'refs', 'BookStack\\Page', 37, 1),
(23606, 'A', 'BookStack\\Page', 37, 1),
(23607, 'reference', 'BookStack\\Page', 37, 2),
(23608, 'is', 'BookStack\\Page', 37, 3),
(23609, 'simply', 'BookStack\\Page', 37, 1),
(23610, 'a', 'BookStack\\Page', 37, 5),
(23611, 'file', 'BookStack\\Page', 37, 1),
(23612, 'stored', 'BookStack\\Page', 37, 1),
(23613, 'somewhere', 'BookStack\\Page', 37, 1),
(23614, 'in', 'BookStack\\Page', 37, 1),
(23615, 'git/refs', 'BookStack\\Page', 37, 1),
(23616, 'containing', 'BookStack\\Page', 37, 1),
(23617, 'the', 'BookStack\\Page', 37, 1),
(23618, 'hash', 'BookStack\\Page', 37, 1),
(23619, 'of', 'BookStack\\Page', 37, 1),
(23620, 'commit', 'BookStack\\Page', 37, 2),
(23621, 'object', 'BookStack\\Page', 37, 1),
(23622, 'When', 'BookStack\\Page', 37, 1),
(23623, 'create', 'BookStack\\Page', 37, 1),
(23624, 'new', 'BookStack\\Page', 37, 2),
(23625, 'branch', 'BookStack\\Page', 37, 1),
(23626, 'all', 'BookStack\\Page', 37, 1),
(23627, 'that', 'BookStack\\Page', 37, 2),
(23628, 'happens', 'BookStack\\Page', 37, 1),
(23629, 'created', 'BookStack\\Page', 37, 1),
(23630, 'pointing', 'BookStack\\Page', 37, 1),
(23631, 'Merge', 'BookStack\\Page', 21, 47),
(23632, 'vs', 'BookStack\\Page', 21, 40),
(23633, 'Rebase', 'BookStack\\Page', 21, 48),
(23634, 'There', 'BookStack\\Page', 21, 1),
(23635, 'are', 'BookStack\\Page', 21, 3),
(23636, 'two', 'BookStack\\Page', 21, 1),
(23637, 'options', 'BookStack\\Page', 21, 1),
(23638, 'for', 'BookStack\\Page', 21, 2),
(23639, 'integrating', 'BookStack\\Page', 21, 1),
(23640, 'your', 'BookStack\\Page', 21, 1),
(23641, 'feature', 'BookStack\\Page', 21, 1),
(23642, 'into', 'BookStack\\Page', 21, 3),
(23643, 'the', 'BookStack\\Page', 21, 19),
(23644, 'main', 'BookStack\\Page', 21, 1),
(23645, 'branch', 'BookStack\\Page', 21, 4),
(23646, 'merging', 'BookStack\\Page', 21, 3),
(23647, 'directly', 'BookStack\\Page', 21, 1),
(23648, '\r', 'BookStack\\Page', 21, 8),
(23649, 'rebasing', 'BookStack\\Page', 21, 5),
(23650, 'and', 'BookStack\\Page', 21, 3),
(23651, 'then', 'BookStack\\Page', 21, 3),
(23652, 'How', 'BookStack\\Page', 21, 8),
(23653, 'does', 'BookStack\\Page', 21, 8),
(23654, 'Git', 'BookStack\\Page', 21, 14),
(23655, 'work', 'BookStack\\Page', 21, 9),
(23656, 'merge will', 'BookStack\\Page', 21, 1),
(23657, 'combine', 'BookStack\\Page', 21, 1),
(23658, 'multiple', 'BookStack\\Page', 21, 1),
(23659, 'sequences', 'BookStack\\Page', 21, 1),
(23660, 'of', 'BookStack\\Page', 21, 5),
(23661, 'commits', 'BookStack\\Page', 21, 6),
(23662, 'one', 'BookStack\\Page', 21, 4),
(23663, 'unified', 'BookStack\\Page', 21, 1),
(23664, 'history', 'BookStack\\Page', 21, 3),
(23665, ' ', 'BookStack\\Page', 21, 2),
(23666, 'Example', 'BookStack\\Page', 21, 1),
(23667, 'otherbranch\r', 'BookStack\\Page', 21, 1),
(23668, '|\r', 'BookStack\\Page', 21, 3),
(23669, 'X', 'BookStack\\Page', 21, 1),
(23670, '-', 'BookStack\\Page', 21, 8),
(23671, 'Y', 'BookStack\\Page', 21, 1),
(23672, 'Z\r', 'BookStack\\Page', 21, 1),
(23673, '/\r', 'BookStack\\Page', 21, 1),
(23674, 'A', 'BookStack\\Page', 21, 2),
(23675, 'B', 'BookStack\\Page', 21, 1),
(23676, 'C', 'BookStack\\Page', 21, 1),
(23677, 'D', 'BookStack\\Page', 21, 1),
(23678, 'E', 'BookStack\\Page', 21, 1),
(23679, 'F', 'BookStack\\Page', 21, 1),
(23680, 'G\r', 'BookStack\\Page', 21, 1),
(23681, 'master\r', 'BookStack\\Page', 21, 1),
(23682, 'HEAD', 'BookStack\\Page', 21, 1),
(23683, 'You', 'BookStack\\Page', 21, 1),
(23684, 'on master and', 'BookStack\\Page', 21, 1),
(23685, 'you', 'BookStack\\Page', 21, 3),
(23686, 'said git', 'BookStack\\Page', 21, 1),
(23687, 'merge', 'BookStack\\Page', 21, 7),
(23688, 'otherbranch', 'BookStack\\Page', 21, 1),
(23689, 'Then', 'BookStack\\Page', 21, 2),
(23690, 'first', 'BookStack\\Page', 21, 1),
(23691, 'figures', 'BookStack\\Page', 21, 1),
(23692, 'out', 'BookStack\\Page', 21, 1),
(23693, 'that', 'BookStack\\Page', 21, 3),
(23694, 'base', 'BookStack\\Page', 21, 2),
(23695, 'is', 'BookStack\\Page', 21, 7),
(23696, 'commit C', 'BookStack\\Page', 21, 1),
(23697, 'calculates', 'BookStack\\Page', 21, 1),
(23698, 'diff', 'BookStack\\Page', 21, 2),
(23699, 'from C to G and', 'BookStack\\Page', 21, 1),
(23700, 'from C to Z', 'BookStack\\Page', 21, 1),
(23701, 'applies both of', 'BookStack\\Page', 21, 1),
(23702, 'those', 'BookStack\\Page', 21, 1),
(23703, 'diffs', 'BookStack\\Page', 21, 1),
(23704, 'to C simultaneously', 'BookStack\\Page', 21, 1),
(23705, '—', 'BookStack\\Page', 21, 1),
(23706, 'result', 'BookStack\\Page', 21, 1),
(23707, 'on master', 'BookStack\\Page', 21, 1),
(23708, 'That', 'BookStack\\Page', 21, 1),
(23709, 'commit', 'BookStack\\Page', 21, 7),
(23710, 'Squash', 'BookStack\\Page', 21, 3),
(23711, 'squash', 'BookStack\\Page', 21, 1),
(23712, '--squash', 'BookStack\\Page', 21, 1),
(23713, 'a', 'BookStack\\Page', 21, 7),
(23714, 'option', 'BookStack\\Page', 21, 1),
(23715, 'in', 'BookStack\\Page', 21, 3),
(23716, 'will', 'BookStack\\Page', 21, 2),
(23717, 'produce', 'BookStack\\Page', 21, 1),
(23718, 'with', 'BookStack\\Page', 21, 1),
(23719, 'only', 'BookStack\\Page', 21, 2),
(23720, 'parent', 'BookStack\\Page', 21, 2),
(23721, 'The', 'BookStack\\Page', 21, 1),
(23722, 'files', 'BookStack\\Page', 21, 1),
(23723, 'merged', 'BookStack\\Page', 21, 1),
(23724, 'exactly', 'BookStack\\Page', 21, 1),
(23725, 'as', 'BookStack\\Page', 21, 2),
(23726, 'they', 'BookStack\\Page', 21, 1),
(23727, 'would', 'BookStack\\Page', 21, 1),
(23728, 'be', 'BookStack\\Page', 21, 2),
(23729, 'normal', 'BookStack\\Page', 21, 1),
(23730, 'but', 'BookStack\\Page', 21, 1),
(23731, 'metadata', 'BookStack\\Page', 21, 1),
(23732, 'changed', 'BookStack\\Page', 21, 1),
(23733, 'to', 'BookStack\\Page', 21, 7),
(23734, 'show', 'BookStack\\Page', 21, 1),
(23735, 'Rebasing', 'BookStack\\Page', 21, 1),
(23736, 'process', 'BookStack\\Page', 21, 2),
(23737, 'moving', 'BookStack\\Page', 21, 1),
(23738, 'or', 'BookStack\\Page', 21, 2),
(23739, 'combining', 'BookStack\\Page', 21, 1),
(23740, 'sequence', 'BookStack\\Page', 21, 1),
(23741, 'new', 'BookStack\\Page', 21, 2),
(23742, 'compresses', 'BookStack\\Page', 21, 1),
(23743, 'all', 'BookStack\\Page', 21, 1),
(23744, 'changes', 'BookStack\\Page', 21, 1),
(23745, 'single', 'BookStack\\Page', 21, 1),
(23746, '“patch', 'BookStack\\Page', 21, 1),
(23747, '”', 'BookStack\\Page', 21, 1),
(23748, 'it', 'BookStack\\Page', 21, 3),
(23749, 'integrates', 'BookStack\\Page', 21, 1),
(23750, 'patch', 'BookStack\\Page', 21, 1),
(23751, 'onto', 'BookStack\\Page', 21, 1),
(23752, 'target', 'BookStack\\Page', 21, 1),
(23753, 'Unlike', 'BookStack\\Page', 21, 1),
(23754, 'flattens', 'BookStack\\Page', 21, 1),
(23755, 'because', 'BookStack\\Page', 21, 1),
(23756, 'transfers', 'BookStack\\Page', 21, 1),
(23757, 'completed', 'BookStack\\Page', 21, 1),
(23758, 'from', 'BookStack\\Page', 21, 2),
(23759, 'another', 'BookStack\\Page', 21, 1),
(23760, 'In', 'BookStack\\Page', 21, 1),
(23761, 'unwanted', 'BookStack\\Page', 21, 1),
(23762, 'eliminated', 'BookStack\\Page', 21, 1),
(23763, 'Interactive', 'BookStack\\Page', 21, 5),
(23764, 'can', 'BookStack\\Page', 21, 1),
(23765, 'used', 'BookStack\\Page', 21, 1),
(23766, 'changing', 'BookStack\\Page', 21, 1),
(23767, 'many', 'BookStack\\Page', 21, 1),
(23768, 'ways', 'BookStack\\Page', 21, 1),
(23769, 'such', 'BookStack\\Page', 21, 1),
(23770, 'editing', 'BookStack\\Page', 21, 1),
(23771, 'deleting', 'BookStack\\Page', 21, 1),
(23772, 'squashing', 'BookStack\\Page', 21, 1),
(23773, 'To', 'BookStack\\Page', 21, 1),
(23774, 'tell', 'BookStack\\Page', 21, 1),
(23775, 'where', 'BookStack\\Page', 21, 1),
(23776, 'start', 'BookStack\\Page', 21, 1),
(23777, 'interactive', 'BookStack\\Page', 21, 2),
(23778, 'rebase', 'BookStack\\Page', 21, 3),
(23779, 'use', 'BookStack\\Page', 21, 2),
(23780, 'SHA-1', 'BookStack\\Page', 21, 1),
(23781, 'index', 'BookStack\\Page', 21, 1),
(23782, 'immediately', 'BookStack\\Page', 21, 1),
(23783, 'precedes', 'BookStack\\Page', 21, 1),
(23784, 'want', 'BookStack\\Page', 21, 1),
(23785, 'modify', 'BookStack\\Page', 21, 1),
(23786, 'create', 'BookStack\\Page', 21, 1),
(23787, 'SHA-1’s', 'BookStack\\Page', 21, 1),
(23788, 'therefore', 'BookStack\\Page', 21, 1),
(23789, 'best', 'BookStack\\Page', 21, 1),
(23790, 'on', 'BookStack\\Page', 21, 1),
(23791, 'have', 'BookStack\\Page', 21, 1),
(23792, 'not', 'BookStack\\Page', 21, 1),
(23793, 'pushed', 'BookStack\\Page', 21, 1),
(23794, 'remote', 'BookStack\\Page', 21, 1),
(23795, 'git', 'BookStack\\Page', 21, 2),
(23796, '-i', 'BookStack\\Page', 21, 2),
(23797, '528f82e', 'BookStack\\Page', 21, 1),
(23798, '#', 'BookStack\\Page', 21, 3),
(23799, 'Specific', 'BookStack\\Page', 21, 1),
(23800, 'commit\r', 'BookStack\\Page', 21, 1),
(23801, 'Or\r', 'BookStack\\Page', 21, 1),
(23802, 'HEAD~3', 'BookStack\\Page', 21, 1),
(23803, '3', 'BookStack\\Page', 21, 1),
(23804, 'Commits', 'BookStack\\Page', 21, 1),
(23805, 'ago', 'BookStack\\Page', 21, 1),
(23806, 'latest', 'BookStack\\Page', 21, 1),
(23807, 'Common', 'BookStack\\Page', 20, 40),
(23808, 'Git', 'BookStack\\Page', 20, 43),
(23809, 'Commands', 'BookStack\\Page', 20, 40),
(23810, 'Actions', 'BookStack\\Page', 20, 4),
(23811, 'git', 'BookStack\\Page', 20, 32),
(23812, 'fetch', 'BookStack\\Page', 20, 3),
(23813, '-', 'BookStack\\Page', 20, 11),
(23814, 'Downloads', 'BookStack\\Page', 20, 1),
(23815, 'new', 'BookStack\\Page', 20, 5),
(23816, 'data', 'BookStack\\Page', 20, 3),
(23817, 'from', 'BookStack\\Page', 20, 8),
(23818, 'a', 'BookStack\\Page', 20, 20),
(23819, 'remote', 'BookStack\\Page', 20, 3),
(23820, 'repository', 'BookStack\\Page', 20, 4),
(23821, 'but', 'BookStack\\Page', 20, 1),
(23822, 'it', 'BookStack\\Page', 20, 3),
(23823, 'doesn', 'BookStack\\Page', 20, 1),
(23824, 't', 'BookStack\\Page', 20, 1),
(23825, 'integrate', 'BookStack\\Page', 20, 2),
(23826, 'any', 'BookStack\\Page', 20, 3),
(23827, 'of', 'BookStack\\Page', 20, 9),
(23828, 'this', 'BookStack\\Page', 20, 1),
(23829, 'into', 'BookStack\\Page', 20, 4),
(23830, 'your', 'BookStack\\Page', 20, 7),
(23831, 'working', 'BookStack\\Page', 20, 3),
(23832, 'files', 'BookStack\\Page', 20, 4),
(23833, 'Fetch', 'BookStack\\Page', 20, 1),
(23834, 'will', 'BookStack\\Page', 20, 2),
(23835, 'never', 'BookStack\\Page', 20, 1),
(23836, 'manipulate', 'BookStack\\Page', 20, 1),
(23837, 'destroy', 'BookStack\\Page', 20, 1),
(23838, 'or', 'BookStack\\Page', 20, 2),
(23839, 'screw', 'BookStack\\Page', 20, 1),
(23840, 'up', 'BookStack\\Page', 20, 2),
(23841, 'anything', 'BookStack\\Page', 20, 1),
(23842, 'Example', 'BookStack\\Page', 20, 1),
(23843, 'When you run git', 'BookStack\\Page', 20, 1),
(23844, 'you', 'BookStack\\Page', 20, 3),
(23845, 'connect', 'BookStack\\Page', 20, 1),
(23846, 'to', 'BookStack\\Page', 20, 13),
(23847, 'Sally', 'BookStack\\Page', 20, 1),
(23848, 's', 'BookStack\\Page', 20, 2),
(23849, 'and', 'BookStack\\Page', 20, 2),
(23850, 'ask', 'BookStack\\Page', 20, 1),
(23851, 'her', 'BookStack\\Page', 20, 3),
(23852, 'if', 'BookStack\\Page', 20, 1),
(23853, 'she', 'BookStack\\Page', 20, 1),
(23854, 'has', 'BookStack\\Page', 20, 4),
(23855, 'commits', 'BookStack\\Page', 20, 7),
(23856, 'added', 'BookStack\\Page', 20, 1),
(23857, 'to her master since', 'BookStack\\Page', 20, 1),
(23858, 'commit C', 'BookStack\\Page', 20, 1),
(23859, 'She', 'BookStack\\Page', 20, 1),
(23860, 'does—she', 'BookStack\\Page', 20, 1),
(23861, 'commits E and F', 'BookStack\\Page', 20, 1),
(23862, 'So', 'BookStack\\Page', 20, 1),
(23863, 'gets', 'BookStack\\Page', 20, 1),
(23864, 'those', 'BookStack\\Page', 20, 2),
(23865, 'along', 'BookStack\\Page', 20, 1),
(23866, 'with', 'BookStack\\Page', 20, 9),
(23867, 'everything', 'BookStack\\Page', 20, 1),
(23868, 'needed', 'BookStack\\Page', 20, 1),
(23869, 'complete', 'BookStack\\Page', 20, 1),
(23870, 'the', 'BookStack\\Page', 20, 19),
(23871, 'snapshots', 'BookStack\\Page', 20, 1),
(23872, 'for', 'BookStack\\Page', 20, 2),
(23873, '  ', 'BookStack\\Page', 20, 1),
(23874, 'E--F', 'BookStack\\Page', 20, 1),
(23875, '--', 'BookStack\\Page', 20, 2),
(23876, 'sally/master\r', 'BookStack\\Page', 20, 1),
(23877, '/\r', 'BookStack\\Page', 20, 2),
(23878, 'A--B--C\r', 'BookStack\\Page', 20, 1),
(23879, '\\\r', 'BookStack\\Page', 20, 2),
(23880, 'D', 'BookStack\\Page', 20, 1),
(23881, 'master', 'BookStack\\Page', 20, 3),
(23882, 'HEAD', 'BookStack\\Page', 20, 2),
(23883, 'pull', 'BookStack\\Page', 20, 6),
(23884, 'This', 'BookStack\\Page', 20, 4),
(23885, 'updates', 'BookStack\\Page', 20, 1),
(23886, 'current', 'BookStack\\Page', 20, 4),
(23887, 'branch', 'BookStack\\Page', 20, 8),
(23888, 'latest', 'BookStack\\Page', 20, 2),
(23889, 'changes', 'BookStack\\Page', 20, 9),
(23890, 'server', 'BookStack\\Page', 20, 1),
(23891, 'means', 'BookStack\\Page', 20, 3),
(23892, 'that', 'BookStack\\Page', 20, 5),
(23893, 'not', 'BookStack\\Page', 20, 2),
(23894, 'only', 'BookStack\\Page', 20, 3),
(23895, 'fetches', 'BookStack\\Page', 20, 1),
(23896, 'also', 'BookStack\\Page', 20, 1),
(23897, 'integrates', 'BookStack\\Page', 20, 1),
(23898, 'them', 'BookStack\\Page', 20, 2),
(23899, 'copy', 'BookStack\\Page', 20, 2),
(23900, '&&', 'BookStack\\Page', 20, 1),
(23901, 'merge', 'BookStack\\Page', 20, 8),
(23902, '\r', 'BookStack\\Page', 20, 23),
(23903, 'Since', 'BookStack\\Page', 20, 1),
(23904, 'tries', 'BookStack\\Page', 20, 1),
(23905, 'local', 'BookStack\\Page', 20, 2),
(23906, 'ones', 'BookStack\\Page', 20, 1),
(23907, 'conflict', 'BookStack\\Page', 20, 1),
(23908, 'can', 'BookStack\\Page', 20, 2),
(23909, 'occur', 'BookStack\\Page', 20, 2),
(23910, 'It', 'BookStack\\Page', 20, 1),
(23911, 'recommended', 'BookStack\\Page', 20, 1),
(23912, 'start', 'BookStack\\Page', 20, 1),
(23913, 'clean', 'BookStack\\Page', 20, 2),
(23914, 'should', 'BookStack\\Page', 20, 1),
(23915, 'have', 'BookStack\\Page', 20, 1),
(23916, 'uncommitted', 'BookStack\\Page', 20, 1),
(23917, 'before', 'BookStack\\Page', 20, 3),
(23918, 'Incorporates', 'BookStack\\Page', 20, 1),
(23919, 'named', 'BookStack\\Page', 20, 1),
(23920, 'Except', 'BookStack\\Page', 20, 1),
(23921, 'in', 'BookStack\\Page', 20, 3),
(23922, 'fast-forward', 'BookStack\\Page', 20, 2),
(23923, 'branches', 'BookStack\\Page', 20, 2),
(23924, 'be', 'BookStack\\Page', 20, 3),
(23925, 'merged', 'BookStack\\Page', 20, 1),
(23926, 'must', 'BookStack\\Page', 20, 1),
(23927, 'tied', 'BookStack\\Page', 20, 1),
(23928, 'together', 'BookStack\\Page', 20, 1),
(23929, 'by', 'BookStack\\Page', 20, 1),
(23930, 'commit', 'BookStack\\Page', 20, 5),
(23931, 'both', 'BookStack\\Page', 20, 1),
(23932, 'as', 'BookStack\\Page', 20, 2),
(23933, 'its', 'BookStack\\Page', 20, 1),
(23934, 'parents', 'BookStack\\Page', 20, 1),
(23935, 'A', 'BookStack\\Page', 20, 1),
(23936, 'when', 'BookStack\\Page', 20, 1),
(23937, 'there', 'BookStack\\Page', 20, 1),
(23938, 'is', 'BookStack\\Page', 20, 2),
(23939, 'linear', 'BookStack\\Page', 20, 1),
(23940, 'path', 'BookStack\\Page', 20, 1),
(23941, 'current branch', 'BookStack\\Page', 20, 1),
(23942, 'tip', 'BookStack\\Page', 20, 3),
(23943, 'target', 'BookStack\\Page', 20, 2),
(23944, 'Instead', 'BookStack\\Page', 20, 1),
(23945, '“actually”', 'BookStack\\Page', 20, 1),
(23946, 'merging', 'BookStack\\Page', 20, 1),
(23947, 'all Git', 'BookStack\\Page', 20, 1),
(23948, 'do', 'BookStack\\Page', 20, 1),
(23949, 'histories', 'BookStack\\Page', 20, 1),
(23950, 'move', 'BookStack\\Page', 20, 1),
(23951, 'i', 'BookStack\\Page', 20, 1),
(23952, 'e', 'BookStack\\Page', 20, 1),
(23953, '“fast', 'BookStack\\Page', 20, 1),
(23954, 'forward”', 'BookStack\\Page', 20, 1),
(23955, 'the current', 'BookStack\\Page', 20, 1),
(23956, 'clone', 'BookStack\\Page', 20, 3),
(23957, '- Clones', 'BookStack\\Page', 20, 1),
(23958, 'newly', 'BookStack\\Page', 20, 1),
(23959, 'created', 'BookStack\\Page', 20, 1),
(23960, 'directory', 'BookStack\\Page', 20, 1),
(23961, 'Use --depth count to', 'BookStack\\Page', 20, 1),
(23962, 'create', 'BookStack\\Page', 20, 1),
(23963, 'shallow', 'BookStack\\Page', 20, 1),
(23964, 'history', 'BookStack\\Page', 20, 1),
(23965, 'truncated', 'BookStack\\Page', 20, 1),
(23966, 'specified', 'BookStack\\Page', 20, 1),
(23967, 'number', 'BookStack\\Page', 20, 1),
(23968, 'using', 'BookStack\\Page', 20, 1),
(23969, '--depth', 'BookStack\\Page', 20, 1),
(23970, '1 to', 'BookStack\\Page', 20, 1),
(23971, 'lot', 'BookStack\\Page', 20, 1),
(23972, 'faster', 'BookStack\\Page', 20, 1),
(23973, 'than', 'BookStack\\Page', 20, 1),
(23974, 'cloning', 'BookStack\\Page', 20, 1),
(23975, 'normally', 'BookStack\\Page', 20, 1),
(23976, 'Use --single-branch to', 'BookStack\\Page', 20, 1),
(23977, 'topic\r', 'BookStack\\Page', 20, 3),
(23978, 'A---B---C', 'BookStack\\Page', 20, 2),
(23979, 'D---E---F---G', 'BookStack\\Page', 20, 1),
(23980, 'master\r', 'BookStack\\Page', 20, 1),
(23981, '/', 'BookStack\\Page', 20, 1),
(23982, 'D---E---F---G---H', 'BookStack\\Page', 20, 1),
(23983, 'Stashes', 'BookStack\\Page', 20, 4),
(23984, 'stash -', 'BookStack\\Page', 20, 1),
(23985, 'Stash', 'BookStack\\Page', 20, 1),
(23986, 'changes\r', 'BookStack\\Page', 20, 1),
(23987, 'stash', 'BookStack\\Page', 20, 8),
(23988, 'pop -', 'BookStack\\Page', 20, 1),
(23989, 'Retrieve', 'BookStack\\Page', 20, 1),
(23990, 'apply', 'BookStack\\Page', 20, 2),
(23991, 'top', 'BookStack\\Page', 20, 1),
(23992, 'stack\r', 'BookStack\\Page', 20, 1),
(23993, 'list -', 'BookStack\\Page', 20, 1),
(23994, 'Get', 'BookStack\\Page', 20, 2),
(23995, 'list', 'BookStack\\Page', 20, 1),
(23996, 'stashes', 'BookStack\\Page', 20, 2),
(23997, 'show', 'BookStack\\Page', 20, 1),
(23998, 'stash@', 'BookStack\\Page', 20, 2),
(23999, '0', 'BookStack\\Page', 20, 1),
(24000, ' -', 'BookStack\\Page', 20, 3),
(24001, 'Show', 'BookStack\\Page', 20, 5),
(24002, 'particular', 'BookStack\\Page', 20, 2),
(24003, 'use', 'BookStack\\Page', 20, 1),
(24004, '-p to', 'BookStack\\Page', 20, 1),
(24005, 'see', 'BookStack\\Page', 20, 2),
(24006, 'an', 'BookStack\\Page', 20, 1),
(24007, 'patch', 'BookStack\\Page', 20, 1),
(24008, '2', 'BookStack\\Page', 20, 1),
(24009, 'Apply', 'BookStack\\Page', 20, 1),
(24010, 'clear', 'BookStack\\Page', 20, 1),
(24011, 'Clear', 'BookStack\\Page', 20, 1),
(24012, 'all', 'BookStack\\Page', 20, 3),
(24013, 'Log', 'BookStack\\Page', 20, 4),
(24014, 'log', 'BookStack\\Page', 20, 8),
(24015, 'Returns', 'BookStack\\Page', 20, 2),
(24016, 'commits\r', 'BookStack\\Page', 20, 1),
(24017, '--oneline -', 'BookStack\\Page', 20, 1),
(24018, 'condensed', 'BookStack\\Page', 20, 1),
(24019, 'one', 'BookStack\\Page', 20, 1),
(24020, 'line', 'BookStack\\Page', 20, 1),
(24021, 'Useful', 'BookStack\\Page', 20, 1),
(24022, 'getting', 'BookStack\\Page', 20, 1),
(24023, 'high-level', 'BookStack\\Page', 20, 1),
(24024, 'overview', 'BookStack\\Page', 20, 1),
(24025, 'project', 'BookStack\\Page', 20, 1),
(24026, '--graph', 'BookStack\\Page', 20, 1),
(24027, '--oneline', 'BookStack\\Page', 20, 1),
(24028, 'graph', 'BookStack\\Page', 20, 1),
(24029, 'format\r', 'BookStack\\Page', 20, 1),
(24030, '-p -', 'BookStack\\Page', 20, 1),
(24031, 'See', 'BookStack\\Page', 20, 1),
(24032, 'each', 'BookStack\\Page', 20, 2),
(24033, '-3', 'BookStack\\Page', 20, 1),
(24034, '3', 'BookStack\\Page', 20, 1),
(24035, 'most', 'BookStack\\Page', 20, 1),
(24036, 'recent', 'BookStack\\Page', 20, 1),
(24037, '--after=', 'BookStack\\Page', 20, 1),
(24038, '2014-7-1', 'BookStack\\Page', 20, 1),
(24039, 'after', 'BookStack\\Page', 20, 1),
(24040, 'certain', 'BookStack\\Page', 20, 1),
(24041, 'date', 'BookStack\\Page', 20, 1),
(24042, 'Branches', 'BookStack\\Page', 20, 4),
(24043, '--show-current', 'BookStack\\Page', 20, 1),
(24044, 'Working', 'BookStack\\Page', 20, 4),
(24045, 'Changes', 'BookStack\\Page', 20, 4),
(24046, 'checkout', 'BookStack\\Page', 20, 1),
(24047, 'Discard', 'BookStack\\Page', 20, 1),
(24048, 'Use -p', 'BookStack\\Page', 20, 1),
(24049, 'discarding', 'BookStack\\Page', 20, 1),
(24050, '-fd', 'BookStack\\Page', 20, 1),
(24051, 'Deletes', 'BookStack\\Page', 20, 1),
(24052, 'untracked', 'BookStack\\Page', 20, 1),
(24053, 'cherry-pick commit -', 'BookStack\\Page', 20, 1),
(24054, 'specific', 'BookStack\\Page', 20, 1),
(24055, 'bisect', 'BookStack\\Page', 20, 7),
(24056, 'Use', 'BookStack\\Page', 20, 1),
(24057, 'binary', 'BookStack\\Page', 20, 1),
(24058, 'search', 'BookStack\\Page', 20, 1),
(24059, 'find', 'BookStack\\Page', 20, 1),
(24060, 'introduced', 'BookStack\\Page', 20, 1),
(24061, 'bug', 'BookStack\\Page', 20, 1),
(24062, 'start -', 'BookStack\\Page', 20, 1),
(24063, 'Start', 'BookStack\\Page', 20, 1),
(24064, 'process', 'BookStack\\Page', 20, 2),
(24065, 'reset -', 'BookStack\\Page', 20, 1),
(24066, 'Stop', 'BookStack\\Page', 20, 1),
(24067, 'run script -', 'BookStack\\Page', 20, 1),
(24068, 'Let', 'BookStack\\Page', 20, 1),
(24069, 'run', 'BookStack\\Page', 20, 1),
(24070, 'script', 'BookStack\\Page', 20, 1),
(24071, 'on', 'BookStack\\Page', 20, 1),
(24072, 'iteration', 'BookStack\\Page', 20, 1),
(26726, 'Common', 'BookStack\\Page', 29, 40),
(26727, 'Docker', 'BookStack\\Page', 29, 45),
(26728, 'Commands', 'BookStack\\Page', 29, 40),
(26729, 'Container', 'BookStack\\Page', 29, 3),
(26730, 'docker', 'BookStack\\Page', 29, 61),
(26731, 'container', 'BookStack\\Page', 29, 31),
(26732, 'run\r', 'BookStack\\Page', 29, 1),
(26733, 'Create', 'BookStack\\Page', 29, 8),
(26734, 'and', 'BookStack\\Page', 29, 2),
(26735, 'start', 'BookStack\\Page', 29, 1),
(26736, 'a', 'BookStack\\Page', 29, 43),
(26737, 'from', 'BookStack\\Page', 29, 8),
(26738, 'an', 'BookStack\\Page', 29, 5),
(26739, 'image\r', 'BookStack\\Page', 29, 2),
(26740, '--detach', 'BookStack\\Page', 29, 1),
(26741, '-d', 'BookStack\\Page', 29, 1),
(26742, '\r', 'BookStack\\Page', 29, 21),
(26743, 'Run', 'BookStack\\Page', 29, 3),
(26744, 'the', 'BookStack\\Page', 29, 19),
(26745, 'in', 'BookStack\\Page', 29, 5),
(26746, 'background\r', 'BookStack\\Page', 29, 1),
(26747, '--name\r', 'BookStack\\Page', 29, 1),
(26748, 'Specify', 'BookStack\\Page', 29, 3),
(26749, 'name', 'BookStack\\Page', 29, 1),
(26750, 'for', 'BookStack\\Page', 29, 3),
(26751, 'container\r', 'BookStack\\Page', 29, 8),
(26752, '--publish', 'BookStack\\Page', 29, 1),
(26753, '-p', 'BookStack\\Page', 29, 1),
(26754, 'host_port', 'BookStack\\Page', 29, 1),
(26755, 'container_port\r', 'BookStack\\Page', 29, 1),
(26756, 'Make', 'BookStack\\Page', 29, 1),
(26757, 'port', 'BookStack\\Page', 29, 4),
(26758, 'available', 'BookStack\\Page', 29, 1),
(26759, 'to', 'BookStack\\Page', 29, 10),
(26760, 'services', 'BookStack\\Page', 29, 1),
(26761, 'outside', 'BookStack\\Page', 29, 2),
(26762, 'of', 'BookStack\\Page', 29, 8),
(26763, 'This', 'BookStack\\Page', 29, 2),
(26764, 'creates', 'BookStack\\Page', 29, 1),
(26765, 'firewall', 'BookStack\\Page', 29, 1),
(26766, 'rule', 'BookStack\\Page', 29, 1),
(26767, 'which', 'BookStack\\Page', 29, 1),
(26768, 'maps', 'BookStack\\Page', 29, 1),
(26769, 'on', 'BookStack\\Page', 29, 9),
(26770, 'host', 'BookStack\\Page', 29, 1),
(26771, 'world\r', 'BookStack\\Page', 29, 1),
(26772, '-e \r', 'BookStack\\Page', 29, 1),
(26773, 'Set', 'BookStack\\Page', 29, 1),
(26774, 'environment', 'BookStack\\Page', 29, 1),
(26775, 'variables\r', 'BookStack\\Page', 29, 1),
(26776, '-it\r', 'BookStack\\Page', 29, 2),
(26777, 'Start', 'BookStack\\Page', 29, 3),
(26778, 'new', 'BookStack\\Page', 29, 4),
(26779, 'interactively\r', 'BookStack\\Page', 29, 2),
(26780, '--network\r', 'BookStack\\Page', 29, 1),
(26781, 'network\r', 'BookStack\\Page', 29, 4),
(26782, '--net-alias\r', 'BookStack\\Page', 29, 1),
(26783, 'network', 'BookStack\\Page', 29, 8),
(26784, 'scoped', 'BookStack\\Page', 29, 1),
(26785, 'alias', 'BookStack\\Page', 29, 1),
(26786, 'can', 'BookStack\\Page', 29, 1),
(26787, 'be', 'BookStack\\Page', 29, 1),
(26788, 'used', 'BookStack\\Page', 29, 1),
(26789, 'round', 'BookStack\\Page', 29, 1),
(26790, 'robin', 'BookStack\\Page', 29, 1),
(26791, 'load', 'BookStack\\Page', 29, 1),
(26792, 'balancing', 'BookStack\\Page', 29, 1),
(26793, 'It', 'BookStack\\Page', 29, 1),
(26794, 'works', 'BookStack\\Page', 29, 1),
(26795, 'by', 'BookStack\\Page', 29, 1),
(26796, 'giving', 'BookStack\\Page', 29, 1),
(26797, 'same', 'BookStack\\Page', 29, 1),
(26798, 'DNS', 'BookStack\\Page', 29, 1),
(26799, 'multiple', 'BookStack\\Page', 29, 2),
(26800, 'containers', 'BookStack\\Page', 29, 4),
(26801, 'so', 'BookStack\\Page', 29, 1),
(26802, 'that', 'BookStack\\Page', 29, 2),
(26803, 'if', 'BookStack\\Page', 29, 1),
(26804, 'one', 'BookStack\\Page', 29, 23),
(26805, 'fails', 'BookStack\\Page', 29, 1),
(26806, 'there', 'BookStack\\Page', 29, 1),
(26807, 'are', 'BookStack\\Page', 29, 1),
(26808, 'other', 'BookStack\\Page', 29, 1),
(26809, 'instances', 'BookStack\\Page', 29, 1),
(26810, 'will', 'BookStack\\Page', 29, 1),
(26811, 'still', 'BookStack\\Page', 29, 1),
(26812, 'hopefully', 'BookStack\\Page', 29, 1),
(26813, 'work\r', 'BookStack\\Page', 29, 1),
(26814, '--rm\r', 'BookStack\\Page', 29, 1),
(26815, 'Delete', 'BookStack\\Page', 29, 1),
(26816, 'when', 'BookStack\\Page', 29, 1),
(26817, 'quitting\r', 'BookStack\\Page', 29, 1),
(26818, '-v\r', 'BookStack\\Page', 29, 1),
(26819, 'volume\r', 'BookStack\\Page', 29, 2),
(26820, 'exec\r', 'BookStack\\Page', 29, 1),
(26821, 'command', 'BookStack\\Page', 29, 2),
(26822, 'running', 'BookStack\\Page', 29, 7),
(26823, 'stop', 'BookStack\\Page', 29, 1),
(26824, 'Stop', 'BookStack\\Page', 29, 3),
(26825, 'commit\r', 'BookStack\\Page', 29, 1),
(26826, 'image', 'BookStack\\Page', 29, 13),
(26827, 'container’s', 'BookStack\\Page', 29, 3),
(26828, 'changes\r', 'BookStack\\Page', 29, 1),
(26829, 'cp\r', 'BookStack\\Page', 29, 1),
(26830, 'Copy', 'BookStack\\Page', 29, 1),
(26831, 'files/folders', 'BookStack\\Page', 29, 1),
(26832, 'between', 'BookStack\\Page', 29, 1),
(26833, 'local', 'BookStack\\Page', 29, 2),
(26834, 'filesystem\r', 'BookStack\\Page', 29, 2),
(26835, 'create\r', 'BookStack\\Page', 29, 4),
(26836, 'diff\r', 'BookStack\\Page', 29, 1),
(26837, 'Inspect', 'BookStack\\Page', 29, 1),
(26838, 'changes', 'BookStack\\Page', 29, 2),
(26839, 'files', 'BookStack\\Page', 29, 1),
(26840, 'or', 'BookStack\\Page', 29, 27),
(26841, 'directories', 'BookStack\\Page', 29, 1),
(26842, 'export\r', 'BookStack\\Page', 29, 1),
(26843, 'Export', 'BookStack\\Page', 29, 1),
(26844, 'filesystem', 'BookStack\\Page', 29, 1),
(26845, 'as', 'BookStack\\Page', 29, 1),
(26846, 'tar', 'BookStack\\Page', 29, 1),
(26847, 'archive\r', 'BookStack\\Page', 29, 1),
(26848, 'inspect\r', 'BookStack\\Page', 29, 6),
(26849, 'Display', 'BookStack\\Page', 29, 9),
(26850, 'detailed', 'BookStack\\Page', 29, 6),
(26851, 'information', 'BookStack\\Page', 29, 6),
(26852, 'more', 'BookStack\\Page', 29, 21),
(26853, 'containers\r', 'BookStack\\Page', 29, 9),
(26854, 'kill\r', 'BookStack\\Page', 29, 1),
(26855, 'Kill', 'BookStack\\Page', 29, 1),
(26856, 'logs\r', 'BookStack\\Page', 29, 3),
(26857, 'Fetch', 'BookStack\\Page', 29, 2),
(26858, 'logs', 'BookStack\\Page', 29, 2),
(26859, 'ls\r', 'BookStack\\Page', 29, 7),
(26860, 'List', 'BookStack\\Page', 29, 12),
(26861, '-a\r', 'BookStack\\Page', 29, 1),
(26862, 'all', 'BookStack\\Page', 29, 4),
(26863, 'including', 'BookStack\\Page', 29, 1),
(26864, 'stopped', 'BookStack\\Page', 29, 3),
(26865, 'ones', 'BookStack\\Page', 29, 1),
(26866, 'port\r', 'BookStack\\Page', 29, 1),
(26867, 'mappings', 'BookStack\\Page', 29, 1),
(26868, 'specific', 'BookStack\\Page', 29, 1),
(26869, 'mapping', 'BookStack\\Page', 29, 1),
(26870, 'prune\r', 'BookStack\\Page', 29, 4),
(26871, 'Remove', 'BookStack\\Page', 29, 10),
(26872, 'rename\r', 'BookStack\\Page', 29, 1),
(26873, 'Rename', 'BookStack\\Page', 29, 1),
(26874, 'restart\r', 'BookStack\\Page', 29, 1),
(26875, 'Restart', 'BookStack\\Page', 29, 1),
(26876, 'rm\r', 'BookStack\\Page', 29, 6),
(26877, 'start\r', 'BookStack\\Page', 29, 1),
(26878, 'stats\r', 'BookStack\\Page', 29, 1),
(26879, 'live', 'BookStack\\Page', 29, 1),
(26880, 'stream', 'BookStack\\Page', 29, 1),
(26881, 's', 'BookStack\\Page', 29, 1),
(26882, 'resource', 'BookStack\\Page', 29, 1),
(26883, 'usage', 'BookStack\\Page', 29, 1),
(26884, 'statistics\r', 'BookStack\\Page', 29, 1),
(26885, 'stop\r', 'BookStack\\Page', 29, 1),
(26886, 'top\r', 'BookStack\\Page', 29, 1),
(26887, 'processes', 'BookStack\\Page', 29, 1),
(26888, 'update\r', 'BookStack\\Page', 29, 3),
(26889, 'Update', 'BookStack\\Page', 29, 3),
(26890, 'configuration', 'BookStack\\Page', 29, 1),
(26891, 'Images', 'BookStack\\Page', 29, 3),
(26892, 'build\r', 'BookStack\\Page', 29, 1),
(26893, 'Build', 'BookStack\\Page', 29, 1),
(26894, 'Dockerfile\r', 'BookStack\\Page', 29, 1),
(26895, 'history\r', 'BookStack\\Page', 29, 1),
(26896, 'Show', 'BookStack\\Page', 29, 1),
(26897, 'history', 'BookStack\\Page', 29, 1),
(26898, 'images\r', 'BookStack\\Page', 29, 4),
(26899, 'unused', 'BookStack\\Page', 29, 3),
(26900, 'pull\r', 'BookStack\\Page', 29, 1),
(26901, 'Pull', 'BookStack\\Page', 29, 1),
(26902, 'repository', 'BookStack\\Page', 29, 2),
(26903, 'registry\r', 'BookStack\\Page', 29, 2),
(26904, 'push\r', 'BookStack\\Page', 29, 1),
(26905, 'Push', 'BookStack\\Page', 29, 1),
(26906, 'tag\r', 'BookStack\\Page', 29, 1),
(26907, 'tag', 'BookStack\\Page', 29, 1),
(26908, 'Networks', 'BookStack\\Page', 29, 3),
(26909, 'connect\r', 'BookStack\\Page', 29, 1),
(26910, 'Connect', 'BookStack\\Page', 29, 1),
(26911, 'disconnect\r', 'BookStack\\Page', 29, 1),
(26912, 'Disconnect', 'BookStack\\Page', 29, 1),
(26913, 'networks\r', 'BookStack\\Page', 29, 3),
(26914, 'networks', 'BookStack\\Page', 29, 1),
(26915, 'Volumes', 'BookStack\\Page', 29, 3),
(26916, 'volume', 'BookStack\\Page', 29, 5),
(26917, 'volumes\r', 'BookStack\\Page', 29, 3),
(26918, 'volumes', 'BookStack\\Page', 29, 1),
(26919, 'Compose', 'BookStack\\Page', 29, 3),
(26920, 'docker-compose', 'BookStack\\Page', 29, 5),
(26921, 'up\r', 'BookStack\\Page', 29, 1),
(26922, 'services\r', 'BookStack\\Page', 29, 7),
(26923, 'down\r', 'BookStack\\Page', 29, 1),
(26924, 'ps\r', 'BookStack\\Page', 29, 3),
(26925, 'tops\r', 'BookStack\\Page', 29, 1),
(26926, 'processes\r', 'BookStack\\Page', 29, 1),
(26927, 'compose', 'BookStack\\Page', 29, 2),
(26928, 'projects\r', 'BookStack\\Page', 29, 1),
(26929, 'View', 'BookStack\\Page', 29, 1),
(26930, 'output', 'BookStack\\Page', 29, 1),
(26931, 'Swarm', 'BookStack\\Page', 29, 5),
(26932, 'Nodes', 'BookStack\\Page', 29, 3),
(26933, 'node', 'BookStack\\Page', 29, 8),
(26934, 'demote\r', 'BookStack\\Page', 29, 1),
(26935, 'Demote', 'BookStack\\Page', 29, 1),
(26936, 'nodes', 'BookStack\\Page', 29, 5),
(26937, 'manager', 'BookStack\\Page', 29, 2),
(26938, 'swarm\r', 'BookStack\\Page', 29, 4),
(26939, 'nodes\r', 'BookStack\\Page', 29, 1),
(26940, 'promote\r', 'BookStack\\Page', 29, 1),
(26941, 'Promote', 'BookStack\\Page', 29, 1),
(26942, 'tasks', 'BookStack\\Page', 29, 2),
(26943, 'defaults', 'BookStack\\Page', 29, 1),
(26944, 'current', 'BookStack\\Page', 29, 1),
(26945, 'node\r', 'BookStack\\Page', 29, 1),
(26946, 'Services', 'BookStack\\Page', 29, 3),
(26947, 'service', 'BookStack\\Page', 29, 11),
(26948, 'service\r', 'BookStack\\Page', 29, 1),
(26949, 'task\r', 'BookStack\\Page', 29, 1),
(26950, 'rollback\r', 'BookStack\\Page', 29, 1),
(26951, 'Revert', 'BookStack\\Page', 29, 1),
(26952, 'service’s', 'BookStack\\Page', 29, 1),
(26953, 'configuration\r', 'BookStack\\Page', 29, 1),
(26954, 'scale\r', 'BookStack\\Page', 29, 1),
(26955, 'Scale', 'BookStack\\Page', 29, 1),
(26956, 'replicated', 'BookStack\\Page', 29, 1),
(27171, 'Javascript', 'BookStack\\Book', 10, 48),
(28588, 'Webpack', 'BookStack\\Book', 11, 48),
(31447, 'Configuration', 'BookStack\\Page', 43, 40),
(31448, 'Webpack', 'BookStack\\Page', 43, 1),
(31449, 'is', 'BookStack\\Page', 43, 4),
(31450, 'a', 'BookStack\\Page', 43, 5),
(31451, 'static', 'BookStack\\Page', 43, 1),
(31452, 'module', 'BookStack\\Page', 43, 2),
(31453, 'bundler', 'BookStack\\Page', 43, 1),
(31454, 'for', 'BookStack\\Page', 43, 2),
(31455, 'JavaScript', 'BookStack\\Page', 43, 1),
(31456, 'applications/', 'BookStack\\Page', 43, 1),
(31457, 'it', 'BookStack\\Page', 43, 5),
(31458, 'takes', 'BookStack\\Page', 43, 1),
(31459, 'all', 'BookStack\\Page', 43, 1),
(31460, 'the', 'BookStack\\Page', 43, 12),
(31461, 'code', 'BookStack\\Page', 43, 2),
(31462, 'from', 'BookStack\\Page', 43, 2),
(31463, 'your', 'BookStack\\Page', 43, 1),
(31464, 'application', 'BookStack\\Page', 43, 1),
(31465, 'and', 'BookStack\\Page', 43, 3),
(31466, 'makes', 'BookStack\\Page', 43, 1),
(31467, 'usable', 'BookStack\\Page', 43, 1),
(31468, 'in', 'BookStack\\Page', 43, 1),
(31469, 'web', 'BookStack\\Page', 43, 1),
(31470, 'browser', 'BookStack\\Page', 43, 4),
(31471, ' ', 'BookStack\\Page', 43, 8),
(31472, 'The', 'BookStack\\Page', 43, 1),
(31473, 'entry', 'BookStack\\Page', 43, 1),
(31474, 'object', 'BookStack\\Page', 43, 1),
(31475, 'where', 'BookStack\\Page', 43, 1),
(31476, 'webpack', 'BookStack\\Page', 43, 1),
(31477, 'looks', 'BookStack\\Page', 43, 1),
(31478, 'to', 'BookStack\\Page', 43, 6),
(31479, 'start', 'BookStack\\Page', 43, 1),
(31480, 'building', 'BookStack\\Page', 43, 1),
(31481, 'bundle', 'BookStack\\Page', 43, 2),
(31482, 'Cache', 'BookStack\\Page', 43, 5),
(31483, 'busting', 'BookStack\\Page', 43, 5),
(31484, 'means making', 'BookStack\\Page', 43, 1),
(31485, 'sure', 'BookStack\\Page', 43, 1),
(31486, 'users', 'BookStack\\Page', 43, 1),
(31487, 'loads', 'BookStack\\Page', 43, 1),
(31488, 'newest', 'BookStack\\Page', 43, 1),
(31489, 'version', 'BookStack\\Page', 43, 3),
(31490, 'of', 'BookStack\\Page', 43, 2),
(31491, 'our', 'BookStack\\Page', 43, 2),
(31492, 'app', 'BookStack\\Page', 43, 1),
(31493, 'if', 'BookStack\\Page', 43, 1),
(31494, 'has', 'BookStack\\Page', 43, 2),
(31495, 'been', 'BookStack\\Page', 43, 1),
(31496, 'updated', 'BookStack\\Page', 43, 1),
(31497, 'instead', 'BookStack\\Page', 43, 1),
(31498, 'using', 'BookStack\\Page', 43, 1),
(31499, 'cached', 'BookStack\\Page', 43, 2),
(31500, 'Using', 'BookStack\\Page', 43, 1),
(31501, 'fixed', 'BookStack\\Page', 43, 1),
(31502, 'filename', 'BookStack\\Page', 43, 4),
(31503, 'problematic', 'BookStack\\Page', 43, 1),
(31504, 'because', 'BookStack\\Page', 43, 1),
(31505, 'will', 'BookStack\\Page', 43, 1),
(31506, 'cache', 'BookStack\\Page', 43, 1),
(31507, 'file', 'BookStack\\Page', 43, 2),
(31508, 'use', 'BookStack\\Page', 43, 1),
(31509, 'even', 'BookStack\\Page', 43, 1),
(31510, 'when', 'BookStack\\Page', 43, 1),
(31511, 'changed', 'BookStack\\Page', 43, 1),
(31512, 'What', 'BookStack\\Page', 43, 1),
(31513, 'we', 'BookStack\\Page', 43, 1),
(31514, 'want', 'BookStack\\Page', 43, 1),
(31515, 'do', 'BookStack\\Page', 43, 1),
(31516, 'add', 'BookStack\\Page', 43, 1),
(31517, 'a suffix', 'BookStack\\Page', 43, 1),
(31518, 'change', 'BookStack\\Page', 43, 1),
(31519, 'every', 'BookStack\\Page', 43, 1),
(31520, 'time', 'BookStack\\Page', 43, 1),
(31521, 'changes', 'BookStack\\Page', 43, 1),
(31522, 'const', 'BookStack\\Page', 43, 2),
(31523, 'path', 'BookStack\\Page', 43, 5),
(31524, '=', 'BookStack\\Page', 43, 3),
(31525, 'require', 'BookStack\\Page', 43, 2),
(31526, '\r', 'BookStack\\Page', 43, 12),
(31527, 'HtmlWebpackPlugin', 'BookStack\\Page', 43, 2),
(31528, 'html-webpack-plugin', 'BookStack\\Page', 43, 1),
(31529, 'exports', 'BookStack\\Page', 43, 1),
(31530, 'output', 'BookStack\\Page', 43, 1),
(31531, 'main', 'BookStack\\Page', 43, 1),
(31532, 'contenthash', 'BookStack\\Page', 43, 1),
(31533, 'js', 'BookStack\\Page', 43, 1),
(31534, '/*', 'BookStack\\Page', 43, 1),
(31535, 'We', 'BookStack\\Page', 43, 1),
(31536, 'assign', 'BookStack\\Page', 43, 1),
(31537, 'unique', 'BookStack\\Page', 43, 1),
(31538, 'hash', 'BookStack\\Page', 43, 1),
(31539, 'prevent', 'BookStack\\Page', 43, 1),
(31540, 'caching', 'BookStack\\Page', 43, 1),
(31541, '*/\r', 'BookStack\\Page', 43, 1),
(31542, 'resolve', 'BookStack\\Page', 43, 2),
(31543, '__dirname', 'BookStack\\Page', 43, 2),
(31544, 'build', 'BookStack\\Page', 43, 1),
(31545, 'plugins', 'BookStack\\Page', 43, 1),
(31546, 'new', 'BookStack\\Page', 43, 1),
(31547, 'template', 'BookStack\\Page', 43, 1),
(31548, 'src/template', 'BookStack\\Page', 43, 1),
(31549, 'html', 'BookStack\\Page', 43, 1),
(33626, 'Building', 'BookStack\\Page', 33, 40),
(33627, 'Docker', 'BookStack\\Page', 33, 46),
(33628, 'Projects', 'BookStack\\Page', 33, 40),
(33629, 'Dockerfile', 'BookStack\\Page', 33, 6),
(33630, 'A', 'BookStack\\Page', 33, 1),
(33631, 'is', 'BookStack\\Page', 33, 5),
(33632, 'a', 'BookStack\\Page', 33, 6),
(33633, 'text', 'BookStack\\Page', 33, 1),
(33634, 'document', 'BookStack\\Page', 33, 1),
(33635, 'that', 'BookStack\\Page', 33, 4),
(33636, 'contains', 'BookStack\\Page', 33, 1),
(33637, 'all', 'BookStack\\Page', 33, 2),
(33638, 'the', 'BookStack\\Page', 33, 5),
(33639, 'commands', 'BookStack\\Page', 33, 1),
(33640, 'user', 'BookStack\\Page', 33, 1),
(33641, 'could', 'BookStack\\Page', 33, 1),
(33642, 'call', 'BookStack\\Page', 33, 1),
(33643, 'on', 'BookStack\\Page', 33, 3),
(33644, 'command', 'BookStack\\Page', 33, 2),
(33645, 'line', 'BookStack\\Page', 33, 1),
(33646, 'to', 'BookStack\\Page', 33, 3),
(33647, 'assemble', 'BookStack\\Page', 33, 1),
(33648, 'an', 'BookStack\\Page', 33, 3),
(33649, 'image', 'BookStack\\Page', 33, 5),
(33650, 'Users', 'BookStack\\Page', 33, 1),
(33651, 'can', 'BookStack\\Page', 33, 4),
(33652, 'create', 'BookStack\\Page', 33, 2),
(33653, 'automated', 'BookStack\\Page', 33, 1),
(33654, 'build', 'BookStack\\Page', 33, 4),
(33655, 'executes', 'BookStack\\Page', 33, 1),
(33656, 'several', 'BookStack\\Page', 33, 1),
(33657, 'command-line', 'BookStack\\Page', 33, 1),
(33658, 'instructions', 'BookStack\\Page', 33, 1),
(33659, 'in', 'BookStack\\Page', 33, 2),
(33660, 'succession', 'BookStack\\Page', 33, 1),
(33661, 'Every', 'BookStack\\Page', 33, 1),
(33662, 'container', 'BookStack\\Page', 33, 2),
(33663, 'based', 'BookStack\\Page', 33, 1),
(33664, 'OS', 'BookStack\\Page', 33, 1),
(33665, 'e', 'BookStack\\Page', 33, 1),
(33666, 'g', 'BookStack\\Page', 33, 1),
(33667, 'Alpine', 'BookStack\\Page', 33, 1),
(33668, 'CentOS', 'BookStack\\Page', 33, 1),
(33669, 'or', 'BookStack\\Page', 33, 2),
(33670, 'Ubuntu', 'BookStack\\Page', 33, 1),
(33671, 'They', 'BookStack\\Page', 33, 1),
(33672, 'just', 'BookStack\\Page', 33, 1),
(33673, 'share', 'BookStack\\Page', 33, 2),
(33674, 'host', 'BookStack\\Page', 33, 1),
(33675, 'kernel', 'BookStack\\Page', 33, 1),
(33676, 'but', 'BookStack\\Page', 33, 1),
(33677, 'run', 'BookStack\\Page', 33, 1),
(33678, 'every', 'BookStack\\Page', 33, 1),
(33679, 'user-space', 'BookStack\\Page', 33, 1),
(33680, 'process', 'BookStack\\Page', 33, 1),
(33681, 'separate', 'BookStack\\Page', 33, 1),
(33682, 'name', 'BookStack\\Page', 33, 1),
(33683, 'space', 'BookStack\\Page', 33, 1),
(33684, 'specific', 'BookStack\\Page', 33, 1),
(33685, 'for', 'BookStack\\Page', 33, 1),
(33686, 'Examples', 'BookStack\\Page', 33, 2),
(33687, 'Backend', 'BookStack\\Page', 33, 1),
(33688, 'FROM', 'BookStack\\Page', 33, 2),
(33689, 'php', 'BookStack\\Page', 33, 3),
(33690, '7', 'BookStack\\Page', 33, 1),
(33691, '3\r', 'BookStack\\Page', 33, 1),
(33692, '\r', 'BookStack\\Page', 33, 33),
(33693, 'RUN', 'BookStack\\Page', 33, 5),
(33694, 'apt-get', 'BookStack\\Page', 33, 2),
(33695, 'update', 'BookStack\\Page', 33, 1),
(33696, '-y', 'BookStack\\Page', 33, 2),
(33697, '&&', 'BookStack\\Page', 33, 1),
(33698, 'install', 'BookStack\\Page', 33, 1),
(33699, 'openssl', 'BookStack\\Page', 33, 1),
(33700, 'zip', 'BookStack\\Page', 33, 1),
(33701, 'unzip', 'BookStack\\Page', 33, 1),
(33702, 'git\r', 'BookStack\\Page', 33, 1),
(33703, 'curl', 'BookStack\\Page', 33, 1),
(33704, '-sS', 'BookStack\\Page', 33, 1),
(33705, 'https', 'BookStack\\Page', 33, 1),
(33706, '//getcomposer', 'BookStack\\Page', 33, 1),
(33707, 'org/installer', 'BookStack\\Page', 33, 1),
(33708, '|', 'BookStack\\Page', 33, 1),
(33709, '--', 'BookStack\\Page', 33, 1),
(33710, '--install-dir=/usr/local/bin', 'BookStack\\Page', 33, 1),
(33711, '--filename=composer\r', 'BookStack\\Page', 33, 1),
(33712, 'docker-php-ext-install', 'BookStack\\Page', 33, 1),
(33713, 'pdo', 'BookStack\\Page', 33, 1),
(33714, 'mbstring', 'BookStack\\Page', 33, 1),
(33715, 'pdo_mysql\r', 'BookStack\\Page', 33, 1),
(33716, 'WORKDIR', 'BookStack\\Page', 33, 2),
(33717, '/app/backend\r', 'BookStack\\Page', 33, 2),
(33718, 'COPY', 'BookStack\\Page', 33, 2),
(33719, 'composer', 'BookStack\\Page', 33, 1),
(33720, 'install\r', 'BookStack\\Page', 33, 2),
(33721, 'EXPOSE', 'BookStack\\Page', 33, 2),
(33722, '8000\r', 'BookStack\\Page', 33, 2),
(33723, 'CMD', 'BookStack\\Page', 33, 2),
(33724, 'artisan', 'BookStack\\Page', 33, 1),
(33725, 'serve', 'BookStack\\Page', 33, 1),
(33726, '--host=0', 'BookStack\\Page', 33, 1),
(33727, '0', 'BookStack\\Page', 33, 3),
(33728, 'Frontend', 'BookStack\\Page', 33, 1),
(33729, 'node', 'BookStack\\Page', 33, 1),
(33730, 'alpine\r', 'BookStack\\Page', 33, 1),
(33731, '/app/frontend\r', 'BookStack\\Page', 33, 2),
(33732, 'npm', 'BookStack\\Page', 33, 2),
(33733, '3000\r', 'BookStack\\Page', 33, 2),
(33734, 'start', 'BookStack\\Page', 33, 2),
(33735, 'Compose', 'BookStack\\Page', 33, 5),
(33736, 'Compose is', 'BookStack\\Page', 33, 1),
(33737, 'tool', 'BookStack\\Page', 33, 1),
(33738, 'was', 'BookStack\\Page', 33, 1),
(33739, 'developed', 'BookStack\\Page', 33, 1),
(33740, 'help', 'BookStack\\Page', 33, 1),
(33741, 'define', 'BookStack\\Page', 33, 2),
(33742, 'and', 'BookStack\\Page', 33, 2),
(33743, 'multi-container', 'BookStack\\Page', 33, 1),
(33744, 'applications', 'BookStack\\Page', 33, 1),
(33745, 'With', 'BookStack\\Page', 33, 1),
(33746, 'we', 'BookStack\\Page', 33, 1),
(33747, 'YAML', 'BookStack\\Page', 33, 1),
(33748, 'file', 'BookStack\\Page', 33, 1),
(33749, 'services', 'BookStack\\Page', 33, 2),
(33750, 'with', 'BookStack\\Page', 33, 1),
(33751, 'single', 'BookStack\\Page', 33, 1),
(33752, 'spin', 'BookStack\\Page', 33, 1),
(33753, 'everything', 'BookStack\\Page', 33, 1),
(33754, 'up', 'BookStack\\Page', 33, 1),
(33755, 'tear', 'BookStack\\Page', 33, 1),
(33756, 'it', 'BookStack\\Page', 33, 4),
(33757, 'down', 'BookStack\\Page', 33, 1),
(33758, 'Example', 'BookStack\\Page', 33, 1),
(33759, 'version', 'BookStack\\Page', 33, 1),
(33760, '3', 'BookStack\\Page', 33, 1),
(33761, '9', 'BookStack\\Page', 33, 1),
(33762, 'backend', 'BookStack\\Page', 33, 1),
(33763, 'app-backend', 'BookStack\\Page', 33, 2),
(33764, '#', 'BookStack\\Page', 33, 4),
(33765, 'docker', 'BookStack\\Page', 33, 1),
(33766, 'named', 'BookStack\\Page', 33, 1),
(33767, 'from', 'BookStack\\Page', 33, 2),
(33768, 'instead', 'BookStack\\Page', 33, 1),
(33769, 'of', 'BookStack\\Page', 33, 1),
(33770, 'pulling', 'BookStack\\Page', 33, 1),
(33771, 'Hub\r', 'BookStack\\Page', 33, 1),
(33772, 'context', 'BookStack\\Page', 33, 2),
(33773, '/backend/development\r', 'BookStack\\Page', 33, 1),
(33774, 'dockerfile', 'BookStack\\Page', 33, 2),
(33775, 'Dockerfile\r', 'BookStack\\Page', 33, 2),
(33776, 'environment', 'BookStack\\Page', 33, 2),
(33777, 'DB_HOST', 'BookStack\\Page', 33, 1),
(33778, 'db', 'BookStack\\Page', 33, 3),
(33779, 'since', 'BookStack\\Page', 33, 1),
(33780, 'same', 'BookStack\\Page', 33, 1),
(33781, 'network', 'BookStack\\Page', 33, 1),
(33782, 'resolve', 'BookStack\\Page', 33, 1),
(33783, 'localhost', 'BookStack\\Page', 33, 1),
(33784, 'as', 'BookStack\\Page', 33, 1),
(33785, 'db\r', 'BookStack\\Page', 33, 3),
(33786, 'DB_DATABASE', 'BookStack\\Page', 33, 1),
(33787, 'auth\r', 'BookStack\\Page', 33, 1),
(33788, 'DB_USERNAME', 'BookStack\\Page', 33, 1),
(33789, 'root\r', 'BookStack\\Page', 33, 2),
(33790, 'DB_PASSWORD', 'BookStack\\Page', 33, 1),
(33791, 'ports', 'BookStack\\Page', 33, 2),
(33792, '-', 'BookStack\\Page', 33, 10),
(33793, '8000', 'BookStack\\Page', 33, 1),
(33794, 'depends_on', 'BookStack\\Page', 33, 2),
(33795, 'service', 'BookStack\\Page', 33, 1),
(33796, 'will', 'BookStack\\Page', 33, 1),
(33797, 'only', 'BookStack\\Page', 33, 1),
(33798, 'when', 'BookStack\\Page', 33, 1),
(33799, 'started', 'BookStack\\Page', 33, 1),
(33800, 'successfully\r', 'BookStack\\Page', 33, 1),
(33801, 'volumes', 'BookStack\\Page', 33, 3),
(33802, '/backend/development', 'BookStack\\Page', 33, 1),
(33803, 'networks', 'BookStack\\Page', 33, 4),
(33804, 'app\r', 'BookStack\\Page', 33, 3),
(33805, 'frontend', 'BookStack\\Page', 33, 2),
(33806, '/frontend/resources\r', 'BookStack\\Page', 33, 1),
(33807, 'tty', 'BookStack\\Page', 33, 1),
(33808, 'true', 'BookStack\\Page', 33, 1),
(33809, 'keep', 'BookStack\\Page', 33, 1),
(33810, 'connection', 'BookStack\\Page', 33, 1),
(33811, 'live', 'BookStack\\Page', 33, 1),
(33812, 'while', 'BookStack\\Page', 33, 1),
(33813, 'running\r', 'BookStack\\Page', 33, 1),
(33814, '3000', 'BookStack\\Page', 33, 1),
(33815, '/frontend/resources', 'BookStack\\Page', 33, 1),
(33816, 'mysql-data', 'BookStack\\Page', 33, 2),
(33817, '/var/lib/mysql\r', 'BookStack\\Page', 33, 1),
(33818, 'mysql', 'BookStack\\Page', 33, 1),
(33819, '5', 'BookStack\\Page', 33, 1),
(33820, '7\r', 'BookStack\\Page', 33, 1),
(33821, 'MYSQL_DATABASE', 'BookStack\\Page', 33, 1),
(33822, 'auth', 'BookStack\\Page', 33, 1),
(33823, 'MYSQL_USER', 'BookStack\\Page', 33, 1),
(33824, 'root', 'BookStack\\Page', 33, 3),
(33825, 'MYSQL_PASSWORD', 'BookStack\\Page', 33, 1),
(33826, 'MYSQL_ROOT_PASSWORD', 'BookStack\\Page', 33, 1),
(33827, 'app', 'BookStack\\Page', 33, 1),
(33828, 'driver', 'BookStack\\Page', 33, 1),
(33829, 'bridge\r', 'BookStack\\Page', 33, 1);
INSERT INTO `search_terms` (`id`, `term`, `entity_type`, `entity_id`, `score`) VALUES
(34146, 'Loaders', 'BookStack\\Page', 44, 40),
(34147, 'The', 'BookStack\\Page', 44, 5),
(34148, 'loader', 'BookStack\\Page', 44, 8),
(34149, 'is', 'BookStack\\Page', 44, 7),
(34150, 'responsible', 'BookStack\\Page', 44, 1),
(34151, 'for', 'BookStack\\Page', 44, 6),
(34152, 'parsing/processing', 'BookStack\\Page', 44, 1),
(34153, 'the', 'BookStack\\Page', 44, 17),
(34154, 'resource', 'BookStack\\Page', 44, 5),
(34155, 'which', 'BookStack\\Page', 44, 4),
(34156, 'might', 'BookStack\\Page', 44, 1),
(34157, 'do', 'BookStack\\Page', 44, 1),
(34158, 'any', 'BookStack\\Page', 44, 1),
(34159, 'of', 'BookStack\\Page', 44, 6),
(34160, 'following', 'BookStack\\Page', 44, 2),
(34161, 'Transpile', 'BookStack\\Page', 44, 1),
(34162, 'it', 'BookStack\\Page', 44, 4),
(34163, 'into', 'BookStack\\Page', 44, 4),
(34164, 'another', 'BookStack\\Page', 44, 3),
(34165, 'language', 'BookStack\\Page', 44, 1),
(34166, 'e', 'BookStack\\Page', 44, 3),
(34167, 'g', 'BookStack\\Page', 44, 3),
(34168, 'babel-loader', 'BookStack\\Page', 44, 1),
(34169, '\r', 'BookStack\\Page', 44, 85),
(34170, 'Copy', 'BookStack\\Page', 44, 1),
(34171, 'to', 'BookStack\\Page', 44, 16),
(34172, 'a', 'BookStack\\Page', 44, 11),
(34173, 'specified', 'BookStack\\Page', 44, 1),
(34174, 'location', 'BookStack\\Page', 44, 2),
(34175, 'and', 'BookStack\\Page', 44, 10),
(34176, 'provide', 'BookStack\\Page', 44, 1),
(34177, 'new', 'BookStack\\Page', 44, 5),
(34178, 'as', 'BookStack\\Page', 44, 2),
(34179, 'imported', 'BookStack\\Page', 44, 1),
(34180, 'value', 'BookStack\\Page', 44, 2),
(34181, 'file-loader', 'BookStack\\Page', 44, 2),
(34182, 'Ignore', 'BookStack\\Page', 44, 1),
(34183, 'entirely', 'BookStack\\Page', 44, 1),
(34184, 'ignore-loader', 'BookStack\\Page', 44, 1),
(34185, 'One', 'BookStack\\Page', 44, 1),
(34186, 'thing', 'BookStack\\Page', 44, 1),
(34187, 'that', 'BookStack\\Page', 44, 7),
(34188, 'makes', 'BookStack\\Page', 44, 1),
(34189, 'Webpack', 'BookStack\\Page', 44, 3),
(34190, 'so', 'BookStack\\Page', 44, 2),
(34191, 'powerful', 'BookStack\\Page', 44, 1),
(34192, 'these', 'BookStack\\Page', 44, 2),
(34193, 'loaders', 'BookStack\\Page', 44, 6),
(34194, 'can', 'BookStack\\Page', 44, 5),
(34195, 'find', 'BookStack\\Page', 44, 1),
(34196, 'more', 'BookStack\\Page', 44, 1),
(34197, 'dependent', 'BookStack\\Page', 44, 1),
(34198, 'resources', 'BookStack\\Page', 44, 1),
(34199, 'inside', 'BookStack\\Page', 44, 1),
(34200, 'they', 'BookStack\\Page', 44, 1),
(34201, 're', 'BookStack\\Page', 44, 1),
(34202, 'processing', 'BookStack\\Page', 44, 2),
(34203, 'hand', 'BookStack\\Page', 44, 2),
(34204, 'off', 'BookStack\\Page', 44, 1),
(34205, 'other', 'BookStack\\Page', 44, 1),
(34206, 'So', 'BookStack\\Page', 44, 1),
(34207, 's', 'BookStack\\Page', 44, 2),
(34208, 'plausible', 'BookStack\\Page', 44, 1),
(34209, 'import', 'BookStack\\Page', 44, 1),
(34210, 'an', 'BookStack\\Page', 44, 1),
(34211, 'HTML', 'BookStack\\Page', 44, 3),
(34212, 'file', 'BookStack\\Page', 44, 5),
(34213, 'within', 'BookStack\\Page', 44, 1),
(34214, 'your', 'BookStack\\Page', 44, 3),
(34215, 'javascript', 'BookStack\\Page', 44, 2),
(34216, 'could', 'BookStack\\Page', 44, 2),
(34217, 'reference', 'BookStack\\Page', 44, 1),
(34218, 'then', 'BookStack\\Page', 44, 1),
(34219, 'be', 'BookStack\\Page', 44, 4),
(34220, 'loaded', 'BookStack\\Page', 44, 1),
(34221, 'too', 'BookStack\\Page', 44, 1),
(34222, 'Module', 'BookStack\\Page', 44, 1),
(34223, 'chained', 'BookStack\\Page', 44, 1),
(34224, 'Each', 'BookStack\\Page', 44, 1),
(34225, 'in', 'BookStack\\Page', 44, 5),
(34226, 'chain', 'BookStack\\Page', 44, 3),
(34227, 'applies', 'BookStack\\Page', 44, 1),
(34228, 'transformations', 'BookStack\\Page', 44, 1),
(34229, 'processed', 'BookStack\\Page', 44, 1),
(34230, 'A', 'BookStack\\Page', 44, 1),
(34231, 'executed', 'BookStack\\Page', 44, 1),
(34232, 'reverse', 'BookStack\\Page', 44, 2),
(34233, 'order', 'BookStack\\Page', 44, 4),
(34234, 'first', 'BookStack\\Page', 44, 1),
(34235, 'passes', 'BookStack\\Page', 44, 1),
(34236, 'its', 'BookStack\\Page', 44, 2),
(34237, 'result', 'BookStack\\Page', 44, 1),
(34238, 'next', 'BookStack\\Page', 44, 1),
(34239, 'one', 'BookStack\\Page', 44, 1),
(34240, 'forth', 'BookStack\\Page', 44, 1),
(34241, 'Finally', 'BookStack\\Page', 44, 1),
(34242, 'expects', 'BookStack\\Page', 44, 1),
(34243, 'JavaScript', 'BookStack\\Page', 44, 1),
(34244, 'returned', 'BookStack\\Page', 44, 1),
(34245, 'by', 'BookStack\\Page', 44, 1),
(34246, 'last', 'BookStack\\Page', 44, 1),
(34247, 'essentially', 'BookStack\\Page', 44, 1),
(34248, 'create', 'BookStack\\Page', 44, 1),
(34249, 'pipeline', 'BookStack\\Page', 44, 1),
(34250, 'code', 'BookStack\\Page', 44, 1),
(34251, 'gets', 'BookStack\\Page', 44, 2),
(34252, 'evaluated', 'BookStack\\Page', 44, 1),
(34253, 'listed', 'BookStack\\Page', 44, 2),
(34254, 'For', 'BookStack\\Page', 44, 1),
(34255, 'example', 'BookStack\\Page', 44, 1),
(34256, 'if', 'BookStack\\Page', 44, 1),
(34257, 'our', 'BookStack\\Page', 44, 3),
(34258, 'after babel-loader', 'BookStack\\Page', 44, 1),
(34259, 'will', 'BookStack\\Page', 44, 2),
(34260, 'pass', 'BookStack\\Page', 44, 1),
(34261, 'results', 'BookStack\\Page', 44, 1),
(34262, 'on', 'BookStack\\Page', 44, 2),
(34263, 'to babel-loader', 'BookStack\\Page', 44, 1),
(34264, 'You', 'BookStack\\Page', 44, 1),
(34265, 'look', 'BookStack\\Page', 44, 1),
(34266, 'at', 'BookStack\\Page', 44, 2),
(34267, 'function', 'BookStack\\Page', 44, 1),
(34268, 'some', 'BookStack\\Page', 44, 1),
(34269, 'input', 'BookStack\\Page', 44, 1),
(34270, 'data', 'BookStack\\Page', 44, 1),
(34271, 'usually', 'BookStack\\Page', 44, 1),
(34272, 'or', 'BookStack\\Page', 44, 2),
(34273, 'output', 'BookStack\\Page', 44, 4),
(34274, 'returns', 'BookStack\\Page', 44, 1),
(34275, 'something', 'BookStack\\Page', 44, 1),
(34276, 'Plugins', 'BookStack\\Page', 44, 4),
(34277, 'While', 'BookStack\\Page', 44, 1),
(34278, 'are', 'BookStack\\Page', 44, 1),
(34279, 'used', 'BookStack\\Page', 44, 1),
(34280, 'transform', 'BookStack\\Page', 44, 1),
(34281, 'certain', 'BookStack\\Page', 44, 1),
(34282, 'types', 'BookStack\\Page', 44, 1),
(34283, 'modules', 'BookStack\\Page', 44, 1),
(34284, 'plugins', 'BookStack\\Page', 44, 3),
(34285, 'leveraged', 'BookStack\\Page', 44, 1),
(34286, 'perform', 'BookStack\\Page', 44, 1),
(34287, 'wider', 'BookStack\\Page', 44, 1),
(34288, 'range', 'BookStack\\Page', 44, 1),
(34289, 'tasks', 'BookStack\\Page', 44, 1),
(34290, 'like', 'BookStack\\Page', 44, 1),
(34291, 'bundle', 'BookStack\\Page', 44, 1),
(34292, 'optimisation', 'BookStack\\Page', 44, 1),
(34293, 'asset', 'BookStack\\Page', 44, 1),
(34294, 'management', 'BookStack\\Page', 44, 1),
(34295, 'injection', 'BookStack\\Page', 44, 1),
(34296, 'environment', 'BookStack\\Page', 44, 3),
(34297, 'variables', 'BookStack\\Page', 44, 1),
(34298, 'In', 'BookStack\\Page', 44, 2),
(34299, 'use', 'BookStack\\Page', 44, 6),
(34300, 'plugin', 'BookStack\\Page', 44, 1),
(34301, 'you', 'BookStack\\Page', 44, 2),
(34302, 'need', 'BookStack\\Page', 44, 1),
(34303, 'to require', 'BookStack\\Page', 44, 1),
(34304, ' it', 'BookStack\\Page', 44, 1),
(34305, 'add', 'BookStack\\Page', 44, 1),
(34306, 'the plugins array', 'BookStack\\Page', 44, 1),
(34307, 'HtmlWebpackPlugin', 'BookStack\\Page', 44, 7),
(34308, 'simplifies', 'BookStack\\Page', 44, 1),
(34309, 'creation', 'BookStack\\Page', 44, 1),
(34310, 'files', 'BookStack\\Page', 44, 1),
(34311, 'serve', 'BookStack\\Page', 44, 1),
(34312, 'webpack', 'BookStack\\Page', 44, 11),
(34313, 'bundles', 'BookStack\\Page', 44, 3),
(34314, 'This', 'BookStack\\Page', 44, 2),
(34315, 'especially', 'BookStack\\Page', 44, 1),
(34316, 'useful', 'BookStack\\Page', 44, 1),
(34317, 'include', 'BookStack\\Page', 44, 1),
(34318, 'hash', 'BookStack\\Page', 44, 2),
(34319, 'filename', 'BookStack\\Page', 44, 4),
(34320, 'changes', 'BookStack\\Page', 44, 1),
(34321, 'every', 'BookStack\\Page', 44, 1),
(34322, 'compilation', 'BookStack\\Page', 44, 1),
(34323, 'const', 'BookStack\\Page', 44, 11),
(34324, '=', 'BookStack\\Page', 44, 15),
(34325, 'require', 'BookStack\\Page', 44, 11),
(34326, 'html-webpack-plugin', 'BookStack\\Page', 44, 2),
(34327, 'path', 'BookStack\\Page', 44, 15),
(34328, 'module', 'BookStack\\Page', 44, 6),
(34329, 'exports', 'BookStack\\Page', 44, 4),
(34330, 'entry', 'BookStack\\Page', 44, 2),
(34331, 'index', 'BookStack\\Page', 44, 1),
(34332, 'js', 'BookStack\\Page', 44, 11),
(34333, 'resolve', 'BookStack\\Page', 44, 4),
(34334, '__dirname', 'BookStack\\Page', 44, 4),
(34335, '/dist', 'BookStack\\Page', 44, 1),
(34336, 'index_bundle', 'BookStack\\Page', 44, 2),
(34337, 'generate', 'BookStack\\Page', 44, 1),
(34338, 'dist/index', 'BookStack\\Page', 44, 1),
(34339, 'html containing', 'BookStack\\Page', 44, 1),
(34340, 'DOCTYPE', 'BookStack\\Page', 44, 1),
(34341, 'html', 'BookStack\\Page', 44, 3),
(34342, 'head', 'BookStack\\Page', 44, 1),
(34343, 'meta', 'BookStack\\Page', 44, 1),
(34344, 'charset=', 'BookStack\\Page', 44, 1),
(34345, 'UTF-8', 'BookStack\\Page', 44, 1),
(34346, 'title', 'BookStack\\Page', 44, 1),
(34347, 'App', 'BookStack\\Page', 44, 1),
(34348, '/title', 'BookStack\\Page', 44, 1),
(34349, '/head', 'BookStack\\Page', 44, 1),
(34350, 'body', 'BookStack\\Page', 44, 1),
(34351, 'script', 'BookStack\\Page', 44, 2),
(34352, 'src=', 'BookStack\\Page', 44, 1),
(34353, '/script', 'BookStack\\Page', 44, 1),
(34354, '/body', 'BookStack\\Page', 44, 1),
(34355, '/html', 'BookStack\\Page', 44, 1),
(34356, 'Mode', 'BookStack\\Page', 44, 4),
(34357, 'By', 'BookStack\\Page', 44, 1),
(34358, 'setting', 'BookStack\\Page', 44, 1),
(34359, 'the mode parameter', 'BookStack\\Page', 44, 1),
(34360, 'either development', 'BookStack\\Page', 44, 1),
(34361, ' production or none', 'BookStack\\Page', 44, 1),
(34362, 'enable', 'BookStack\\Page', 44, 1),
(34363, 'built-in', 'BookStack\\Page', 44, 1),
(34364, 'optimisations', 'BookStack\\Page', 44, 1),
(34365, 'correspond', 'BookStack\\Page', 44, 1),
(34366, 'each', 'BookStack\\Page', 44, 2),
(34367, 'default', 'BookStack\\Page', 44, 1),
(34368, 'production', 'BookStack\\Page', 44, 2),
(34369, 'goals', 'BookStack\\Page', 44, 2),
(34370, 'of development and production builds', 'BookStack\\Page', 44, 1),
(34371, 'differ', 'BookStack\\Page', 44, 1),
(34372, 'greatly', 'BookStack\\Page', 44, 1),
(34373, 'In development', 'BookStack\\Page', 44, 1),
(34374, 'we', 'BookStack\\Page', 44, 2),
(34375, 'want', 'BookStack\\Page', 44, 1),
(34376, 'strong', 'BookStack\\Page', 44, 1),
(34377, 'source', 'BookStack\\Page', 44, 2),
(34378, 'mapping', 'BookStack\\Page', 44, 1),
(34379, 'localhost', 'BookStack\\Page', 44, 1),
(34380, 'server', 'BookStack\\Page', 44, 1),
(34381, 'with', 'BookStack\\Page', 44, 1),
(34382, 'live', 'BookStack\\Page', 44, 1),
(34383, 'reloading', 'BookStack\\Page', 44, 1),
(34384, 'hot', 'BookStack\\Page', 44, 1),
(34385, 'replacement', 'BookStack\\Page', 44, 1),
(34386, 'In production', 'BookStack\\Page', 44, 1),
(34387, 'shift', 'BookStack\\Page', 44, 1),
(34388, 'focus', 'BookStack\\Page', 44, 1),
(34389, 'minified', 'BookStack\\Page', 44, 1),
(34390, 'lighter', 'BookStack\\Page', 44, 1),
(34391, 'weight', 'BookStack\\Page', 44, 1),
(34392, 'maps', 'BookStack\\Page', 44, 1),
(34393, 'optimised', 'BookStack\\Page', 44, 1),
(34394, 'assets', 'BookStack\\Page', 44, 1),
(34395, 'improve', 'BookStack\\Page', 44, 1),
(34396, 'load', 'BookStack\\Page', 44, 1),
(34397, 'time', 'BookStack\\Page', 44, 1),
(34398, 'With', 'BookStack\\Page', 44, 1),
(34399, 'this', 'BookStack\\Page', 44, 1),
(34400, 'logical', 'BookStack\\Page', 44, 1),
(34401, 'separation', 'BookStack\\Page', 44, 1),
(34402, 'typically', 'BookStack\\Page', 44, 1),
(34403, 'recommend', 'BookStack\\Page', 44, 1),
(34404, 'writing', 'BookStack\\Page', 44, 1),
(34405, 'separate', 'BookStack\\Page', 44, 1),
(34406, 'configurations', 'BookStack\\Page', 44, 3),
(34407, 'merge', 'BookStack\\Page', 44, 5),
(34408, 'together', 'BookStack\\Page', 44, 1),
(34409, 'we’ll', 'BookStack\\Page', 44, 1),
(34410, 'utility', 'BookStack\\Page', 44, 1),
(34411, 'called webpack-merge', 'BookStack\\Page', 44, 1),
(34412, '/*', 'BookStack\\Page', 44, 6),
(34413, 'dev', 'BookStack\\Page', 44, 2),
(34414, '*/\r', 'BookStack\\Page', 44, 6),
(34415, 'common', 'BookStack\\Page', 44, 7),
(34416, '/webpack', 'BookStack\\Page', 44, 2),
(34417, 'webpack-merge', 'BookStack\\Page', 44, 2),
(34418, 'mode', 'BookStack\\Page', 44, 2),
(34419, 'development', 'BookStack\\Page', 44, 1),
(34420, 'main', 'BookStack\\Page', 44, 2),
(34421, 'build', 'BookStack\\Page', 44, 3),
(34422, 'prod', 'BookStack\\Page', 44, 2),
(34423, 'contenthash', 'BookStack\\Page', 44, 1),
(34424, 'CleanWebpackPlugin', 'BookStack\\Page', 44, 2),
(34425, 'clean-webpack-plugin', 'BookStack\\Page', 44, 1),
(34426, '/src/index', 'BookStack\\Page', 44, 1),
(34427, 'rules', 'BookStack\\Page', 44, 1),
(34428, 'test', 'BookStack\\Page', 44, 3),
(34429, '/\\', 'BookStack\\Page', 44, 3),
(34430, 'scss$/', 'BookStack\\Page', 44, 1),
(34431, 'style-loader', 'BookStack\\Page', 44, 1),
(34432, '3', 'BookStack\\Page', 44, 1),
(34433, 'Inject', 'BookStack\\Page', 44, 1),
(34434, 'styles', 'BookStack\\Page', 44, 1),
(34435, 'DOM', 'BookStack\\Page', 44, 1),
(34436, 'css-loader', 'BookStack\\Page', 44, 1),
(34437, '2', 'BookStack\\Page', 44, 1),
(34438, 'Turn', 'BookStack\\Page', 44, 2),
(34439, 'css', 'BookStack\\Page', 44, 2),
(34440, 'CommonJS', 'BookStack\\Page', 44, 1),
(34441, 'sass-loader', 'BookStack\\Page', 44, 1),
(34442, '1', 'BookStack\\Page', 44, 1),
(34443, 'sass', 'BookStack\\Page', 44, 1),
(34444, 'html$/', 'BookStack\\Page', 44, 1),
(34445, 'html-loader', 'BookStack\\Page', 44, 1),
(34446, 'svg|png|jpg|gif', 'BookStack\\Page', 44, 1),
(34447, '$/', 'BookStack\\Page', 44, 1),
(34448, 'options', 'BookStack\\Page', 44, 1),
(34449, 'name', 'BookStack\\Page', 44, 2),
(34450, 'ext', 'BookStack\\Page', 44, 1),
(34451, 'outputPath', 'BookStack\\Page', 44, 1),
(34452, 'images', 'BookStack\\Page', 44, 1),
(34453, 'template', 'BookStack\\Page', 44, 1),
(34454, 'src/template', 'BookStack\\Page', 44, 1),
(34455, 'Now', 'BookStack\\Page', 44, 1),
(34456, 'let’s', 'BookStack\\Page', 44, 1),
(34457, 'repoint', 'BookStack\\Page', 44, 1),
(34458, 'our scripts to', 'BookStack\\Page', 44, 1),
(34459, 'We', 'BookStack\\Page', 44, 1),
(34460, 'll', 'BookStack\\Page', 44, 1),
(34461, 'the development one', 'BookStack\\Page', 44, 1),
(34462, 'our webpack-dev-server', 'BookStack\\Page', 44, 1),
(34463, ' npm', 'BookStack\\Page', 44, 1),
(34464, 'start', 'BookStack\\Page', 44, 2),
(34465, 'the production one', 'BookStack\\Page', 44, 1),
(34466, 'our npm', 'BookStack\\Page', 44, 1),
(34467, 'run', 'BookStack\\Page', 44, 1),
(34468, 'build script', 'BookStack\\Page', 44, 1),
(34469, 'scripts', 'BookStack\\Page', 44, 1),
(34470, 'webpack-dev-server', 'BookStack\\Page', 44, 1),
(34471, '--open', 'BookStack\\Page', 44, 1),
(34472, '--config', 'BookStack\\Page', 44, 2),
(36349, 'Low', 'BookStack\\Chapter', 1, 48),
(36350, 'Level', 'BookStack\\Chapter', 1, 48),
(36351, 'High', 'BookStack\\Chapter', 2, 48),
(36352, 'Level', 'BookStack\\Chapter', 2, 48),
(36355, 'Modules', 'BookStack\\Page', 47, 45),
(36356, 'Without', 'BookStack\\Page', 47, 1),
(36357, 'module', 'BookStack\\Page', 47, 8),
(36358, 'systems', 'BookStack\\Page', 47, 1),
(36359, 'dependancies', 'BookStack\\Page', 47, 1),
(36360, 'had', 'BookStack\\Page', 47, 2),
(36361, 'to', 'BookStack\\Page', 47, 19),
(36362, 'be', 'BookStack\\Page', 47, 5),
(36363, 'loaded', 'BookStack\\Page', 47, 2),
(36364, 'in', 'BookStack\\Page', 47, 10),
(36365, 'script', 'BookStack\\Page', 47, 2),
(36366, 'tags', 'BookStack\\Page', 47, 1),
(36367, 'the', 'BookStack\\Page', 47, 19),
(36368, 'header', 'BookStack\\Page', 47, 1),
(36369, 'of', 'BookStack\\Page', 47, 9),
(36370, 'an', 'BookStack\\Page', 47, 4),
(36371, 'HTML', 'BookStack\\Page', 47, 2),
(36372, 'file', 'BookStack\\Page', 47, 5),
(36373, 'OR', 'BookStack\\Page', 47, 1),
(36374, 'all', 'BookStack\\Page', 47, 2),
(36375, 'code', 'BookStack\\Page', 47, 6),
(36376, 'lumped', 'BookStack\\Page', 47, 1),
(36377, 'together', 'BookStack\\Page', 47, 1),
(36378, 'which', 'BookStack\\Page', 47, 3),
(36379, 'is', 'BookStack\\Page', 47, 10),
(36380, 'incredibly', 'BookStack\\Page', 47, 1),
(36381, 'slow', 'BookStack\\Page', 47, 1),
(36382, 'and', 'BookStack\\Page', 47, 9),
(36383, 'inefficient', 'BookStack\\Page', 47, 1),
(36384, 'for', 'BookStack\\Page', 47, 6),
(36385, 'loading', 'BookStack\\Page', 47, 2),
(36386, 'Not', 'BookStack\\Page', 47, 1),
(36387, 'mention', 'BookStack\\Page', 47, 1),
(36388, 'your', 'BookStack\\Page', 47, 5),
(36389, 'app', 'BookStack\\Page', 47, 1),
(36390, 'would', 'BookStack\\Page', 47, 1),
(36391, 'completely', 'BookStack\\Page', 47, 1),
(36392, 'crash', 'BookStack\\Page', 47, 1),
(36393, 'if', 'BookStack\\Page', 47, 1),
(36394, 'there', 'BookStack\\Page', 47, 1),
(36395, 'was', 'BookStack\\Page', 47, 2),
(36396, 'a', 'BookStack\\Page', 47, 15),
(36397, 'bug', 'BookStack\\Page', 47, 1),
(36398, 'any', 'BookStack\\Page', 47, 1),
(36399, 'part', 'BookStack\\Page', 47, 1),
(36400, 'JavaScript', 'BookStack\\Page', 47, 3),
(36401, 'designed', 'BookStack\\Page', 47, 1),
(36402, 'only', 'BookStack\\Page', 47, 3),
(36403, 'run', 'BookStack\\Page', 47, 3),
(36404, 'browser', 'BookStack\\Page', 47, 1),
(36405, 'with', 'BookStack\\Page', 47, 7),
(36406, 'no', 'BookStack\\Page', 47, 3),
(36407, 'access', 'BookStack\\Page', 47, 3),
(36408, 'system', 'BookStack\\Page', 47, 2),
(36409, 'client’s', 'BookStack\\Page', 47, 1),
(36410, 'computer', 'BookStack\\Page', 47, 1),
(36411, 'security', 'BookStack\\Page', 47, 1),
(36412, 'reasons', 'BookStack\\Page', 47, 1),
(36413, 'So', 'BookStack\\Page', 47, 1),
(36414, 'longest', 'BookStack\\Page', 47, 1),
(36415, 'time', 'BookStack\\Page', 47, 1),
(36416, 'organising', 'BookStack\\Page', 47, 1),
(36417, 'multiple', 'BookStack\\Page', 47, 1),
(36418, 'files', 'BookStack\\Page', 47, 1),
(36419, 'required', 'BookStack\\Page', 47, 1),
(36420, 'you', 'BookStack\\Page', 47, 4),
(36421, 'load', 'BookStack\\Page', 47, 1),
(36422, 'each', 'BookStack\\Page', 47, 3),
(36423, 'variables', 'BookStack\\Page', 47, 4),
(36424, 'shared', 'BookStack\\Page', 47, 1),
(36425, 'globally', 'BookStack\\Page', 47, 1),
(36426, 'Self-executing', 'BookStack\\Page', 47, 3),
(36427, 'Anonymous', 'BookStack\\Page', 47, 3),
(36428, 'Functions', 'BookStack\\Page', 47, 3),
(36429, 'The', 'BookStack\\Page', 47, 2),
(36430, 'first', 'BookStack\\Page', 47, 1),
(36431, 'step', 'BookStack\\Page', 47, 1),
(36432, 'on', 'BookStack\\Page', 47, 1),
(36433, 'journey', 'BookStack\\Page', 47, 1),
(36434, 'beautiful', 'BookStack\\Page', 47, 1),
(36435, 'modular', 'BookStack\\Page', 47, 1),
(36436, 'learn', 'BookStack\\Page', 47, 1),
(36437, 'art', 'BookStack\\Page', 47, 1),
(36438, 'self-executing', 'BookStack\\Page', 47, 1),
(36439, 'anonymous', 'BookStack\\Page', 47, 1),
(36440, 'function', 'BookStack\\Page', 47, 3),
(36441, 'One', 'BookStack\\Page', 47, 1),
(36442, 'major', 'BookStack\\Page', 47, 1),
(36443, 'benefits', 'BookStack\\Page', 47, 1),
(36444, 'this', 'BookStack\\Page', 47, 3),
(36445, 'pattern', 'BookStack\\Page', 47, 1),
(36446, 'that', 'BookStack\\Page', 47, 2),
(36447, 'can', 'BookStack\\Page', 47, 3),
(36448, 'limit', 'BookStack\\Page', 47, 1),
(36449, 'functions', 'BookStack\\Page', 47, 2),
(36450, 'within', 'BookStack\\Page', 47, 1),
(36451, 'closure', 'BookStack\\Page', 47, 1),
(36452, 'essentially', 'BookStack\\Page', 47, 1),
(36453, 'making', 'BookStack\\Page', 47, 1),
(36454, 'them', 'BookStack\\Page', 47, 1),
(36455, 'private', 'BookStack\\Page', 47, 2),
(36456, 'choosing', 'BookStack\\Page', 47, 1),
(36457, 'expose', 'BookStack\\Page', 47, 1),
(36458, 'API', 'BookStack\\Page', 47, 1),
(36459, 'choice', 'BookStack\\Page', 47, 2),
(36460, 'global', 'BookStack\\Page', 47, 3),
(36461, 'scope', 'BookStack\\Page', 47, 1),
(36462, '\r', 'BookStack\\Page', 47, 38),
(36463, 'var', 'BookStack\\Page', 47, 2),
(36464, 'foo', 'BookStack\\Page', 47, 3),
(36465, '=', 'BookStack\\Page', 47, 20),
(36466, 'Hello', 'BookStack\\Page', 47, 1),
(36467, 'bar', 'BookStack\\Page', 47, 3),
(36468, 'World', 'BookStack\\Page', 47, 1),
(36469, 'baz', 'BookStack\\Page', 47, 6),
(36470, 'return', 'BookStack\\Page', 47, 8),
(36471, '+', 'BookStack\\Page', 47, 5),
(36472, 'window', 'BookStack\\Page', 47, 1),
(36473, '//Assign', 'BookStack\\Page', 47, 1),
(36474, 'variable', 'BookStack\\Page', 47, 1),
(36475, 'console', 'BookStack\\Page', 47, 3),
(36476, 'log', 'BookStack\\Page', 47, 3),
(36477, '//', 'BookStack\\Page', 47, 4),
(36478, 'now', 'BookStack\\Page', 47, 1),
(36479, 'works', 'BookStack\\Page', 47, 3),
(36480, '//It', 'BookStack\\Page', 47, 1),
(36481, 's', 'BookStack\\Page', 47, 1),
(36482, 'important', 'BookStack\\Page', 47, 1),
(36483, 'note', 'BookStack\\Page', 47, 1),
(36484, 'these', 'BookStack\\Page', 47, 1),
(36485, 'still', 'BookStack\\Page', 47, 1),
(36486, 'won', 'BookStack\\Page', 47, 1),
(36487, 't', 'BookStack\\Page', 47, 2),
(36488, 'work', 'BookStack\\Page', 47, 1),
(36489, 'CommonJS', 'BookStack\\Page', 47, 7),
(36490, 'specification', 'BookStack\\Page', 47, 1),
(36491, 'standard', 'BookStack\\Page', 47, 1),
(36492, 'used', 'BookStack\\Page', 47, 2),
(36493, 'node', 'BookStack\\Page', 47, 3),
(36494, 'js', 'BookStack\\Page', 47, 6),
(36495, 'working', 'BookStack\\Page', 47, 1),
(36496, 'modules', 'BookStack\\Page', 47, 9),
(36497, 'allows', 'BookStack\\Page', 47, 1),
(36498, 'encapsulation', 'BookStack\\Page', 47, 1),
(36499, 'as', 'BookStack\\Page', 47, 1),
(36500, 'won’t', 'BookStack\\Page', 47, 1),
(36501, 'conflict', 'BookStack\\Page', 47, 1),
(36502, 'other', 'BookStack\\Page', 47, 2),
(36503, 'when', 'BookStack\\Page', 47, 1),
(36504, 'application', 'BookStack\\Page', 47, 1),
(36505, 'To', 'BookStack\\Page', 47, 1),
(36506, 'use', 'BookStack\\Page', 47, 2),
(36507, 'must', 'BookStack\\Page', 47, 2),
(36508, 'packaged', 'BookStack\\Page', 47, 1),
(36509, 'transpiler', 'BookStack\\Page', 47, 1),
(36510, 'since', 'BookStack\\Page', 47, 2),
(36511, 'browsers', 'BookStack\\Page', 47, 2),
(36512, 'don', 'BookStack\\Page', 47, 1),
(36513, 'support', 'BookStack\\Page', 47, 1),
(36514, 'nameModule', 'BookStack\\Page', 47, 2),
(36515, 'js\r', 'BookStack\\Page', 47, 4),
(36516, 'const', 'BookStack\\Page', 47, 4),
(36517, 'getFullName', 'BookStack\\Page', 47, 3),
(36518, 'name', 'BookStack\\Page', 47, 3),
(36519, 'surname', 'BookStack\\Page', 47, 5),
(36520, 'getSurname', 'BookStack\\Page', 47, 3),
(36521, 'exports', 'BookStack\\Page', 47, 1),
(36522, 'getSurname\r', 'BookStack\\Page', 47, 1),
(36523, 'nameScript', 'BookStack\\Page', 47, 1),
(36524, 'require', 'BookStack\\Page', 47, 1),
(36525, '/nameModule', 'BookStack\\Page', 47, 1),
(36526, 'Howard', 'BookStack\\Page', 47, 1),
(36527, 'Again', 'BookStack\\Page', 47, 1),
(36528, 'how', 'BookStack\\Page', 47, 1),
(36529, 'great', 'BookStack\\Page', 47, 1),
(36530, 'server', 'BookStack\\Page', 47, 2),
(36531, 'side', 'BookStack\\Page', 47, 1),
(36532, 'language', 'BookStack\\Page', 47, 1),
(36533, 'computer’s', 'BookStack\\Page', 47, 1),
(36534, 'Node', 'BookStack\\Page', 47, 1),
(36535, 'also', 'BookStack\\Page', 47, 1),
(36536, 'knows', 'BookStack\\Page', 47, 1),
(36537, 'location', 'BookStack\\Page', 47, 1),
(36538, 'npm', 'BookStack\\Page', 47, 1),
(36539, 'path', 'BookStack\\Page', 47, 1),
(36540, 'so', 'BookStack\\Page', 47, 1),
(36541, 'instead', 'BookStack\\Page', 47, 1),
(36542, 'having', 'BookStack\\Page', 47, 1),
(36543, 'write require', 'BookStack\\Page', 47, 2),
(36544, '/node_modules/moment/min/moment', 'BookStack\\Page', 47, 1),
(36545, 'min', 'BookStack\\Page', 47, 1),
(36546, 'simply', 'BookStack\\Page', 47, 1),
(36547, 'moment', 'BookStack\\Page', 47, 1),
(36548, 'ES6', 'BookStack\\Page', 47, 7),
(36549, 'are', 'BookStack\\Page', 47, 6),
(36550, 'not', 'BookStack\\Page', 47, 1),
(36551, 'supported', 'BookStack\\Page', 47, 1),
(36552, 'For', 'BookStack\\Page', 47, 1),
(36553, 'production', 'BookStack\\Page', 47, 1),
(36554, 'applications', 'BookStack\\Page', 47, 1),
(36555, 'transpilers', 'BookStack\\Page', 47, 1),
(36556, 'like', 'BookStack\\Page', 47, 1),
(36557, 'Webpack', 'BookStack\\Page', 47, 1),
(36558, 'Babel', 'BookStack\\Page', 47, 1),
(36559, 'convert', 'BookStack\\Page', 47, 1),
(36560, 'our', 'BookStack\\Page', 47, 1),
(36561, 'from', 'BookStack\\Page', 47, 2),
(36562, 'ES5', 'BookStack\\Page', 47, 1),
(36563, 'ensure', 'BookStack\\Page', 47, 1),
(36564, 'cross-browser', 'BookStack\\Page', 47, 1),
(36565, 'compatibility', 'BookStack\\Page', 47, 1),
(36566, 'Everything', 'BookStack\\Page', 47, 1),
(36567, 'inside', 'BookStack\\Page', 47, 1),
(36568, 'by', 'BookStack\\Page', 47, 1),
(36569, 'default', 'BookStack\\Page', 47, 1),
(36570, 'runs', 'BookStack\\Page', 47, 1),
(36571, 'strict', 'BookStack\\Page', 47, 2),
(36572, 'mode', 'BookStack\\Page', 47, 1),
(36573, 'there’s', 'BookStack\\Page', 47, 1),
(36574, 'need', 'BookStack\\Page', 47, 1),
(36575, 'for ', 'BookStack\\Page', 47, 1),
(36576, 'Public', 'BookStack\\Page', 47, 1),
(36577, 'classes', 'BookStack\\Page', 47, 1),
(36578, 'exposed', 'BookStack\\Page', 47, 1),
(36579, 'using export', 'BookStack\\Page', 47, 1),
(36580, 'Exposed', 'BookStack\\Page', 47, 1),
(36581, 'called', 'BookStack\\Page', 47, 1),
(36582, 'into', 'BookStack\\Page', 47, 1),
(36583, 'using import\r', 'BookStack\\Page', 47, 1),
(36584, 'included', 'BookStack\\Page', 47, 1),
(36585, 'with type=', 'BookStack\\Page', 47, 1),
(36586, 'inline', 'BookStack\\Page', 47, 1),
(36587, 'or', 'BookStack\\Page', 47, 2),
(36588, 'external', 'BookStack\\Page', 47, 1),
(36589, 'tag', 'BookStack\\Page', 47, 1),
(36590, 'deferred', 'BookStack\\Page', 47, 1),
(36591, 'after', 'BookStack\\Page', 47, 1),
(36592, 'document', 'BookStack\\Page', 47, 1),
(36593, 'math', 'BookStack\\Page', 47, 1),
(36594, 'let', 'BookStack\\Page', 47, 5),
(36595, 'sumAll', 'BookStack\\Page', 47, 3),
(36596, 'b', 'BookStack\\Page', 47, 10),
(36597, 'subtractAll', 'BookStack\\Page', 47, 3),
(36598, '-', 'BookStack\\Page', 47, 1),
(36599, 'divideAll', 'BookStack\\Page', 47, 3),
(36600, '/', 'BookStack\\Page', 47, 1),
(36601, 'multiplyAll', 'BookStack\\Page', 47, 2),
(36602, '*', 'BookStack\\Page', 47, 1),
(36603, 'findModulus', 'BookStack\\Page', 47, 2),
(36604, '%', 'BookStack\\Page', 47, 1),
(36605, 'export', 'BookStack\\Page', 47, 1),
(36606, '//scripts', 'BookStack\\Page', 47, 1),
(36607, 'import', 'BookStack\\Page', 47, 1),
(36608, '/math', 'BookStack\\Page', 47, 1),
(36609, 'If', 'BookStack\\Page', 47, 1),
(36610, 'looking', 'BookStack\\Page', 47, 1),
(36611, 'at', 'BookStack\\Page', 47, 1),
(36612, 'starting', 'BookStack\\Page', 47, 1),
(36613, 'new', 'BookStack\\Page', 47, 1),
(36614, 'project', 'BookStack\\Page', 47, 1),
(36615, 'right', 'BookStack\\Page', 47, 1),
(36616, 'way', 'BookStack\\Page', 47, 1),
(36617, 'go', 'BookStack\\Page', 47, 1),
(36618, 'CommonJS/Node', 'BookStack\\Page', 47, 1),
(36619, 'remains', 'BookStack\\Page', 47, 1),
(37367, 'Javascript', 'BookStack\\Page', 50, 42),
(37368, 'Engine', 'BookStack\\Page', 50, 42),
(37369, 'A', 'BookStack\\Page', 50, 1),
(37370, 'JavaScript', 'BookStack\\Page', 50, 2),
(37371, 'engine', 'BookStack\\Page', 50, 3),
(37372, 'is', 'BookStack\\Page', 50, 6),
(37373, 'a', 'BookStack\\Page', 50, 1),
(37374, 'computer', 'BookStack\\Page', 50, 1),
(37375, 'program', 'BookStack\\Page', 50, 1),
(37376, 'that', 'BookStack\\Page', 50, 2),
(37377, 'executes', 'BookStack\\Page', 50, 1),
(37378, 'code', 'BookStack\\Page', 50, 5),
(37379, 'It', 'BookStack\\Page', 50, 2),
(37380, 'usually', 'BookStack\\Page', 50, 1),
(37381, 'written', 'BookStack\\Page', 50, 1),
(37382, 'in', 'BookStack\\Page', 50, 1),
(37383, 'C', 'BookStack\\Page', 50, 1),
(37384, 'or', 'BookStack\\Page', 50, 2),
(37385, 'C++', 'BookStack\\Page', 50, 1),
(37386, 'V8', 'BookStack\\Page', 50, 3),
(37387, 'Most', 'BookStack\\Page', 50, 1),
(37388, 'popular', 'BookStack\\Page', 50, 1),
(37389, 'both', 'BookStack\\Page', 50, 1),
(37390, 'interprets', 'BookStack\\Page', 50, 1),
(37391, 'and', 'BookStack\\Page', 50, 2),
(37392, 'compiles', 'BookStack\\Page', 50, 1),
(37393, 'This', 'BookStack\\Page', 50, 2),
(37394, 'called', 'BookStack\\Page', 50, 1),
(37395, 'JIT', 'BookStack\\Page', 50, 1),
(37396, 'Just-in-time', 'BookStack\\Page', 50, 1),
(37397, 'compilation', 'BookStack\\Page', 50, 1),
(37398, 'Initially', 'BookStack\\Page', 50, 1),
(37399, 'the', 'BookStack\\Page', 50, 8),
(37400, 'gets', 'BookStack\\Page', 50, 4),
(37401, 'set', 'BookStack\\Page', 50, 1),
(37402, 'to', 'BookStack\\Page', 50, 1),
(37403, 'interpreter', 'BookStack\\Page', 50, 1),
(37404, 'Then', 'BookStack\\Page', 50, 1),
(37405, 'profiler', 'BookStack\\Page', 50, 1),
(37406, 'checks', 'BookStack\\Page', 50, 1),
(37407, 'if', 'BookStack\\Page', 50, 2),
(37408, 'ran', 'BookStack\\Page', 50, 2),
(37409, 'multiple', 'BookStack\\Page', 50, 1),
(37410, 'times', 'BookStack\\Page', 50, 2),
(37411, 'it', 'BookStack\\Page', 50, 3),
(37412, 'then', 'BookStack\\Page', 50, 1),
(37413, 'compiled', 'BookStack\\Page', 50, 1),
(37414, 'by', 'BookStack\\Page', 50, 1),
(37415, 'compiler', 'BookStack\\Page', 50, 1),
(37416, 'means', 'BookStack\\Page', 50, 1),
(37417, 'more', 'BookStack\\Page', 50, 1),
(37418, 'faster', 'BookStack\\Page', 50, 1),
(37419, 'Memory', 'BookStack\\Page', 49, 43),
(37420, 'Heap', 'BookStack\\Page', 49, 40),
(37421, 'and', 'BookStack\\Page', 49, 43),
(37422, 'Stack', 'BookStack\\Page', 49, 43),
(37423, 'Javascript', 'BookStack\\Page', 49, 2),
(37424, 'stores', 'BookStack\\Page', 49, 1),
(37425, 'all', 'BookStack\\Page', 49, 1),
(37426, 'variables', 'BookStack\\Page', 49, 1),
(37427, 'in', 'BookStack\\Page', 49, 4),
(37428, 'two', 'BookStack\\Page', 49, 1),
(37429, 'places', 'BookStack\\Page', 49, 2),
(37430, 'Which', 'BookStack\\Page', 49, 1),
(37431, 'of', 'BookStack\\Page', 49, 7),
(37432, 'these', 'BookStack\\Page', 49, 4),
(37433, 'will', 'BookStack\\Page', 49, 3),
(37434, 'be', 'BookStack\\Page', 49, 3),
(37435, 'used', 'BookStack\\Page', 49, 1),
(37436, 'depends', 'BookStack\\Page', 49, 1),
(37437, 'on', 'BookStack\\Page', 49, 1),
(37438, 'what', 'BookStack\\Page', 49, 1),
(37439, 'you', 'BookStack\\Page', 49, 1),
(37440, 'are', 'BookStack\\Page', 49, 1),
(37441, 'currently', 'BookStack\\Page', 49, 1),
(37442, 'working', 'BookStack\\Page', 49, 1),
(37443, 'with', 'BookStack\\Page', 49, 1),
(37444, 'is', 'BookStack\\Page', 49, 9),
(37445, 'a', 'BookStack\\Page', 49, 8),
(37446, 'single', 'BookStack\\Page', 49, 1),
(37447, 'threaded', 'BookStack\\Page', 49, 1),
(37448, 'language', 'BookStack\\Page', 49, 1),
(37449, 'because', 'BookStack\\Page', 49, 1),
(37450, 'it', 'BookStack\\Page', 49, 3),
(37451, 'has', 'BookStack\\Page', 49, 1),
(37452, 'one', 'BookStack\\Page', 49, 2),
(37453, 'stack', 'BookStack\\Page', 49, 4),
(37454, 'heap', 'BookStack\\Page', 49, 4),
(37455, 'A', 'BookStack\\Page', 49, 1),
(37456, 'data', 'BookStack\\Page', 49, 5),
(37457, 'structure', 'BookStack\\Page', 49, 1),
(37458, 'that', 'BookStack\\Page', 49, 3),
(37459, 'JavaScript', 'BookStack\\Page', 49, 2),
(37460, 'uses', 'BookStack\\Page', 49, 1),
(37461, 'to', 'BookStack\\Page', 49, 6),
(37462, 'store', 'BookStack\\Page', 49, 1),
(37463, 'static', 'BookStack\\Page', 49, 2),
(37464, 'Static', 'BookStack\\Page', 49, 1),
(37465, 'where', 'BookStack\\Page', 49, 2),
(37466, 'the', 'BookStack\\Page', 49, 11),
(37467, 'engine', 'BookStack\\Page', 49, 3),
(37468, 'knows', 'BookStack\\Page', 49, 2),
(37469, 'size', 'BookStack\\Page', 49, 2),
(37470, 'at', 'BookStack\\Page', 49, 1),
(37471, 'compile', 'BookStack\\Page', 49, 1),
(37472, 'time', 'BookStack\\Page', 49, 1),
(37473, 'This', 'BookStack\\Page', 49, 1),
(37474, 'includes', 'BookStack\\Page', 49, 1),
(37475, 'strings', 'BookStack\\Page', 49, 1),
(37476, ' numbers', 'BookStack\\Page', 49, 1),
(37477, ' booleans', 'BookStack\\Page', 49, 1),
(37478, ' undefined', 'BookStack\\Page', 49, 1),
(37479, 'and null', 'BookStack\\Page', 49, 1),
(37480, ' and references', 'BookStack\\Page', 49, 1),
(37481, 'which', 'BookStack\\Page', 49, 2),
(37482, 'point', 'BookStack\\Page', 49, 1),
(37483, 'objects', 'BookStack\\Page', 49, 3),
(37484, 'functions', 'BookStack\\Page', 49, 1),
(37485, '\r', 'BookStack\\Page', 49, 6),
(37486, 'Since', 'BookStack\\Page', 49, 1),
(37487, 'won', 'BookStack\\Page', 49, 1),
(37488, 't', 'BookStack\\Page', 49, 2),
(37489, 'change', 'BookStack\\Page', 49, 1),
(37490, 'allocate', 'BookStack\\Page', 49, 2),
(37491, 'fixed', 'BookStack\\Page', 49, 3),
(37492, 'amount', 'BookStack\\Page', 49, 3),
(37493, 'memory', 'BookStack\\Page', 49, 8),
(37494, 'for', 'BookStack\\Page', 49, 4),
(37495, 'each', 'BookStack\\Page', 49, 1),
(37496, 'value', 'BookStack\\Page', 49, 1),
(37497, 'The', 'BookStack\\Page', 49, 3),
(37498, 'process', 'BookStack\\Page', 49, 1),
(37499, 'allocating', 'BookStack\\Page', 49, 1),
(37500, 'right', 'BookStack\\Page', 49, 1),
(37501, 'before', 'BookStack\\Page', 49, 1),
(37502, 'execution', 'BookStack\\Page', 49, 1),
(37503, 'known', 'BookStack\\Page', 49, 1),
(37504, 'as', 'BookStack\\Page', 49, 4),
(37505, 'allocation', 'BookStack\\Page', 49, 2),
(37506, 'Because', 'BookStack\\Page', 49, 1),
(37507, 'allocates', 'BookStack\\Page', 49, 1),
(37508, 'values', 'BookStack\\Page', 49, 2),
(37509, 'there', 'BookStack\\Page', 49, 1),
(37510, 'limit', 'BookStack\\Page', 49, 1),
(37511, 'how', 'BookStack\\Page', 49, 1),
(37512, 'large', 'BookStack\\Page', 49, 1),
(37513, 'primitive', 'BookStack\\Page', 49, 1),
(37514, 'can', 'BookStack\\Page', 49, 2),
(37515, 'Heap ', 'BookStack\\Page', 49, 3),
(37516, 'different', 'BookStack\\Page', 49, 1),
(37517, 'space', 'BookStack\\Page', 49, 2),
(37518, 'storing', 'BookStack\\Page', 49, 1),
(37519, 'stores objects and functions', 'BookStack\\Page', 49, 1),
(37520, 'Unlike', 'BookStack\\Page', 49, 1),
(37521, 'engine doesn', 'BookStack\\Page', 49, 1),
(37522, 'Instead', 'BookStack\\Page', 49, 1),
(37523, 'more', 'BookStack\\Page', 49, 1),
(37524, 'allocated', 'BookStack\\Page', 49, 1),
(37525, 'needed', 'BookStack\\Page', 49, 1),
(37526, 'Allocating', 'BookStack\\Page', 49, 1),
(37527, 'this', 'BookStack\\Page', 49, 1),
(37528, 'way', 'BookStack\\Page', 49, 2),
(37529, 'also', 'BookStack\\Page', 49, 1),
(37530, 'called dynamic', 'BookStack\\Page', 49, 1),
(37531, 'not', 'BookStack\\Page', 49, 1),
(37532, 'ordered', 'BookStack\\Page', 49, 1),
(37533, 'any', 'BookStack\\Page', 49, 1),
(37534, 'particular', 'BookStack\\Page', 49, 1),
(37535, 'why', 'BookStack\\Page', 49, 1),
(37536, 'we', 'BookStack\\Page', 49, 1),
(37537, 'need', 'BookStack\\Page', 49, 1),
(37538, 'keep', 'BookStack\\Page', 49, 1),
(37539, 'reference', 'BookStack\\Page', 49, 1),
(37540, 'You', 'BookStack\\Page', 49, 1),
(37541, 'think', 'BookStack\\Page', 49, 1),
(37542, 'references', 'BookStack\\Page', 49, 1),
(37543, 'addresses', 'BookStack\\Page', 49, 2),
(37544, 'houses', 'BookStack\\Page', 49, 1),
(37545, 'belong', 'BookStack\\Page', 49, 1),
(37546, ' ', 'BookStack\\Page', 49, 1),
(37547, 'PHP', 'BookStack\\Book', 12, 48),
(37746, 'References', 'BookStack\\Page', 51, 40),
(37747, 'PHP', 'BookStack\\Page', 51, 2),
(37748, 'reference', 'BookStack\\Page', 51, 3),
(37749, 'are', 'BookStack\\Page', 51, 2),
(37750, 'the', 'BookStack\\Page', 51, 3),
(37751, 'symbol', 'BookStack\\Page', 51, 2),
(37752, 'table', 'BookStack\\Page', 51, 1),
(37753, 'aliases', 'BookStack\\Page', 51, 1),
(37754, 'by', 'BookStack\\Page', 51, 5),
(37755, 'means', 'BookStack\\Page', 51, 1),
(37756, 'of', 'BookStack\\Page', 51, 6),
(37757, 'which', 'BookStack\\Page', 51, 1),
(37758, 'content', 'BookStack\\Page', 51, 1),
(37759, 'one', 'BookStack\\Page', 51, 28),
(37760, 'variable', 'BookStack\\Page', 51, 9),
(37761, 'can', 'BookStack\\Page', 51, 2),
(37762, 'be', 'BookStack\\Page', 51, 3),
(37763, 'access', 'BookStack\\Page', 51, 1),
(37764, 'different', 'BookStack\\Page', 51, 1),
(37765, 'names', 'BookStack\\Page', 51, 1),
(37766, 'The', 'BookStack\\Page', 51, 2),
(37767, 'explicitly', 'BookStack\\Page', 51, 2),
(37768, 'defined', 'BookStack\\Page', 51, 1),
(37769, 'referenced', 'BookStack\\Page', 51, 1),
(37770, 'needs', 'BookStack\\Page', 51, 1),
(37771, 'to', 'BookStack\\Page', 51, 2),
(37772, 'preceded', 'BookStack\\Page', 51, 1),
(37773, 'ampersand', 'BookStack\\Page', 51, 1),
(37774, '&', 'BookStack\\Page', 51, 2),
(37775, 'functionality', 'BookStack\\Page', 51, 1),
(37776, 'references', 'BookStack\\Page', 51, 1),
(37777, 'explained', 'BookStack\\Page', 51, 1),
(37778, 'using', 'BookStack\\Page', 51, 1),
(37779, 'analogy', 'BookStack\\Page', 51, 1),
(37780, 'Window’s', 'BookStack\\Page', 51, 1),
(37781, 'shortcut', 'BookStack\\Page', 51, 1),
(37782, 'Objects', 'BookStack\\Page', 51, 1),
(37783, 'passed', 'BookStack\\Page', 51, 2),
(37784, 'Everything', 'BookStack\\Page', 51, 1),
(37785, 'else', 'BookStack\\Page', 51, 1),
(37786, 'is', 'BookStack\\Page', 51, 15),
(37787, 'value', 'BookStack\\Page', 51, 8),
(37788, 'unless', 'BookStack\\Page', 51, 1),
(37789, 'you', 'BookStack\\Page', 51, 1),
(37790, 'use pass-by-reference', 'BookStack\\Page', 51, 1),
(37791, 'with', 'BookStack\\Page', 51, 1),
(37792, 'operator', 'BookStack\\Page', 51, 1),
(37793, 'Example', 'BookStack\\Page', 51, 1),
(37794, 'php\r', 'BookStack\\Page', 51, 1),
(37795, '/*', 'BookStack\\Page', 51, 7),
(37796, 'Imagine', 'BookStack\\Page', 51, 1),
(37797, 'this', 'BookStack\\Page', 51, 1),
(37798, 'memory', 'BookStack\\Page', 51, 2),
(37799, 'map\r', 'BookStack\\Page', 51, 1),
(37800, '______________________________\r', 'BookStack\\Page', 51, 1),
(37801, '|pointer', 'BookStack\\Page', 51, 7),
(37802, '|', 'BookStack\\Page', 51, 132),
(37803, '|\r', 'BookStack\\Page', 51, 28),
(37804, '-----------------------------------\r', 'BookStack\\Page', 51, 3),
(37805, '1', 'BookStack\\Page', 51, 20),
(37806, 'NULL', 'BookStack\\Page', 51, 13),
(37807, '---', 'BookStack\\Page', 51, 13),
(37808, '2', 'BookStack\\Page', 51, 28),
(37809, '3', 'BookStack\\Page', 51, 14),
(37810, '4', 'BookStack\\Page', 51, 7),
(37811, '5', 'BookStack\\Page', 51, 7),
(37812, '------------------------------------\r', 'BookStack\\Page', 51, 3),
(37813, 'Create', 'BookStack\\Page', 51, 1),
(37814, 'some', 'BookStack\\Page', 51, 1),
(37815, 'variables', 'BookStack\\Page', 51, 1),
(37816, '*/\r', 'BookStack\\Page', 51, 6),
(37817, '$a=10', 'BookStack\\Page', 51, 1),
(37818, '\r', 'BookStack\\Page', 51, 15),
(37819, '$b=20', 'BookStack\\Page', 51, 1),
(37820, '$c=array', 'BookStack\\Page', 51, 1),
(37821, '=', 'BookStack\\Page', 51, 1),
(37822, 'array', 'BookStack\\Page', 51, 1),
(37823, 'Look', 'BookStack\\Page', 51, 5),
(37824, 'at', 'BookStack\\Page', 51, 8),
(37825, 'memory\r', 'BookStack\\Page', 51, 7),
(37826, '_______________________________\r', 'BookStack\\Page', 51, 2),
(37827, 's', 'BookStack\\Page', 51, 6),
(37828, '10', 'BookStack\\Page', 51, 1),
(37829, '$a', 'BookStack\\Page', 51, 11),
(37830, '20', 'BookStack\\Page', 51, 2),
(37831, '$b', 'BookStack\\Page', 51, 10),
(37832, '$c', 'BookStack\\Page', 51, 22),
(37833, '0', 'BookStack\\Page', 51, 6),
(37834, 'do', 'BookStack\\Page', 51, 4),
(37835, '$a=&$c', 'BookStack\\Page', 51, 1),
(37836, '//value', 'BookStack\\Page', 51, 2),
(37837, 'destroyed', 'BookStack\\Page', 51, 3),
(37838, 'and', 'BookStack\\Page', 51, 3),
(37839, 'pointer', 'BookStack\\Page', 51, 6),
(37840, 'free\r', 'BookStack\\Page', 51, 2),
(37841, '//', 'BookStack\\Page', 51, 4),
(37842, 'now', 'BookStack\\Page', 51, 2),
(37843, 'here\r', 'BookStack\\Page', 51, 2),
(37844, '$b=&$a', 'BookStack\\Page', 51, 1),
(37845, 'or', 'BookStack\\Page', 51, 1),
(37846, '$b=&$c', 'BookStack\\Page', 51, 1),
(37847, 'result', 'BookStack\\Page', 51, 1),
(37848, 'same', 'BookStack\\Page', 51, 2),
(37849, 'as', 'BookStack\\Page', 51, 1),
(37850, 'both', 'BookStack\\Page', 51, 1),
(37851, '_________________________________\r', 'BookStack\\Page', 51, 4),
(37852, '--------------------------------------\r', 'BookStack\\Page', 51, 4),
(37853, '|$c', 'BookStack\\Page', 51, 1),
(37854, '---------------------------------------\r', 'BookStack\\Page', 51, 3),
(37855, 'next', 'BookStack\\Page', 51, 3),
(37856, 'unset', 'BookStack\\Page', 51, 3),
(37857, 'not', 'BookStack\\Page', 51, 2),
(37858, 'in', 'BookStack\\Page', 51, 5),
(37859, 'array\r', 'BookStack\\Page', 51, 2),
(37860, '=500', 'BookStack\\Page', 51, 1),
(37861, '//now', 'BookStack\\Page', 51, 1),
(37862, 'it', 'BookStack\\Page', 51, 2),
(37863, '500', 'BookStack\\Page', 51, 1),
(37864, '//created', 'BookStack\\Page', 51, 1),
(37865, 'lands', 'BookStack\\Page', 51, 1),
(37866, 'on', 'BookStack\\Page', 51, 1),
(37867, 'any', 'BookStack\\Page', 51, 1),
(37868, 'free', 'BookStack\\Page', 51, 1),
(37869, '//this', 'BookStack\\Page', 51, 1),
(37870, 'use\r', 'BookStack\\Page', 51, 1),
(37871, 'lets', 'BookStack\\Page', 51, 1),
(37872, 'tray', 'BookStack\\Page', 51, 1),
(37873, 'return', 'BookStack\\Page', 51, 1),
(37874, 'old', 'BookStack\\Page', 51, 1),
(37875, 'an', 'BookStack\\Page', 51, 1),
(37876, 'remove', 'BookStack\\Page', 51, 1),
(37877, '=&$a', 'BookStack\\Page', 51, 1),
(37878, 'look', 'BookStack\\Page', 51, 1),
(37879, '//$c', 'BookStack\\Page', 51, 1),
(37880, 'returned', 'BookStack\\Page', 51, 1),
(37881, 'destroyed\r', 'BookStack\\Page', 51, 1),
(37882, '---------------------------------------', 'BookStack\\Page', 51, 1),
(37885, 'Closures', 'BookStack\\Page', 52, 40),
(37886, ' A', 'BookStack\\Page', 52, 1),
(37887, 'closure', 'BookStack\\Page', 52, 7),
(37888, 'in', 'BookStack\\Page', 52, 3),
(37889, 'PHP', 'BookStack\\Page', 52, 1),
(37890, 'is', 'BookStack\\Page', 52, 8),
(37891, 'a', 'BookStack\\Page', 52, 4),
(37892, 'function', 'BookStack\\Page', 52, 6),
(37893, 'that', 'BookStack\\Page', 52, 3),
(37894, 'can', 'BookStack\\Page', 52, 1),
(37895, 'be', 'BookStack\\Page', 52, 1),
(37896, 'created', 'BookStack\\Page', 52, 1),
(37897, 'without', 'BookStack\\Page', 52, 1),
(37898, 'specified', 'BookStack\\Page', 52, 1),
(37899, 'name', 'BookStack\\Page', 52, 2),
(37900, 'an', 'BookStack\\Page', 52, 1),
(37901, 'anonymous', 'BookStack\\Page', 52, 1),
(37902, 'Their', 'BookStack\\Page', 52, 1),
(37903, 'most', 'BookStack\\Page', 52, 1),
(37904, 'important', 'BookStack\\Page', 52, 1),
(37905, 'use', 'BookStack\\Page', 52, 2),
(37906, 'for', 'BookStack\\Page', 52, 1),
(37907, 'callback', 'BookStack\\Page', 52, 1),
(37908, 'functions', 'BookStack\\Page', 52, 1),
(37909, 'A', 'BookStack\\Page', 52, 1),
(37910, 'encapsulates', 'BookStack\\Page', 52, 1),
(37911, 'its', 'BookStack\\Page', 52, 2),
(37912, 'scope', 'BookStack\\Page', 52, 4),
(37913, 'meaning', 'BookStack\\Page', 52, 1),
(37914, 'it', 'BookStack\\Page', 52, 3),
(37915, 'has', 'BookStack\\Page', 52, 1),
(37916, 'no', 'BookStack\\Page', 52, 1),
(37917, 'access', 'BookStack\\Page', 52, 1),
(37918, 'to', 'BookStack\\Page', 52, 2),
(37919, 'the', 'BookStack\\Page', 52, 10),
(37920, 'which', 'BookStack\\Page', 52, 2),
(37921, 'defined', 'BookStack\\Page', 52, 2),
(37922, 'or', 'BookStack\\Page', 52, 1),
(37923, 'executed', 'BookStack\\Page', 52, 1),
(37924, 'It', 'BookStack\\Page', 52, 1),
(37925, 'however', 'BookStack\\Page', 52, 1),
(37926, 'possible', 'BookStack\\Page', 52, 1),
(37927, 'inherit', 'BookStack\\Page', 52, 1),
(37928, 'variables', 'BookStack\\Page', 52, 2),
(37929, 'from', 'BookStack\\Page', 52, 2),
(37930, 'parent', 'BookStack\\Page', 52, 2),
(37931, 'where', 'BookStack\\Page', 52, 1),
(37932, 'into', 'BookStack\\Page', 52, 1),
(37933, 'with', 'BookStack\\Page', 52, 1),
(37934, 'keyword', 'BookStack\\Page', 52, 1),
(37935, 'This', 'BookStack\\Page', 52, 1),
(37936, 'inherits', 'BookStack\\Page', 52, 1),
(37937, 'by', 'BookStack\\Page', 52, 1),
(37938, 'value', 'BookStack\\Page', 52, 1),
(37939, 'copy', 'BookStack\\Page', 52, 1),
(37940, 'made', 'BookStack\\Page', 52, 1),
(37941, 'available', 'BookStack\\Page', 52, 1),
(37942, 'inside', 'BookStack\\Page', 52, 1),
(37943, 'using', 'BookStack\\Page', 52, 1),
(37944, 'original', 'BookStack\\Page', 52, 1),
(37945, 'Important', 'BookStack\\Page', 52, 1),
(37946, 'notice', 'BookStack\\Page', 52, 1),
(37947, 'The', 'BookStack\\Page', 52, 1),
(37948, 'of', 'BookStack\\Page', 52, 1),
(37949, 'was', 'BookStack\\Page', 52, 2),
(37950, 'declared', 'BookStack\\Page', 52, 1),
(37951, 'not', 'BookStack\\Page', 52, 1),
(37952, 'necessarily', 'BookStack\\Page', 52, 1),
(37953, 'called', 'BookStack\\Page', 52, 1),
(37954, 'php\r', 'BookStack\\Page', 52, 1),
(37955, '\r', 'BookStack\\Page', 52, 16),
(37956, 'class', 'BookStack\\Page', 52, 1),
(37957, 'Test\r', 'BookStack\\Page', 52, 1),
(37958, 'public', 'BookStack\\Page', 52, 1),
(37959, 'testing', 'BookStack\\Page', 52, 2),
(37960, 'return', 'BookStack\\Page', 52, 1),
(37961, 'var_dump', 'BookStack\\Page', 52, 1),
(37962, '$this', 'BookStack\\Page', 52, 1),
(37963, '$object', 'BookStack\\Page', 52, 1),
(37964, '=', 'BookStack\\Page', 52, 2),
(37965, 'new', 'BookStack\\Page', 52, 1),
(37966, 'Test', 'BookStack\\Page', 52, 2),
(37967, '$function', 'BookStack\\Page', 52, 2),
(37968, '$object-', 'BookStack\\Page', 52, 1),
(37969, '//', 'BookStack\\Page', 52, 1),
(37970, 'Output\r', 'BookStack\\Page', 52, 1),
(37971, 'object', 'BookStack\\Page', 52, 1),
(37972, '#1', 'BookStack\\Page', 52, 1),
(37973, '0', 'BookStack\\Page', 52, 1),
(38008, 'Reflection', 'BookStack\\Page', 53, 41),
(38009, 'is', 'BookStack\\Page', 53, 2),
(38010, 'an', 'BookStack\\Page', 53, 1),
(38011, 'API', 'BookStack\\Page', 53, 3),
(38012, 'which', 'BookStack\\Page', 53, 1),
(38013, 'used to', 'BookStack\\Page', 53, 1),
(38014, 'examine', 'BookStack\\Page', 53, 1),
(38015, 'or', 'BookStack\\Page', 53, 1),
(38016, 'modify', 'BookStack\\Page', 53, 1),
(38017, 'the', 'BookStack\\Page', 53, 3),
(38018, 'behaviour', 'BookStack\\Page', 53, 1),
(38019, 'of', 'BookStack\\Page', 53, 1),
(38020, 'methods', 'BookStack\\Page', 53, 3),
(38021, 'classes', 'BookStack\\Page', 53, 3),
(38022, 'interfaces', 'BookStack\\Page', 53, 2),
(38023, 'at', 'BookStack\\Page', 53, 1),
(38024, 'runtime', 'BookStack\\Page', 53, 1),
(38025, 'PHP', 'BookStack\\Page', 53, 1),
(38026, 'comes', 'BookStack\\Page', 53, 1),
(38027, 'with', 'BookStack\\Page', 53, 1),
(38028, 'a', 'BookStack\\Page', 53, 1),
(38029, 'complete', 'BookStack\\Page', 53, 1),
(38030, 'reflection', 'BookStack\\Page', 53, 2),
(38031, 'that', 'BookStack\\Page', 53, 1),
(38032, 'adds', 'BookStack\\Page', 53, 1),
(38033, 'ability', 'BookStack\\Page', 53, 1),
(38034, 'to', 'BookStack\\Page', 53, 2),
(38035, 'introspect', 'BookStack\\Page', 53, 1),
(38036, 'functions', 'BookStack\\Page', 53, 2),
(38037, 'and', 'BookStack\\Page', 53, 2),
(38038, 'extensions', 'BookStack\\Page', 53, 1),
(38039, 'Additionally', 'BookStack\\Page', 53, 1),
(38040, 'offers', 'BookStack\\Page', 53, 1),
(38041, 'ways', 'BookStack\\Page', 53, 1),
(38042, 'retrieve', 'BookStack\\Page', 53, 1),
(38043, 'doc', 'BookStack\\Page', 53, 1),
(38044, 'comments', 'BookStack\\Page', 53, 1),
(38045, 'for', 'BookStack\\Page', 53, 1),
(38046, 'Terminology', 'BookStack\\Page', 30, 40),
(38047, 'Data', 'BookStack\\Page', 30, 1),
(38048, 'Persistence', 'BookStack\\Page', 30, 1),
(38049, '-', 'BookStack\\Page', 30, 3),
(38050, 'The', 'BookStack\\Page', 30, 2),
(38051, 'data', 'BookStack\\Page', 30, 1),
(38052, 'survives', 'BookStack\\Page', 30, 1),
(38053, 'after', 'BookStack\\Page', 30, 1),
(38054, 'the', 'BookStack\\Page', 30, 3),
(38055, 'process', 'BookStack\\Page', 30, 1),
(38056, 'with', 'BookStack\\Page', 30, 2),
(38057, 'which', 'BookStack\\Page', 30, 1),
(38058, 'it', 'BookStack\\Page', 30, 1),
(38059, 'was', 'BookStack\\Page', 30, 1),
(38060, 'created', 'BookStack\\Page', 30, 1),
(38061, 'has', 'BookStack\\Page', 30, 1),
(38062, 'ended', 'BookStack\\Page', 30, 1),
(38063, '\r', 'BookStack\\Page', 30, 3),
(38064, 'Redundancy', 'BookStack\\Page', 30, 1),
(38065, 'duplication', 'BookStack\\Page', 30, 1),
(38066, 'of', 'BookStack\\Page', 30, 4),
(38067, 'critical', 'BookStack\\Page', 30, 1),
(38068, 'components', 'BookStack\\Page', 30, 1),
(38069, 'or', 'BookStack\\Page', 30, 6),
(38070, 'functions', 'BookStack\\Page', 30, 1),
(38071, 'a', 'BookStack\\Page', 30, 1),
(38072, 'system', 'BookStack\\Page', 30, 2),
(38073, 'intention', 'BookStack\\Page', 30, 1),
(38074, 'increasing', 'BookStack\\Page', 30, 1),
(38075, 'reliability', 'BookStack\\Page', 30, 1),
(38076, 'Also', 'BookStack\\Page', 30, 1),
(38077, 'something', 'BookStack\\Page', 30, 3),
(38078, 'that', 'BookStack\\Page', 30, 2),
(38079, 'is', 'BookStack\\Page', 30, 4),
(38080, 'redundant is', 'BookStack\\Page', 30, 1),
(38081, 'no', 'BookStack\\Page', 30, 2),
(38082, 'longer', 'BookStack\\Page', 30, 2),
(38083, 'needed because', 'BookStack\\Page', 30, 1),
(38084, 'its', 'BookStack\\Page', 30, 2),
(38085, 'job', 'BookStack\\Page', 30, 2),
(38086, 'being', 'BookStack\\Page', 30, 1),
(38087, 'done', 'BookStack\\Page', 30, 1),
(38088, 'by', 'BookStack\\Page', 30, 1),
(38089, 'else', 'BookStack\\Page', 30, 1),
(38090, 'because', 'BookStack\\Page', 30, 1),
(38091, 'necessary', 'BookStack\\Page', 30, 1),
(38092, 'useful', 'BookStack\\Page', 30, 1),
(38093, 'Explicit', 'BookStack\\Page', 30, 1),
(38094, 'Describes', 'BookStack\\Page', 30, 1),
(38095, 'very', 'BookStack\\Page', 30, 1),
(38096, 'clear', 'BookStack\\Page', 30, 1),
(38097, 'and', 'BookStack\\Page', 30, 2),
(38098, 'without', 'BookStack\\Page', 30, 1),
(38099, 'vagueness', 'BookStack\\Page', 30, 1),
(38100, 'ambiguity', 'BookStack\\Page', 30, 1),
(38101, 'Implicit -', 'BookStack\\Page', 30, 1),
(38102, 'Not', 'BookStack\\Page', 30, 1),
(38103, 'described', 'BookStack\\Page', 30, 1),
(38104, 'clearly', 'BookStack\\Page', 30, 1),
(38105, 'directly', 'BookStack\\Page', 30, 1),
(38106, 'often', 'BookStack\\Page', 30, 1),
(38107, 'using', 'BookStack\\Page', 30, 1),
(38108, 'implication', 'BookStack\\Page', 30, 1),
(38109, 'assumption', 'BookStack\\Page', 30, 1),
(40396, 'Callbacks', 'BookStack\\Page', 56, 41),
(40397, 'In', 'BookStack\\Page', 56, 1),
(40398, 'JavaScript', 'BookStack\\Page', 56, 1),
(40399, 'functions', 'BookStack\\Page', 56, 8),
(40400, 'are', 'BookStack\\Page', 56, 3),
(40401, 'objects', 'BookStack\\Page', 56, 2),
(40402, 'So', 'BookStack\\Page', 56, 3),
(40403, 'we', 'BookStack\\Page', 56, 1),
(40404, 'can', 'BookStack\\Page', 56, 2),
(40405, 'pass', 'BookStack\\Page', 56, 2),
(40406, 'to', 'BookStack\\Page', 56, 7),
(40407, 'as', 'BookStack\\Page', 56, 2),
(40408, 'parameters', 'BookStack\\Page', 56, 2),
(40409, 'that', 'BookStack\\Page', 56, 2),
(40410, 'you', 'BookStack\\Page', 56, 2),
(40411, 'call', 'BookStack\\Page', 56, 2),
(40412, 'yourself', 'BookStack\\Page', 56, 1),
(40413, 'regular', 'BookStack\\Page', 56, 1),
(40414, 'function', 'BookStack\\Page', 56, 15),
(40415, 'calls', 'BookStack\\Page', 56, 1),
(40416, 'which', 'BookStack\\Page', 56, 1),
(40417, 'always', 'BookStack\\Page', 56, 1),
(40418, 'synchronous', 'BookStack\\Page', 56, 1),
(40419, 'We', 'BookStack\\Page', 56, 1),
(40420, 'also', 'BookStack\\Page', 56, 1),
(40421, 'other', 'BookStack\\Page', 56, 1),
(40422, 'and', 'BookStack\\Page', 56, 2),
(40423, 'them', 'BookStack\\Page', 56, 1),
(40424, 'inside', 'BookStack\\Page', 56, 1),
(40425, 'the', 'BookStack\\Page', 56, 7),
(40426, 'outer', 'BookStack\\Page', 56, 1),
(40427, 'callback', 'BookStack\\Page', 56, 10),
(40428, 'is', 'BookStack\\Page', 56, 6),
(40429, 'a', 'BookStack\\Page', 56, 2),
(40430, 'passed', 'BookStack\\Page', 56, 1),
(40431, 'another', 'BookStack\\Page', 56, 1),
(40432, 'When', 'BookStack\\Page', 56, 1),
(40433, 'first', 'BookStack\\Page', 56, 1),
(40434, 'done', 'BookStack\\Page', 56, 1),
(40435, 'it', 'BookStack\\Page', 56, 3),
(40436, 'will', 'BookStack\\Page', 56, 1),
(40437, 'run', 'BookStack\\Page', 56, 1),
(40438, 'second', 'BookStack\\Page', 56, 1),
(40439, 'Synchronous', 'BookStack\\Page', 56, 1),
(40440, 'CallBackTeaser', 'BookStack\\Page', 56, 2),
(40441, 'param', 'BookStack\\Page', 56, 2),
(40442, '\r', 'BookStack\\Page', 56, 57),
(40443, 'console', 'BookStack\\Page', 56, 11),
(40444, 'log', 'BookStack\\Page', 56, 11),
(40445, 'Calling', 'BookStack\\Page', 56, 2),
(40446, 'Callback', 'BookStack\\Page', 56, 2),
(40447, 'called', 'BookStack\\Page', 56, 2);
INSERT INTO `search_terms` (`id`, `term`, `entity_type`, `entity_id`, `score`) VALUES
(40448, 'consoleMyDetails', 'BookStack\\Page', 56, 2),
(40449, 'person', 'BookStack\\Page', 56, 5),
(40450, 'if', 'BookStack\\Page', 56, 4),
(40451, 'Hi', 'BookStack\\Page', 56, 2),
(40452, 'my', 'BookStack\\Page', 56, 2),
(40453, 'name', 'BookStack\\Page', 56, 4),
(40454, '$', 'BookStack\\Page', 56, 5),
(40455, 'i', 'BookStack\\Page', 56, 2),
(40456, 'am', 'BookStack\\Page', 56, 2),
(40457, 'job', 'BookStack\\Page', 56, 2),
(40458, '&', 'BookStack\\Page', 56, 2),
(40459, 'super', 'BookStack\\Page', 56, 2),
(40460, 'exited', 'BookStack\\Page', 56, 2),
(40461, 'about', 'BookStack\\Page', 56, 2),
(40462, 'hobby', 'BookStack\\Page', 56, 2),
(40463, 'Praveen', 'BookStack\\Page', 56, 2),
(40464, 'Developer', 'BookStack\\Page', 56, 2),
(40465, 'learning', 'BookStack\\Page', 56, 2),
(40466, 'new', 'BookStack\\Page', 56, 2),
(40467, 'technologies', 'BookStack\\Page', 56, 2),
(40468, '/*\r', 'BookStack\\Page', 56, 2),
(40469, 'Output', 'BookStack\\Page', 56, 2),
(40470, 'function\r', 'BookStack\\Page', 56, 1),
(40471, 'called\r', 'BookStack\\Page', 56, 1),
(40472, '*/', 'BookStack\\Page', 56, 2),
(40473, 'Asynchronous', 'BookStack\\Page', 56, 1),
(40474, 'download', 'BookStack\\Page', 56, 2),
(40475, 'url', 'BookStack\\Page', 56, 5),
(40476, 'setTimeout', 'BookStack\\Page', 56, 1),
(40477, '=', 'BookStack\\Page', 56, 4),
(40478, 'Downloading', 'BookStack\\Page', 56, 2),
(40479, '3000', 'BookStack\\Page', 56, 1),
(40480, 'process', 'BookStack\\Page', 56, 2),
(40481, 'picture', 'BookStack\\Page', 56, 2),
(40482, 'Processing', 'BookStack\\Page', 56, 2),
(40483, 'let', 'BookStack\\Page', 56, 1),
(40484, 'https', 'BookStack\\Page', 56, 3),
(40485, '//wwww', 'BookStack\\Page', 56, 1),
(40486, 'javascripttutorial', 'BookStack\\Page', 56, 3),
(40487, 'net/pic', 'BookStack\\Page', 56, 3),
(40488, 'jpg', 'BookStack\\Page', 56, 2),
(40489, '//www', 'BookStack\\Page', 56, 2),
(40490, 'jpg\r', 'BookStack\\Page', 56, 1),
(40491, 'The', 'BookStack\\Page', 56, 1),
(40492, 'problem', 'BookStack\\Page', 56, 1),
(40493, 'with', 'BookStack\\Page', 56, 1),
(40494, 'callbacks', 'BookStack\\Page', 56, 1),
(40495, 'creates', 'BookStack\\Page', 56, 1),
(40496, 'something', 'BookStack\\Page', 56, 1),
(40497, '“Callback', 'BookStack\\Page', 56, 1),
(40498, 'Hell', 'BookStack\\Page', 56, 1),
(40499, '”', 'BookStack\\Page', 56, 1),
(40500, 'Basically', 'BookStack\\Page', 56, 1),
(40501, 'start', 'BookStack\\Page', 56, 1),
(40502, 'nesting', 'BookStack\\Page', 56, 1),
(40503, 'within', 'BookStack\\Page', 56, 2),
(40504, 'starts', 'BookStack\\Page', 56, 1),
(40505, 'get', 'BookStack\\Page', 56, 1),
(40506, 'really', 'BookStack\\Page', 56, 1),
(40507, 'hard', 'BookStack\\Page', 56, 1),
(40508, 'read', 'BookStack\\Page', 56, 1),
(40509, 'code', 'BookStack\\Page', 56, 1),
(40510, 'in', 'BookStack\\Page', 56, 2),
(40511, 'this', 'BookStack\\Page', 56, 3),
(40512, 'situation', 'BookStack\\Page', 56, 1),
(40513, 'Promises', 'BookStack\\Page', 56, 1),
(40514, 'came', 'BookStack\\Page', 56, 1),
(40515, 'handle', 'BookStack\\Page', 56, 1),
(40516, 'nested', 'BookStack\\Page', 56, 1),
(40517, 'better', 'BookStack\\Page', 56, 1),
(40518, 'way', 'BookStack\\Page', 56, 1),
(40519, 'fs', 'BookStack\\Page', 56, 1),
(40520, 'readdir', 'BookStack\\Page', 56, 1),
(40521, 'source', 'BookStack\\Page', 56, 2),
(40522, 'err', 'BookStack\\Page', 56, 9),
(40523, 'files', 'BookStack\\Page', 56, 3),
(40524, 'Error', 'BookStack\\Page', 56, 3),
(40525, 'finding', 'BookStack\\Page', 56, 1),
(40526, '+', 'BookStack\\Page', 56, 15),
(40527, 'else', 'BookStack\\Page', 56, 2),
(40528, 'forEach', 'BookStack\\Page', 56, 2),
(40529, 'filename', 'BookStack\\Page', 56, 6),
(40530, 'fileIndex', 'BookStack\\Page', 56, 1),
(40531, 'gm', 'BookStack\\Page', 56, 1),
(40532, 'size', 'BookStack\\Page', 56, 2),
(40533, 'values', 'BookStack\\Page', 56, 4),
(40534, 'identifying', 'BookStack\\Page', 56, 1),
(40535, 'file', 'BookStack\\Page', 56, 2),
(40536, 'aspect', 'BookStack\\Page', 56, 2),
(40537, 'width', 'BookStack\\Page', 56, 5),
(40538, '/', 'BookStack\\Page', 56, 2),
(40539, 'height', 'BookStack\\Page', 56, 5),
(40540, 'widths', 'BookStack\\Page', 56, 1),
(40541, 'widthIndex', 'BookStack\\Page', 56, 1),
(40542, 'Math', 'BookStack\\Page', 56, 1),
(40543, 'round', 'BookStack\\Page', 56, 1),
(40544, 'resizing', 'BookStack\\Page', 56, 1),
(40545, 'x', 'BookStack\\Page', 56, 1),
(40546, 'resize', 'BookStack\\Page', 56, 1),
(40547, 'write', 'BookStack\\Page', 56, 1),
(40548, 'dest', 'BookStack\\Page', 56, 1),
(40549, 'w', 'BookStack\\Page', 56, 1),
(40550, '_', 'BookStack\\Page', 56, 1),
(40551, 'writing', 'BookStack\\Page', 56, 1),
(40552, 'bind', 'BookStack\\Page', 56, 1),
(41106, 'Aysnc/Await', 'BookStack\\Page', 57, 40),
(41107, 'Declaring', 'BookStack\\Page', 57, 1),
(41108, 'a', 'BookStack\\Page', 57, 4),
(41109, 'function async means', 'BookStack\\Page', 57, 1),
(41110, 'that', 'BookStack\\Page', 57, 2),
(41111, 'it', 'BookStack\\Page', 57, 2),
(41112, 'will', 'BookStack\\Page', 57, 1),
(41113, 'return', 'BookStack\\Page', 57, 2),
(41114, 'the Promise', 'BookStack\\Page', 57, 1),
(41115, 'To', 'BookStack\\Page', 57, 1),
(41116, 'turn', 'BookStack\\Page', 57, 1),
(41117, 'the Promise into', 'BookStack\\Page', 57, 1),
(41118, 'value', 'BookStack\\Page', 57, 6),
(41119, 'you', 'BookStack\\Page', 57, 2),
(41120, 'have', 'BookStack\\Page', 57, 1),
(41121, 'two', 'BookStack\\Page', 57, 1),
(41122, 'options', 'BookStack\\Page', 57, 1),
(41123, 'The', 'BookStack\\Page', 57, 2),
(41124, 'normal', 'BookStack\\Page', 57, 1),
(41125, 'option', 'BookStack\\Page', 57, 1),
(41126, 'is', 'BookStack\\Page', 57, 4),
(41127, 'to', 'BookStack\\Page', 57, 4),
(41128, 'use then', 'BookStack\\Page', 57, 1),
(41129, 'on', 'BookStack\\Page', 57, 2),
(41130, 'getDogsFromApi', 'BookStack\\Page', 57, 2),
(41131, 'then', 'BookStack\\Page', 57, 2),
(41132, '=', 'BookStack\\Page', 57, 5),
(41133, 'console', 'BookStack\\Page', 57, 3),
(41134, 'log', 'BookStack\\Page', 57, 3),
(41135, 'You', 'BookStack\\Page', 57, 1),
(41136, 'can', 'BookStack\\Page', 57, 1),
(41137, 'also', 'BookStack\\Page', 57, 2),
(41138, 'use await', 'BookStack\\Page', 57, 1),
(41139, 'the', 'BookStack\\Page', 57, 5),
(41140, 'function', 'BookStack\\Page', 57, 8),
(41141, 'const', 'BookStack\\Page', 57, 3),
(41142, 'await', 'BookStack\\Page', 57, 5),
(41143, 'keyword', 'BookStack\\Page', 57, 1),
(41144, 'used', 'BookStack\\Page', 57, 3),
(41145, 'in', 'BookStack\\Page', 57, 3),
(41146, 'an', 'BookStack\\Page', 57, 3),
(41147, 'async', 'BookStack\\Page', 57, 7),
(41148, 'ensure', 'BookStack\\Page', 57, 1),
(41149, 'all', 'BookStack\\Page', 57, 1),
(41150, 'promises', 'BookStack\\Page', 57, 1),
(41151, 'returned', 'BookStack\\Page', 57, 1),
(41152, 'are', 'BookStack\\Page', 57, 4),
(41153, 'synchronised', 'BookStack\\Page', 57, 1),
(41154, 'ie', 'BookStack\\Page', 57, 1),
(41155, 'they', 'BookStack\\Page', 57, 1),
(41156, 'wait', 'BookStack\\Page', 57, 1),
(41157, 'for', 'BookStack\\Page', 57, 1),
(41158, 'each', 'BookStack\\Page', 57, 1),
(41159, 'other', 'BookStack\\Page', 57, 1),
(41160, 'Await', 'BookStack\\Page', 57, 1),
(41161, 'eliminates', 'BookStack\\Page', 57, 1),
(41162, 'use', 'BookStack\\Page', 57, 1),
(41163, 'of', 'BookStack\\Page', 57, 3),
(41164, 'callbacks', 'BookStack\\Page', 57, 1),
(41165, 'and', 'BookStack\\Page', 57, 4),
(41166, 'catch', 'BookStack\\Page', 57, 4),
(41167, 'In', 'BookStack\\Page', 57, 1),
(41168, 'using', 'BookStack\\Page', 57, 1),
(41169, 'prepended', 'BookStack\\Page', 57, 2),
(41170, 'when', 'BookStack\\Page', 57, 2),
(41171, 'returning', 'BookStack\\Page', 57, 1),
(41172, 'promise', 'BookStack\\Page', 57, 2),
(41173, 'calling', 'BookStack\\Page', 57, 1),
(41174, 'try', 'BookStack\\Page', 57, 2),
(41175, 'get', 'BookStack\\Page', 57, 2),
(41176, 'rejection', 'BookStack\\Page', 57, 2),
(41177, 'Try', 'BookStack\\Page', 57, 1),
(41178, 'helloPromise', 'BookStack\\Page', 57, 2),
(41179, '\r', 'BookStack\\Page', 57, 20),
(41180, 'new', 'BookStack\\Page', 57, 1),
(41181, 'Promise', 'BookStack\\Page', 57, 1),
(41182, 'resolve', 'BookStack\\Page', 57, 2),
(41183, 'reject', 'BookStack\\Page', 57, 1),
(41184, 'message', 'BookStack\\Page', 57, 5),
(41185, 'Hi', 'BookStack\\Page', 57, 1),
(41186, 'How', 'BookStack\\Page', 57, 1),
(41187, 'demoPromise', 'BookStack\\Page', 57, 2),
(41188, 'let', 'BookStack\\Page', 57, 1),
(41189, 'error', 'BookStack\\Page', 57, 2),
(41190, 'Error', 'BookStack\\Page', 57, 1),
(41191, '+', 'BookStack\\Page', 57, 1),
(41194, 'Proxy', 'BookStack\\Page', 58, 44),
(41195, 'The', 'BookStack\\Page', 58, 4),
(41196, 'object', 'BookStack\\Page', 58, 6),
(41197, 'enables', 'BookStack\\Page', 58, 1),
(41198, 'you', 'BookStack\\Page', 58, 2),
(41199, 'to', 'BookStack\\Page', 58, 4),
(41200, 'create', 'BookStack\\Page', 58, 1),
(41201, 'a', 'BookStack\\Page', 58, 2),
(41202, 'proxy', 'BookStack\\Page', 58, 1),
(41203, 'for', 'BookStack\\Page', 58, 3),
(41204, 'another', 'BookStack\\Page', 58, 1),
(41205, 'which', 'BookStack\\Page', 58, 3),
(41206, 'can', 'BookStack\\Page', 58, 3),
(41207, 'intercept', 'BookStack\\Page', 58, 1),
(41208, 'and', 'BookStack\\Page', 58, 3),
(41209, 'redefine', 'BookStack\\Page', 58, 3),
(41210, 'fundamental', 'BookStack\\Page', 58, 1),
(41211, 'operations', 'BookStack\\Page', 58, 3),
(41212, 'that', 'BookStack\\Page', 58, 2),
(41213, 'A Proxy is', 'BookStack\\Page', 58, 1),
(41214, 'created', 'BookStack\\Page', 58, 1),
(41215, 'with', 'BookStack\\Page', 58, 1),
(41216, 'two', 'BookStack\\Page', 58, 1),
(41217, 'parameters', 'BookStack\\Page', 58, 1),
(41218, 'target', 'BookStack\\Page', 58, 4),
(41219, 'the', 'BookStack\\Page', 58, 7),
(41220, 'original', 'BookStack\\Page', 58, 2),
(41221, 'want', 'BookStack\\Page', 58, 1),
(41222, 'proxy\r', 'BookStack\\Page', 58, 1),
(41223, 'handler', 'BookStack\\Page', 58, 2),
(41224, 'an', 'BookStack\\Page', 58, 5),
(41225, 'defines', 'BookStack\\Page', 58, 1),
(41226, 'will', 'BookStack\\Page', 58, 1),
(41227, 'be', 'BookStack\\Page', 58, 1),
(41228, 'intercepted', 'BookStack\\Page', 58, 2),
(41229, 'how', 'BookStack\\Page', 58, 1),
(41230, 'With', 'BookStack\\Page', 58, 2),
(41231, 'help', 'BookStack\\Page', 58, 1),
(41232, 'of', 'BookStack\\Page', 58, 1),
(41233, 'Reflect', 'BookStack\\Page', 58, 2),
(41234, 'class', 'BookStack\\Page', 58, 1),
(41235, 'we', 'BookStack\\Page', 58, 1),
(41236, 'give', 'BookStack\\Page', 58, 1),
(41237, 'some', 'BookStack\\Page', 58, 1),
(41238, 'accessors', 'BookStack\\Page', 58, 1),
(41239, 'behavior', 'BookStack\\Page', 58, 2),
(41240, 'others', 'BookStack\\Page', 58, 1),
(41241, 'const', 'BookStack\\Page', 58, 4),
(41242, '=', 'BookStack\\Page', 58, 9),
(41243, '\r', 'BookStack\\Page', 58, 36),
(41244, 'message1', 'BookStack\\Page', 58, 2),
(41245, 'hello', 'BookStack\\Page', 58, 1),
(41246, 'message2', 'BookStack\\Page', 58, 3),
(41247, 'everyone', 'BookStack\\Page', 58, 1),
(41248, 'handler3', 'BookStack\\Page', 58, 2),
(41249, 'get', 'BookStack\\Page', 58, 2),
(41250, 'function', 'BookStack\\Page', 58, 2),
(41251, 'prop', 'BookStack\\Page', 58, 5),
(41252, 'receiver', 'BookStack\\Page', 58, 1),
(41253, 'if', 'BookStack\\Page', 58, 4),
(41254, '===', 'BookStack\\Page', 58, 2),
(41255, 'return', 'BookStack\\Page', 58, 3),
(41256, 'world', 'BookStack\\Page', 58, 2),
(41257, 'arguments', 'BookStack\\Page', 58, 1),
(41258, 'proxy3', 'BookStack\\Page', 58, 3),
(41259, 'new', 'BookStack\\Page', 58, 4),
(41260, 'console', 'BookStack\\Page', 58, 3),
(41261, 'log', 'BookStack\\Page', 58, 3),
(41262, '//', 'BookStack\\Page', 58, 7),
(41263, 'hello\r', 'BookStack\\Page', 58, 1),
(41264, ' you', 'BookStack\\Page', 58, 1),
(41265, 'easily', 'BookStack\\Page', 58, 1),
(41266, 'validate', 'BookStack\\Page', 58, 1),
(41267, 'passed', 'BookStack\\Page', 58, 1),
(41268, 'value', 'BookStack\\Page', 58, 5),
(41269, 'This', 'BookStack\\Page', 58, 1),
(41270, 'example', 'BookStack\\Page', 58, 1),
(41271, 'uses', 'BookStack\\Page', 58, 1),
(41272, 'set', 'BookStack\\Page', 58, 2),
(41273, 'let', 'BookStack\\Page', 58, 1),
(41274, 'validator', 'BookStack\\Page', 58, 2),
(41275, 'obj', 'BookStack\\Page', 58, 2),
(41276, 'age', 'BookStack\\Page', 58, 7),
(41277, 'Number', 'BookStack\\Page', 58, 1),
(41278, 'isInteger', 'BookStack\\Page', 58, 1),
(41279, 'throw', 'BookStack\\Page', 58, 2),
(41280, 'TypeError', 'BookStack\\Page', 58, 1),
(41281, 'is', 'BookStack\\Page', 58, 1),
(41282, 'not', 'BookStack\\Page', 58, 1),
(41283, 'integer', 'BookStack\\Page', 58, 1),
(41284, '200', 'BookStack\\Page', 58, 1),
(41285, 'RangeError', 'BookStack\\Page', 58, 1),
(41286, 'seems', 'BookStack\\Page', 58, 1),
(41287, 'invalid', 'BookStack\\Page', 58, 1),
(41288, 'default', 'BookStack\\Page', 58, 1),
(41289, 'store', 'BookStack\\Page', 58, 1),
(41290, 'value\r', 'BookStack\\Page', 58, 1),
(41291, 'Indicate', 'BookStack\\Page', 58, 1),
(41292, 'success\r', 'BookStack\\Page', 58, 1),
(41293, 'true', 'BookStack\\Page', 58, 1),
(41294, 'person', 'BookStack\\Page', 58, 5),
(41295, '100', 'BookStack\\Page', 58, 1),
(41296, '100\r', 'BookStack\\Page', 58, 1),
(41297, 'young', 'BookStack\\Page', 58, 1),
(41298, 'Throws', 'BookStack\\Page', 58, 2),
(41299, 'exception\r', 'BookStack\\Page', 58, 1),
(41300, '300', 'BookStack\\Page', 58, 1),
(41301, 'exception', 'BookStack\\Page', 58, 1),
(41302, ' ', 'BookStack\\Page', 58, 1),
(41303, 'Promises', 'BookStack\\Page', 55, 42),
(41304, 'are', 'BookStack\\Page', 55, 2),
(41305, 'JavaScript', 'BookStack\\Page', 55, 1),
(41306, 'objects', 'BookStack\\Page', 55, 1),
(41307, 'that represent', 'BookStack\\Page', 55, 1),
(41308, 'an', 'BookStack\\Page', 55, 4),
(41309, 'eventual', 'BookStack\\Page', 55, 1),
(41310, 'completion', 'BookStack\\Page', 55, 2),
(41311, 'or', 'BookStack\\Page', 55, 2),
(41312, 'failure', 'BookStack\\Page', 55, 1),
(41313, 'of', 'BookStack\\Page', 55, 4),
(41314, 'asynchronous', 'BookStack\\Page', 55, 2),
(41315, 'operation', 'BookStack\\Page', 55, 1),
(41316, 'The', 'BookStack\\Page', 55, 2),
(41317, 'output', 'BookStack\\Page', 55, 1),
(41318, 'returned', 'BookStack\\Page', 55, 2),
(41319, 'from', 'BookStack\\Page', 55, 2),
(41320, 'the', 'BookStack\\Page', 55, 13),
(41321, 'promise', 'BookStack\\Page', 55, 10),
(41322, 'is', 'BookStack\\Page', 55, 6),
(41323, 'available', 'BookStack\\Page', 55, 2),
(41324, 'only', 'BookStack\\Page', 55, 2),
(41325, 'inside', 'BookStack\\Page', 55, 2),
(41326, 'resolved', 'BookStack\\Page', 55, 1),
(41327, 'function', 'BookStack\\Page', 55, 13),
(41328, 'This', 'BookStack\\Page', 55, 2),
(41329, 'means', 'BookStack\\Page', 55, 1),
(41330, 'we', 'BookStack\\Page', 55, 4),
(41331, 'always', 'BookStack\\Page', 55, 1),
(41332, 'have', 'BookStack\\Page', 55, 1),
(41333, 'to', 'BookStack\\Page', 55, 4),
(41334, 'use', 'BookStack\\Page', 55, 1),
(41335, 'either', 'BookStack\\Page', 55, 1),
(41336, 'then', 'BookStack\\Page', 55, 12),
(41337, 'wrap', 'BookStack\\Page', 55, 1),
(41338, 'async', 'BookStack\\Page', 55, 2),
(41339, 'and', 'BookStack\\Page', 55, 3),
(41340, 'prefix', 'BookStack\\Page', 55, 1),
(41341, 'it', 'BookStack\\Page', 55, 1),
(41342, 'with', 'BookStack\\Page', 55, 1),
(41343, 'await', 'BookStack\\Page', 55, 2),
(41344, 'get', 'BookStack\\Page', 55, 3),
(41345, 'result', 'BookStack\\Page', 55, 24),
(41346, 'resolveAfter2Seconds', 'BookStack\\Page', 55, 2),
(41347, 'x', 'BookStack\\Page', 55, 6),
(41348, '\r', 'BookStack\\Page', 55, 67),
(41349, 'return', 'BookStack\\Page', 55, 7),
(41350, 'new', 'BookStack\\Page', 55, 7),
(41351, 'Promise', 'BookStack\\Page', 55, 19),
(41352, 'resolve', 'BookStack\\Page', 55, 11),
(41353, '=', 'BookStack\\Page', 55, 18),
(41354, 'setTimeout', 'BookStack\\Page', 55, 3),
(41355, '2000', 'BookStack\\Page', 55, 2),
(41356, 'f1', 'BookStack\\Page', 55, 2),
(41357, 'let', 'BookStack\\Page', 55, 3),
(41358, '10', 'BookStack\\Page', 55, 2),
(41359, 'console', 'BookStack\\Page', 55, 7),
(41360, 'log', 'BookStack\\Page', 55, 7),
(41361, '//', 'BookStack\\Page', 55, 10),
(41362, '10\r', 'BookStack\\Page', 55, 3),
(41363, '-----------------------------\r', 'BookStack\\Page', 55, 1),
(41364, 'var', 'BookStack\\Page', 55, 1),
(41365, 'whatever', 'BookStack\\Page', 55, 1),
(41366, 'passed', 'BookStack\\Page', 55, 1),
(41367, 'in', 'BookStack\\Page', 55, 4),
(41368, 'above', 'BookStack\\Page', 55, 1),
(41369, ' ', 'BookStack\\Page', 55, 1),
(41370, 'A', 'BookStack\\Page', 55, 1),
(41371, 'key', 'BookStack\\Page', 55, 1),
(41372, 'difference', 'BookStack\\Page', 55, 1),
(41373, 'between', 'BookStack\\Page', 55, 1),
(41374, 'two', 'BookStack\\Page', 55, 1),
(41375, 'when', 'BookStack\\Page', 55, 2),
(41376, 'using', 'BookStack\\Page', 55, 1),
(41377, 'callback', 'BookStack\\Page', 55, 5),
(41378, 'approach', 'BookStack\\Page', 55, 1),
(41379, 'we’d', 'BookStack\\Page', 55, 1),
(41380, 'normally', 'BookStack\\Page', 55, 1),
(41381, 'just', 'BookStack\\Page', 55, 1),
(41382, 'pass', 'BookStack\\Page', 55, 1),
(41383, 'a', 'BookStack\\Page', 55, 6),
(41384, 'into', 'BookStack\\Page', 55, 1),
(41385, 'that', 'BookStack\\Page', 55, 1),
(41386, 'would', 'BookStack\\Page', 55, 1),
(41387, 'called', 'BookStack\\Page', 55, 1),
(41388, 'upon', 'BookStack\\Page', 55, 1),
(41389, 'order', 'BookStack\\Page', 55, 1),
(41390, 'something', 'BookStack\\Page', 55, 1),
(41391, 'In', 'BookStack\\Page', 55, 1),
(41392, 'promises', 'BookStack\\Page', 55, 2),
(41393, 'however', 'BookStack\\Page', 55, 1),
(41394, 'you', 'BookStack\\Page', 55, 1),
(41395, 'attach', 'BookStack\\Page', 55, 1),
(41396, 'callbacks', 'BookStack\\Page', 55, 1),
(41397, 'on', 'BookStack\\Page', 55, 1),
(41398, 'object', 'BookStack\\Page', 55, 1),
(41399, 'Callbacks', 'BookStack\\Page', 55, 1),
(41400, 'getMoneyBack', 'BookStack\\Page', 55, 4),
(41401, 'money', 'BookStack\\Page', 55, 12),
(41402, 'if', 'BookStack\\Page', 55, 2),
(41403, 'typeof', 'BookStack\\Page', 55, 2),
(41404, '==', 'BookStack\\Page', 55, 2),
(41405, 'number', 'BookStack\\Page', 55, 4),
(41406, 'null', 'BookStack\\Page', 55, 1),
(41407, 'Error', 'BookStack\\Page', 55, 2),
(41408, 'not', 'BookStack\\Page', 55, 3),
(41409, 'else', 'BookStack\\Page', 55, 2),
(41410, 'const', 'BookStack\\Page', 55, 2),
(41411, '1200', 'BookStack\\Page', 55, 2),
(41412, 'reject', 'BookStack\\Page', 55, 4),
(41413, 'Chaining', 'BookStack\\Page', 55, 3),
(41414, 'chaining', 'BookStack\\Page', 55, 2),
(41415, 'becomes', 'BookStack\\Page', 55, 1),
(41416, 'absolutely', 'BookStack\\Page', 55, 1),
(41417, 'useful', 'BookStack\\Page', 55, 1),
(41418, 'need', 'BookStack\\Page', 55, 1),
(41419, 'execute', 'BookStack\\Page', 55, 1),
(41420, 'chain', 'BookStack\\Page', 55, 2),
(41421, 'tasks', 'BookStack\\Page', 55, 1),
(41422, 'Each', 'BookStack\\Page', 55, 1),
(41423, 'task', 'BookStack\\Page', 55, 2),
(41424, 'that’s', 'BookStack\\Page', 55, 1),
(41425, 'being', 'BookStack\\Page', 55, 1),
(41426, 'chained', 'BookStack\\Page', 55, 1),
(41427, 'can', 'BookStack\\Page', 55, 2),
(41428, 'start', 'BookStack\\Page', 55, 1),
(41429, 'as', 'BookStack\\Page', 55, 2),
(41430, 'soon', 'BookStack\\Page', 55, 1),
(41431, 'previous', 'BookStack\\Page', 55, 1),
(41432, 'has', 'BookStack\\Page', 55, 1),
(41433, 'completed', 'BookStack\\Page', 55, 1),
(41434, 'controlled', 'BookStack\\Page', 55, 1),
(41435, 'by', 'BookStack\\Page', 55, 1),
(41436, 'the ', 'BookStack\\Page', 55, 1),
(41437, 'then of', 'BookStack\\Page', 55, 1),
(41438, 'add', 'BookStack\\Page', 55, 3),
(41439, 'num1', 'BookStack\\Page', 55, 2),
(41440, 'num2', 'BookStack\\Page', 55, 2),
(41441, '+', 'BookStack\\Page', 55, 2),
(41442, '2', 'BookStack\\Page', 55, 4),
(41443, '4', 'BookStack\\Page', 55, 1),
(41444, '6\r', 'BookStack\\Page', 55, 1),
(41445, '16\r', 'BookStack\\Page', 55, 2),
(41446, 'result\r', 'BookStack\\Page', 55, 1),
(41447, 'Technically', 'BookStack\\Page', 55, 1),
(41448, 'also', 'BookStack\\Page', 55, 1),
(41449, 'many ', 'BookStack\\Page', 55, 1),
(41450, 'then to', 'BookStack\\Page', 55, 1),
(41451, 'single', 'BookStack\\Page', 55, 1),
(41452, '1', 'BookStack\\Page', 55, 1),
(41453, '1000', 'BookStack\\Page', 55, 1),
(41454, 'alert', 'BookStack\\Page', 55, 3),
(41455, '1\r', 'BookStack\\Page', 55, 3),
(41456, '*', 'BookStack\\Page', 55, 3),
(41457, 'API', 'BookStack\\Page', 55, 4),
(41458, 'Apart', 'BookStack\\Page', 55, 1),
(41459, 'handler', 'BookStack\\Page', 55, 1),
(41460, 'methods', 'BookStack\\Page', 55, 3),
(41461, 'catch', 'BookStack\\Page', 55, 1),
(41462, 'finally', 'BookStack\\Page', 55, 1),
(41463, 'there', 'BookStack\\Page', 55, 1),
(41464, 'six', 'BookStack\\Page', 55, 1),
(41465, 'static', 'BookStack\\Page', 55, 1),
(41466, 'first', 'BookStack\\Page', 55, 1),
(41467, 'four', 'BookStack\\Page', 55, 1),
(41468, 'accept', 'BookStack\\Page', 55, 1),
(41469, 'array', 'BookStack\\Page', 55, 1),
(41470, 'run', 'BookStack\\Page', 55, 1),
(41471, 'them', 'BookStack\\Page', 55, 1),
(41472, 'parallel', 'BookStack\\Page', 55, 1),
(41473, 'all\r', 'BookStack\\Page', 55, 1),
(41474, 'any\r', 'BookStack\\Page', 55, 1),
(41475, 'allSettled\r', 'BookStack\\Page', 55, 1),
(41476, 'race\r', 'BookStack\\Page', 55, 1),
(41477, 'resolve\r', 'BookStack\\Page', 55, 1),
(41530, 'Generators', 'BookStack\\Page', 59, 41),
(41531, 'Iterators', 'BookStack\\Page', 59, 1),
(41532, 'and', 'BookStack\\Page', 59, 2),
(41533, 'bring', 'BookStack\\Page', 59, 1),
(41534, 'the', 'BookStack\\Page', 59, 5),
(41535, 'concept', 'BookStack\\Page', 59, 1),
(41536, 'of', 'BookStack\\Page', 59, 2),
(41537, 'iteration', 'BookStack\\Page', 59, 1),
(41538, 'directly', 'BookStack\\Page', 59, 1),
(41539, 'into', 'BookStack\\Page', 59, 1),
(41540, 'core', 'BookStack\\Page', 59, 1),
(41541, 'language', 'BookStack\\Page', 59, 1),
(41542, 'provide', 'BookStack\\Page', 59, 1),
(41543, 'a', 'BookStack\\Page', 59, 1),
(41544, 'mechanism', 'BookStack\\Page', 59, 1),
(41545, 'for', 'BookStack\\Page', 59, 1),
(41546, 'customising', 'BookStack\\Page', 59, 1),
(41547, 'behavior', 'BookStack\\Page', 59, 1),
(41548, 'loops', 'BookStack\\Page', 59, 1),
(41549, 'function', 'BookStack\\Page', 59, 1),
(41550, '*', 'BookStack\\Page', 59, 1),
(41551, 'generatorFunction', 'BookStack\\Page', 59, 2),
(41552, '//', 'BookStack\\Page', 59, 11),
(41553, 'Line', 'BookStack\\Page', 59, 6),
(41554, '1\r', 'BookStack\\Page', 59, 1),
(41555, 'console', 'BookStack\\Page', 59, 5),
(41556, 'log', 'BookStack\\Page', 59, 5),
(41557, 'This', 'BookStack\\Page', 59, 2),
(41558, 'will', 'BookStack\\Page', 59, 4),
(41559, 'be', 'BookStack\\Page', 59, 4),
(41560, 'executed', 'BookStack\\Page', 59, 2),
(41561, 'first', 'BookStack\\Page', 59, 2),
(41562, '\r', 'BookStack\\Page', 59, 7),
(41563, 'yield', 'BookStack\\Page', 59, 2),
(41564, 'Hello', 'BookStack\\Page', 59, 2),
(41565, '2\r', 'BookStack\\Page', 59, 1),
(41566, 'I', 'BookStack\\Page', 59, 2),
(41567, 'printed', 'BookStack\\Page', 59, 2),
(41568, 'after', 'BookStack\\Page', 59, 2),
(41569, 'pause', 'BookStack\\Page', 59, 1),
(41570, 'World', 'BookStack\\Page', 59, 2),
(41571, 'const', 'BookStack\\Page', 59, 1),
(41572, 'generatorObject', 'BookStack\\Page', 59, 4),
(41573, '=', 'BookStack\\Page', 59, 1),
(41574, '3\r', 'BookStack\\Page', 59, 1),
(41575, 'next', 'BookStack\\Page', 59, 3),
(41576, 'value', 'BookStack\\Page', 59, 3),
(41577, '4\r', 'BookStack\\Page', 59, 1),
(41578, '5\r', 'BookStack\\Page', 59, 1),
(41579, '6\r', 'BookStack\\Page', 59, 1),
(41580, 'pause\r', 'BookStack\\Page', 59, 1),
(41581, 'undefined', 'BookStack\\Page', 59, 1),
(41764, 'Advice', 'BookStack\\Page', 60, 40),
(41765, 'A', 'BookStack\\Page', 60, 1),
(41766, 'common', 'BookStack\\Page', 60, 1),
(41767, 'mistake', 'BookStack\\Page', 60, 1),
(41768, 'I', 'BookStack\\Page', 60, 1),
(41769, 'see', 'BookStack\\Page', 60, 1),
(41770, 'junior', 'BookStack\\Page', 60, 1),
(41771, 'engineers', 'BookStack\\Page', 60, 1),
(41772, 'make', 'BookStack\\Page', 60, 1),
(41773, 'is', 'BookStack\\Page', 60, 2),
(41774, 'that', 'BookStack\\Page', 60, 1),
(41775, 'they', 'BookStack\\Page', 60, 2),
(41776, 'dive', 'BookStack\\Page', 60, 1),
(41777, 'head-first', 'BookStack\\Page', 60, 1),
(41778, 'into', 'BookStack\\Page', 60, 1),
(41779, 'coding', 'BookStack\\Page', 60, 1),
(41780, 'They', 'BookStack\\Page', 60, 1),
(41781, 'stick', 'BookStack\\Page', 60, 1),
(41782, 'with', 'BookStack\\Page', 60, 1),
(41783, 'only', 'BookStack\\Page', 60, 1),
(41784, 'the', 'BookStack\\Page', 60, 4),
(41785, 'tools', 'BookStack\\Page', 60, 1),
(41786, 'know', 'BookStack\\Page', 60, 1),
(41787, 'and', 'BookStack\\Page', 60, 2),
(41788, 'try', 'BookStack\\Page', 60, 1),
(41789, 'to', 'BookStack\\Page', 60, 1),
(41790, 'fit', 'BookStack\\Page', 60, 1),
(41791, 'it', 'BookStack\\Page', 60, 1),
(41792, 'for', 'BookStack\\Page', 60, 2),
(41793, 'every', 'BookStack\\Page', 60, 1),
(41794, 'situation', 'BookStack\\Page', 60, 1),
(41795, 'Using', 'BookStack\\Page', 60, 1),
(41796, 'right', 'BookStack\\Page', 60, 1),
(41797, 'tool', 'BookStack\\Page', 60, 1),
(41798, 'difference', 'BookStack\\Page', 60, 2),
(41799, 'between', 'BookStack\\Page', 60, 1),
(41800, 'laboring', 'BookStack\\Page', 60, 1),
(41801, 'weeks', 'BookStack\\Page', 60, 1),
(41802, 'finishing', 'BookStack\\Page', 60, 1),
(41803, 'a', 'BookStack\\Page', 60, 1),
(41804, 'task', 'BookStack\\Page', 60, 1),
(41805, 'in', 'BookStack\\Page', 60, 1),
(41806, '10', 'BookStack\\Page', 60, 1),
(41807, 'minutes', 'BookStack\\Page', 60, 1),
(41808, 'That’s', 'BookStack\\Page', 60, 1),
(41809, 'where', 'BookStack\\Page', 60, 1),
(41810, '10x', 'BookStack\\Page', 60, 1),
(41811, 'accrues', 'BookStack\\Page', 60, 1),
(42697, 'Common', 'BookStack\\Page', 13, 40),
(42698, 'Linux', 'BookStack\\Page', 13, 40),
(42699, 'Commands', 'BookStack\\Page', 13, 40),
(42700, 'General', 'BookStack\\Page', 13, 4),
(42701, 'reset', 'BookStack\\Page', 13, 1),
(42702, '-', 'BookStack\\Page', 13, 27),
(42703, 'Reset', 'BookStack\\Page', 13, 1),
(42704, 'the', 'BookStack\\Page', 13, 18),
(42705, 'terminal', 'BookStack\\Page', 13, 1),
(42706, 'to', 'BookStack\\Page', 13, 5),
(42707, 'default', 'BookStack\\Page', 13, 1),
(42708, 'state\r', 'BookStack\\Page', 13, 1),
(42709, 'uptime', 'BookStack\\Page', 13, 1),
(42710, 'Show', 'BookStack\\Page', 13, 1),
(42711, 'up-time', 'BookStack\\Page', 13, 1),
(42712, 'of', 'BookStack\\Page', 13, 8),
(42713, 'system\r', 'BookStack\\Page', 13, 1),
(42714, 'pwd', 'BookStack\\Page', 13, 1),
(42715, 'Print', 'BookStack\\Page', 13, 2),
(42716, 'working', 'BookStack\\Page', 13, 1),
(42717, 'directory\r', 'BookStack\\Page', 13, 2),
(42718, 'file', 'BookStack\\Page', 13, 15),
(42719, 'Outputs', 'BookStack\\Page', 13, 2),
(42720, 'type', 'BookStack\\Page', 13, 2),
(42721, 'file\r', 'BookStack\\Page', 13, 8),
(42722, 'locate', 'BookStack\\Page', 13, 2),
(42723, 'Find', 'BookStack\\Page', 13, 3),
(42724, 'location', 'BookStack\\Page', 13, 2),
(42725, 'File', 'BookStack\\Page', 13, 6),
(42726, 'paths', 'BookStack\\Page', 13, 2),
(42727, 'are', 'BookStack\\Page', 13, 4),
(42728, 'stored', 'BookStack\\Page', 13, 2),
(42729, 'in', 'BookStack\\Page', 13, 6),
(42730, 'a', 'BookStack\\Page', 13, 19),
(42731, 'database', 'BookStack\\Page', 13, 2),
(42732, 'and', 'BookStack\\Page', 13, 4),
(42733, 'they', 'BookStack\\Page', 13, 2),
(42734, 'updated', 'BookStack\\Page', 13, 2),
(42735, 'once', 'BookStack\\Page', 13, 2),
(42736, 'day', 'BookStack\\Page', 13, 2),
(42737, 'update', 'BookStack\\Page', 13, 2),
(42738, 'them', 'BookStack\\Page', 13, 2),
(42739, 'manually', 'BookStack\\Page', 13, 2),
(42740, 'run', 'BookStack\\Page', 13, 2),
(42741, 'updatedb\r', 'BookStack\\Page', 13, 1),
(42742, 'find', 'BookStack\\Page', 13, 1),
(42743, 'dir', 'BookStack\\Page', 13, 1),
(42744, '-name file -', 'BookStack\\Page', 13, 1),
(42745, 'which', 'BookStack\\Page', 13, 1),
(42746, 'command', 'BookStack\\Page', 13, 5),
(42747, 'Locate', 'BookStack\\Page', 13, 1),
(42748, 'command/binary\r', 'BookStack\\Page', 13, 1),
(42749, 'history', 'BookStack\\Page', 13, 1),
(42750, 'history\r', 'BookStack\\Page', 13, 1),
(42751, 'man', 'BookStack\\Page', 13, 1),
(42752, 'Returns', 'BookStack\\Page', 13, 4),
(42753, 'references', 'BookStack\\Page', 13, 1),
(42754, 'manual\r', 'BookStack\\Page', 13, 1),
(42755, 'watch', 'BookStack\\Page', 13, 3),
(42756, 'command -', 'BookStack\\Page', 13, 1),
(42757, 'Runs', 'BookStack\\Page', 13, 1),
(42758, 'every', 'BookStack\\Page', 13, 2),
(42759, '2', 'BookStack\\Page', 13, 2),
(42760, 'seconds\r', 'BookStack\\Page', 13, 2),
(42761, 'free', 'BookStack\\Page', 13, 3),
(42762, 'Get', 'BookStack\\Page', 13, 3),
(42763, 'memory', 'BookStack\\Page', 13, 2),
(42764, 'usage\r', 'BookStack\\Page', 13, 1),
(42765, '-h', 'BookStack\\Page', 13, 1),
(42766, 'Will', 'BookStack\\Page', 13, 1),
(42767, 'human', 'BookStack\\Page', 13, 1),
(42768, 'readable', 'BookStack\\Page', 13, 1),
(42769, 'way', 'BookStack\\Page', 13, 1),
(42770, '\r', 'BookStack\\Page', 13, 15),
(42771, 'ps', 'BookStack\\Page', 13, 1),
(42772, 'aux', 'BookStack\\Page', 13, 1),
(42773, 'list', 'BookStack\\Page', 13, 1),
(42774, 'all', 'BookStack\\Page', 13, 6),
(42775, 'running', 'BookStack\\Page', 13, 2),
(42776, 'processes\r', 'BookStack\\Page', 13, 2),
(42777, 'killall', 'BookStack\\Page', 13, 1),
(42778, 'process -', 'BookStack\\Page', 13, 1),
(42779, 'Kills', 'BookStack\\Page', 13, 1),
(42780, 'related', 'BookStack\\Page', 13, 1),
(42781, 'env', 'BookStack\\Page', 13, 1),
(42782, 'environment', 'BookStack\\Page', 13, 1),
(42783, 'variables', 'BookStack\\Page', 13, 1),
(42784, 'Networking', 'BookStack\\Page', 13, 4),
(42785, 'ifconfig', 'BookStack\\Page', 13, 1),
(42786, 'IP', 'BookStack\\Page', 13, 1),
(42787, 'address', 'BookStack\\Page', 13, 1),
(42788, '/', 'BookStack\\Page', 13, 1),
(42789, 'network', 'BookStack\\Page', 13, 2),
(42790, 'configuration\r', 'BookStack\\Page', 13, 1),
(42791, 'ping ipAddress -', 'BookStack\\Page', 13, 1),
(42792, 'Test', 'BookStack\\Page', 13, 1),
(42793, 'connection', 'BookStack\\Page', 13, 1),
(42794, 'with', 'BookStack\\Page', 13, 2),
(42795, 'another', 'BookStack\\Page', 13, 1),
(42796, 'device\r', 'BookStack\\Page', 13, 1),
(42797, 'arp', 'BookStack\\Page', 13, 1),
(42798, '-a -', 'BookStack\\Page', 13, 1),
(42799, 'List', 'BookStack\\Page', 13, 1),
(42800, 'active', 'BookStack\\Page', 13, 2),
(42801, 'devices', 'BookStack\\Page', 13, 1),
(42802, 'on', 'BookStack\\Page', 13, 3),
(42803, 'local', 'BookStack\\Page', 13, 1),
(42804, 'network\r', 'BookStack\\Page', 13, 1),
(42805, 'lsof', 'BookStack\\Page', 13, 1),
(42806, 'View', 'BookStack\\Page', 13, 1),
(42807, 'any', 'BookStack\\Page', 13, 1),
(42808, 'processes', 'BookStack\\Page', 13, 1),
(42809, 'your', 'BookStack\\Page', 13, 1),
(42810, 'Mac', 'BookStack\\Page', 13, 1),
(42811, 'that', 'BookStack\\Page', 13, 1),
(42812, 'have', 'BookStack\\Page', 13, 1),
(42813, 'connections', 'BookStack\\Page', 13, 1),
(42814, 'touch', 'BookStack\\Page', 13, 1),
(42815, 'files -', 'BookStack\\Page', 13, 3),
(42816, 'Creates', 'BookStack\\Page', 13, 2),
(42817, 'mkdir', 'BookStack\\Page', 13, 1),
(42818, 'directory', 'BookStack\\Page', 13, 1),
(42819, 'cp', 'BookStack\\Page', 13, 1),
(42820, 'file_to_copy file_destination -', 'BookStack\\Page', 13, 1),
(42821, 'Copies', 'BookStack\\Page', 13, 1),
(42822, 'files\r', 'BookStack\\Page', 13, 2),
(42823, 'mv file_to_move', 'BookStack\\Page', 13, 1),
(42824, 'file_destination -', 'BookStack\\Page', 13, 1),
(42825, 'Moves', 'BookStack\\Page', 13, 1),
(42826, 'or', 'BookStack\\Page', 13, 4),
(42827, 'renames', 'BookStack\\Page', 13, 1),
(42828, 'rm', 'BookStack\\Page', 13, 1),
(42829, 'Deletes', 'BookStack\\Page', 13, 2),
(42830, 'file/files', 'BookStack\\Page', 13, 1),
(42831, 'directory/directories\r', 'BookStack\\Page', 13, 2),
(42832, 'rmdir', 'BookStack\\Page', 13, 1),
(42833, 'directories', 'BookStack\\Page', 13, 1),
(42834, 'cat', 'BookStack\\Page', 13, 1),
(42835, 'Concatenates', 'BookStack\\Page', 13, 1),
(42836, 'view', 'BookStack\\Page', 13, 1),
(42837, 'file/files\r', 'BookStack\\Page', 13, 1),
(42838, 'zcat', 'BookStack\\Page', 13, 1),
(42839, 'Read', 'BookStack\\Page', 13, 1),
(42840, 'compressed', 'BookStack\\Page', 13, 1),
(42841, 'less', 'BookStack\\Page', 13, 1),
(42842, 'Reads', 'BookStack\\Page', 13, 1),
(42843, 'through', 'BookStack\\Page', 13, 1),
(42844, 'To', 'BookStack\\Page', 13, 1),
(42845, 'exit', 'BookStack\\Page', 13, 1),
(42846, 'press', 'BookStack\\Page', 13, 1),
(42847, 'Q\r', 'BookStack\\Page', 13, 1),
(42848, 'updated\r', 'BookStack\\Page', 13, 1),
(42849, 'awk', 'BookStack\\Page', 13, 2),
(42850, 'Scripting', 'BookStack\\Page', 13, 1),
(42851, 'language', 'BookStack\\Page', 13, 1),
(42852, 'used', 'BookStack\\Page', 13, 1),
(42853, 'for', 'BookStack\\Page', 13, 1),
(42854, 'manipulating', 'BookStack\\Page', 13, 1),
(42855, 'data\r', 'BookStack\\Page', 13, 1),
(42856, 'print', 'BookStack\\Page', 13, 1),
(42857, '$1', 'BookStack\\Page', 13, 1),
(42858, '$4', 'BookStack\\Page', 13, 1),
(42859, ' -', 'BookStack\\Page', 13, 1),
(42860, 'first', 'BookStack\\Page', 13, 1),
(42861, '4th', 'BookStack\\Page', 13, 1),
(42862, 'word\r', 'BookStack\\Page', 13, 1),
(42863, 'uniq -', 'BookStack\\Page', 13, 1),
(42864, 'Filters', 'BookStack\\Page', 13, 2),
(42865, 'counts', 'BookStack\\Page', 13, 1),
(42866, 'out', 'BookStack\\Page', 13, 1),
(42867, 'repeated', 'BookStack\\Page', 13, 1),
(42868, 'lines', 'BookStack\\Page', 13, 1),
(42869, 'uniq', 'BookStack\\Page', 13, 1),
(42870, '-c -', 'BookStack\\Page', 13, 1),
(42871, 'Counts', 'BookStack\\Page', 13, 1),
(42872, 'unique', 'BookStack\\Page', 13, 1),
(42873, 'values\r', 'BookStack\\Page', 13, 1),
(42874, 'sort -', 'BookStack\\Page', 13, 1),
(42875, 'Sort', 'BookStack\\Page', 13, 1),
(42876, 'arranging', 'BookStack\\Page', 13, 1),
(42877, 'records', 'BookStack\\Page', 13, 1),
(42878, 'particular', 'BookStack\\Page', 13, 1),
(42879, 'order\r', 'BookStack\\Page', 13, 1),
(42880, 'sort', 'BookStack\\Page', 13, 1),
(42881, '-r -', 'BookStack\\Page', 13, 1),
(42882, 'Sorts', 'BookStack\\Page', 13, 1),
(42883, 'reverse', 'BookStack\\Page', 13, 1),
(42884, 'order', 'BookStack\\Page', 13, 1),
(42885, 'Piping', 'BookStack\\Page', 13, 4),
(42886, '|', 'BookStack\\Page', 13, 1),
(42887, 'Pipe', 'BookStack\\Page', 13, 1),
(42888, 'output', 'BookStack\\Page', 13, 3),
(42889, 'one', 'BookStack\\Page', 13, 1),
(42890, 'program', 'BookStack\\Page', 13, 1),
(42891, 'into', 'BookStack\\Page', 13, 1),
(42892, 'an', 'BookStack\\Page', 13, 3),
(42893, 'another\r', 'BookStack\\Page', 13, 1),
(42894, 'grep', 'BookStack\\Page', 13, 1),
(42895, 'string', 'BookStack\\Page', 13, 2),
(42896, 'text', 'BookStack\\Page', 13, 1),
(42897, 'based', 'BookStack\\Page', 13, 1),
(42898, 'argument\r', 'BookStack\\Page', 13, 1),
(42899, 'Redirects', 'BookStack\\Page', 13, 1),
(42900, 'output\r', 'BookStack\\Page', 13, 1),
(42901, 'ls', 'BookStack\\Page', 13, 1),
(42902, '-al', 'BookStack\\Page', 13, 1),
(42903, 'Redirect', 'BookStack\\Page', 13, 1),
(42904, 'Warning', 'BookStack\\Page', 13, 1),
(42905, 'If', 'BookStack\\Page', 13, 1),
(42906, 'there', 'BookStack\\Page', 13, 1),
(42907, 'is', 'BookStack\\Page', 13, 1),
(42908, 'existing', 'BookStack\\Page', 13, 1),
(42909, 'same', 'BookStack\\Page', 13, 1),
(42910, 'name', 'BookStack\\Page', 13, 1),
(42911, 'it', 'BookStack\\Page', 13, 1),
(42912, 'will', 'BookStack\\Page', 13, 1),
(42913, 'be', 'BookStack\\Page', 13, 1),
(42914, 'overwritten', 'BookStack\\Page', 13, 1),
(42915, 'Append', 'BookStack\\Page', 13, 1),
(42916, 'strings', 'BookStack\\Page', 13, 2),
(43119, 'Console', 'BookStack\\Page', 61, 40),
(43120, 'Commands', 'BookStack\\Page', 61, 40),
(43121, 'DESC', 'BookStack\\Page', 61, 2),
(43122, 'table', 'BookStack\\Page', 61, 1),
(43123, '-', 'BookStack\\Page', 61, 8),
(43124, 'List', 'BookStack\\Page', 61, 1),
(43125, 'all', 'BookStack\\Page', 61, 2),
(43126, 'columns', 'BookStack\\Page', 61, 1),
(43127, 'of', 'BookStack\\Page', 61, 2),
(43128, 'an', 'BookStack\\Page', 61, 1),
(43129, 'table\r', 'BookStack\\Page', 61, 1),
(43130, '\r', 'BookStack\\Page', 61, 3),
(43131, 'mysql', 'BookStack\\Page', 61, 3),
(43132, 'user', 'BookStack\\Page', 61, 4),
(43133, 'Access', 'BookStack\\Page', 61, 1),
(43134, 'users', 'BookStack\\Page', 61, 1),
(43135, 'mysql\r', 'BookStack\\Page', 61, 1),
(43136, 'SELECT', 'BookStack\\Page', 61, 3),
(43137, '/', 'BookStack\\Page', 61, 2),
(43138, 'database', 'BookStack\\Page', 61, 3),
(43139, 'Get', 'BookStack\\Page', 61, 1),
(43140, 'current', 'BookStack\\Page', 61, 1),
(43141, 'database\r', 'BookStack\\Page', 61, 2),
(43142, '*', 'BookStack\\Page', 61, 2),
(43143, 'FROM', 'BookStack\\Page', 61, 1),
(43144, 'user\r', 'BookStack\\Page', 61, 4),
(43145, 'USE', 'BookStack\\Page', 61, 1),
(43146, 'database -', 'BookStack\\Page', 61, 1),
(43147, 'Switch', 'BookStack\\Page', 61, 1),
(43148, 'to', 'BookStack\\Page', 61, 2),
(43149, 'status', 'BookStack\\Page', 61, 1),
(43150, 'Database', 'BookStack\\Page', 61, 1),
(43151, 'and', 'BookStack\\Page', 61, 1),
(43152, 'status\r', 'BookStack\\Page', 61, 1),
(43153, 'CREATE', 'BookStack\\Page', 61, 2),
(43154, 'USER ', 'BookStack\\Page', 61, 1),
(43155, 'username', 'BookStack\\Page', 61, 3),
(43156, ' IDENTIFIED', 'BookStack\\Page', 61, 1),
(43157, 'BY', 'BookStack\\Page', 61, 1),
(43158, 'password', 'BookStack\\Page', 61, 1),
(43159, 'Create', 'BookStack\\Page', 61, 1),
(43160, 'new', 'BookStack\\Page', 61, 1),
(43161, 'DB', 'BookStack\\Page', 61, 2),
(43162, 'server', 'BookStack\\Page', 61, 2),
(43163, 'DROP', 'BookStack\\Page', 61, 1),
(43164, 'USER', 'BookStack\\Page', 61, 1),
(43165, 'Delete', 'BookStack\\Page', 61, 1),
(43166, 'GRANT', 'BookStack\\Page', 61, 1),
(43167, 'INSERT', 'BookStack\\Page', 61, 1),
(43168, 'ON', 'BookStack\\Page', 61, 1),
(43169, 'TO', 'BookStack\\Page', 61, 1),
(43170, '@', 'BookStack\\Page', 61, 1),
(43171, '%', 'BookStack\\Page', 61, 1),
(43172, 'Grant', 'BookStack\\Page', 61, 1),
(43173, 'privileges', 'BookStack\\Page', 61, 1),
(43174, 'FLUSH', 'BookStack\\Page', 61, 1),
(43175, 'PRIVILEGES', 'BookStack\\Page', 61, 1),
(43176, 'Clear', 'BookStack\\Page', 61, 1),
(43177, 'priviliges', 'BookStack\\Page', 61, 1),
(43178, 'cache\r', 'BookStack\\Page', 61, 1),
(43179, 'my', 'BookStack\\Page', 61, 1),
(43180, 'cnf -', 'BookStack\\Page', 61, 1),
(43181, 'MySQL', 'BookStack\\Page', 61, 1),
(43182, 'default', 'BookStack\\Page', 61, 1),
(43183, 'connection', 'BookStack\\Page', 61, 1),
(43184, 'configuration', 'BookStack\\Page', 61, 1),
(43185, 'Servers', 'BookStack\\Book', 13, 48),
(43343, 'TCP', 'BookStack\\Page', 63, 43),
(43344, 'Connection', 'BookStack\\Page', 63, 40),
(43345, 'Open', 'BookStack\\Page', 63, 1),
(43346, 'a', 'BookStack\\Page', 63, 3),
(43347, 'connection', 'BookStack\\Page', 63, 5),
(43348, 'The', 'BookStack\\Page', 63, 2),
(43349, 'is', 'BookStack\\Page', 63, 1),
(43350, 'used', 'BookStack\\Page', 63, 1),
(43351, 'to', 'BookStack\\Page', 63, 5),
(43352, 'send', 'BookStack\\Page', 63, 1),
(43353, 'request', 'BookStack\\Page', 63, 1),
(43354, 'or', 'BookStack\\Page', 63, 3),
(43355, 'several', 'BookStack\\Page', 63, 2),
(43356, 'and', 'BookStack\\Page', 63, 1),
(43357, 'receive', 'BookStack\\Page', 63, 1),
(43358, 'an', 'BookStack\\Page', 63, 3),
(43359, 'answer', 'BookStack\\Page', 63, 1),
(43360, 'client', 'BookStack\\Page', 63, 1),
(43361, 'may', 'BookStack\\Page', 63, 1),
(43362, 'open', 'BookStack\\Page', 63, 2),
(43363, 'new', 'BookStack\\Page', 63, 1),
(43364, 'reuse', 'BookStack\\Page', 63, 2),
(43365, 'existing', 'BookStack\\Page', 63, 1),
(43366, 'connections', 'BookStack\\Page', 63, 1),
(43367, 'the', 'BookStack\\Page', 63, 8),
(43368, 'servers', 'BookStack\\Page', 63, 1),
(43369, '\r', 'BookStack\\Page', 63, 12),
(43370, 'Send', 'BookStack\\Page', 63, 1),
(43371, 'HTTP', 'BookStack\\Page', 63, 2),
(43372, 'message', 'BookStack\\Page', 63, 1),
(43373, 'messages', 'BookStack\\Page', 63, 2),
(43374, 'before', 'BookStack\\Page', 63, 1),
(43375, 'HTTP/2', 'BookStack\\Page', 63, 2),
(43376, 'are', 'BookStack\\Page', 63, 2),
(43377, 'human-readable', 'BookStack\\Page', 63, 1),
(43378, 'With', 'BookStack\\Page', 63, 1),
(43379, 'these', 'BookStack\\Page', 63, 1),
(43380, 'simple', 'BookStack\\Page', 63, 1),
(43381, 'encapsulated', 'BookStack\\Page', 63, 1),
(43382, 'in', 'BookStack\\Page', 63, 1),
(43383, 'frames', 'BookStack\\Page', 63, 1),
(43384, 'making', 'BookStack\\Page', 63, 1),
(43385, 'them', 'BookStack\\Page', 63, 1),
(43386, 'impossible', 'BookStack\\Page', 63, 1),
(43387, 'read', 'BookStack\\Page', 63, 1),
(43388, 'directly', 'BookStack\\Page', 63, 1),
(43389, 'but', 'BookStack\\Page', 63, 1),
(43390, 'principle', 'BookStack\\Page', 63, 1),
(43391, 'remains', 'BookStack\\Page', 63, 1),
(43392, 'same', 'BookStack\\Page', 63, 1),
(43393, 'For', 'BookStack\\Page', 63, 1),
(43394, 'example', 'BookStack\\Page', 63, 1),
(43395, 'GET', 'BookStack\\Page', 63, 1),
(43396, '/', 'BookStack\\Page', 63, 1),
(43397, 'HTTP/1', 'BookStack\\Page', 63, 2),
(43398, '1\r', 'BookStack\\Page', 63, 1),
(43399, 'Host', 'BookStack\\Page', 63, 1),
(43400, 'developer', 'BookStack\\Page', 63, 1),
(43401, 'mozilla', 'BookStack\\Page', 63, 1),
(43402, 'org\r', 'BookStack\\Page', 63, 1),
(43403, 'Accept-Language', 'BookStack\\Page', 63, 1),
(43404, 'fr\r', 'BookStack\\Page', 63, 1),
(43405, 'Copy', 'BookStack\\Page', 63, 2),
(43406, 'Clipboard\r', 'BookStack\\Page', 63, 2),
(43407, 'Read', 'BookStack\\Page', 63, 1),
(43408, 'response', 'BookStack\\Page', 63, 1),
(43409, 'sent', 'BookStack\\Page', 63, 1),
(43410, 'by', 'BookStack\\Page', 63, 1),
(43411, 'server', 'BookStack\\Page', 63, 1),
(43412, 'such', 'BookStack\\Page', 63, 1),
(43413, 'as', 'BookStack\\Page', 63, 1),
(43414, '1', 'BookStack\\Page', 63, 1),
(43415, '200', 'BookStack\\Page', 63, 1),
(43416, 'OK\r', 'BookStack\\Page', 63, 1),
(43417, 'Date', 'BookStack\\Page', 63, 1),
(43418, 'Sat', 'BookStack\\Page', 63, 1),
(43419, '09', 'BookStack\\Page', 63, 1),
(43420, 'Oct', 'BookStack\\Page', 63, 1),
(43421, '2010', 'BookStack\\Page', 63, 1),
(43422, '14', 'BookStack\\Page', 63, 1),
(43423, '28', 'BookStack\\Page', 63, 1),
(43424, '02', 'BookStack\\Page', 63, 1),
(43425, 'GMT\r', 'BookStack\\Page', 63, 2),
(43426, 'Server', 'BookStack\\Page', 63, 1),
(43427, 'Apache\r', 'BookStack\\Page', 63, 1),
(43428, 'Last-Modified', 'BookStack\\Page', 63, 1),
(43429, 'Tue', 'BookStack\\Page', 63, 1),
(43430, '01', 'BookStack\\Page', 63, 1),
(43431, 'Dec', 'BookStack\\Page', 63, 1),
(43432, '2009', 'BookStack\\Page', 63, 1),
(43433, '20', 'BookStack\\Page', 63, 1),
(43434, '18', 'BookStack\\Page', 63, 1),
(43435, '22', 'BookStack\\Page', 63, 1),
(43436, 'ETag', 'BookStack\\Page', 63, 1),
(43437, '51142bc1-7449-479b075b2891b', 'BookStack\\Page', 63, 1),
(43438, 'Accept-Ranges', 'BookStack\\Page', 63, 1),
(43439, 'bytes\r', 'BookStack\\Page', 63, 1),
(43440, 'Content-Length', 'BookStack\\Page', 63, 1),
(43441, '29769\r', 'BookStack\\Page', 63, 1),
(43442, 'Content-Type', 'BookStack\\Page', 63, 1),
(43443, 'text/html\r', 'BookStack\\Page', 63, 1),
(43444, 'DOCTYPE', 'BookStack\\Page', 63, 1),
(43445, 'html', 'BookStack\\Page', 63, 1),
(43446, 'here', 'BookStack\\Page', 63, 1),
(43447, 'come', 'BookStack\\Page', 63, 1),
(43448, '29769', 'BookStack\\Page', 63, 1),
(43449, 'bytes', 'BookStack\\Page', 63, 1),
(43450, 'of', 'BookStack\\Page', 63, 1),
(43451, 'requested', 'BookStack\\Page', 63, 1),
(43452, 'web', 'BookStack\\Page', 63, 1),
(43453, 'page', 'BookStack\\Page', 63, 1),
(43454, 'Close', 'BookStack\\Page', 63, 1),
(43455, 'for', 'BookStack\\Page', 63, 1),
(43456, 'further', 'BookStack\\Page', 63, 1),
(43457, 'requests', 'BookStack\\Page', 63, 1),
(43458, 'HTTP', 'BookStack\\Page', 62, 46),
(43459, 'Request', 'BookStack\\Page', 62, 40),
(43460, 'Life', 'BookStack\\Page', 62, 40),
(43461, 'Cycle', 'BookStack\\Page', 62, 40),
(43462, 'First', 'BookStack\\Page', 62, 1),
(43463, 'the', 'BookStack\\Page', 62, 13),
(43464, 'browser', 'BookStack\\Page', 62, 4),
(43465, 'needs', 'BookStack\\Page', 62, 1),
(43466, 'to', 'BookStack\\Page', 62, 6),
(43467, 'translate', 'BookStack\\Page', 62, 1),
(43468, 'www', 'BookStack\\Page', 62, 2),
(43469, 'google', 'BookStack\\Page', 62, 3),
(43470, 'com', 'BookStack\\Page', 62, 1),
(43471, 'an', 'BookStack\\Page', 62, 2),
(43472, 'IP', 'BookStack\\Page', 62, 2),
(43473, 'address', 'BookStack\\Page', 62, 2),
(43474, 'To', 'BookStack\\Page', 62, 1),
(43475, 'do', 'BookStack\\Page', 62, 1),
(43476, 'so', 'BookStack\\Page', 62, 1),
(43477, 'it', 'BookStack\\Page', 62, 4),
(43478, 'contacts', 'BookStack\\Page', 62, 1),
(43479, 'a', 'BookStack\\Page', 62, 6),
(43480, 'DNS', 'BookStack\\Page', 62, 1),
(43481, 'server', 'BookStack\\Page', 62, 5),
(43482, 'resolve', 'BookStack\\Page', 62, 1),
(43483, 'name', 'BookStack\\Page', 62, 1),
(43484, '\r', 'BookStack\\Page', 62, 2),
(43485, 'Then', 'BookStack\\Page', 62, 1),
(43486, 'will', 'BookStack\\Page', 62, 5),
(43487, 'open', 'BookStack\\Page', 62, 1),
(43488, 'TCP', 'BookStack\\Page', 62, 2),
(43489, 'connection', 'BookStack\\Page', 62, 3),
(43490, 'of www', 'BookStack\\Page', 62, 1),
(43491, 'com and', 'BookStack\\Page', 62, 1),
(43492, 'send', 'BookStack\\Page', 62, 3),
(43493, 'GET', 'BookStack\\Page', 62, 1),
(43494, 'request', 'BookStack\\Page', 62, 4),
(43495, 'over', 'BookStack\\Page', 62, 1),
(43496, 'In', 'BookStack\\Page', 62, 1),
(43497, 'this', 'BookStack\\Page', 62, 3),
(43498, 'example', 'BookStack\\Page', 62, 2),
(43499, 'beGET', 'BookStack\\Page', 62, 1),
(43500, '/', 'BookStack\\Page', 62, 1),
(43501, 'HTTP/1', 'BookStack\\Page', 62, 1),
(43502, '1', 'BookStack\\Page', 62, 4),
(43503, 'Host', 'BookStack\\Page', 62, 1),
(43504, 'com\r', 'BookStack\\Page', 62, 1),
(43505, 'The', 'BookStack\\Page', 62, 2),
(43506, 'software', 'BookStack\\Page', 62, 3),
(43507, 'get', 'BookStack\\Page', 62, 1),
(43508, 'It', 'BookStack\\Page', 62, 1),
(43509, 'somehow', 'BookStack\\Page', 62, 1),
(43510, 'generate', 'BookStack\\Page', 62, 1),
(43511, 'response', 'BookStack\\Page', 62, 4),
(43512, 'and', 'BookStack\\Page', 62, 1),
(43513, 'that', 'BookStack\\Page', 62, 1),
(43514, 'back', 'BookStack\\Page', 62, 1),
(43515, 'trough', 'BookStack\\Page', 62, 1),
(43516, 'How', 'BookStack\\Page', 62, 1),
(43517, 'does', 'BookStack\\Page', 62, 1),
(43518, 'is', 'BookStack\\Page', 62, 5),
(43519, 'dependent', 'BookStack\\Page', 62, 1),
(43520, 'You', 'BookStack\\Page', 62, 1),
(43521, 'can', 'BookStack\\Page', 62, 2),
(43522, 'for', 'BookStack\\Page', 62, 1),
(43523, 'plug', 'BookStack\\Page', 62, 1),
(43524, 'in', 'BookStack\\Page', 62, 3),
(43525, 'application', 'BookStack\\Page', 62, 2),
(43526, 'code', 'BookStack\\Page', 62, 1),
(43527, 'Apache', 'BookStack\\Page', 62, 2),
(43528, 'or', 'BookStack\\Page', 62, 1),
(43529, 'just', 'BookStack\\Page', 62, 1),
(43530, 'make', 'BookStack\\Page', 62, 1),
(43531, 'return', 'BookStack\\Page', 62, 1),
(43532, 'file', 'BookStack\\Page', 62, 1),
(43533, 'from', 'BookStack\\Page', 62, 1),
(43534, 'filesystem', 'BookStack\\Page', 62, 1),
(43535, 'PHP', 'BookStack\\Page', 62, 1),
(43536, 'called', 'BookStack\\Page', 62, 1),
(43537, 'by', 'BookStack\\Page', 62, 1),
(43538, 'some', 'BookStack\\Page', 62, 1),
(43539, 'which', 'BookStack\\Page', 62, 1),
(43540, 'then', 'BookStack\\Page', 62, 1),
(43541, 'generates', 'BookStack\\Page', 62, 1),
(43542, 'sent', 'BookStack\\Page', 62, 2),
(43543, 'When', 'BookStack\\Page', 62, 2),
(43544, 'version', 'BookStack\\Page', 62, 1),
(43545, '0', 'BookStack\\Page', 62, 1),
(43546, 'closed', 'BookStack\\Page', 62, 1),
(43547, 'have', 'BookStack\\Page', 62, 1),
(43548, 'persistent', 'BookStack\\Page', 62, 1),
(43549, 'connections', 'BookStack\\Page', 62, 1),
(43550, 'though', 'BookStack\\Page', 62, 1),
(43551, 'gets', 'BookStack\\Page', 62, 1),
(43552, 'typically', 'BookStack\\Page', 62, 1),
(43553, 'renders', 'BookStack\\Page', 62, 1),
(43554, 'on', 'BookStack\\Page', 62, 2),
(43555, 'screen', 'BookStack\\Page', 62, 1),
(43556, 'now', 'BookStack\\Page', 62, 1),
(43557, 'done', 'BookStack\\Page', 62, 1),
(43558, 'A', 'BookStack\\Page', 62, 1),
(43559, 'click', 'BookStack\\Page', 62, 1),
(43560, 'search', 'BookStack\\Page', 62, 1),
(43561, 'new', 'BookStack\\Page', 62, 1),
(43637, 'PHP', 'BookStack\\Page', 64, 42),
(43638, 'Web', 'BookStack\\Page', 64, 40),
(43639, 'Server', 'BookStack\\Page', 64, 40),
(43640, 'is', 'BookStack\\Page', 64, 7),
(43641, 'a', 'BookStack\\Page', 64, 7),
(43642, 'server-side', 'BookStack\\Page', 64, 1),
(43643, 'language', 'BookStack\\Page', 64, 2),
(43644, 'that', 'BookStack\\Page', 64, 8),
(43645, 'outputs', 'BookStack\\Page', 64, 1),
(43646, 'usually', 'BookStack\\Page', 64, 1),
(43647, 'HTML', 'BookStack\\Page', 64, 1),
(43648, 'results', 'BookStack\\Page', 64, 1),
(43649, 'When', 'BookStack\\Page', 64, 1),
(43650, 'URL', 'BookStack\\Page', 64, 1),
(43651, 'called', 'BookStack\\Page', 64, 1),
(43652, 'requests', 'BookStack\\Page', 64, 1),
(43653, 'php', 'BookStack\\Page', 64, 1),
(43654, 'file', 'BookStack\\Page', 64, 1),
(43655, 'Apache', 'BookStack\\Page', 64, 6),
(43656, 'asks', 'BookStack\\Page', 64, 1),
(43657, 'the', 'BookStack\\Page', 64, 3),
(43658, 'runtime', 'BookStack\\Page', 64, 1),
(43659, 'responsible', 'BookStack\\Page', 64, 2),
(43660, 'for', 'BookStack\\Page', 64, 2),
(43661, 'running', 'BookStack\\Page', 64, 1),
(43662, 'code', 'BookStack\\Page', 64, 1),
(43663, 'you', 'BookStack\\Page', 64, 2),
(43664, 'wrote', 'BookStack\\Page', 64, 1),
(43665, 'to', 'BookStack\\Page', 64, 4),
(43666, 'process', 'BookStack\\Page', 64, 1),
(43667, 'it', 'BookStack\\Page', 64, 5),
(43668, 'and', 'BookStack\\Page', 64, 3),
(43669, 'expects', 'BookStack\\Page', 64, 1),
(43670, 'whatever', 'BookStack\\Page', 64, 1),
(43671, 'output', 'BookStack\\Page', 64, 1),
(43672, 'comes', 'BookStack\\Page', 64, 1),
(43673, 'of', 'BookStack\\Page', 64, 2),
(43674, 'then', 'BookStack\\Page', 64, 1),
(43675, 'sends', 'BookStack\\Page', 64, 1),
(43676, 'back', 'BookStack\\Page', 64, 1),
(43677, 'through', 'BookStack\\Page', 64, 1),
(43678, 'HTTP', 'BookStack\\Page', 64, 1),
(43679, 'user/browser/client', 'BookStack\\Page', 64, 1),
(43680, 'software', 'BookStack\\Page', 64, 1),
(43681, 'requested', 'BookStack\\Page', 64, 1),
(43682, 'Apache/Nginx -', 'BookStack\\Page', 64, 1),
(43683, 'web', 'BookStack\\Page', 64, 2),
(43684, 'server program', 'BookStack\\Page', 64, 1),
(43685, 'talking', 'BookStack\\Page', 64, 1),
(43686, 'browsers', 'BookStack\\Page', 64, 1),
(43687, 'connecting', 'BookStack\\Page', 64, 1),
(43688, 'them', 'BookStack\\Page', 64, 2),
(43689, 'with', 'BookStack\\Page', 64, 2),
(43690, 'information', 'BookStack\\Page', 64, 2),
(43691, 'they', 'BookStack\\Page', 64, 1),
(43692, 'request', 'BookStack\\Page', 64, 1),
(43693, 'PHP is', 'BookStack\\Page', 64, 1),
(43694, 'scripting', 'BookStack\\Page', 64, 1),
(43695, 'programming', 'BookStack\\Page', 64, 1),
(43696, 'interfaces', 'BookStack\\Page', 64, 1),
(43697, 'provide', 'BookStack\\Page', 64, 1),
(43698, 'content', 'BookStack\\Page', 64, 1),
(43699, 'dynamically', 'BookStack\\Page', 64, 1),
(43700, 'generated', 'BookStack\\Page', 64, 1),
(43701, 'often', 'BookStack\\Page', 64, 1),
(43702, 'from', 'BookStack\\Page', 64, 1),
(43703, 'stored', 'BookStack\\Page', 64, 1),
(43704, 'in', 'BookStack\\Page', 64, 1),
(43705, 'database', 'BookStack\\Page', 64, 1),
(43706, 'vs', 'BookStack\\Page', 64, 3),
(43707, 'Nginx', 'BookStack\\Page', 64, 3),
(43708, '“Apache', 'BookStack\\Page', 64, 1),
(43709, 'like', 'BookStack\\Page', 64, 1),
(43710, 'Microsoft', 'BookStack\\Page', 64, 1),
(43711, 'Word', 'BookStack\\Page', 64, 1),
(43712, 'It', 'BookStack\\Page', 64, 1),
(43713, 'has', 'BookStack\\Page', 64, 1),
(43714, 'million', 'BookStack\\Page', 64, 1),
(43715, 'options', 'BookStack\\Page', 64, 1),
(43716, 'but', 'BookStack\\Page', 64, 1),
(43717, 'only', 'BookStack\\Page', 64, 1),
(43718, 'need', 'BookStack\\Page', 64, 1),
(43719, 'six', 'BookStack\\Page', 64, 2),
(43720, 'NGINX', 'BookStack\\Page', 64, 1),
(43721, 'does', 'BookStack\\Page', 64, 2),
(43722, 'those', 'BookStack\\Page', 64, 1),
(43723, 'things', 'BookStack\\Page', 64, 1),
(43724, 'five', 'BookStack\\Page', 64, 1),
(43725, '50', 'BookStack\\Page', 64, 1),
(43726, 'times', 'BookStack\\Page', 64, 1),
(43727, 'faster', 'BookStack\\Page', 64, 1),
(43728, 'than', 'BookStack\\Page', 64, 1),
(44184, 'PHP', 'BookStack\\Page', 65, 45);
INSERT INTO `search_terms` (`id`, `term`, `entity_type`, `entity_id`, `score`) VALUES
(44185, 'Server', 'BookStack\\Page', 65, 40),
(44186, 'is', 'BookStack\\Page', 65, 16),
(44187, 'a', 'BookStack\\Page', 65, 14),
(44188, 'server-side', 'BookStack\\Page', 65, 1),
(44189, 'language', 'BookStack\\Page', 65, 2),
(44190, 'that', 'BookStack\\Page', 65, 14),
(44191, 'outputs', 'BookStack\\Page', 65, 1),
(44192, 'usually', 'BookStack\\Page', 65, 1),
(44193, 'HTML', 'BookStack\\Page', 65, 1),
(44194, 'results', 'BookStack\\Page', 65, 1),
(44195, 'When', 'BookStack\\Page', 65, 1),
(44196, 'URL', 'BookStack\\Page', 65, 1),
(44197, 'called', 'BookStack\\Page', 65, 1),
(44198, 'requests', 'BookStack\\Page', 65, 2),
(44199, 'php', 'BookStack\\Page', 65, 1),
(44200, 'file', 'BookStack\\Page', 65, 8),
(44201, 'Apache', 'BookStack\\Page', 65, 7),
(44202, 'asks', 'BookStack\\Page', 65, 1),
(44203, 'the', 'BookStack\\Page', 65, 12),
(44204, 'runtime', 'BookStack\\Page', 65, 1),
(44205, 'responsible', 'BookStack\\Page', 65, 2),
(44206, 'for', 'BookStack\\Page', 65, 5),
(44207, 'running', 'BookStack\\Page', 65, 2),
(44208, 'code', 'BookStack\\Page', 65, 1),
(44209, 'you', 'BookStack\\Page', 65, 3),
(44210, 'wrote', 'BookStack\\Page', 65, 1),
(44211, 'to', 'BookStack\\Page', 65, 12),
(44212, 'process', 'BookStack\\Page', 65, 8),
(44213, 'it', 'BookStack\\Page', 65, 6),
(44214, 'and', 'BookStack\\Page', 65, 5),
(44215, 'expects', 'BookStack\\Page', 65, 1),
(44216, 'whatever', 'BookStack\\Page', 65, 1),
(44217, 'output', 'BookStack\\Page', 65, 1),
(44218, 'comes', 'BookStack\\Page', 65, 1),
(44219, 'of', 'BookStack\\Page', 65, 5),
(44220, 'then', 'BookStack\\Page', 65, 1),
(44221, 'sends', 'BookStack\\Page', 65, 1),
(44222, 'back', 'BookStack\\Page', 65, 1),
(44223, 'through', 'BookStack\\Page', 65, 1),
(44224, 'HTTP', 'BookStack\\Page', 65, 1),
(44225, 'user/browser/client', 'BookStack\\Page', 65, 1),
(44226, 'software', 'BookStack\\Page', 65, 1),
(44227, 'requested', 'BookStack\\Page', 65, 1),
(44228, 'Apache/Nginx -', 'BookStack\\Page', 65, 1),
(44229, 'web', 'BookStack\\Page', 65, 3),
(44230, 'server program', 'BookStack\\Page', 65, 1),
(44231, 'talking', 'BookStack\\Page', 65, 1),
(44232, 'browsers', 'BookStack\\Page', 65, 1),
(44233, 'connecting', 'BookStack\\Page', 65, 1),
(44234, 'them', 'BookStack\\Page', 65, 2),
(44235, 'with', 'BookStack\\Page', 65, 3),
(44236, 'information', 'BookStack\\Page', 65, 4),
(44237, 'they', 'BookStack\\Page', 65, 1),
(44238, 'request', 'BookStack\\Page', 65, 1),
(44239, 'PHP is', 'BookStack\\Page', 65, 1),
(44240, 'scripting', 'BookStack\\Page', 65, 1),
(44241, 'programming', 'BookStack\\Page', 65, 1),
(44242, 'interfaces', 'BookStack\\Page', 65, 1),
(44243, 'provide', 'BookStack\\Page', 65, 1),
(44244, 'content', 'BookStack\\Page', 65, 1),
(44245, 'dynamically', 'BookStack\\Page', 65, 1),
(44246, 'generated', 'BookStack\\Page', 65, 1),
(44247, 'often', 'BookStack\\Page', 65, 1),
(44248, 'from', 'BookStack\\Page', 65, 1),
(44249, 'stored', 'BookStack\\Page', 65, 1),
(44250, 'in', 'BookStack\\Page', 65, 2),
(44251, 'database', 'BookStack\\Page', 65, 1),
(44252, 'vs', 'BookStack\\Page', 65, 3),
(44253, 'Nginx', 'BookStack\\Page', 65, 9),
(44254, '“Apache', 'BookStack\\Page', 65, 1),
(44255, 'like', 'BookStack\\Page', 65, 1),
(44256, 'Microsoft', 'BookStack\\Page', 65, 1),
(44257, 'Word', 'BookStack\\Page', 65, 1),
(44258, 'It', 'BookStack\\Page', 65, 2),
(44259, 'has', 'BookStack\\Page', 65, 1),
(44260, 'million', 'BookStack\\Page', 65, 1),
(44261, 'options', 'BookStack\\Page', 65, 1),
(44262, 'but', 'BookStack\\Page', 65, 2),
(44263, 'only', 'BookStack\\Page', 65, 1),
(44264, 'need', 'BookStack\\Page', 65, 2),
(44265, 'six', 'BookStack\\Page', 65, 2),
(44266, 'NGINX', 'BookStack\\Page', 65, 1),
(44267, 'does', 'BookStack\\Page', 65, 2),
(44268, 'those', 'BookStack\\Page', 65, 1),
(44269, 'things', 'BookStack\\Page', 65, 2),
(44270, 'five', 'BookStack\\Page', 65, 1),
(44271, '50', 'BookStack\\Page', 65, 1),
(44272, 'times', 'BookStack\\Page', 65, 1),
(44273, 'faster', 'BookStack\\Page', 65, 1),
(44274, 'than', 'BookStack\\Page', 65, 2),
(44275, 'Configuration', 'BookStack\\Page', 65, 3),
(44276, 'To', 'BookStack\\Page', 65, 1),
(44277, 'verify', 'BookStack\\Page', 65, 1),
(44278, 'there', 'BookStack\\Page', 65, 2),
(44279, 'are', 'BookStack\\Page', 65, 2),
(44280, 'no', 'BookStack\\Page', 65, 1),
(44281, 'issues', 'BookStack\\Page', 65, 1),
(44282, 'your', 'BookStack\\Page', 65, 2),
(44283, 'configuration', 'BookStack\\Page', 65, 2),
(44284, 'can', 'BookStack\\Page', 65, 2),
(44285, 'run', 'BookStack\\Page', 65, 1),
(44286, 'sudo', 'BookStack\\Page', 65, 2),
(44287, 'nginx', 'BookStack\\Page', 65, 2),
(44288, '-t', 'BookStack\\Page', 65, 1),
(44289, 'Remember', 'BookStack\\Page', 65, 1),
(44290, 'reload', 'BookStack\\Page', 65, 2),
(44291, 'when', 'BookStack\\Page', 65, 1),
(44292, 'making', 'BookStack\\Page', 65, 1),
(44293, 'any', 'BookStack\\Page', 65, 1),
(44294, 'changes', 'BookStack\\Page', 65, 1),
(44295, 'config', 'BookStack\\Page', 65, 1),
(44296, 'files', 'BookStack\\Page', 65, 2),
(44297, 'service', 'BookStack\\Page', 65, 1),
(44298, 'What', 'BookStack\\Page', 65, 6),
(44299, 'PHP-FMP', 'BookStack\\Page', 65, 3),
(44300, 'The', 'BookStack\\Page', 65, 3),
(44301, '“FPM”', 'BookStack\\Page', 65, 1),
(44302, 'part', 'BookStack\\Page', 65, 1),
(44303, 'stands', 'BookStack\\Page', 65, 1),
(44304, '“Fast', 'BookStack\\Page', 65, 1),
(44305, 'Process', 'BookStack\\Page', 65, 1),
(44306, 'Manager”', 'BookStack\\Page', 65, 1),
(44307, 'which', 'BookStack\\Page', 65, 3),
(44308, 'just', 'BookStack\\Page', 65, 1),
(44309, 'fancy', 'BookStack\\Page', 65, 1),
(44310, 'way', 'BookStack\\Page', 65, 1),
(44311, 'saying', 'BookStack\\Page', 65, 1),
(44312, 'on', 'BookStack\\Page', 65, 2),
(44313, 'server', 'BookStack\\Page', 65, 3),
(44314, 'isn’t', 'BookStack\\Page', 65, 1),
(44315, 'single', 'BookStack\\Page', 65, 1),
(44316, 'rather', 'BookStack\\Page', 65, 1),
(44317, 'some', 'BookStack\\Page', 65, 2),
(44318, 'processes', 'BookStack\\Page', 65, 1),
(44319, 'spawned', 'BookStack\\Page', 65, 1),
(44320, 'controller', 'BookStack\\Page', 65, 1),
(44321, 'killed', 'BookStack\\Page', 65, 1),
(44322, 'off', 'BookStack\\Page', 65, 1),
(44323, 'by', 'BookStack\\Page', 65, 1),
(44324, 'this', 'BookStack\\Page', 65, 2),
(44325, 'FPM', 'BookStack\\Page', 65, 1),
(44326, 'manager', 'BookStack\\Page', 65, 2),
(44327, 'passes', 'BookStack\\Page', 65, 1),
(44328, 'location', 'BookStack\\Page', 65, 1),
(44329, 'php-fpm may', 'BookStack\\Page', 65, 1),
(44330, 'differ', 'BookStack\\Page', 65, 1),
(44331, 'so', 'BookStack\\Page', 65, 1),
(44332, 'you’ll', 'BookStack\\Page', 65, 1),
(44333, 'do', 'BookStack\\Page', 65, 1),
(44334, 'research', 'BookStack\\Page', 65, 1),
(44335, 'locating', 'BookStack\\Page', 65, 1),
(44336, 'A', 'BookStack\\Page', 65, 1),
(44337, 'few', 'BookStack\\Page', 65, 1),
(44338, 'should', 'BookStack\\Page', 65, 1),
(44339, 'be', 'BookStack\\Page', 65, 1),
(44340, 'immediately', 'BookStack\\Page', 65, 1),
(44341, 'obvious', 'BookStack\\Page', 65, 1),
(44342, 'line pid', 'BookStack\\Page', 65, 1),
(44343, '=', 'BookStack\\Page', 65, 1),
(44344, '/run/php/php7', 'BookStack\\Page', 65, 1),
(44345, '2-fpm', 'BookStack\\Page', 65, 2),
(44346, 'pid tells', 'BookStack\\Page', 65, 1),
(44347, 'us', 'BookStack\\Page', 65, 1),
(44348, 'contains', 'BookStack\\Page', 65, 2),
(44349, 'id', 'BookStack\\Page', 65, 2),
(44350, 'the php-fpm process', 'BookStack\\Page', 65, 1),
(44351, 'We', 'BookStack\\Page', 65, 1),
(44352, 'also', 'BookStack\\Page', 65, 2),
(44353, 'see', 'BookStack\\Page', 65, 1),
(44354, 'that /var/log/php7', 'BookStack\\Page', 65, 1),
(44355, 'log is', 'BookStack\\Page', 65, 1),
(44356, 'where php-fpm is', 'BookStack\\Page', 65, 1),
(44357, 'going', 'BookStack\\Page', 65, 1),
(44358, 'store', 'BookStack\\Page', 65, 1),
(44359, 'its', 'BookStack\\Page', 65, 2),
(44360, 'logs', 'BookStack\\Page', 65, 1),
(44361, 'PID', 'BookStack\\Page', 65, 3),
(44362, 'pid', 'BookStack\\Page', 65, 3),
(44363, 'number', 'BookStack\\Page', 65, 2),
(44364, 'given', 'BookStack\\Page', 65, 1),
(44365, 'program', 'BookStack\\Page', 65, 1),
(44366, 'For', 'BookStack\\Page', 65, 1),
(44367, 'example', 'BookStack\\Page', 65, 1),
(44368, 'HTTPD', 'BookStack\\Page', 65, 1),
(44369, 'may', 'BookStack\\Page', 65, 1),
(44370, 'write', 'BookStack\\Page', 65, 1),
(44371, 'main', 'BookStack\\Page', 65, 1),
(44372, '-', 'BookStack\\Page', 65, 2),
(44373, 'regular', 'BookStack\\Page', 65, 1),
(44374, 'text', 'BookStack\\Page', 65, 1),
(44375, 'nothing', 'BookStack\\Page', 65, 1),
(44376, 'more', 'BookStack\\Page', 65, 1),
(44377, 'later', 'BookStack\\Page', 65, 1),
(44378, 'use', 'BookStack\\Page', 65, 2),
(44379, 'contained', 'BookStack\\Page', 65, 1),
(44380, 'stop', 'BookStack\\Page', 65, 1),
(44381, 'itself', 'BookStack\\Page', 65, 1),
(44382, 'You', 'BookStack\\Page', 65, 1),
(44383, 'kill', 'BookStack\\Page', 65, 2),
(44384, 'yourself', 'BookStack\\Page', 65, 1),
(44385, 'using cat', 'BookStack\\Page', 65, 1),
(44386, 'filename', 'BookStack\\Page', 65, 1),
(44387, '|', 'BookStack\\Page', 65, 1),
(44388, 'xargs', 'BookStack\\Page', 65, 1),
(44393, 'Socket', 'BookStack\\Page', 66, 40),
(44394, 'Files', 'BookStack\\Page', 66, 40),
(44395, 'A', 'BookStack\\Page', 66, 1),
(44396, 'socket', 'BookStack\\Page', 66, 2),
(44397, 'is', 'BookStack\\Page', 66, 1),
(44398, 'a', 'BookStack\\Page', 66, 2),
(44399, 'special', 'BookStack\\Page', 66, 1),
(44400, 'file', 'BookStack\\Page', 66, 2),
(44401, 'used', 'BookStack\\Page', 66, 1),
(44402, 'for', 'BookStack\\Page', 66, 1),
(44403, 'inter-process', 'BookStack\\Page', 66, 1),
(44404, 'communication', 'BookStack\\Page', 66, 2),
(44405, 'which', 'BookStack\\Page', 66, 1),
(44406, 'enables', 'BookStack\\Page', 66, 1),
(44407, 'the', 'BookStack\\Page', 66, 2),
(44408, 'between', 'BookStack\\Page', 66, 1),
(44409, 'two', 'BookStack\\Page', 66, 1),
(44410, 'processes', 'BookStack\\Page', 66, 2),
(44411, 'In', 'BookStack\\Page', 66, 1),
(44412, 'addition', 'BookStack\\Page', 66, 1),
(44413, 'to', 'BookStack\\Page', 66, 1),
(44414, 'sending', 'BookStack\\Page', 66, 1),
(44415, 'data', 'BookStack\\Page', 66, 1),
(44416, 'can', 'BookStack\\Page', 66, 1),
(44417, 'send', 'BookStack\\Page', 66, 1),
(44418, 'descriptors', 'BookStack\\Page', 66, 1),
(44419, 'across', 'BookStack\\Page', 66, 1),
(44420, 'Unix', 'BookStack\\Page', 66, 1),
(44421, 'domain', 'BookStack\\Page', 66, 1),
(44422, 'connection', 'BookStack\\Page', 66, 1),
(44423, 'using', 'BookStack\\Page', 66, 1),
(44424, 'sendmsg', 'BookStack\\Page', 66, 1),
(44425, 'and', 'BookStack\\Page', 66, 1),
(44426, 'recvmsg', 'BookStack\\Page', 66, 1),
(44427, 'system', 'BookStack\\Page', 66, 1),
(44428, 'calls', 'BookStack\\Page', 66, 1),
(44429, 'Learning', 'BookStack\\Page', 40, 40),
(44430, 'Roadmap', 'BookStack\\Page', 40, 43),
(44431, 'Current', 'BookStack\\Page', 40, 3),
(44432, 'Docker\r', 'BookStack\\Page', 40, 2),
(44433, 'Webpack', 'BookStack\\Page', 40, 1),
(44434, 'and', 'BookStack\\Page', 40, 1),
(44435, 'JS', 'BookStack\\Page', 40, 1),
(44436, 'modules\r', 'BookStack\\Page', 40, 1),
(44437, 'PHP', 'BookStack\\Page', 40, 2),
(44438, 'MVC\r', 'BookStack\\Page', 40, 1),
(44439, 'Vanilla', 'BookStack\\Page', 40, 1),
(44440, 'JS\r', 'BookStack\\Page', 40, 1),
(44441, 'Design', 'BookStack\\Page', 40, 1),
(44442, 'Patterns\r', 'BookStack\\Page', 40, 1),
(44443, 'Read', 'BookStack\\Page', 40, 1),
(44444, 'SQL', 'BookStack\\Page', 40, 2),
(44445, 'docs', 'BookStack\\Page', 40, 1),
(44446, '-', 'BookStack\\Page', 40, 1),
(44447, 'https', 'BookStack\\Page', 40, 1),
(44448, '//dev', 'BookStack\\Page', 40, 1),
(44449, 'mysql', 'BookStack\\Page', 40, 1),
(44450, 'com/doc/refman/8', 'BookStack\\Page', 40, 1),
(44451, '0/en/\r', 'BookStack\\Page', 40, 1),
(44452, 'PHP-FPM', 'BookStack\\Page', 40, 1),
(44453, 'PostgreSQL', 'BookStack\\Page', 40, 1),
(44454, 'Nginx', 'BookStack\\Page', 40, 1),
(44455, 'Apache\r', 'BookStack\\Page', 40, 1),
(44456, 'SOLID\r', 'BookStack\\Page', 40, 1),
(44457, 'DB', 'BookStack\\Page', 40, 1),
(44458, 'Sharding\r', 'BookStack\\Page', 40, 1),
(44459, 'SSL/TLS\r', 'BookStack\\Page', 40, 1),
(44460, ' ', 'BookStack\\Page', 40, 1),
(44461, 'Future', 'BookStack\\Page', 40, 3),
(44462, 'Certificates ', 'BookStack\\Page', 40, 3),
(44463, 'Network+\r', 'BookStack\\Page', 40, 1),
(44464, 'Linux+\r', 'BookStack\\Page', 40, 1),
(44465, '\r', 'BookStack\\Page', 40, 3),
(44466, 'Security+\r', 'BookStack\\Page', 40, 1),
(44467, 'AWS', 'BookStack\\Page', 40, 1),
(44468, 'Certified', 'BookStack\\Page', 40, 1),
(44469, 'Cloud', 'BookStack\\Page', 40, 1),
(44470, 'Practitioner', 'BookStack\\Page', 40, 1),
(44471, 'Things', 'BookStack\\Page', 40, 3),
(44472, 'I', 'BookStack\\Page', 40, 3),
(44473, 'still', 'BookStack\\Page', 40, 3),
(44474, 'need', 'BookStack\\Page', 40, 3),
(44475, 'to', 'BookStack\\Page', 40, 3),
(44476, 'polish', 'BookStack\\Page', 40, 3),
(44477, 'Server', 'BookStack\\Page', 40, 1),
(44478, 'Configuration\r', 'BookStack\\Page', 40, 1),
(44479, 'Complicated', 'BookStack\\Page', 40, 1),
(44480, 'queries', 'BookStack\\Page', 40, 1),
(44482, 'Nginx', 'BookStack\\Page', 67, 40),
(44484, 'Nginx', 'BookStack\\Page', 68, 40),
(44485, 'Productivity', 'BookStack\\Page', 26, 40),
(44486, 'Tools', 'BookStack\\Page', 26, 40),
(44487, 'What', 'BookStack\\Page', 26, 7),
(44488, 'tools', 'BookStack\\Page', 26, 3),
(44489, 'do', 'BookStack\\Page', 26, 4),
(44490, 'I', 'BookStack\\Page', 26, 8),
(44491, 'use', 'BookStack\\Page', 26, 8),
(44492, 'for', 'BookStack\\Page', 26, 7),
(44493, 'productivity', 'BookStack\\Page', 26, 3),
(44494, 'Lightshot -', 'BookStack\\Page', 26, 1),
(44495, 'Tool', 'BookStack\\Page', 26, 3),
(44496, 'taking', 'BookStack\\Page', 26, 1),
(44497, 'and', 'BookStack\\Page', 26, 3),
(44498, 'editing', 'BookStack\\Page', 26, 1),
(44499, 'screenshots', 'BookStack\\Page', 26, 1),
(44500, '\r', 'BookStack\\Page', 26, 6),
(44501, 'Spectacle -', 'BookStack\\Page', 26, 1),
(44502, 'Window', 'BookStack\\Page', 26, 1),
(44503, 'resizing', 'BookStack\\Page', 26, 1),
(44504, 'tool', 'BookStack\\Page', 26, 1),
(44505, 'shortcut', 'BookStack\\Page', 26, 1),
(44506, 'support', 'BookStack\\Page', 26, 1),
(44507, 'Copyless -', 'BookStack\\Page', 26, 1),
(44508, 'managing', 'BookStack\\Page', 26, 2),
(44509, 'your', 'BookStack\\Page', 26, 1),
(44510, 'clipboard', 'BookStack\\Page', 26, 1),
(44511, 'history', 'BookStack\\Page', 26, 1),
(44512, 'CleanMyMac -', 'BookStack\\Page', 26, 1),
(44513, 'cleaning', 'BookStack\\Page', 26, 1),
(44514, 'junk', 'BookStack\\Page', 26, 1),
(44515, 'files', 'BookStack\\Page', 26, 1),
(44516, 'startup', 'BookStack\\Page', 26, 1),
(44517, 'apps', 'BookStack\\Page', 26, 1),
(44518, 'MySQL', 'BookStack\\Page', 26, 1),
(44519, 'Workbench -', 'BookStack\\Page', 26, 1),
(44520, 'Database', 'BookStack\\Page', 26, 1),
(44521, 'IDE', 'BookStack\\Page', 26, 2),
(44522, 'PHPStorm -', 'BookStack\\Page', 26, 1),
(44523, 'Development', 'BookStack\\Page', 26, 1),
(44524, 'Brave -', 'BookStack\\Page', 26, 1),
(44525, 'Internet', 'BookStack\\Page', 26, 1),
(44526, 'Browser', 'BookStack\\Page', 26, 1),
(44527, 'terminal', 'BookStack\\Page', 26, 4),
(44528, 'configuration', 'BookStack\\Page', 26, 3),
(44529, 'iTerm', 'BookStack\\Page', 26, 1),
(44530, 'together', 'BookStack\\Page', 26, 1),
(44531, 'with', 'BookStack\\Page', 26, 1),
(44532, 'Oh', 'BookStack\\Page', 26, 1),
(44533, 'My', 'BookStack\\Page', 26, 1),
(44534, 'Zsh', 'BookStack\\Page', 26, 1),
(44535, ' I', 'BookStack\\Page', 26, 1),
(44536, 'like', 'BookStack\\Page', 26, 1),
(44537, 'zsh', 'BookStack\\Page', 26, 2),
(44538, 'because', 'BookStack\\Page', 26, 1),
(44539, 'it', 'BookStack\\Page', 26, 1),
(44540, 'is', 'BookStack\\Page', 26, 1),
(44541, 'more', 'BookStack\\Page', 26, 2),
(44542, 'customisable', 'BookStack\\Page', 26, 1),
(44543, 'than', 'BookStack\\Page', 26, 1),
(44544, 'bash', 'BookStack\\Page', 26, 1),
(44545, 'supports', 'BookStack\\Page', 26, 1),
(44546, 'plugins', 'BookStack\\Page', 26, 2),
(44547, 'Preferences', 'BookStack\\Page', 26, 1),
(44548, '-', 'BookStack\\Page', 26, 4),
(44549, 'Profiles', 'BookStack\\Page', 26, 1),
(44550, 'Keys', 'BookStack\\Page', 26, 1),
(44551, 'Key', 'BookStack\\Page', 26, 1),
(44552, 'Mapping', 'BookStack\\Page', 26, 1),
(44553, 'Natural', 'BookStack\\Page', 26, 1),
(44554, 'Text', 'BookStack\\Page', 26, 1),
(44555, 'Editing', 'BookStack\\Page', 26, 1),
(44556, 'zsh-autosuggestions', 'BookStack\\Page', 26, 1);

-- --------------------------------------------------------

--
-- Table structure for table `sessions`
--

CREATE TABLE `sessions` (
  `id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `ip_address` varchar(45) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `user_agent` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `payload` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `last_activity` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `settings`
--

CREATE TABLE `settings` (
  `setting_key` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `value` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `type` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'string'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `settings`
--

INSERT INTO `settings` (`setting_key`, `value`, `created_at`, `updated_at`, `type`) VALUES
('app-color', '#a36a00', '2021-11-27 14:27:14', '2021-12-06 11:47:47', 'string'),
('app-color-light', 'rgba(163,106,0,0.15)', '2021-11-27 14:27:14', '2021-12-06 11:47:47', 'string'),
('app-custom-head', '', '2021-11-27 14:27:14', '2021-11-27 14:27:14', 'string'),
('app-disable-comments', 'true', '2021-11-27 13:55:03', '2021-11-27 13:55:03', 'string'),
('app-editor', 'wysiwyg', '2021-11-27 14:27:14', '2021-11-27 14:27:14', 'string'),
('app-footer-links', '[]', '2021-11-27 14:27:14', '2021-11-27 14:27:14', 'array'),
('app-homepage', '', '2021-11-27 14:27:14', '2021-11-27 14:27:14', 'string'),
('app-homepage-type', 'default', '2021-11-27 14:27:14', '2021-11-27 14:27:14', 'string'),
('app-logo', 'none', '2021-11-27 14:27:14', '2021-11-27 14:27:14', 'string'),
('app-name', 'Personal Knowledge Base', '2021-11-27 14:27:14', '2021-11-28 16:16:50', 'string'),
('app-name-header', 'false', '2021-11-27 14:27:14', '2021-11-28 16:19:15', 'string'),
('app-public', 'true', '2021-11-27 13:55:03', '2021-11-27 13:55:03', 'string'),
('app-secure-images', 'false', '2021-11-27 13:55:03', '2021-11-27 13:55:03', 'string'),
('book-color', '#a36a00', '2021-11-27 14:27:14', '2021-12-06 11:48:10', 'string'),
('bookshelf-color', '#a36a00', '2021-11-27 14:27:14', '2021-12-06 11:48:10', 'string'),
('chapter-color', '#f79e02', '2021-11-27 14:27:14', '2021-11-28 16:02:45', 'string'),
('page-color', '#f79e02', '2021-11-27 14:27:14', '2021-11-28 16:02:45', 'string'),
('page-draft-color', '#f79e02', '2021-11-27 14:27:14', '2021-11-28 16:02:45', 'string'),
('user:1:books_sort', 'name', '2021-11-27 13:52:16', '2021-11-27 13:52:16', 'string'),
('user:1:books_sort_order', 'desc', '2021-11-27 13:52:16', '2021-11-27 13:52:17', 'string'),
('user:1:dark-mode-enabled', 'false', '2021-11-27 14:43:57', '2022-03-11 10:22:42', 'string'),
('user:1:language', 'en', '2021-11-27 14:28:50', '2021-11-27 14:28:50', 'string'),
('user:1:section_expansion#home-details', 'false', '2021-11-27 12:58:37', '2021-11-27 12:58:38', 'string');

-- --------------------------------------------------------

--
-- Table structure for table `social_accounts`
--

CREATE TABLE `social_accounts` (
  `id` int(10) UNSIGNED NOT NULL,
  `user_id` int(11) NOT NULL,
  `driver` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `driver_id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `avatar` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `tags`
--

CREATE TABLE `tags` (
  `id` int(10) UNSIGNED NOT NULL,
  `entity_id` int(11) NOT NULL,
  `entity_type` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `value` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `order` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar(60) COLLATE utf8mb4_unicode_ci NOT NULL,
  `remember_token` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `email_confirmed` tinyint(1) NOT NULL DEFAULT 1,
  `image_id` int(11) NOT NULL DEFAULT 0,
  `external_auth_id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `system_name` varchar(191) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `slug` varchar(180) COLLATE utf8mb4_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `name`, `email`, `password`, `remember_token`, `created_at`, `updated_at`, `email_confirmed`, `image_id`, `external_auth_id`, `system_name`, `slug`) VALUES
(1, 'Admin', 'admin@admin.com', '$2y$10$n394IWQhouKs8U5tLEWgOehYFXI6xa9LQd4AJkc92RyZAkuivCDvi', NULL, '2021-11-26 17:43:13', '2021-12-20 15:08:52', 1, 7, '', NULL, 'admin'),
(2, 'Guest', 'guest@example.com', '', NULL, '2021-11-26 17:43:15', '2021-11-26 17:43:15', 1, 0, '', 'public', 'guest');

-- --------------------------------------------------------

--
-- Table structure for table `user_invites`
--

CREATE TABLE `user_invites` (
  `id` int(10) UNSIGNED NOT NULL,
  `user_id` int(11) NOT NULL,
  `token` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `views`
--

CREATE TABLE `views` (
  `id` int(10) UNSIGNED NOT NULL,
  `user_id` int(11) NOT NULL,
  `viewable_id` int(11) NOT NULL,
  `viewable_type` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `views` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `views`
--

INSERT INTO `views` (`id`, `user_id`, `viewable_id`, `viewable_type`, `views`, `created_at`, `updated_at`) VALUES
(1, 1, 1, 'BookStack\\Bookshelf', 24, '2021-11-27 12:20:14', '2021-11-27 18:06:22'),
(2, 1, 1, 'BookStack\\Book', 187, '2021-11-27 12:20:23', '2022-03-18 13:55:47'),
(3, 1, 1, 'BookStack\\Page', 55, '2021-11-27 12:22:14', '2021-12-23 21:13:50'),
(4, 1, 2, 'BookStack\\Page', 22, '2021-11-27 12:27:57', '2021-12-27 15:44:38'),
(5, 1, 3, 'BookStack\\Page', 28, '2021-11-27 12:30:50', '2021-12-27 15:44:36'),
(6, 1, 4, 'BookStack\\Page', 10, '2021-11-27 13:28:57', '2021-12-09 16:51:09'),
(8, 1, 2, 'BookStack\\Book', 114, '2021-11-27 15:11:54', '2022-03-22 17:07:33'),
(9, 1, 6, 'BookStack\\Page', 13, '2021-11-27 18:19:20', '2022-03-17 08:12:29'),
(10, 1, 7, 'BookStack\\Page', 13, '2021-11-27 18:19:41', '2021-12-09 16:50:56'),
(11, 1, 8, 'BookStack\\Page', 1, '2021-11-27 18:28:41', '2021-11-27 18:28:41'),
(12, 1, 9, 'BookStack\\Page', 2, '2021-11-27 18:30:31', '2021-11-27 18:30:53'),
(13, 1, 10, 'BookStack\\Page', 1, '2021-11-27 18:31:33', '2021-11-27 18:31:33'),
(14, 1, 11, 'BookStack\\Page', 3, '2021-11-27 18:31:44', '2021-11-27 18:41:30'),
(15, 1, 12, 'BookStack\\Page', 4, '2021-11-27 18:44:19', '2021-12-23 21:18:01'),
(16, 1, 13, 'BookStack\\Page', 31, '2021-11-27 18:51:27', '2022-03-17 08:14:14'),
(17, 1, 3, 'BookStack\\Book', 148, '2021-11-29 14:32:58', '2021-12-23 21:15:17'),
(18, 1, 15, 'BookStack\\Page', 41, '2021-11-29 15:23:46', '2021-12-23 21:15:13'),
(19, 1, 16, 'BookStack\\Page', 14, '2021-11-30 09:15:44', '2021-12-19 17:54:36'),
(23, 1, 20, 'BookStack\\Page', 49, '2021-12-08 13:50:14', '2021-12-21 13:18:45'),
(24, 1, 21, 'BookStack\\Page', 20, '2021-12-09 09:47:29', '2021-12-19 18:33:58'),
(26, 1, 23, 'BookStack\\Page', 20, '2021-12-09 11:56:06', '2021-12-19 18:19:36'),
(27, 1, 24, 'BookStack\\Page', 7, '2021-12-09 12:30:00', '2021-12-19 17:58:06'),
(31, 1, 6, 'BookStack\\Book', 84, '2021-12-11 19:48:43', '2022-03-22 20:45:57'),
(32, 1, 26, 'BookStack\\Page', 25, '2021-12-11 20:01:20', '2022-03-22 20:46:34'),
(33, 1, 27, 'BookStack\\Page', 45, '2021-12-13 19:06:38', '2021-12-23 21:18:03'),
(34, 1, 7, 'BookStack\\Book', 101, '2021-12-14 17:58:00', '2021-12-30 10:22:15'),
(35, 1, 29, 'BookStack\\Page', 52, '2021-12-14 18:16:15', '2021-12-30 10:22:13'),
(36, 1, 30, 'BookStack\\Page', 14, '2021-12-14 18:25:56', '2022-01-04 12:10:53'),
(37, 1, 31, 'BookStack\\Page', 25, '2021-12-14 18:31:40', '2021-12-30 10:22:03'),
(39, 1, 33, 'BookStack\\Page', 23, '2021-12-18 11:02:25', '2021-12-30 10:22:08'),
(40, 1, 34, 'BookStack\\Page', 18, '2021-12-18 12:28:53', '2021-12-30 10:22:05'),
(42, 1, 37, 'BookStack\\Page', 5, '2021-12-19 18:08:48', '2021-12-21 13:12:48'),
(47, 1, 40, 'BookStack\\Page', 28, '2021-12-20 15:09:09', '2022-03-22 19:47:00'),
(48, 1, 10, 'BookStack\\Book', 60, '2021-12-21 11:38:19', '2022-03-17 08:02:23'),
(50, 1, 11, 'BookStack\\Book', 54, '2021-12-23 08:50:33', '2022-03-17 08:02:24'),
(51, 1, 43, 'BookStack\\Page', 20, '2021-12-23 10:33:26', '2021-12-23 21:48:00'),
(52, 1, 44, 'BookStack\\Page', 39, '2021-12-23 10:44:09', '2021-12-29 09:45:47'),
(55, 1, 1, 'BookStack\\Chapter', 16, '2022-01-03 14:25:21', '2022-01-10 13:45:17'),
(56, 1, 2, 'BookStack\\Chapter', 40, '2022-01-03 14:25:30', '2022-01-10 15:58:21'),
(57, 1, 47, 'BookStack\\Page', 7, '2022-01-03 14:26:15', '2022-01-10 12:04:40'),
(59, 1, 49, 'BookStack\\Page', 4, '2022-01-03 14:36:06', '2022-01-10 13:45:17'),
(60, 1, 50, 'BookStack\\Page', 5, '2022-01-03 14:37:08', '2022-01-10 13:45:10'),
(61, 1, 12, 'BookStack\\Book', 19, '2022-01-03 15:38:59', '2022-03-22 20:03:37'),
(62, 1, 51, 'BookStack\\Page', 4, '2022-01-03 15:40:52', '2022-01-10 13:39:59'),
(63, 1, 52, 'BookStack\\Page', 4, '2022-01-04 11:38:02', '2022-01-10 13:39:53'),
(64, 1, 53, 'BookStack\\Page', 4, '2022-01-04 11:46:17', '2022-01-10 13:39:51'),
(65, 1, 55, 'BookStack\\Page', 15, '2022-01-10 10:28:14', '2022-01-10 15:54:59'),
(66, 1, 56, 'BookStack\\Page', 3, '2022-01-10 12:11:32', '2022-01-10 12:59:10'),
(67, 1, 57, 'BookStack\\Page', 9, '2022-01-10 12:12:00', '2022-01-10 12:58:07'),
(68, 1, 58, 'BookStack\\Page', 4, '2022-01-10 13:31:40', '2022-01-10 13:45:52'),
(69, 1, 59, 'BookStack\\Page', 1, '2022-01-10 16:03:01', '2022-01-10 16:03:01'),
(70, 1, 60, 'BookStack\\Page', 2, '2022-03-11 10:14:01', '2022-03-22 20:45:56'),
(71, 1, 61, 'BookStack\\Page', 12, '2022-03-17 08:01:50', '2022-03-18 13:55:28'),
(72, 1, 13, 'BookStack\\Book', 30, '2022-03-22 14:07:42', '2022-03-22 20:03:41'),
(73, 1, 62, 'BookStack\\Page', 12, '2022-03-22 14:07:49', '2022-03-22 20:02:42'),
(74, 1, 63, 'BookStack\\Page', 9, '2022-03-22 16:22:28', '2022-03-22 20:02:40'),
(75, 1, 64, 'BookStack\\Page', 11, '2022-03-22 16:36:21', '2022-03-22 20:03:08'),
(76, 1, 65, 'BookStack\\Page', 8, '2022-03-22 16:52:42', '2022-03-22 20:03:14'),
(77, 1, 66, 'BookStack\\Page', 2, '2022-03-22 17:09:55', '2022-03-22 17:11:12'),
(78, 1, 67, 'BookStack\\Page', 3, '2022-03-22 20:02:32', '2022-03-22 20:03:05'),
(79, 1, 68, 'BookStack\\Page', 1, '2022-03-22 20:03:45', '2022-03-22 20:03:45');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `activities`
--
ALTER TABLE `activities`
  ADD PRIMARY KEY (`id`),
  ADD KEY `activities_user_id_index` (`user_id`),
  ADD KEY `activities_entity_id_index` (`entity_id`),
  ADD KEY `activities_key_index` (`type`),
  ADD KEY `activities_created_at_index` (`created_at`);

--
-- Indexes for table `api_tokens`
--
ALTER TABLE `api_tokens`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `api_tokens_token_id_unique` (`token_id`),
  ADD KEY `api_tokens_user_id_index` (`user_id`),
  ADD KEY `api_tokens_expires_at_index` (`expires_at`);

--
-- Indexes for table `attachments`
--
ALTER TABLE `attachments`
  ADD PRIMARY KEY (`id`),
  ADD KEY `attachments_uploaded_to_index` (`uploaded_to`);

--
-- Indexes for table `books`
--
ALTER TABLE `books`
  ADD PRIMARY KEY (`id`),
  ADD KEY `books_slug_index` (`slug`),
  ADD KEY `books_created_by_index` (`created_by`),
  ADD KEY `books_updated_by_index` (`updated_by`),
  ADD KEY `books_restricted_index` (`restricted`),
  ADD KEY `books_owned_by_index` (`owned_by`);

--
-- Indexes for table `bookshelves`
--
ALTER TABLE `bookshelves`
  ADD PRIMARY KEY (`id`),
  ADD KEY `bookshelves_slug_index` (`slug`),
  ADD KEY `bookshelves_created_by_index` (`created_by`),
  ADD KEY `bookshelves_updated_by_index` (`updated_by`),
  ADD KEY `bookshelves_restricted_index` (`restricted`),
  ADD KEY `bookshelves_owned_by_index` (`owned_by`);

--
-- Indexes for table `bookshelves_books`
--
ALTER TABLE `bookshelves_books`
  ADD PRIMARY KEY (`bookshelf_id`,`book_id`),
  ADD KEY `bookshelves_books_book_id_foreign` (`book_id`);

--
-- Indexes for table `cache`
--
ALTER TABLE `cache`
  ADD UNIQUE KEY `cache_key_unique` (`key`);

--
-- Indexes for table `chapters`
--
ALTER TABLE `chapters`
  ADD PRIMARY KEY (`id`),
  ADD KEY `chapters_slug_index` (`slug`),
  ADD KEY `chapters_book_id_index` (`book_id`),
  ADD KEY `chapters_priority_index` (`priority`),
  ADD KEY `chapters_created_by_index` (`created_by`),
  ADD KEY `chapters_updated_by_index` (`updated_by`),
  ADD KEY `chapters_restricted_index` (`restricted`),
  ADD KEY `chapters_owned_by_index` (`owned_by`);

--
-- Indexes for table `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`id`),
  ADD KEY `comments_entity_id_entity_type_index` (`entity_id`,`entity_type`),
  ADD KEY `comments_local_id_index` (`local_id`);

--
-- Indexes for table `deletions`
--
ALTER TABLE `deletions`
  ADD PRIMARY KEY (`id`),
  ADD KEY `deletions_deleted_by_index` (`deleted_by`),
  ADD KEY `deletions_deletable_type_index` (`deletable_type`),
  ADD KEY `deletions_deletable_id_index` (`deletable_id`);

--
-- Indexes for table `email_confirmations`
--
ALTER TABLE `email_confirmations`
  ADD PRIMARY KEY (`id`),
  ADD KEY `email_confirmations_user_id_index` (`user_id`),
  ADD KEY `email_confirmations_token_index` (`token`);

--
-- Indexes for table `entity_permissions`
--
ALTER TABLE `entity_permissions`
  ADD PRIMARY KEY (`id`),
  ADD KEY `restrictions_role_id_index` (`role_id`),
  ADD KEY `restrictions_action_index` (`action`),
  ADD KEY `restrictions_restrictable_id_restrictable_type_index` (`restrictable_id`,`restrictable_type`);

--
-- Indexes for table `favourites`
--
ALTER TABLE `favourites`
  ADD PRIMARY KEY (`id`),
  ADD KEY `favouritable_index` (`favouritable_id`,`favouritable_type`),
  ADD KEY `favourites_user_id_index` (`user_id`);

--
-- Indexes for table `images`
--
ALTER TABLE `images`
  ADD PRIMARY KEY (`id`),
  ADD KEY `images_type_index` (`type`),
  ADD KEY `images_uploaded_to_index` (`uploaded_to`);

--
-- Indexes for table `joint_permissions`
--
ALTER TABLE `joint_permissions`
  ADD PRIMARY KEY (`role_id`,`entity_type`,`entity_id`,`action`),
  ADD KEY `joint_permissions_entity_id_entity_type_index` (`entity_id`,`entity_type`),
  ADD KEY `joint_permissions_has_permission_index` (`has_permission`),
  ADD KEY `joint_permissions_has_permission_own_index` (`has_permission_own`),
  ADD KEY `joint_permissions_role_id_index` (`role_id`),
  ADD KEY `joint_permissions_action_index` (`action`),
  ADD KEY `joint_permissions_created_by_index` (`owned_by`);

--
-- Indexes for table `mfa_values`
--
ALTER TABLE `mfa_values`
  ADD PRIMARY KEY (`id`),
  ADD KEY `mfa_values_user_id_index` (`user_id`),
  ADD KEY `mfa_values_method_index` (`method`);

--
-- Indexes for table `migrations`
--
ALTER TABLE `migrations`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `pages`
--
ALTER TABLE `pages`
  ADD PRIMARY KEY (`id`),
  ADD KEY `pages_slug_index` (`slug`),
  ADD KEY `pages_book_id_index` (`book_id`),
  ADD KEY `pages_chapter_id_index` (`chapter_id`),
  ADD KEY `pages_priority_index` (`priority`),
  ADD KEY `pages_created_by_index` (`created_by`),
  ADD KEY `pages_updated_by_index` (`updated_by`),
  ADD KEY `pages_restricted_index` (`restricted`),
  ADD KEY `pages_draft_index` (`draft`),
  ADD KEY `pages_template_index` (`template`),
  ADD KEY `pages_owned_by_index` (`owned_by`);

--
-- Indexes for table `page_revisions`
--
ALTER TABLE `page_revisions`
  ADD PRIMARY KEY (`id`),
  ADD KEY `page_revisions_page_id_index` (`page_id`),
  ADD KEY `page_revisions_slug_index` (`slug`),
  ADD KEY `page_revisions_book_slug_index` (`book_slug`),
  ADD KEY `page_revisions_type_index` (`type`),
  ADD KEY `page_revisions_revision_number_index` (`revision_number`);

--
-- Indexes for table `password_resets`
--
ALTER TABLE `password_resets`
  ADD KEY `password_resets_email_index` (`email`),
  ADD KEY `password_resets_token_index` (`token`);

--
-- Indexes for table `permission_role`
--
ALTER TABLE `permission_role`
  ADD PRIMARY KEY (`permission_id`,`role_id`),
  ADD KEY `permission_role_role_id_foreign` (`role_id`);

--
-- Indexes for table `roles`
--
ALTER TABLE `roles`
  ADD PRIMARY KEY (`id`),
  ADD KEY `roles_system_name_index` (`system_name`),
  ADD KEY `roles_external_auth_id_index` (`external_auth_id`);

--
-- Indexes for table `role_permissions`
--
ALTER TABLE `role_permissions`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `permissions_name_unique` (`name`);

--
-- Indexes for table `role_user`
--
ALTER TABLE `role_user`
  ADD PRIMARY KEY (`user_id`,`role_id`),
  ADD KEY `role_user_role_id_foreign` (`role_id`);

--
-- Indexes for table `search_terms`
--
ALTER TABLE `search_terms`
  ADD PRIMARY KEY (`id`),
  ADD KEY `search_terms_term_index` (`term`),
  ADD KEY `search_terms_entity_type_index` (`entity_type`),
  ADD KEY `search_terms_entity_type_entity_id_index` (`entity_type`,`entity_id`),
  ADD KEY `search_terms_score_index` (`score`);

--
-- Indexes for table `sessions`
--
ALTER TABLE `sessions`
  ADD UNIQUE KEY `sessions_id_unique` (`id`);

--
-- Indexes for table `settings`
--
ALTER TABLE `settings`
  ADD PRIMARY KEY (`setting_key`);

--
-- Indexes for table `social_accounts`
--
ALTER TABLE `social_accounts`
  ADD PRIMARY KEY (`id`),
  ADD KEY `social_accounts_user_id_index` (`user_id`),
  ADD KEY `social_accounts_driver_index` (`driver`);

--
-- Indexes for table `tags`
--
ALTER TABLE `tags`
  ADD PRIMARY KEY (`id`),
  ADD KEY `tags_name_index` (`name`),
  ADD KEY `tags_value_index` (`value`),
  ADD KEY `tags_order_index` (`order`),
  ADD KEY `tags_entity_id_entity_type_index` (`entity_id`,`entity_type`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `users_email_unique` (`email`),
  ADD UNIQUE KEY `users_slug_unique` (`slug`),
  ADD KEY `users_external_auth_id_index` (`external_auth_id`),
  ADD KEY `users_system_name_index` (`system_name`);

--
-- Indexes for table `user_invites`
--
ALTER TABLE `user_invites`
  ADD PRIMARY KEY (`id`),
  ADD KEY `user_invites_user_id_index` (`user_id`),
  ADD KEY `user_invites_token_index` (`token`);

--
-- Indexes for table `views`
--
ALTER TABLE `views`
  ADD PRIMARY KEY (`id`),
  ADD KEY `views_user_id_index` (`user_id`),
  ADD KEY `views_viewable_id_index` (`viewable_id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `activities`
--
ALTER TABLE `activities`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=493;

--
-- AUTO_INCREMENT for table `api_tokens`
--
ALTER TABLE `api_tokens`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `attachments`
--
ALTER TABLE `attachments`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `books`
--
ALTER TABLE `books`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=14;

--
-- AUTO_INCREMENT for table `bookshelves`
--
ALTER TABLE `bookshelves`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `chapters`
--
ALTER TABLE `chapters`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT for table `comments`
--
ALTER TABLE `comments`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `deletions`
--
ALTER TABLE `deletions`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=24;

--
-- AUTO_INCREMENT for table `email_confirmations`
--
ALTER TABLE `email_confirmations`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `entity_permissions`
--
ALTER TABLE `entity_permissions`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=15;

--
-- AUTO_INCREMENT for table `favourites`
--
ALTER TABLE `favourites`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `images`
--
ALTER TABLE `images`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=50;

--
-- AUTO_INCREMENT for table `mfa_values`
--
ALTER TABLE `mfa_values`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `migrations`
--
ALTER TABLE `migrations`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=59;

--
-- AUTO_INCREMENT for table `pages`
--
ALTER TABLE `pages`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=69;

--
-- AUTO_INCREMENT for table `page_revisions`
--
ALTER TABLE `page_revisions`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=478;

--
-- AUTO_INCREMENT for table `roles`
--
ALTER TABLE `roles`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT for table `role_permissions`
--
ALTER TABLE `role_permissions`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=77;

--
-- AUTO_INCREMENT for table `search_terms`
--
ALTER TABLE `search_terms`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=44557;

--
-- AUTO_INCREMENT for table `social_accounts`
--
ALTER TABLE `social_accounts`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `tags`
--
ALTER TABLE `tags`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT for table `user_invites`
--
ALTER TABLE `user_invites`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `views`
--
ALTER TABLE `views`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=80;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `bookshelves_books`
--
ALTER TABLE `bookshelves_books`
  ADD CONSTRAINT `bookshelves_books_book_id_foreign` FOREIGN KEY (`book_id`) REFERENCES `books` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `bookshelves_books_bookshelf_id_foreign` FOREIGN KEY (`bookshelf_id`) REFERENCES `bookshelves` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `permission_role`
--
ALTER TABLE `permission_role`
  ADD CONSTRAINT `permission_role_permission_id_foreign` FOREIGN KEY (`permission_id`) REFERENCES `role_permissions` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `permission_role_role_id_foreign` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `role_user`
--
ALTER TABLE `role_user`
  ADD CONSTRAINT `role_user_role_id_foreign` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `role_user_user_id_foreign` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
